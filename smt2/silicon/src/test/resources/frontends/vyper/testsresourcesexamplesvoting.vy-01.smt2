(get-info :version)
; (:version "4.12.1")
; Started: 2025-01-13 17:30:10
; Silicon.version: 1.1-SNAPSHOT (457c6eca@(detached))
; Input file: <unknown>
; Verifier id: 00
; ------------------------------------------------------------
; Begin preamble
; ////////// Static preamble
; 
; ; /z3config.smt2
(set-option :print-success true) ; Boogie: false
(set-option :global-decls true) ; Necessary for push pop mode
(set-option :auto_config false)
(set-option :smt.case_split 3)
(set-option :smt.delay_units true)
(set-option :type_check true)
(set-option :smt.mbqi false)
(set-option :pp.bv_literals false)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.arith.solver 2)
(set-option :model.v2 true)
(set-option :smt.qi.max_multi_patterns 1000)
; 
; ; /preamble.smt2
(declare-datatypes (($Snap 0)) ((
    ($Snap.unit)
    ($Snap.combine ($Snap.first $Snap) ($Snap.second $Snap)))))
(declare-sort $Ref 0)
(declare-const $Ref.null $Ref)
(declare-sort $FPM 0)
(declare-sort $PPM 0)
(define-sort $Perm () Real)
(define-const $Perm.Write $Perm 1.0)
(define-const $Perm.No $Perm 0.0)
(define-fun $Perm.isValidVar ((p $Perm)) Bool
	(<= $Perm.No p))
(define-fun $Perm.isReadVar ((p $Perm)) Bool
    (and ($Perm.isValidVar p)
         (not (= p $Perm.No))))
(define-fun $Perm.min ((p1 $Perm) (p2 $Perm)) Real
    (ite (<= p1 p2) p1 p2))
(define-fun $Math.min ((a Int) (b Int)) Int
    (ite (<= a b) a b))
(define-fun $Math.clip ((a Int)) Int
    (ite (< a 0) 0 a))
; ////////// Sorts
(declare-sort Seq<Seq<Int>> 0)
(declare-sort Seq<Int> 0)
(declare-sort s$struct$self 0)
(declare-sort $Struct 0)
(declare-sort s$resource$$creator 0)
(declare-sort s$struct$Proposal 0)
(declare-sort $Contract 0)
(declare-sort $StructOps<$Map<Int~_$Struct>> 0)
(declare-sort $Convert 0)
(declare-sort $StructOps<$Struct> 0)
(declare-sort s$struct$Voter 0)
(declare-sort $StructOps<Seq<Int>> 0)
(declare-sort $Range 0)
(declare-sort $Int 0)
(declare-sort $StructOps<$Map<Int~_Int>> 0)
(declare-sort $Math 0)
(declare-sort $StructOps<Int> 0)
(declare-sort $Map<Int~_$Struct> 0)
(declare-sort $StructOps<Bool> 0)
(declare-sort $Blockchain 0)
(declare-sort $Array<Int> 0)
(declare-sort $MapInt<Int> 0)
(declare-sort $Map<Int~_Int> 0)
; ////////// Sort wrappers
; Declaring additional sort wrappers
(declare-fun $SortWrappers.IntTo$Snap (Int) $Snap)
(declare-fun $SortWrappers.$SnapToInt ($Snap) Int)
(assert (forall ((x Int)) (!
    (= x ($SortWrappers.$SnapToInt($SortWrappers.IntTo$Snap x)))
    :pattern (($SortWrappers.IntTo$Snap x))
    :qid |$Snap.$SnapToIntTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.IntTo$Snap($SortWrappers.$SnapToInt x)))
    :pattern (($SortWrappers.$SnapToInt x))
    :qid |$Snap.IntTo$SnapToInt|
    )))
(declare-fun $SortWrappers.BoolTo$Snap (Bool) $Snap)
(declare-fun $SortWrappers.$SnapToBool ($Snap) Bool)
(assert (forall ((x Bool)) (!
    (= x ($SortWrappers.$SnapToBool($SortWrappers.BoolTo$Snap x)))
    :pattern (($SortWrappers.BoolTo$Snap x))
    :qid |$Snap.$SnapToBoolTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.BoolTo$Snap($SortWrappers.$SnapToBool x)))
    :pattern (($SortWrappers.$SnapToBool x))
    :qid |$Snap.BoolTo$SnapToBool|
    )))
(declare-fun $SortWrappers.$RefTo$Snap ($Ref) $Snap)
(declare-fun $SortWrappers.$SnapTo$Ref ($Snap) $Ref)
(assert (forall ((x $Ref)) (!
    (= x ($SortWrappers.$SnapTo$Ref($SortWrappers.$RefTo$Snap x)))
    :pattern (($SortWrappers.$RefTo$Snap x))
    :qid |$Snap.$SnapTo$RefTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$RefTo$Snap($SortWrappers.$SnapTo$Ref x)))
    :pattern (($SortWrappers.$SnapTo$Ref x))
    :qid |$Snap.$RefTo$SnapTo$Ref|
    )))
(declare-fun $SortWrappers.$PermTo$Snap ($Perm) $Snap)
(declare-fun $SortWrappers.$SnapTo$Perm ($Snap) $Perm)
(assert (forall ((x $Perm)) (!
    (= x ($SortWrappers.$SnapTo$Perm($SortWrappers.$PermTo$Snap x)))
    :pattern (($SortWrappers.$PermTo$Snap x))
    :qid |$Snap.$SnapTo$PermTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$PermTo$Snap($SortWrappers.$SnapTo$Perm x)))
    :pattern (($SortWrappers.$SnapTo$Perm x))
    :qid |$Snap.$PermTo$SnapTo$Perm|
    )))
; Declaring additional sort wrappers
(declare-fun $SortWrappers.Seq<Seq<Int>>To$Snap (Seq<Seq<Int>>) $Snap)
(declare-fun $SortWrappers.$SnapToSeq<Seq<Int>> ($Snap) Seq<Seq<Int>>)
(assert (forall ((x Seq<Seq<Int>>)) (!
    (= x ($SortWrappers.$SnapToSeq<Seq<Int>>($SortWrappers.Seq<Seq<Int>>To$Snap x)))
    :pattern (($SortWrappers.Seq<Seq<Int>>To$Snap x))
    :qid |$Snap.$SnapToSeq<Seq<Int>>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.Seq<Seq<Int>>To$Snap($SortWrappers.$SnapToSeq<Seq<Int>> x)))
    :pattern (($SortWrappers.$SnapToSeq<Seq<Int>> x))
    :qid |$Snap.Seq<Seq<Int>>To$SnapToSeq<Seq<Int>>|
    )))
(declare-fun $SortWrappers.Seq<Int>To$Snap (Seq<Int>) $Snap)
(declare-fun $SortWrappers.$SnapToSeq<Int> ($Snap) Seq<Int>)
(assert (forall ((x Seq<Int>)) (!
    (= x ($SortWrappers.$SnapToSeq<Int>($SortWrappers.Seq<Int>To$Snap x)))
    :pattern (($SortWrappers.Seq<Int>To$Snap x))
    :qid |$Snap.$SnapToSeq<Int>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.Seq<Int>To$Snap($SortWrappers.$SnapToSeq<Int> x)))
    :pattern (($SortWrappers.$SnapToSeq<Int> x))
    :qid |$Snap.Seq<Int>To$SnapToSeq<Int>|
    )))
; Declaring additional sort wrappers
(declare-fun $SortWrappers.s$struct$selfTo$Snap (s$struct$self) $Snap)
(declare-fun $SortWrappers.$SnapTos$struct$self ($Snap) s$struct$self)
(assert (forall ((x s$struct$self)) (!
    (= x ($SortWrappers.$SnapTos$struct$self($SortWrappers.s$struct$selfTo$Snap x)))
    :pattern (($SortWrappers.s$struct$selfTo$Snap x))
    :qid |$Snap.$SnapTos$struct$selfTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.s$struct$selfTo$Snap($SortWrappers.$SnapTos$struct$self x)))
    :pattern (($SortWrappers.$SnapTos$struct$self x))
    :qid |$Snap.s$struct$selfTo$SnapTos$struct$self|
    )))
(declare-fun $SortWrappers.$StructTo$Snap ($Struct) $Snap)
(declare-fun $SortWrappers.$SnapTo$Struct ($Snap) $Struct)
(assert (forall ((x $Struct)) (!
    (= x ($SortWrappers.$SnapTo$Struct($SortWrappers.$StructTo$Snap x)))
    :pattern (($SortWrappers.$StructTo$Snap x))
    :qid |$Snap.$SnapTo$StructTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$StructTo$Snap($SortWrappers.$SnapTo$Struct x)))
    :pattern (($SortWrappers.$SnapTo$Struct x))
    :qid |$Snap.$StructTo$SnapTo$Struct|
    )))
(declare-fun $SortWrappers.s$resource$$creatorTo$Snap (s$resource$$creator) $Snap)
(declare-fun $SortWrappers.$SnapTos$resource$$creator ($Snap) s$resource$$creator)
(assert (forall ((x s$resource$$creator)) (!
    (= x ($SortWrappers.$SnapTos$resource$$creator($SortWrappers.s$resource$$creatorTo$Snap x)))
    :pattern (($SortWrappers.s$resource$$creatorTo$Snap x))
    :qid |$Snap.$SnapTos$resource$$creatorTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.s$resource$$creatorTo$Snap($SortWrappers.$SnapTos$resource$$creator x)))
    :pattern (($SortWrappers.$SnapTos$resource$$creator x))
    :qid |$Snap.s$resource$$creatorTo$SnapTos$resource$$creator|
    )))
(declare-fun $SortWrappers.s$struct$ProposalTo$Snap (s$struct$Proposal) $Snap)
(declare-fun $SortWrappers.$SnapTos$struct$Proposal ($Snap) s$struct$Proposal)
(assert (forall ((x s$struct$Proposal)) (!
    (= x ($SortWrappers.$SnapTos$struct$Proposal($SortWrappers.s$struct$ProposalTo$Snap x)))
    :pattern (($SortWrappers.s$struct$ProposalTo$Snap x))
    :qid |$Snap.$SnapTos$struct$ProposalTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.s$struct$ProposalTo$Snap($SortWrappers.$SnapTos$struct$Proposal x)))
    :pattern (($SortWrappers.$SnapTos$struct$Proposal x))
    :qid |$Snap.s$struct$ProposalTo$SnapTos$struct$Proposal|
    )))
(declare-fun $SortWrappers.$ContractTo$Snap ($Contract) $Snap)
(declare-fun $SortWrappers.$SnapTo$Contract ($Snap) $Contract)
(assert (forall ((x $Contract)) (!
    (= x ($SortWrappers.$SnapTo$Contract($SortWrappers.$ContractTo$Snap x)))
    :pattern (($SortWrappers.$ContractTo$Snap x))
    :qid |$Snap.$SnapTo$ContractTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$ContractTo$Snap($SortWrappers.$SnapTo$Contract x)))
    :pattern (($SortWrappers.$SnapTo$Contract x))
    :qid |$Snap.$ContractTo$SnapTo$Contract|
    )))
(declare-fun $SortWrappers.$StructOps<$Map<Int~_$Struct>>To$Snap ($StructOps<$Map<Int~_$Struct>>) $Snap)
(declare-fun $SortWrappers.$SnapTo$StructOps<$Map<Int~_$Struct>> ($Snap) $StructOps<$Map<Int~_$Struct>>)
(assert (forall ((x $StructOps<$Map<Int~_$Struct>>)) (!
    (= x ($SortWrappers.$SnapTo$StructOps<$Map<Int~_$Struct>>($SortWrappers.$StructOps<$Map<Int~_$Struct>>To$Snap x)))
    :pattern (($SortWrappers.$StructOps<$Map<Int~_$Struct>>To$Snap x))
    :qid |$Snap.$SnapTo$StructOps<$Map<Int~_$Struct>>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$StructOps<$Map<Int~_$Struct>>To$Snap($SortWrappers.$SnapTo$StructOps<$Map<Int~_$Struct>> x)))
    :pattern (($SortWrappers.$SnapTo$StructOps<$Map<Int~_$Struct>> x))
    :qid |$Snap.$StructOps<$Map<Int~_$Struct>>To$SnapTo$StructOps<$Map<Int~_$Struct>>|
    )))
(declare-fun $SortWrappers.$ConvertTo$Snap ($Convert) $Snap)
(declare-fun $SortWrappers.$SnapTo$Convert ($Snap) $Convert)
(assert (forall ((x $Convert)) (!
    (= x ($SortWrappers.$SnapTo$Convert($SortWrappers.$ConvertTo$Snap x)))
    :pattern (($SortWrappers.$ConvertTo$Snap x))
    :qid |$Snap.$SnapTo$ConvertTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$ConvertTo$Snap($SortWrappers.$SnapTo$Convert x)))
    :pattern (($SortWrappers.$SnapTo$Convert x))
    :qid |$Snap.$ConvertTo$SnapTo$Convert|
    )))
(declare-fun $SortWrappers.$StructOps<$Struct>To$Snap ($StructOps<$Struct>) $Snap)
(declare-fun $SortWrappers.$SnapTo$StructOps<$Struct> ($Snap) $StructOps<$Struct>)
(assert (forall ((x $StructOps<$Struct>)) (!
    (= x ($SortWrappers.$SnapTo$StructOps<$Struct>($SortWrappers.$StructOps<$Struct>To$Snap x)))
    :pattern (($SortWrappers.$StructOps<$Struct>To$Snap x))
    :qid |$Snap.$SnapTo$StructOps<$Struct>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$StructOps<$Struct>To$Snap($SortWrappers.$SnapTo$StructOps<$Struct> x)))
    :pattern (($SortWrappers.$SnapTo$StructOps<$Struct> x))
    :qid |$Snap.$StructOps<$Struct>To$SnapTo$StructOps<$Struct>|
    )))
(declare-fun $SortWrappers.s$struct$VoterTo$Snap (s$struct$Voter) $Snap)
(declare-fun $SortWrappers.$SnapTos$struct$Voter ($Snap) s$struct$Voter)
(assert (forall ((x s$struct$Voter)) (!
    (= x ($SortWrappers.$SnapTos$struct$Voter($SortWrappers.s$struct$VoterTo$Snap x)))
    :pattern (($SortWrappers.s$struct$VoterTo$Snap x))
    :qid |$Snap.$SnapTos$struct$VoterTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.s$struct$VoterTo$Snap($SortWrappers.$SnapTos$struct$Voter x)))
    :pattern (($SortWrappers.$SnapTos$struct$Voter x))
    :qid |$Snap.s$struct$VoterTo$SnapTos$struct$Voter|
    )))
(declare-fun $SortWrappers.$StructOps<Seq<Int>>To$Snap ($StructOps<Seq<Int>>) $Snap)
(declare-fun $SortWrappers.$SnapTo$StructOps<Seq<Int>> ($Snap) $StructOps<Seq<Int>>)
(assert (forall ((x $StructOps<Seq<Int>>)) (!
    (= x ($SortWrappers.$SnapTo$StructOps<Seq<Int>>($SortWrappers.$StructOps<Seq<Int>>To$Snap x)))
    :pattern (($SortWrappers.$StructOps<Seq<Int>>To$Snap x))
    :qid |$Snap.$SnapTo$StructOps<Seq<Int>>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$StructOps<Seq<Int>>To$Snap($SortWrappers.$SnapTo$StructOps<Seq<Int>> x)))
    :pattern (($SortWrappers.$SnapTo$StructOps<Seq<Int>> x))
    :qid |$Snap.$StructOps<Seq<Int>>To$SnapTo$StructOps<Seq<Int>>|
    )))
(declare-fun $SortWrappers.$RangeTo$Snap ($Range) $Snap)
(declare-fun $SortWrappers.$SnapTo$Range ($Snap) $Range)
(assert (forall ((x $Range)) (!
    (= x ($SortWrappers.$SnapTo$Range($SortWrappers.$RangeTo$Snap x)))
    :pattern (($SortWrappers.$RangeTo$Snap x))
    :qid |$Snap.$SnapTo$RangeTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$RangeTo$Snap($SortWrappers.$SnapTo$Range x)))
    :pattern (($SortWrappers.$SnapTo$Range x))
    :qid |$Snap.$RangeTo$SnapTo$Range|
    )))
(declare-fun $SortWrappers.$IntTo$Snap ($Int) $Snap)
(declare-fun $SortWrappers.$SnapTo$Int ($Snap) $Int)
(assert (forall ((x $Int)) (!
    (= x ($SortWrappers.$SnapTo$Int($SortWrappers.$IntTo$Snap x)))
    :pattern (($SortWrappers.$IntTo$Snap x))
    :qid |$Snap.$SnapTo$IntTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$IntTo$Snap($SortWrappers.$SnapTo$Int x)))
    :pattern (($SortWrappers.$SnapTo$Int x))
    :qid |$Snap.$IntTo$SnapTo$Int|
    )))
(declare-fun $SortWrappers.$StructOps<$Map<Int~_Int>>To$Snap ($StructOps<$Map<Int~_Int>>) $Snap)
(declare-fun $SortWrappers.$SnapTo$StructOps<$Map<Int~_Int>> ($Snap) $StructOps<$Map<Int~_Int>>)
(assert (forall ((x $StructOps<$Map<Int~_Int>>)) (!
    (= x ($SortWrappers.$SnapTo$StructOps<$Map<Int~_Int>>($SortWrappers.$StructOps<$Map<Int~_Int>>To$Snap x)))
    :pattern (($SortWrappers.$StructOps<$Map<Int~_Int>>To$Snap x))
    :qid |$Snap.$SnapTo$StructOps<$Map<Int~_Int>>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$StructOps<$Map<Int~_Int>>To$Snap($SortWrappers.$SnapTo$StructOps<$Map<Int~_Int>> x)))
    :pattern (($SortWrappers.$SnapTo$StructOps<$Map<Int~_Int>> x))
    :qid |$Snap.$StructOps<$Map<Int~_Int>>To$SnapTo$StructOps<$Map<Int~_Int>>|
    )))
(declare-fun $SortWrappers.$MathTo$Snap ($Math) $Snap)
(declare-fun $SortWrappers.$SnapTo$Math ($Snap) $Math)
(assert (forall ((x $Math)) (!
    (= x ($SortWrappers.$SnapTo$Math($SortWrappers.$MathTo$Snap x)))
    :pattern (($SortWrappers.$MathTo$Snap x))
    :qid |$Snap.$SnapTo$MathTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$MathTo$Snap($SortWrappers.$SnapTo$Math x)))
    :pattern (($SortWrappers.$SnapTo$Math x))
    :qid |$Snap.$MathTo$SnapTo$Math|
    )))
(declare-fun $SortWrappers.$StructOps<Int>To$Snap ($StructOps<Int>) $Snap)
(declare-fun $SortWrappers.$SnapTo$StructOps<Int> ($Snap) $StructOps<Int>)
(assert (forall ((x $StructOps<Int>)) (!
    (= x ($SortWrappers.$SnapTo$StructOps<Int>($SortWrappers.$StructOps<Int>To$Snap x)))
    :pattern (($SortWrappers.$StructOps<Int>To$Snap x))
    :qid |$Snap.$SnapTo$StructOps<Int>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$StructOps<Int>To$Snap($SortWrappers.$SnapTo$StructOps<Int> x)))
    :pattern (($SortWrappers.$SnapTo$StructOps<Int> x))
    :qid |$Snap.$StructOps<Int>To$SnapTo$StructOps<Int>|
    )))
(declare-fun $SortWrappers.$Map<Int~_$Struct>To$Snap ($Map<Int~_$Struct>) $Snap)
(declare-fun $SortWrappers.$SnapTo$Map<Int~_$Struct> ($Snap) $Map<Int~_$Struct>)
(assert (forall ((x $Map<Int~_$Struct>)) (!
    (= x ($SortWrappers.$SnapTo$Map<Int~_$Struct>($SortWrappers.$Map<Int~_$Struct>To$Snap x)))
    :pattern (($SortWrappers.$Map<Int~_$Struct>To$Snap x))
    :qid |$Snap.$SnapTo$Map<Int~_$Struct>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$Map<Int~_$Struct>To$Snap($SortWrappers.$SnapTo$Map<Int~_$Struct> x)))
    :pattern (($SortWrappers.$SnapTo$Map<Int~_$Struct> x))
    :qid |$Snap.$Map<Int~_$Struct>To$SnapTo$Map<Int~_$Struct>|
    )))
(declare-fun $SortWrappers.$StructOps<Bool>To$Snap ($StructOps<Bool>) $Snap)
(declare-fun $SortWrappers.$SnapTo$StructOps<Bool> ($Snap) $StructOps<Bool>)
(assert (forall ((x $StructOps<Bool>)) (!
    (= x ($SortWrappers.$SnapTo$StructOps<Bool>($SortWrappers.$StructOps<Bool>To$Snap x)))
    :pattern (($SortWrappers.$StructOps<Bool>To$Snap x))
    :qid |$Snap.$SnapTo$StructOps<Bool>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$StructOps<Bool>To$Snap($SortWrappers.$SnapTo$StructOps<Bool> x)))
    :pattern (($SortWrappers.$SnapTo$StructOps<Bool> x))
    :qid |$Snap.$StructOps<Bool>To$SnapTo$StructOps<Bool>|
    )))
(declare-fun $SortWrappers.$BlockchainTo$Snap ($Blockchain) $Snap)
(declare-fun $SortWrappers.$SnapTo$Blockchain ($Snap) $Blockchain)
(assert (forall ((x $Blockchain)) (!
    (= x ($SortWrappers.$SnapTo$Blockchain($SortWrappers.$BlockchainTo$Snap x)))
    :pattern (($SortWrappers.$BlockchainTo$Snap x))
    :qid |$Snap.$SnapTo$BlockchainTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$BlockchainTo$Snap($SortWrappers.$SnapTo$Blockchain x)))
    :pattern (($SortWrappers.$SnapTo$Blockchain x))
    :qid |$Snap.$BlockchainTo$SnapTo$Blockchain|
    )))
(declare-fun $SortWrappers.$Array<Int>To$Snap ($Array<Int>) $Snap)
(declare-fun $SortWrappers.$SnapTo$Array<Int> ($Snap) $Array<Int>)
(assert (forall ((x $Array<Int>)) (!
    (= x ($SortWrappers.$SnapTo$Array<Int>($SortWrappers.$Array<Int>To$Snap x)))
    :pattern (($SortWrappers.$Array<Int>To$Snap x))
    :qid |$Snap.$SnapTo$Array<Int>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$Array<Int>To$Snap($SortWrappers.$SnapTo$Array<Int> x)))
    :pattern (($SortWrappers.$SnapTo$Array<Int> x))
    :qid |$Snap.$Array<Int>To$SnapTo$Array<Int>|
    )))
(declare-fun $SortWrappers.$MapInt<Int>To$Snap ($MapInt<Int>) $Snap)
(declare-fun $SortWrappers.$SnapTo$MapInt<Int> ($Snap) $MapInt<Int>)
(assert (forall ((x $MapInt<Int>)) (!
    (= x ($SortWrappers.$SnapTo$MapInt<Int>($SortWrappers.$MapInt<Int>To$Snap x)))
    :pattern (($SortWrappers.$MapInt<Int>To$Snap x))
    :qid |$Snap.$SnapTo$MapInt<Int>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$MapInt<Int>To$Snap($SortWrappers.$SnapTo$MapInt<Int> x)))
    :pattern (($SortWrappers.$SnapTo$MapInt<Int> x))
    :qid |$Snap.$MapInt<Int>To$SnapTo$MapInt<Int>|
    )))
(declare-fun $SortWrappers.$Map<Int~_Int>To$Snap ($Map<Int~_Int>) $Snap)
(declare-fun $SortWrappers.$SnapTo$Map<Int~_Int> ($Snap) $Map<Int~_Int>)
(assert (forall ((x $Map<Int~_Int>)) (!
    (= x ($SortWrappers.$SnapTo$Map<Int~_Int>($SortWrappers.$Map<Int~_Int>To$Snap x)))
    :pattern (($SortWrappers.$Map<Int~_Int>To$Snap x))
    :qid |$Snap.$SnapTo$Map<Int~_Int>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$Map<Int~_Int>To$Snap($SortWrappers.$SnapTo$Map<Int~_Int> x)))
    :pattern (($SortWrappers.$SnapTo$Map<Int~_Int> x))
    :qid |$Snap.$Map<Int~_Int>To$SnapTo$Map<Int~_Int>|
    )))
; ////////// Symbols
(declare-fun Seq_length (Seq<Seq<Int>>) Int)
(declare-const Seq_empty Seq<Seq<Int>>)
(declare-fun Seq_singleton (Seq<Int>) Seq<Seq<Int>>)
(declare-fun Seq_append (Seq<Seq<Int>> Seq<Seq<Int>>) Seq<Seq<Int>>)
(declare-fun Seq_index (Seq<Seq<Int>> Int) Seq<Int>)
(declare-fun Seq_add (Int Int) Int)
(declare-fun Seq_sub (Int Int) Int)
(declare-fun Seq_update (Seq<Seq<Int>> Int Seq<Int>) Seq<Seq<Int>>)
(declare-fun Seq_take (Seq<Seq<Int>> Int) Seq<Seq<Int>>)
(declare-fun Seq_drop (Seq<Seq<Int>> Int) Seq<Seq<Int>>)
(declare-fun Seq_contains (Seq<Seq<Int>> Seq<Int>) Bool)
(declare-fun Seq_contains_trigger (Seq<Seq<Int>> Seq<Int>) Bool)
(declare-fun Seq_skolem (Seq<Seq<Int>> Seq<Int>) Int)
(declare-fun Seq_equal (Seq<Seq<Int>> Seq<Seq<Int>>) Bool)
(declare-fun Seq_skolem_diff (Seq<Seq<Int>> Seq<Seq<Int>>) Int)
(declare-fun Seq_length (Seq<Int>) Int)
(declare-const Seq_empty Seq<Int>)
(declare-fun Seq_singleton (Int) Seq<Int>)
(declare-fun Seq_append (Seq<Int> Seq<Int>) Seq<Int>)
(declare-fun Seq_index (Seq<Int> Int) Int)
(declare-fun Seq_update (Seq<Int> Int Int) Seq<Int>)
(declare-fun Seq_take (Seq<Int> Int) Seq<Int>)
(declare-fun Seq_drop (Seq<Int> Int) Seq<Int>)
(declare-fun Seq_contains (Seq<Int> Int) Bool)
(declare-fun Seq_contains_trigger (Seq<Int> Int) Bool)
(declare-fun Seq_skolem (Seq<Int> Int) Int)
(declare-fun Seq_equal (Seq<Int> Seq<Int>) Bool)
(declare-fun Seq_skolem_diff (Seq<Int> Seq<Int>) Int)
(declare-fun Seq_range (Int Int) Seq<Int>)
(declare-fun $map_init<$Map<Int~_$Struct>> ($Struct) $Map<Int~_$Struct>)
(declare-fun $map_eq<Bool> ($Map<Int~_$Struct> $Map<Int~_$Struct>) Bool)
(declare-fun $map_get<$Struct> ($Map<Int~_$Struct> Int) $Struct)
(declare-fun $map_set<$Map<Int~_$Struct>> ($Map<Int~_$Struct> Int $Struct) $Map<Int~_$Struct>)
(declare-fun $bytes32_to_signed_int<Int> (Seq<Int>) Int)
(declare-fun $bytes32_to_unsigned_int<Int> (Seq<Int>) Int)
(declare-fun $signed_int_to_bytes32<Seq<Int>> (Int) Seq<Int>)
(declare-fun $unsigned_int_to_bytes32<Seq<Int>> (Int) Seq<Int>)
(declare-fun $pad32<Seq<Int>> (Seq<Int>) Seq<Int>)
(declare-fun $struct_get<Int> (Int) Int)
(declare-fun $struct_set<$Struct> ($Struct Int Int) $Struct)
(declare-fun $struct_get<Bool> (Int) Bool)
(declare-fun $struct_set<$Struct> ($Struct Int Bool) $Struct)
(declare-fun $blockhash<Seq<Int>> (Int) Seq<Int>)
(declare-fun $method_id<Seq<Int>> (Seq<Int> Int) Seq<Int>)
(declare-fun $keccak256<Seq<Int>> (Seq<Int>) Seq<Int>)
(declare-fun $sha256<Seq<Int>> (Seq<Int>) Seq<Int>)
(declare-fun $ecrecover<Int> (Seq<Int> Int Int Int) Int)
(declare-fun $ecadd<Seq<Int>> (Seq<Int> Seq<Int>) Seq<Int>)
(declare-fun $ecmul<Seq<Int>> (Seq<Int> Int) Seq<Int>)
(declare-fun $array_init<Seq<Int>> (Int Int) Seq<Int>)
(declare-fun $wrap<$Int> (Int) $Int)
(declare-fun $unwrap<Int> ($Int) Int)
(declare-fun $w_mul<$Int> ($Int $Int) $Int)
(declare-fun $w_mulI<$Int> ($Int $Int) $Int)
(declare-fun $w_mulL<$Int> ($Int $Int) $Int)
(declare-fun $w_abs<Int> ($Int) Int)
(declare-fun $w_mod<$Int> ($Int $Int) $Int)
(declare-fun $w_modL<$Int> ($Int $Int) $Int)
(declare-fun $w_div<$Int> ($Int $Int) $Int)
(declare-fun $w_div_down<$Int> ($Int $Int) $Int)
(declare-fun $w_div_nat<$Int> ($Int $Int) $Int)
(declare-fun $w_div_natL<$Int> ($Int $Int) $Int)
(declare-fun $sign<Int> (Int) Int)
(declare-fun $div<Int> (Int Int Int) Int)
(declare-fun $mod<Int> (Int Int Int) Int)
(declare-fun $pow<Int> (Int Int) Int)
(declare-fun $sqrt<Int> (Int) Int)
(declare-fun $floor<Int> (Int Int) Int)
(declare-fun $ceil<Int> (Int Int) Int)
(declare-fun $shift<Int> (Int Int) Int)
(declare-fun $bitwise_not<Int> (Int) Int)
(declare-fun $bitwise_and<Int> (Int Int) Int)
(declare-fun $bitwise_or<Int> (Int Int) Int)
(declare-fun $bitwise_xor<Int> (Int Int) Int)
(declare-fun $struct_get<$Map<Int~_$Struct>> (Int) $Map<Int~_$Struct>)
(declare-fun $struct_set<$Struct> ($Struct Int $Map<Int~_$Struct>) $Struct)
(declare-fun $struct_get<$Struct> (Int) $Struct)
(declare-fun $struct_set<$Struct> ($Struct Int $Struct) $Struct)
(declare-fun $range<Seq<Int>> (Int Int) Seq<Int>)
(declare-fun $struct_get<$Map<Int~_Int>> (Int) $Map<Int~_Int>)
(declare-fun $struct_set<$Struct> ($Struct Int $Map<Int~_Int>) $Struct)
(declare-fun $struct_get<Seq<Int>> (Int) Seq<Int>)
(declare-fun $struct_set<$Struct> ($Struct Int Seq<Int>) $Struct)
(declare-fun s$struct$self$init<$Struct> ($Map<Int~_$Struct> $Map<Int~_$Struct> Int Int Int Int Int Bool $Map<Int~_Int> $Map<Int~_Int> Bool) $Struct)
(declare-fun s$struct$self$eq<Bool> ($Struct $Struct) Bool)
(declare-fun $struct_loc<Int> ($Struct Int) Int)
(declare-fun s$resource$$creator$init<$Struct> ($Struct) $Struct)
(declare-fun s$resource$$creator$eq<Bool> ($Struct $Struct) Bool)
(declare-fun $map_sum<Int> ($Map<Int~_Int>) Int)
(declare-fun $map_init<$Map<Int~_Int>> (Int) $Map<Int~_Int>)
(declare-fun $map_eq<Bool> ($Map<Int~_Int> $Map<Int~_Int>) Bool)
(declare-fun $map_get<Int> ($Map<Int~_Int> Int) Int)
(declare-fun $map_set<$Map<Int~_Int>> ($Map<Int~_Int> Int Int) $Map<Int~_Int>)
(declare-fun s$struct$Voter$init<$Struct> (Int Bool Int Int) $Struct)
(declare-fun s$struct$Voter$eq<Bool> ($Struct $Struct) Bool)
(declare-const $self_address<Int> Int)
(declare-fun $implements<Bool> (Int Int) Bool)
(declare-fun s$struct$Proposal$init<$Struct> (Seq<Int> Int) $Struct)
(declare-fun s$struct$Proposal$eq<Bool> ($Struct $Struct) Bool)
; Declaring symbols related to program functions (from program analysis)
(declare-fun $pure$success_get ($Snap $Struct) Bool)
(declare-fun $pure$success_get%limited ($Snap $Struct) Bool)
(declare-fun $pure$success_get%stateless ($Struct) Bool)
(declare-fun $pure$success_get%precondition ($Snap $Struct) Bool)
(declare-fun $pure$return_get ($Snap $Struct) Int)
(declare-fun $pure$return_get%limited ($Snap $Struct) Int)
(declare-fun $pure$return_get%stateless ($Struct) Bool)
(declare-fun $pure$return_get%precondition ($Snap $Struct) Bool)
(declare-fun $range_sum ($Snap Int Int) Int)
(declare-fun $range_sum%limited ($Snap Int Int) Int)
(declare-fun $range_sum%stateless (Int Int) Bool)
(declare-fun $range_sum%precondition ($Snap Int Int) Bool)
; Snapshot variable to be used during function verification
(declare-fun s@$ () $Snap)
; Declaring predicate trigger functions
(declare-fun $failed%trigger ($Snap Int) Bool)
(declare-fun $failed_0%trigger ($Snap Int) Bool)
(declare-fun $allocation%trigger ($Snap $Struct Int) Bool)
(declare-fun $allocation_0%trigger ($Snap $Struct Int) Bool)
(declare-fun $offer%trigger ($Snap $Struct $Struct Int Int Int Int) Bool)
(declare-fun $offer_0%trigger ($Snap $Struct $Struct Int Int Int Int) Bool)
(declare-fun $trust%trigger ($Snap Int Int) Bool)
(declare-fun $trust_0%trigger ($Snap Int Int) Bool)
(declare-fun $performs$create%trigger ($Snap $Struct Int Int Int) Bool)
(declare-fun $performs$create_0%trigger ($Snap $Struct Int Int Int) Bool)
(declare-fun $performs$destroy%trigger ($Snap $Struct Int Int) Bool)
(declare-fun $performs$destroy_0%trigger ($Snap $Struct Int Int) Bool)
(declare-fun $performs$reallocate%trigger ($Snap $Struct Int Int Int) Bool)
(declare-fun $performs$reallocate_0%trigger ($Snap $Struct Int Int Int) Bool)
(declare-fun $performs$offer%trigger ($Snap $Struct $Struct Int Int Int Int Int) Bool)
(declare-fun $performs$offer_0%trigger ($Snap $Struct $Struct Int Int Int Int Int) Bool)
(declare-fun $performs$revoke%trigger ($Snap $Struct $Struct Int Int Int Int) Bool)
(declare-fun $performs$revoke_0%trigger ($Snap $Struct $Struct Int Int Int Int) Bool)
(declare-fun $performs$trust%trigger ($Snap Int Int Bool) Bool)
(declare-fun $performs$trust_0%trigger ($Snap Int Int Bool) Bool)
(declare-fun $accessible$_delegated%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$_delegated_0%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$delegated%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$delegated_0%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$_directlyVoted%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$_directlyVoted_0%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$directlyVoted%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$directlyVoted_0%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$__init__%trigger ($Snap Int Int Int Seq<Seq<Int>>) Bool)
(declare-fun $accessible$__init___0%trigger ($Snap Int Int Int Seq<Seq<Int>>) Bool)
(declare-fun $accessible$giveRightToVote%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$giveRightToVote_0%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$_forwardWeight%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$_forwardWeight_0%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$forwardWeight%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$forwardWeight_0%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$delegate%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$delegate_0%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$vote%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$vote_0%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$_winningProposal%trigger ($Snap Int Int Int) Bool)
(declare-fun $accessible$_winningProposal_0%trigger ($Snap Int Int Int) Bool)
(declare-fun $accessible$winningProposal%trigger ($Snap Int Int Int) Bool)
(declare-fun $accessible$winningProposal_0%trigger ($Snap Int Int Int) Bool)
(declare-fun $accessible$winnerName%trigger ($Snap Int Int Int) Bool)
(declare-fun $accessible$winnerName_0%trigger ($Snap Int Int Int) Bool)
; ////////// Uniqueness assumptions from domains
; ////////// Axioms
(assert (forall ((s Seq<Seq<Int>>)) (!
  (<= 0 (Seq_length s))
  :pattern ((Seq_length s))
  )))
(assert (= (Seq_length (as Seq_empty  Seq<Seq<Int>>)) 0))
(assert (forall ((s Seq<Seq<Int>>)) (!
  (=> (= (Seq_length s) 0) (= s (as Seq_empty  Seq<Seq<Int>>)))
  :pattern ((Seq_length s))
  )))
(assert (forall ((e Seq<Int>)) (!
  (= (Seq_length (Seq_singleton e)) 1)
  :pattern ((Seq_singleton e))
  )))
(assert (forall ((s0 Seq<Seq<Int>>) (s1 Seq<Seq<Int>>)) (!
  (=>
    (and
      (not (= s0 (as Seq_empty  Seq<Seq<Int>>)))
      (not (= s1 (as Seq_empty  Seq<Seq<Int>>))))
    (= (Seq_length (Seq_append s0 s1)) (+ (Seq_length s0) (Seq_length s1))))
  :pattern ((Seq_length (Seq_append s0 s1)))
  )))
(assert (forall ((s0 Seq<Seq<Int>>) (s1 Seq<Seq<Int>>)) (!
  (and
    (=> (= s0 (as Seq_empty  Seq<Seq<Int>>)) (= (Seq_append s0 s1) s1))
    (=> (= s1 (as Seq_empty  Seq<Seq<Int>>)) (= (Seq_append s0 s1) s0)))
  :pattern ((Seq_append s0 s1))
  )))
(assert (forall ((e Seq<Int>)) (!
  (= (Seq_index (Seq_singleton e) 0) e)
  :pattern ((Seq_singleton e))
  )))
(assert (forall ((i Int) (j Int)) (!
  (= (Seq_add i j) (+ i j))
  :pattern ((Seq_add i j))
  )))
(assert (forall ((i Int) (j Int)) (!
  (= (Seq_sub i j) (- i j))
  :pattern ((Seq_sub i j))
  )))
(assert (forall ((s0 Seq<Seq<Int>>) (s1 Seq<Seq<Int>>) (n Int)) (!
  (=>
    (and
      (not (= s0 (as Seq_empty  Seq<Seq<Int>>)))
      (and
        (not (= s1 (as Seq_empty  Seq<Seq<Int>>)))
        (and (<= 0 n) (< n (Seq_length s0)))))
    (= (Seq_index (Seq_append s0 s1) n) (Seq_index s0 n)))
  :pattern ((Seq_index (Seq_append s0 s1) n))
  :pattern ((Seq_index s0 n) (Seq_append s0 s1))
  )))
(assert (forall ((s0 Seq<Seq<Int>>) (s1 Seq<Seq<Int>>) (n Int)) (!
  (=>
    (and
      (not (= s0 (as Seq_empty  Seq<Seq<Int>>)))
      (and
        (not (= s1 (as Seq_empty  Seq<Seq<Int>>)))
        (and (<= (Seq_length s0) n) (< n (Seq_length (Seq_append s0 s1))))))
    (and
      (= (Seq_add (Seq_sub n (Seq_length s0)) (Seq_length s0)) n)
      (=
        (Seq_index (Seq_append s0 s1) n)
        (Seq_index s1 (Seq_sub n (Seq_length s0))))))
  :pattern ((Seq_index (Seq_append s0 s1) n))
  )))
(assert (forall ((s0 Seq<Seq<Int>>) (s1 Seq<Seq<Int>>) (m Int)) (!
  (=>
    (and
      (not (= s0 (as Seq_empty  Seq<Seq<Int>>)))
      (and
        (not (= s1 (as Seq_empty  Seq<Seq<Int>>)))
        (and (<= 0 m) (< m (Seq_length s1)))))
    (and
      (= (Seq_sub (Seq_add m (Seq_length s0)) (Seq_length s0)) m)
      (=
        (Seq_index (Seq_append s0 s1) (Seq_add m (Seq_length s0)))
        (Seq_index s1 m))))
  :pattern ((Seq_index s1 m) (Seq_append s0 s1))
  )))
(assert (forall ((s Seq<Seq<Int>>) (i Int) (v Seq<Int>)) (!
  (=>
    (and (<= 0 i) (< i (Seq_length s)))
    (= (Seq_length (Seq_update s i v)) (Seq_length s)))
  :pattern ((Seq_length (Seq_update s i v)))
  :pattern ((Seq_length s) (Seq_update s i v))
  )))
(assert (forall ((s Seq<Seq<Int>>) (i Int) (v Seq<Int>) (n Int)) (!
  (=>
    (and (<= 0 n) (< n (Seq_length s)))
    (and
      (=> (= i n) (= (Seq_index (Seq_update s i v) n) v))
      (=> (not (= i n)) (= (Seq_index (Seq_update s i v) n) (Seq_index s n)))))
  :pattern ((Seq_index (Seq_update s i v) n))
  :pattern ((Seq_index s n) (Seq_update s i v))
  )))
(assert (forall ((s Seq<Seq<Int>>) (n Int)) (!
  (and
    (=>
      (<= 0 n)
      (and
        (=> (<= n (Seq_length s)) (= (Seq_length (Seq_take s n)) n))
        (=> (< (Seq_length s) n) (= (Seq_length (Seq_take s n)) (Seq_length s)))))
    (=> (< n 0) (= (Seq_length (Seq_take s n)) 0)))
  :pattern ((Seq_length (Seq_take s n)))
  :pattern ((Seq_take s n) (Seq_length s))
  )))
(assert (forall ((s Seq<Seq<Int>>) (n Int) (j Int)) (!
  (=>
    (and (<= 0 j) (and (< j n) (< j (Seq_length s))))
    (= (Seq_index (Seq_take s n) j) (Seq_index s j)))
  :pattern ((Seq_index (Seq_take s n) j))
  :pattern ((Seq_index s j) (Seq_take s n))
  )))
(assert (forall ((s Seq<Seq<Int>>) (n Int)) (!
  (and
    (=>
      (<= 0 n)
      (and
        (=>
          (<= n (Seq_length s))
          (= (Seq_length (Seq_drop s n)) (- (Seq_length s) n)))
        (=> (< (Seq_length s) n) (= (Seq_length (Seq_drop s n)) 0))))
    (=> (< n 0) (= (Seq_length (Seq_drop s n)) (Seq_length s))))
  :pattern ((Seq_length (Seq_drop s n)))
  :pattern ((Seq_length s) (Seq_drop s n))
  )))
(assert (forall ((s Seq<Seq<Int>>) (n Int) (j Int)) (!
  (=>
    (and (< 0 n) (and (<= 0 j) (< j (- (Seq_length s) n))))
    (and
      (= (Seq_sub (Seq_add j n) n) j)
      (= (Seq_index (Seq_drop s n) j) (Seq_index s (Seq_add j n)))))
  :pattern ((Seq_index (Seq_drop s n) j))
  )))
(assert (forall ((s Seq<Seq<Int>>) (n Int) (i Int)) (!
  (=>
    (and (< 0 n) (and (<= n i) (< i (Seq_length s))))
    (and
      (= (Seq_add (Seq_sub i n) n) i)
      (= (Seq_index (Seq_drop s n) (Seq_sub i n)) (Seq_index s i))))
  :pattern ((Seq_drop s n) (Seq_index s i))
  )))
(assert (forall ((s Seq<Seq<Int>>) (t Seq<Seq<Int>>) (n Int)) (!
  (=>
    (and (< 0 n) (<= n (Seq_length s)))
    (= (Seq_take (Seq_append s t) n) (Seq_take s n)))
  :pattern ((Seq_take (Seq_append s t) n))
  )))
(assert (forall ((s Seq<Seq<Int>>) (t Seq<Seq<Int>>) (n Int)) (!
  (=>
    (and (> n 0) (and (> n (Seq_length s)) (< n (Seq_length (Seq_append s t)))))
    (and
      (= (Seq_add (Seq_sub n (Seq_length s)) (Seq_length s)) n)
      (=
        (Seq_take (Seq_append s t) n)
        (Seq_append s (Seq_take t (Seq_sub n (Seq_length s)))))))
  :pattern ((Seq_take (Seq_append s t) n))
  )))
(assert (forall ((s Seq<Seq<Int>>) (t Seq<Seq<Int>>) (n Int)) (!
  (=>
    (and (< 0 n) (<= n (Seq_length s)))
    (= (Seq_drop (Seq_append s t) n) (Seq_append (Seq_drop s n) t)))
  :pattern ((Seq_drop (Seq_append s t) n))
  )))
(assert (forall ((s Seq<Seq<Int>>) (t Seq<Seq<Int>>) (n Int)) (!
  (=>
    (and (> n 0) (> n (Seq_length s)))
    (and
      (= (Seq_add (Seq_sub n (Seq_length s)) (Seq_length s)) n)
      (= (Seq_drop (Seq_append s t) n) (Seq_drop t (Seq_sub n (Seq_length s))))))
  :pattern ((Seq_drop (Seq_append s t) n))
  )))
(assert (forall ((s Seq<Seq<Int>>) (n Int)) (!
  (=> (<= n 0) (= (Seq_take s n) (as Seq_empty  Seq<Seq<Int>>)))
  :pattern ((Seq_take s n))
  )))
(assert (forall ((s Seq<Seq<Int>>) (n Int)) (!
  (=> (<= n 0) (= (Seq_drop s n) s))
  :pattern ((Seq_drop s n))
  )))
(assert (forall ((s Seq<Seq<Int>>) (n Int)) (!
  (=> (>= n (Seq_length s)) (= (Seq_take s n) s))
  :pattern ((Seq_take s n))
  )))
(assert (forall ((s Seq<Seq<Int>>) (n Int)) (!
  (=> (>= n (Seq_length s)) (= (Seq_drop s n) (as Seq_empty  Seq<Seq<Int>>)))
  :pattern ((Seq_drop s n))
  )))
(assert (forall ((s Seq<Seq<Int>>) (x Seq<Int>)) (!
  (=>
    (Seq_contains s x)
    (and
      (<= 0 (Seq_skolem s x))
      (and
        (< (Seq_skolem s x) (Seq_length s))
        (= (Seq_index s (Seq_skolem s x)) x))))
  :pattern ((Seq_contains s x))
  )))
(assert (forall ((s Seq<Seq<Int>>) (x Seq<Int>) (i Int)) (!
  (=>
    (and (<= 0 i) (and (< i (Seq_length s)) (= (Seq_index s i) x)))
    (Seq_contains s x))
  :pattern ((Seq_contains s x) (Seq_index s i))
  )))
(assert (forall ((s Seq<Seq<Int>>) (i Int)) (!
  (=>
    (and (<= 0 i) (< i (Seq_length s)))
    (Seq_contains_trigger s (Seq_index s i)))
  :pattern ((Seq_index s i))
  )))
(assert (forall ((s0 Seq<Seq<Int>>) (s1 Seq<Seq<Int>>)) (!
  (or
    (and (= s0 s1) (Seq_equal s0 s1))
    (or
      (and
        (not (= s0 s1))
        (and (not (Seq_equal s0 s1)) (not (= (Seq_length s0) (Seq_length s1)))))
      (and
        (not (= s0 s1))
        (and
          (not (Seq_equal s0 s1))
          (and
            (= (Seq_length s0) (Seq_length s1))
            (and
              (= (Seq_skolem_diff s0 s1) (Seq_skolem_diff s1 s0))
              (and
                (<= 0 (Seq_skolem_diff s0 s1))
                (and
                  (< (Seq_skolem_diff s0 s1) (Seq_length s0))
                  (not
                    (=
                      (Seq_index s0 (Seq_skolem_diff s0 s1))
                      (Seq_index s1 (Seq_skolem_diff s0 s1))))))))))))
  :pattern ((Seq_equal s0 s1))
  )))
(assert (forall ((a Seq<Seq<Int>>) (b Seq<Seq<Int>>)) (!
  (=> (Seq_equal a b) (= a b))
  :pattern ((Seq_equal a b))
  )))
(assert (forall ((x Seq<Int>) (y Seq<Int>)) (!
  (= (Seq_contains (Seq_singleton x) y) (= x y))
  :pattern ((Seq_contains (Seq_singleton x) y))
  )))
(assert (forall ((s Seq<Int>)) (!
  (<= 0 (Seq_length s))
  :pattern ((Seq_length s))
  )))
(assert (= (Seq_length (as Seq_empty  Seq<Int>)) 0))
(assert (forall ((s Seq<Int>)) (!
  (=> (= (Seq_length s) 0) (= s (as Seq_empty  Seq<Int>)))
  :pattern ((Seq_length s))
  )))
(assert (forall ((e Int)) (!
  (= (Seq_length (Seq_singleton e)) 1)
  :pattern ((Seq_singleton e))
  )))
(assert (forall ((s0 Seq<Int>) (s1 Seq<Int>)) (!
  (=>
    (and
      (not (= s0 (as Seq_empty  Seq<Int>)))
      (not (= s1 (as Seq_empty  Seq<Int>))))
    (= (Seq_length (Seq_append s0 s1)) (+ (Seq_length s0) (Seq_length s1))))
  :pattern ((Seq_length (Seq_append s0 s1)))
  )))
(assert (forall ((s0 Seq<Int>) (s1 Seq<Int>)) (!
  (and
    (=> (= s0 (as Seq_empty  Seq<Int>)) (= (Seq_append s0 s1) s1))
    (=> (= s1 (as Seq_empty  Seq<Int>)) (= (Seq_append s0 s1) s0)))
  :pattern ((Seq_append s0 s1))
  )))
(assert (forall ((e Int)) (!
  (= (Seq_index (Seq_singleton e) 0) e)
  :pattern ((Seq_singleton e))
  )))
(assert (forall ((s0 Seq<Int>) (s1 Seq<Int>) (n Int)) (!
  (=>
    (and
      (not (= s0 (as Seq_empty  Seq<Int>)))
      (and
        (not (= s1 (as Seq_empty  Seq<Int>)))
        (and (<= 0 n) (< n (Seq_length s0)))))
    (= (Seq_index (Seq_append s0 s1) n) (Seq_index s0 n)))
  :pattern ((Seq_index (Seq_append s0 s1) n))
  :pattern ((Seq_index s0 n) (Seq_append s0 s1))
  )))
(assert (forall ((s0 Seq<Int>) (s1 Seq<Int>) (n Int)) (!
  (=>
    (and
      (not (= s0 (as Seq_empty  Seq<Int>)))
      (and
        (not (= s1 (as Seq_empty  Seq<Int>)))
        (and (<= (Seq_length s0) n) (< n (Seq_length (Seq_append s0 s1))))))
    (and
      (= (Seq_add (Seq_sub n (Seq_length s0)) (Seq_length s0)) n)
      (=
        (Seq_index (Seq_append s0 s1) n)
        (Seq_index s1 (Seq_sub n (Seq_length s0))))))
  :pattern ((Seq_index (Seq_append s0 s1) n))
  )))
(assert (forall ((s0 Seq<Int>) (s1 Seq<Int>) (m Int)) (!
  (=>
    (and
      (not (= s0 (as Seq_empty  Seq<Int>)))
      (and
        (not (= s1 (as Seq_empty  Seq<Int>)))
        (and (<= 0 m) (< m (Seq_length s1)))))
    (and
      (= (Seq_sub (Seq_add m (Seq_length s0)) (Seq_length s0)) m)
      (=
        (Seq_index (Seq_append s0 s1) (Seq_add m (Seq_length s0)))
        (Seq_index s1 m))))
  :pattern ((Seq_index s1 m) (Seq_append s0 s1))
  )))
(assert (forall ((s Seq<Int>) (i Int) (v Int)) (!
  (=>
    (and (<= 0 i) (< i (Seq_length s)))
    (= (Seq_length (Seq_update s i v)) (Seq_length s)))
  :pattern ((Seq_length (Seq_update s i v)))
  :pattern ((Seq_length s) (Seq_update s i v))
  )))
(assert (forall ((s Seq<Int>) (i Int) (v Int) (n Int)) (!
  (=>
    (and (<= 0 n) (< n (Seq_length s)))
    (and
      (=> (= i n) (= (Seq_index (Seq_update s i v) n) v))
      (=> (not (= i n)) (= (Seq_index (Seq_update s i v) n) (Seq_index s n)))))
  :pattern ((Seq_index (Seq_update s i v) n))
  :pattern ((Seq_index s n) (Seq_update s i v))
  )))
(assert (forall ((s Seq<Int>) (n Int)) (!
  (and
    (=>
      (<= 0 n)
      (and
        (=> (<= n (Seq_length s)) (= (Seq_length (Seq_take s n)) n))
        (=> (< (Seq_length s) n) (= (Seq_length (Seq_take s n)) (Seq_length s)))))
    (=> (< n 0) (= (Seq_length (Seq_take s n)) 0)))
  :pattern ((Seq_length (Seq_take s n)))
  :pattern ((Seq_take s n) (Seq_length s))
  )))
(assert (forall ((s Seq<Int>) (n Int) (j Int)) (!
  (=>
    (and (<= 0 j) (and (< j n) (< j (Seq_length s))))
    (= (Seq_index (Seq_take s n) j) (Seq_index s j)))
  :pattern ((Seq_index (Seq_take s n) j))
  :pattern ((Seq_index s j) (Seq_take s n))
  )))
(assert (forall ((s Seq<Int>) (n Int)) (!
  (and
    (=>
      (<= 0 n)
      (and
        (=>
          (<= n (Seq_length s))
          (= (Seq_length (Seq_drop s n)) (- (Seq_length s) n)))
        (=> (< (Seq_length s) n) (= (Seq_length (Seq_drop s n)) 0))))
    (=> (< n 0) (= (Seq_length (Seq_drop s n)) (Seq_length s))))
  :pattern ((Seq_length (Seq_drop s n)))
  :pattern ((Seq_length s) (Seq_drop s n))
  )))
(assert (forall ((s Seq<Int>) (n Int) (j Int)) (!
  (=>
    (and (< 0 n) (and (<= 0 j) (< j (- (Seq_length s) n))))
    (and
      (= (Seq_sub (Seq_add j n) n) j)
      (= (Seq_index (Seq_drop s n) j) (Seq_index s (Seq_add j n)))))
  :pattern ((Seq_index (Seq_drop s n) j))
  )))
(assert (forall ((s Seq<Int>) (n Int) (i Int)) (!
  (=>
    (and (< 0 n) (and (<= n i) (< i (Seq_length s))))
    (and
      (= (Seq_add (Seq_sub i n) n) i)
      (= (Seq_index (Seq_drop s n) (Seq_sub i n)) (Seq_index s i))))
  :pattern ((Seq_drop s n) (Seq_index s i))
  )))
(assert (forall ((s Seq<Int>) (t Seq<Int>) (n Int)) (!
  (=>
    (and (< 0 n) (<= n (Seq_length s)))
    (= (Seq_take (Seq_append s t) n) (Seq_take s n)))
  :pattern ((Seq_take (Seq_append s t) n))
  )))
(assert (forall ((s Seq<Int>) (t Seq<Int>) (n Int)) (!
  (=>
    (and (> n 0) (and (> n (Seq_length s)) (< n (Seq_length (Seq_append s t)))))
    (and
      (= (Seq_add (Seq_sub n (Seq_length s)) (Seq_length s)) n)
      (=
        (Seq_take (Seq_append s t) n)
        (Seq_append s (Seq_take t (Seq_sub n (Seq_length s)))))))
  :pattern ((Seq_take (Seq_append s t) n))
  )))
(assert (forall ((s Seq<Int>) (t Seq<Int>) (n Int)) (!
  (=>
    (and (< 0 n) (<= n (Seq_length s)))
    (= (Seq_drop (Seq_append s t) n) (Seq_append (Seq_drop s n) t)))
  :pattern ((Seq_drop (Seq_append s t) n))
  )))
(assert (forall ((s Seq<Int>) (t Seq<Int>) (n Int)) (!
  (=>
    (and (> n 0) (> n (Seq_length s)))
    (and
      (= (Seq_add (Seq_sub n (Seq_length s)) (Seq_length s)) n)
      (= (Seq_drop (Seq_append s t) n) (Seq_drop t (Seq_sub n (Seq_length s))))))
  :pattern ((Seq_drop (Seq_append s t) n))
  )))
(assert (forall ((s Seq<Int>) (n Int)) (!
  (=> (<= n 0) (= (Seq_take s n) (as Seq_empty  Seq<Int>)))
  :pattern ((Seq_take s n))
  )))
(assert (forall ((s Seq<Int>) (n Int)) (!
  (=> (<= n 0) (= (Seq_drop s n) s))
  :pattern ((Seq_drop s n))
  )))
(assert (forall ((s Seq<Int>) (n Int)) (!
  (=> (>= n (Seq_length s)) (= (Seq_take s n) s))
  :pattern ((Seq_take s n))
  )))
(assert (forall ((s Seq<Int>) (n Int)) (!
  (=> (>= n (Seq_length s)) (= (Seq_drop s n) (as Seq_empty  Seq<Int>)))
  :pattern ((Seq_drop s n))
  )))
(assert (forall ((s Seq<Int>) (x Int)) (!
  (=>
    (Seq_contains s x)
    (and
      (<= 0 (Seq_skolem s x))
      (and
        (< (Seq_skolem s x) (Seq_length s))
        (= (Seq_index s (Seq_skolem s x)) x))))
  :pattern ((Seq_contains s x))
  )))
(assert (forall ((s Seq<Int>) (x Int) (i Int)) (!
  (=>
    (and (<= 0 i) (and (< i (Seq_length s)) (= (Seq_index s i) x)))
    (Seq_contains s x))
  :pattern ((Seq_contains s x) (Seq_index s i))
  )))
(assert (forall ((s Seq<Int>) (i Int)) (!
  (=>
    (and (<= 0 i) (< i (Seq_length s)))
    (Seq_contains_trigger s (Seq_index s i)))
  :pattern ((Seq_index s i))
  )))
(assert (forall ((s0 Seq<Int>) (s1 Seq<Int>)) (!
  (or
    (and (= s0 s1) (Seq_equal s0 s1))
    (or
      (and
        (not (= s0 s1))
        (and (not (Seq_equal s0 s1)) (not (= (Seq_length s0) (Seq_length s1)))))
      (and
        (not (= s0 s1))
        (and
          (not (Seq_equal s0 s1))
          (and
            (= (Seq_length s0) (Seq_length s1))
            (and
              (= (Seq_skolem_diff s0 s1) (Seq_skolem_diff s1 s0))
              (and
                (<= 0 (Seq_skolem_diff s0 s1))
                (and
                  (< (Seq_skolem_diff s0 s1) (Seq_length s0))
                  (not
                    (=
                      (Seq_index s0 (Seq_skolem_diff s0 s1))
                      (Seq_index s1 (Seq_skolem_diff s0 s1))))))))))))
  :pattern ((Seq_equal s0 s1))
  )))
(assert (forall ((a Seq<Int>) (b Seq<Int>)) (!
  (=> (Seq_equal a b) (= a b))
  :pattern ((Seq_equal a b))
  )))
(assert (forall ((x Int) (y Int)) (!
  (= (Seq_contains (Seq_singleton x) y) (= x y))
  :pattern ((Seq_contains (Seq_singleton x) y))
  )))
(assert (forall ((min_ Int) (max Int)) (!
  (and
    (=> (< min_ max) (= (Seq_length (Seq_range min_ max)) (- max min_)))
    (=> (<= max min_) (= (Seq_length (Seq_range min_ max)) 0)))
  :pattern ((Seq_length (Seq_range min_ max)))
  :qid |$Seq[Int]_prog.ranged_seq_length|)))
(assert (forall ((min_ Int) (max Int) (j Int)) (!
  (=>
    (and (<= 0 j) (< j (- max min_)))
    (= (Seq_index (Seq_range min_ max) j) (+ min_ j)))
  :pattern ((Seq_index (Seq_range min_ max) j))
  :qid |$Seq[Int]_prog.ranged_seq_index|)))
(assert (forall ((min_ Int) (max Int) (v Int)) (!
  (= (Seq_contains (Seq_range min_ max) v) (and (<= min_ v) (< v max)))
  :pattern ((Seq_contains (Seq_range min_ max) v))
  :qid |$Seq[Int]_prog.ranged_seq_contains|)))
(assert (forall (($v $Struct) ($k Int)) (!
  (= ($map_get<$Struct> ($map_init<$Map<Int~_$Struct>> $v) $k) $v)
  :pattern (($map_get<$Struct> ($map_init<$Map<Int~_$Struct>> $v) $k))
  :qid |prog.$map_init_ax|)))
(assert (forall (($m $Map<Int~_$Struct>) ($n $Map<Int~_$Struct>)) (!
  (and
    (= ($map_eq<Bool> $m $n) (= $m $n))
    (=
      ($map_eq<Bool> $m $n)
      (forall (($k Int)) (!
        (= ($map_get<$Struct> $m $k) ($map_get<$Struct> $n $k))
        :pattern (($map_get<$Struct> $m $k) ($map_get<$Struct> $n $k))
        ))))
  :pattern (($map_eq<Bool> $m $n))
  :qid |prog.$map_eq_ax|)))
(assert (forall (($m $Map<Int~_$Struct>) ($k Int) ($v $Struct) ($kk Int)) (!
  (=
    ($map_get<$Struct> ($map_set<$Map<Int~_$Struct>> $m $k $v) $kk)
    (ite (= $k $kk) $v ($map_get<$Struct> $m $kk)))
  :pattern (($map_get<$Struct> ($map_set<$Map<Int~_$Struct>> $m $k $v) $kk))
  :qid |prog.$map_set_ax|)))
(assert (forall (($bb Seq<Int>)) (!
  (=>
    (<= (Seq_length $bb) 32)
    (and
      (<=
        (- 0 57896044618658097711785492504343953926634992332820282019728792003956564819968)
        ($bytes32_to_signed_int<Int> $bb))
      (<=
        ($bytes32_to_signed_int<Int> $bb)
        57896044618658097711785492504343953926634992332820282019728792003956564819967)))
  :pattern (($bytes32_to_signed_int<Int> $bb))
  :qid |prog.$bytes32_to_signed_int_ax|)))
(assert (forall (($bb Seq<Int>)) (!
  (=>
    (<= (Seq_length $bb) 32)
    (and
      (<= 0 ($bytes32_to_unsigned_int<Int> $bb))
      (<=
        ($bytes32_to_unsigned_int<Int> $bb)
        115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  :pattern (($bytes32_to_unsigned_int<Int> $bb))
  :qid |prog.$bytes32_to_unsigned_int_ax|)))
(assert (forall (($i Int)) (!
  (=>
    (and
      (<=
        (- 0 57896044618658097711785492504343953926634992332820282019728792003956564819968)
        $i)
      (<=
        $i
        57896044618658097711785492504343953926634992332820282019728792003956564819967))
    (= (Seq_length ($signed_int_to_bytes32<Seq<Int>> $i)) 32))
  :pattern (($signed_int_to_bytes32<Seq<Int>> $i))
  :qid |prog.$signed_int_to_bytes32_ax|)))
(assert (forall (($i Int)) (!
  (=>
    (and
      (<=
        (- 0 57896044618658097711785492504343953926634992332820282019728792003956564819968)
        $i)
      (<=
        $i
        57896044618658097711785492504343953926634992332820282019728792003956564819967))
    (= (Seq_length ($unsigned_int_to_bytes32<Seq<Int>> $i)) 32))
  :pattern (($unsigned_int_to_bytes32<Seq<Int>> $i))
  :qid |prog.$unsigned_int_to_bytes32_ax|)))
(assert (forall (($bb Seq<Int>)) (!
  (= (Seq_length ($pad32<Seq<Int>> $bb)) 32)
  :pattern (($pad32<Seq<Int>> $bb))
  :qid |prog.$pad32_len_ax|)))
(assert (and
  (forall (($bb Seq<Int>) ($i Int)) (!
    (let ((diff (- 32 (Seq_length $bb)))) true)
    :pattern ((Seq_index ($pad32<Seq<Int>> $bb) $i))
    :qid |prog.$pad32_vals_ax|))
  (forall (($bb Seq<Int>) ($i Int)) (!
    (let ((diff (- 32 (Seq_length $bb)))) (=>
      (and (<= 0 $i) (< $i (Seq_length ($pad32<Seq<Int>> $bb))))
      (=
        (Seq_index ($pad32<Seq<Int>> $bb) $i)
        (ite (< $i diff) 0 (Seq_index $bb (- $i diff))))))
    :pattern ((Seq_index ($pad32<Seq<Int>> $bb) $i))
    :qid |prog.$pad32_vals_ax|))))
(assert (forall (($s $Struct) ($m Int) ($t Int)) (!
  (= ($struct_get<Int> ($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m)) $t)
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
  :qid |prog.$get_set_0_ax|)))
(assert (forall (($s $Struct) ($m Int) ($n Int) ($t Int)) (!
  (=>
    (not (= $m $n))
    (=
      ($struct_loc<Int> $s $m)
      ($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m)))
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m))
  :qid |prog.$get_set_1_ax|)))
(assert (forall (($s $Struct) ($m Int) ($t Bool)) (!
  (=
    ($struct_get<Bool> ($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
    $t)
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
  :qid |prog.$get_set_0_ax|)))
(assert (forall (($s $Struct) ($m Int) ($n Int) ($t Bool)) (!
  (=>
    (not (= $m $n))
    (=
      ($struct_loc<Int> $s $m)
      ($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m)))
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m))
  :qid |prog.$get_set_1_ax|)))
(assert (forall (($no Int)) (!
  (= (Seq_length ($blockhash<Seq<Int>> $no)) 32)
  :pattern (($blockhash<Seq<Int>> $no))
  :qid |prog.$blockhash_ax|)))
(assert (forall (($bb Seq<Int>) ($l Int)) (!
  (= (Seq_length ($method_id<Seq<Int>> $bb $l)) $l)
  :pattern (($method_id<Seq<Int>> $bb $l))
  :qid |prog.$method_id_ax|)))
(assert (forall (($s Seq<Int>)) (!
  (= (Seq_length ($keccak256<Seq<Int>> $s)) 32)
  :pattern (($keccak256<Seq<Int>> $s))
  :qid |prog.$keccak256_ax|)))
(assert (forall (($s Seq<Int>)) (!
  (= (Seq_length ($sha256<Seq<Int>> $s)) 32)
  :pattern (($sha256<Seq<Int>> $s))
  :qid |prog.$sha256_ax|)))
(assert (forall (($p Seq<Int>) ($q Seq<Int>)) (!
  (= (Seq_length ($ecadd<Seq<Int>> $p $q)) 2)
  :pattern (($ecadd<Seq<Int>> $p $q))
  :qid |prog.$ecadd_ax|)))
(assert (forall (($p Seq<Int>) ($s Int)) (!
  (= (Seq_length ($ecmul<Seq<Int>> $p $s)) 2)
  :pattern (($ecmul<Seq<Int>> $p $s))
  :qid |prog.$ecmul_ax|)))
(assert (forall (($e Int) ($c Int)) (!
  (= (Seq_length ($array_init<Seq<Int>> $e $c)) $c)
  :pattern (($array_init<Seq<Int>> $e $c))
  :qid |prog.$array_init_len_ax|)))
(assert (forall (($e Int) ($c Int) ($i Int)) (!
  (=>
    (and (<= 0 $i) (< $i $c))
    (= (Seq_index ($array_init<Seq<Int>> $e $c) $i) $e))
  :pattern ((Seq_index ($array_init<Seq<Int>> $e $c) $i))
  :qid |prog.$array_init_val_ax|)))
(assert (forall ((i Int)) (!
  (= ($unwrap<Int> ($wrap<$Int> i)) i)
  :pattern (($wrap<$Int> i))
  :qid |prog.$wrap_ax|)))
(assert (forall ((i $Int)) (!
  (= ($wrap<$Int> ($unwrap<Int> i)) i)
  :pattern (($wrap<$Int> ($unwrap<Int> i)))
  :qid |prog.$unwrap_ax|)))
(assert (forall ((i $Int)) (!
  (=> (< ($unwrap<Int> i) 0) (= ($w_abs<Int> i) (- 0 ($unwrap<Int> i))))
  :pattern (($w_abs<Int> i))
  :qid |prog.$w_abs_ax_1|)))
(assert (forall ((i $Int)) (!
  (=> (>= ($unwrap<Int> i) 0) (= ($w_abs<Int> i) ($unwrap<Int> i)))
  :pattern (($w_abs<Int> i))
  :qid |prog.$w_abs_ax_2|)))
(assert (forall ((i $Int) (j $Int)) (!
  (= ($w_mul<$Int> i j) ($w_mulI<$Int> i j))
  :pattern (($w_mul<$Int> i j))
  :qid |prog.$w_mul_intermediate|)))
(assert (forall ((i $Int) (j $Int)) (!
  (= ($w_mul<$Int> i j) ($w_mulL<$Int> i j))
  :pattern (($w_mul<$Int> i j))
  :qid |prog.$w_mul_limited|)))
(assert (forall ((i $Int) (j $Int)) (!
  (= ($w_mulI<$Int> i j) ($w_mulL<$Int> i j))
  :pattern (($w_mulI<$Int> i j))
  :qid |prog.$w_mul_intermediate_to_limited|)))
(assert (forall ((i $Int) (j $Int)) (!
  (= ($w_mul<$Int> i j) ($w_mulI<$Int> j i))
  :pattern (($w_mul<$Int> i j))
  :qid |prog.$w_mul_commutative|)))
(assert (forall ((i $Int) (j $Int) (k $Int)) (!
  (= ($w_mulI<$Int> i ($w_mulI<$Int> j k)) ($w_mulL<$Int> ($w_mulL<$Int> i j) k))
  :pattern (($w_mulI<$Int> i ($w_mulI<$Int> j k)))
  :qid |prog.$w_mul_associative|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (= ($unwrap<Int> j) (+ ($unwrap<Int> k) ($unwrap<Int> l)))
    (=
      ($w_mulI<$Int> i j)
      ($wrap<$Int> (+
        ($unwrap<Int> ($w_mulL<$Int> i k))
        ($unwrap<Int> ($w_mulL<$Int> i l))))))
  :pattern (($w_mulI<$Int> i j) ($w_mulI<$Int> i k) ($w_mulI<$Int> i l))
  :qid |prog.$w_mul_distributive|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=
    ($w_mulI<$Int> i j)
    ($w_mulL<$Int> ($wrap<$Int> (- 0 ($unwrap<Int> i))) ($wrap<$Int> (-
      0
      ($unwrap<Int> j)))))
  :pattern (($w_mulI<$Int> i j))
  :qid |prog.$w_mul_basic_sign_1|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=
    ($w_mulI<$Int> i j)
    ($wrap<$Int> (-
      0
      ($unwrap<Int> ($w_mulL<$Int> ($wrap<$Int> (- 0 ($unwrap<Int> i))) j)))))
  :pattern (($w_mulI<$Int> i j))
  :qid |prog.$w_mul_basic_sign_2|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (or (= ($unwrap<Int> i) 0) (= ($unwrap<Int> j) 0))
    (= ($unwrap<Int> ($w_mulI<$Int> i j)) 0))
  :pattern (($w_mulI<$Int> i j))
  :qid |prog.$w_mul_basic_zero_1|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (or
      (and (> ($unwrap<Int> i) 0) (> ($unwrap<Int> j) 0))
      (and (< ($unwrap<Int> i) 0) (< ($unwrap<Int> j) 0)))
    (> ($unwrap<Int> ($w_mulI<$Int> i j)) 0))
  :pattern (($w_mulI<$Int> i j))
  :qid |prog.$w_mul_basic_zero_2|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (or (= ($unwrap<Int> i) 1) (= ($unwrap<Int> j) 0))
    (= ($w_mulI<$Int> i j) j))
  :pattern (($w_mulI<$Int> i j))
  :qid |prog.$w_mul_basic_neutral|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=
    (>= ($w_abs<Int> ($w_mulI<$Int> i j)) ($w_abs<Int> j))
    (or (>= ($w_abs<Int> i) 1) (= ($unwrap<Int> j) 0)))
  :pattern (($w_mulI<$Int> i j))
  :qid |prog.$w_mul_basic_proportional|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (> ($unwrap<Int> ($w_mulI<$Int> i j)) ($unwrap<Int> k))
      (> ($unwrap<Int> l) 0))
    (>
      ($unwrap<Int> ($w_mulL<$Int> i ($w_mulL<$Int> j l)))
      ($unwrap<Int> ($w_mulI<$Int> k l))))
  :pattern (($w_mulI<$Int> i ($w_mulI<$Int> j l)) ($w_mulI<$Int> k l))
  :qid |prog.$w_mul_order_1|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (>= ($unwrap<Int> ($w_mulI<$Int> i j)) ($unwrap<Int> k))
      (> ($unwrap<Int> l) 0))
    (>=
      ($unwrap<Int> ($w_mulL<$Int> i ($w_mulL<$Int> j l)))
      ($unwrap<Int> ($w_mulI<$Int> k l))))
  :pattern (($w_mulI<$Int> i ($w_mulI<$Int> j l)) ($w_mulI<$Int> k l))
  :qid |prog.$w_mul_order_2|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (> ($unwrap<Int> ($w_mulI<$Int> i j)) ($unwrap<Int> k))
      (< ($unwrap<Int> l) 0))
    (>
      ($unwrap<Int> ($w_mulI<$Int> k l))
      ($unwrap<Int> ($w_mulL<$Int> i ($w_mulL<$Int> j l)))))
  :pattern (($w_mulI<$Int> i ($w_mulI<$Int> j l)) ($w_mulI<$Int> k l))
  :qid |prog.$w_mul_order_3|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (>= ($unwrap<Int> ($w_mulI<$Int> i j)) ($unwrap<Int> k))
      (< ($unwrap<Int> l) 0))
    (>=
      ($unwrap<Int> ($w_mulI<$Int> k l))
      ($unwrap<Int> ($w_mulL<$Int> i ($w_mulL<$Int> j l)))))
  :pattern (($w_mulI<$Int> i ($w_mulI<$Int> j l)) ($w_mulI<$Int> k l))
  :qid |prog.$w_mul_order_4|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (<= ($w_abs<Int> i) ($w_abs<Int> j))
      (<= ($w_abs<Int> k) ($w_abs<Int> l)))
    (<= ($w_abs<Int> ($w_mulI<$Int> i k)) ($w_abs<Int> ($w_mulI<$Int> j l))))
  :pattern (($w_mulI<$Int> i k) ($w_mulI<$Int> j l))
  :qid |prog.$w_mul_monotonicity_1|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (< ($w_abs<Int> i) ($w_abs<Int> j))
      (and (<= ($w_abs<Int> k) ($w_abs<Int> l)) (not (= ($unwrap<Int> l) 0))))
    (< ($w_abs<Int> ($w_mulI<$Int> i k)) ($w_abs<Int> ($w_mulI<$Int> j l))))
  :pattern (($w_mulI<$Int> i k) ($w_mulI<$Int> j l))
  :qid |prog.$w_mul_monotonicity_2|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (<= ($w_abs<Int> i) ($w_abs<Int> j))
      (and (< ($w_abs<Int> k) ($w_abs<Int> l)) (not (= ($unwrap<Int> j) 0))))
    (< ($w_abs<Int> ($w_mulI<$Int> i k)) ($w_abs<Int> ($w_mulI<$Int> j l))))
  :pattern (($w_mulI<$Int> i k) ($w_mulI<$Int> j l))
  :qid |prog.$w_mul_monotonicity_3|)))
(assert (forall ((i $Int) (j $Int)) (!
  (= ($w_mod<$Int> i j) ($w_modL<$Int> i j))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_limited|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (and (not (= j ($wrap<$Int> 0))) (or (= i j) (= i ($wrap<$Int> 0))))
    (= ($w_mod<$Int> i j) ($wrap<$Int> 0)))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_identity|)))
(assert (forall ((i $Int) (j $Int) (l $Int)) (!
  (=>
    (and
      (not (= j ($wrap<$Int> 0)))
      (and
        (= ($unwrap<Int> i) (+ ($unwrap<Int> l) ($w_abs<Int> j)))
        (or (>= ($unwrap<Int> l) 0) (< ($unwrap<Int> i) 0))))
    (= ($w_mod<$Int> i j) ($w_modL<$Int> l j)))
  :pattern (($w_mod<$Int> i j) ($w_mod<$Int> l j))
  :qid |prog.$w_mod_basic_1|)))
(assert (forall ((i $Int) (j $Int) (l $Int)) (!
  (=>
    (and
      (not (= j ($wrap<$Int> 0)))
      (and
        (= ($unwrap<Int> i) (- ($unwrap<Int> l) ($w_abs<Int> j)))
        (or (<= ($unwrap<Int> l) 0) (> ($unwrap<Int> i) 0))))
    (= ($w_mod<$Int> i j) ($w_modL<$Int> l j)))
  :pattern (($w_mod<$Int> i j) ($w_mod<$Int> l j))
  :qid |prog.$w_mod_basic_2|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (and
      (not (= j ($wrap<$Int> 0)))
      (and (<= 0 ($w_abs<Int> i)) (< ($w_abs<Int> i) ($w_abs<Int> j))))
    (= ($w_mod<$Int> i j) i))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_basic_3|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (< ($w_abs<Int> ($w_mod<$Int> i j)) ($w_abs<Int> j)))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_basic_4|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (or
      (=
        ($sign<Int> ($unwrap<Int> ($w_mod<$Int> i j)))
        ($sign<Int> ($unwrap<Int> i)))
      (= ($sign<Int> ($unwrap<Int> ($w_mod<$Int> i j))) 0)))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_sign_1|)))
(assert (forall ((i $Int) (j $Int) (k $Int)) (!
  (=>
    (and (not (= j ($wrap<$Int> 0))) (= ($unwrap<Int> i) (- 0 ($unwrap<Int> k))))
    (= ($w_mod<$Int> i j) ($wrap<$Int> (- 0 ($unwrap<Int> ($w_modL<$Int> k j))))))
  :pattern (($w_mod<$Int> i j) ($w_mod<$Int> k j))
  :qid |prog.$w_mod_sign_2|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (= ($w_mod<$Int> i j) ($w_mod<$Int> i ($wrap<$Int> (- 0 ($unwrap<Int> j))))))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_sign_3|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (= ($w_mod<$Int> i j) ($w_modL<$Int> ($w_modL<$Int> i j) j)))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_mod|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (<= ($w_abs<Int> ($w_mod<$Int> i j)) ($w_abs<Int> i)))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_decrease|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (not (= j ($wrap<$Int> 0)))
      (= ($unwrap<Int> i) (+ ($unwrap<Int> k) ($unwrap<Int> l))))
    (and
      (=>
        (or
          (and
            (>= ($unwrap<Int> i) 0)
            (>=
              (+
                ($unwrap<Int> ($w_modL<$Int> k j))
                ($unwrap<Int> ($w_modL<$Int> l j)))
              0))
          (and
            (<= ($unwrap<Int> i) 0)
            (<=
              (+
                ($unwrap<Int> ($w_modL<$Int> k j))
                ($unwrap<Int> ($w_modL<$Int> l j)))
              0)))
        (or
          (and
            (<=
              ($w_abs<Int> j)
              (+
                ($unwrap<Int> ($w_modL<$Int> k j))
                ($unwrap<Int> ($w_modL<$Int> l j))))
            (and
              (<
                (+
                  ($unwrap<Int> ($w_modL<$Int> k j))
                  ($unwrap<Int> ($w_modL<$Int> l j)))
                (* 2 ($w_abs<Int> j)))
              (=
                ($w_mod<$Int> i j)
                ($wrap<$Int> (-
                  (+
                    ($unwrap<Int> ($w_modL<$Int> k j))
                    ($unwrap<Int> ($w_modL<$Int> l j)))
                  ($w_abs<Int> j))))))
          (or
            (and
              (<
                (- 0 ($w_abs<Int> j))
                (+
                  ($unwrap<Int> ($w_modL<$Int> k j))
                  ($unwrap<Int> ($w_modL<$Int> l j))))
              (and
                (<
                  (+
                    ($unwrap<Int> ($w_modL<$Int> k j))
                    ($unwrap<Int> ($w_modL<$Int> l j)))
                  ($w_abs<Int> j))
                (=
                  ($w_mod<$Int> i j)
                  ($wrap<$Int> (+
                    ($unwrap<Int> ($w_modL<$Int> k j))
                    ($unwrap<Int> ($w_modL<$Int> l j)))))))
            (and
              (<
                (* (- 0 2) ($w_abs<Int> j))
                (+
                  ($unwrap<Int> ($w_modL<$Int> k j))
                  ($unwrap<Int> ($w_modL<$Int> l j))))
              (and
                (<=
                  (+
                    ($unwrap<Int> ($w_modL<$Int> k j))
                    ($unwrap<Int> ($w_modL<$Int> l j)))
                  (- 0 ($w_abs<Int> j)))
                (=
                  ($w_mod<$Int> i j)
                  ($wrap<$Int> (+
                    (+
                      ($unwrap<Int> ($w_modL<$Int> k j))
                      ($unwrap<Int> ($w_modL<$Int> l j)))
                    ($w_abs<Int> j)))))))))
      (=>
        (or
          (and
            (> ($unwrap<Int> i) 0)
            (<
              (+
                ($unwrap<Int> ($w_modL<$Int> k j))
                ($unwrap<Int> ($w_modL<$Int> l j)))
              0))
          (and
            (< ($unwrap<Int> i) 0)
            (>
              (+
                ($unwrap<Int> ($w_modL<$Int> k j))
                ($unwrap<Int> ($w_modL<$Int> l j)))
              0)))
        (or
          (and
            (<
              0
              (+
                ($unwrap<Int> ($w_modL<$Int> k j))
                ($unwrap<Int> ($w_modL<$Int> l j))))
            (and
              (<
                (+
                  ($unwrap<Int> ($w_modL<$Int> k j))
                  ($unwrap<Int> ($w_modL<$Int> l j)))
                ($w_abs<Int> j))
              (=
                ($w_mod<$Int> i j)
                ($wrap<$Int> (-
                  (+
                    ($unwrap<Int> ($w_modL<$Int> k j))
                    ($unwrap<Int> ($w_modL<$Int> l j)))
                  ($w_abs<Int> j))))))
          (and
            (<
              (- 0 ($w_abs<Int> j))
              (+
                ($unwrap<Int> ($w_modL<$Int> k j))
                ($unwrap<Int> ($w_modL<$Int> l j))))
            (and
              (<
                (+
                  ($unwrap<Int> ($w_modL<$Int> k j))
                  ($unwrap<Int> ($w_modL<$Int> l j)))
                0)
              (=
                ($w_mod<$Int> i j)
                ($wrap<$Int> (+
                  (+
                    ($unwrap<Int> ($w_modL<$Int> k j))
                    ($unwrap<Int> ($w_modL<$Int> l j)))
                  ($w_abs<Int> j))))))))))
  :pattern (($w_mod<$Int> i j) ($w_mod<$Int> k j) ($w_mod<$Int> l j))
  :qid |prog.$w_mod_add|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (= ($w_mod<$Int> ($w_mul<$Int> i j) j) ($wrap<$Int> 0)))
  :pattern (($w_mod<$Int> ($w_mul<$Int> i j) j))
  :qid |prog.$w_mod_mul_basic|)))
(assert (forall ((i $Int) (j $Int) (k $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (and
      (=
        ($w_mod<$Int> ($w_mulI<$Int> i k) j)
        ($w_modL<$Int> ($w_mulL<$Int> ($w_modL<$Int> i j) k) j))
      (and
        (=
          ($w_mod<$Int> ($w_mulI<$Int> i k) j)
          ($w_modL<$Int> ($w_mulL<$Int> i ($w_modL<$Int> k j)) j))
        (=
          ($w_mod<$Int> ($w_mulI<$Int> i k) j)
          ($w_modL<$Int> ($w_mulL<$Int> ($w_modL<$Int> i j) ($w_modL<$Int> k j)) j)))))
  :pattern (($w_mod<$Int> ($w_mulI<$Int> i k) j))
  :qid |prog.$w_mod_mul_mod_noop|)))
(assert (forall ((i $Int) (j $Int) (k $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (=
      ($w_mod<$Int> i j)
      ($w_modL<$Int> ($wrap<$Int> (+
        ($unwrap<Int> ($w_mulL<$Int> k j))
        ($unwrap<Int> i))) j)))
  :pattern (($w_mod<$Int> i j) ($w_mulI<$Int> k j))
  :qid |prog.$w_mod_mul_vanish|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= ($unwrap<Int> j) 0))
    (=
      ($w_div<$Int> i j)
      (ite
        (>= ($unwrap<Int> i) 0)
        ($w_div_down<$Int> i j)
        ($wrap<$Int> (-
          0
          ($unwrap<Int> ($w_div_down<$Int> ($wrap<$Int> (- 0 ($unwrap<Int> i))) j)))))))
  :pattern (($w_div<$Int> i j))
  :qid |prog.$w_div_div_down|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=
    ($w_div_down<$Int> i j)
    (ite
      (>= ($unwrap<Int> j) 0)
      ($w_div_nat<$Int> i j)
      ($wrap<$Int> (-
        0
        ($unwrap<Int> ($w_div_nat<$Int> i ($wrap<$Int> (- 0 ($unwrap<Int> j)))))))))
  :pattern (($w_div_down<$Int> i j))
  :qid |prog.$w_div_down_div_nat|)))
(assert (forall ((i $Int) (j $Int)) (!
  (= ($w_div_nat<$Int> i j) ($w_div_natL<$Int> i j))
  :pattern (($w_div_nat<$Int> i j))
  :qid |prog.$w_div_nat_limited|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (or (= ($unwrap<Int> j) 1) (= ($unwrap<Int> i) 0))
    (= ($w_div_nat<$Int> i j) i))
  :pattern (($w_div_nat<$Int> i j))
  :qid |prog.$w_div_nat_neutral|)))
(assert (forall ((i $Int)) (!
  (=> (> ($unwrap<Int> i) 0) (= ($w_div_nat<$Int> i i) ($wrap<$Int> 1)))
  :pattern (($w_div_nat<$Int> i i))
  :qid |prog.$w_div_nat_self|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (and (>= ($unwrap<Int> i) 0) (> ($unwrap<Int> j) 0))
    (=
      (< ($unwrap<Int> i) ($unwrap<Int> j))
      (= ($w_div_nat<$Int> i j) ($wrap<$Int> 0))))
  :pattern (($w_div_nat<$Int> i j))
  :qid |prog.$w_div_nat_small|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (and
        (>= ($unwrap<Int> i) 0)
        (and
          (> ($unwrap<Int> j) 0)
          (and (>= ($unwrap<Int> k) 0) (>= ($unwrap<Int> l) 0))))
      (= ($unwrap<Int> i) (+ ($unwrap<Int> k) ($unwrap<Int> l))))
    (or
      (and
        (<=
          0
          (+ ($unwrap<Int> ($w_mod<$Int> k j)) ($unwrap<Int> ($w_mod<$Int> l j))))
        (and
          (<
            (+
              ($unwrap<Int> ($w_mod<$Int> k j))
              ($unwrap<Int> ($w_mod<$Int> l j)))
            ($unwrap<Int> j))
          (=
            ($w_div_nat<$Int> i j)
            ($wrap<$Int> (+
              ($unwrap<Int> ($w_div_natL<$Int> k j))
              ($unwrap<Int> ($w_div_natL<$Int> l j)))))))
      (and
        (<=
          ($unwrap<Int> j)
          (+ ($unwrap<Int> ($w_mod<$Int> k j)) ($unwrap<Int> ($w_mod<$Int> l j))))
        (and
          (<
            (+
              ($unwrap<Int> ($w_mod<$Int> k j))
              ($unwrap<Int> ($w_mod<$Int> l j)))
            (* 2 ($unwrap<Int> j)))
          (=
            ($w_div_nat<$Int> i j)
            ($wrap<$Int> (+
              (+
                ($unwrap<Int> ($w_div_natL<$Int> k j))
                ($unwrap<Int> ($w_div_natL<$Int> l j)))
              1)))))))
  :pattern (($w_div_nat<$Int> i j) ($w_div_nat<$Int> k j) ($w_div_nat<$Int> l j))
  :qid |prog.$w_div_nat_dividend_add|)))
(assert (forall ((i $Int) (j $Int) (k $Int)) (!
  (=>
    (and
      (and
        (>= ($unwrap<Int> i) 0)
        (and (> ($unwrap<Int> j) 0) (>= ($unwrap<Int> k) 0)))
      (<= ($unwrap<Int> i) ($unwrap<Int> k)))
    (<=
      ($unwrap<Int> ($w_div_nat<$Int> i j))
      ($unwrap<Int> ($w_div_natL<$Int> k j))))
  :pattern (($w_div_nat<$Int> i j) ($w_div_nat<$Int> k j))
  :qid |prog.$w_div_nat_ordered_by_dividend|)))
(assert (forall ((i $Int) (j $Int) (k $Int)) (!
  (=>
    (and
      (and
        (>= ($unwrap<Int> i) 0)
        (and (> ($unwrap<Int> j) 0) (> ($unwrap<Int> k) 0)))
      (<= ($unwrap<Int> j) ($unwrap<Int> k)))
    (>=
      ($unwrap<Int> ($w_div_nat<$Int> i j))
      ($unwrap<Int> ($w_div_natL<$Int> i k))))
  :pattern (($w_div_nat<$Int> i j) ($w_div_nat<$Int> i k))
  :qid |prog.$w_div_nat_ordered_by_divisor|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (and (> ($unwrap<Int> i) 0) (> ($unwrap<Int> j) 1))
    (< ($unwrap<Int> ($w_div_nat<$Int> i j)) ($unwrap<Int> i)))
  :pattern (($w_div_nat<$Int> i j))
  :qid |prog.$w_div_nat_decrease|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (and (>= ($unwrap<Int> i) 0) (> ($unwrap<Int> j) 0))
    (<= ($unwrap<Int> ($w_div_nat<$Int> i j)) ($unwrap<Int> i)))
  :pattern (($w_div_nat<$Int> i j))
  :qid |prog.$w_div_nat_nonincrease|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=> (not (= ($unwrap<Int> j) 0)) (= ($w_div<$Int> ($w_mulI<$Int> i j) j) i))
  :pattern (($w_div<$Int> ($w_mulI<$Int> i j) j))
  :qid |prog.$w_div_mul|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= ($unwrap<Int> j) 0))
    (or
      (=
        ($sign<Int> ($unwrap<Int> ($w_div<$Int> i j)))
        (* ($sign<Int> ($unwrap<Int> i)) ($sign<Int> ($unwrap<Int> j))))
      (= ($sign<Int> ($unwrap<Int> ($w_div<$Int> i j))) 0)))
  :pattern (($w_div<$Int> i j))
  :qid |prog.$w_div_sign|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= ($unwrap<Int> j) 0))
    (=
      ($unwrap<Int> i)
      (+
        ($unwrap<Int> ($w_mulI<$Int> j ($w_div<$Int> i j)))
        ($unwrap<Int> ($w_mod<$Int> i j)))))
  :pattern (($w_div<$Int> i j) ($w_mod<$Int> i j))
  :qid |prog.$w_div_mod_mul|)))
(assert (and
  (= ($sign<Int> 0) 0)
  (forall (($a Int)) (!
    (and
      (=> (> $a 0) (= ($sign<Int> $a) 1))
      (=> (< $a 0) (= ($sign<Int> $a) (- 0 1))))
    :pattern (($sign<Int> $a))
    ))))
(assert (forall (($a Int) ($b Int) ($r Int)) (!
  (=
    ($div<Int> $a $b $r)
    (+ (div $a $b) (ite (or (>= $a 0) (= (mod $a $b) 0)) 0 ($sign<Int> $b))))
  :pattern (($div<Int> $a $b $r))
  :qid |prog.$div_ax|)))
(assert (forall (($a Int) ($b Int) ($r Int)) (!
  (= ($mod<Int> $a $b $r) (- $a (* ($div<Int> $a $b $r) $b)))
  :pattern (($mod<Int> $a $b $r))
  :qid |prog.$mod_ax|)))
(assert (forall (($a Int)) (!
  (=> (not (= $a 0)) (= ($pow<Int> 0 $a) 0))
  :pattern (($pow<Int> 0 $a))
  :qid |prog.$pow0N_ax|)))
(assert (forall (($a Int)) (!
  (=> (not (= $a 0)) (= ($pow<Int> $a 0) 1))
  :pattern (($pow<Int> $a 0))
  :qid |prog.$powN0_ax|)))
(assert (forall (($a Int) ($b Int)) (!
  (=> (>= $a 0) (>= ($pow<Int> $a $b) 0))
  :pattern (($pow<Int> $a $b))
  :qid |prog.$pow_non_negative_ax|)))
(assert (forall (($a Int) ($b Int)) (!
  (=> (and (> $a 0) (>= $b 0)) (> ($pow<Int> $a $b) 0))
  :pattern (($pow<Int> $a $b))
  :qid |prog.$pow_non_negative_and_non_null_ax|)))
(assert (forall (($a Int) ($s Int)) (!
  (=>
    (> $s 0)
    (= ($floor<Int> $a $s) ($div<Int> (ite (< $a 0) (- $a (- $s 1)) $a) $s 0)))
  :pattern (($floor<Int> $a $s))
  :qid |prog.$floor_ax|)))
(assert (forall (($a Int) ($s Int)) (!
  (=>
    (> $s 0)
    (= ($ceil<Int> $a $s) ($div<Int> (ite (< $a 0) $a (- (+ $a $s) 1)) $s 0)))
  :pattern (($ceil<Int> $a $s))
  :qid |prog.$ceil_ax|)))
(assert (forall (($a Int) ($s Int)) (!
  (>= ($shift<Int> $a $s) 0)
  :pattern (($shift<Int> $a $s))
  :qid |prog.$shift_ax|)))
(assert (forall (($a Int)) (!
  (>= ($bitwise_not<Int> $a) 0)
  :pattern (($bitwise_not<Int> $a))
  :qid |prog.$bitwise_not_ax|)))
(assert (forall (($a Int) ($b Int)) (!
  (>= ($bitwise_and<Int> $a $b) 0)
  :pattern (($bitwise_and<Int> $a $b))
  :qid |prog.$bitwise_and_ax|)))
(assert (forall (($a Int) ($b Int)) (!
  (>= ($bitwise_or<Int> $a $b) 0)
  :pattern (($bitwise_or<Int> $a $b))
  :qid |prog.$bitwise_or_ax|)))
(assert (forall (($a Int) ($b Int)) (!
  (>= ($bitwise_xor<Int> $a $b) 0)
  :pattern (($bitwise_xor<Int> $a $b))
  :qid |prog.$bitwise_xor_ax|)))
(assert (forall (($s $Struct) ($m Int) ($t $Map<Int~_$Struct>)) (!
  (=
    ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
    $t)
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
  :qid |prog.$get_set_0_ax|)))
(assert (forall (($s $Struct) ($m Int) ($n Int) ($t $Map<Int~_$Struct>)) (!
  (=>
    (not (= $m $n))
    (=
      ($struct_loc<Int> $s $m)
      ($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m)))
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m))
  :qid |prog.$get_set_1_ax|)))
(assert (forall (($s $Struct) ($m Int) ($t $Struct)) (!
  (=
    ($struct_get<$Struct> ($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
    $t)
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
  :qid |prog.$get_set_0_ax|)))
(assert (forall (($s $Struct) ($m Int) ($n Int) ($t $Struct)) (!
  (=>
    (not (= $m $n))
    (=
      ($struct_loc<Int> $s $m)
      ($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m)))
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m))
  :qid |prog.$get_set_1_ax|)))
(assert (forall (($f Int) ($t Int)) (!
  (= (Seq_length ($range<Seq<Int>> $f $t)) (- $t $f))
  :pattern ((Seq_length ($range<Seq<Int>> $f $t)))
  :qid |prog.$range_len_ax|)))
(assert (forall (($f Int) ($t Int) ($i Int)) (!
  (=>
    (and (<= 0 $i) (< $i (Seq_length ($range<Seq<Int>> $f $t))))
    (= (Seq_index ($range<Seq<Int>> $f $t) $i) (+ $f $i)))
  :pattern ((Seq_index ($range<Seq<Int>> $f $t) $i))
  :qid |prog.$range_lookup_ax|)))
(assert (forall (($s $Struct) ($m Int) ($t $Map<Int~_Int>)) (!
  (=
    ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
    $t)
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
  :qid |prog.$get_set_0_ax|)))
(assert (forall (($s $Struct) ($m Int) ($n Int) ($t $Map<Int~_Int>)) (!
  (=>
    (not (= $m $n))
    (=
      ($struct_loc<Int> $s $m)
      ($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m)))
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m))
  :qid |prog.$get_set_1_ax|)))
(assert (forall (($s $Struct) ($m Int) ($t Seq<Int>)) (!
  (Seq_equal
    ($struct_get<Seq<Int>> ($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
    $t)
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
  :qid |prog.$get_set_0_ax|)))
(assert (forall (($s $Struct) ($m Int) ($n Int) ($t Seq<Int>)) (!
  (=>
    (not (= $m $n))
    (=
      ($struct_loc<Int> $s $m)
      ($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m)))
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m))
  :qid |prog.$get_set_1_ax|)))
(assert (forall (($arg_0 $Map<Int~_$Struct>) ($arg_1 $Map<Int~_$Struct>) ($arg_2 Int) ($arg_3 Int) ($arg_4 Int) ($arg_5 Int) ($arg_6 Int) ($arg_7 Bool) ($arg_8 $Map<Int~_Int>) ($arg_9 $Map<Int~_Int>) ($arg_10 Bool)) (!
  (and
    (=
      ($struct_get<Int> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10) (- 0 1)))
      9122519725869122497593506884710)
    (and
      (=
        ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10) 0))
        $arg_0)
      (and
        (=
          ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10) 1))
          $arg_1)
        (and
          (=
            ($struct_get<Int> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10) 2))
            $arg_2)
          (and
            (=
              ($struct_get<Int> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10) 3))
              $arg_3)
            (and
              (=
                ($struct_get<Int> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10) 4))
                $arg_4)
              (and
                (=
                  ($struct_get<Int> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10) 5))
                  $arg_5)
                (and
                  (=
                    ($struct_get<Int> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10) 6))
                    $arg_6)
                  (and
                    (=
                      ($struct_get<Bool> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10) 7))
                      $arg_7)
                    (and
                      (=
                        ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10) 8))
                        $arg_8)
                      (and
                        (=
                          ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10) 9))
                          $arg_9)
                        (=
                          ($struct_get<Bool> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10) 10))
                          $arg_10))))))))))))
  :pattern ((s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10))
  :qid |prog.s$struct$self$init$ax|)))
(assert (forall (($l $Struct) ($r $Struct)) (!
  (and
    (= (s$struct$self$eq<Bool> $l $r) (= $l $r))
    (=
      (s$struct$self$eq<Bool> $l $r)
      (and
        (=
          ($struct_get<Int> ($struct_loc<Int> $l (- 0 1)))
          ($struct_get<Int> ($struct_loc<Int> $r (- 0 1))))
        (and
          ($map_eq<Bool> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $l 0)) ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $r 0)))
          (and
            ($map_eq<Bool> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $l 1)) ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $r 1)))
            (and
              (=
                ($struct_get<Int> ($struct_loc<Int> $l 2))
                ($struct_get<Int> ($struct_loc<Int> $r 2)))
              (and
                (=
                  ($struct_get<Int> ($struct_loc<Int> $l 3))
                  ($struct_get<Int> ($struct_loc<Int> $r 3)))
                (and
                  (=
                    ($struct_get<Int> ($struct_loc<Int> $l 4))
                    ($struct_get<Int> ($struct_loc<Int> $r 4)))
                  (and
                    (=
                      ($struct_get<Int> ($struct_loc<Int> $l 5))
                      ($struct_get<Int> ($struct_loc<Int> $r 5)))
                    (and
                      (=
                        ($struct_get<Int> ($struct_loc<Int> $l 6))
                        ($struct_get<Int> ($struct_loc<Int> $r 6)))
                      (and
                        (=
                          ($struct_get<Bool> ($struct_loc<Int> $l 7))
                          ($struct_get<Bool> ($struct_loc<Int> $r 7)))
                        (and
                          ($map_eq<Bool> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $l 8)) ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $r 8)))
                          (and
                            ($map_eq<Bool> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $l 9)) ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $r 9)))
                            (=
                              ($struct_get<Bool> ($struct_loc<Int> $l 10))
                              ($struct_get<Bool> ($struct_loc<Int> $r 10))))))))))))))))
  :pattern ((s$struct$self$eq<Bool> $l $r))
  :qid |prog.s$struct$self$eq$ax|)))
(assert (forall (($arg_0 $Struct)) (!
  (and
    (=
      ($struct_get<Int> ($struct_loc<Int> (s$resource$$creator$init<$Struct> $arg_0) (- 0 1)))
      2567760667165796382711201132846784524754120562)
    (=
      ($struct_get<$Struct> ($struct_loc<Int> (s$resource$$creator$init<$Struct> $arg_0) 0))
      $arg_0))
  :pattern ((s$resource$$creator$init<$Struct> $arg_0))
  :qid |prog.s$resource$$creator$init$ax|)))
(assert (forall (($l $Struct) ($r $Struct)) (!
  (and
    (= (s$resource$$creator$eq<Bool> $l $r) (= $l $r))
    (=
      (s$resource$$creator$eq<Bool> $l $r)
      (and
        (=
          ($struct_get<Int> ($struct_loc<Int> $l (- 0 1)))
          ($struct_get<Int> ($struct_loc<Int> $r (- 0 1))))
        (=
          ($struct_get<$Struct> ($struct_loc<Int> $l 0))
          ($struct_get<$Struct> ($struct_loc<Int> $r 0))))))
  :pattern ((s$resource$$creator$eq<Bool> $l $r))
  :qid |prog.s$resource$$creator$eq$ax|)))
(assert (= ($map_sum<Int> ($map_init<$Map<Int~_Int>> 0)) 0))
(assert (forall (($m $Map<Int~_Int>) ($k Int) ($v Int)) (!
  (=
    ($map_sum<Int> ($map_set<$Map<Int~_Int>> $m $k $v))
    (+ (- ($map_sum<Int> $m) ($map_get<Int> $m $k)) $v))
  :pattern (($map_sum<Int> ($map_set<$Map<Int~_Int>> $m $k $v)))
  :qid |prog.$map_sum_set_ax|)))
(assert (forall (($v Int) ($k Int)) (!
  (= ($map_get<Int> ($map_init<$Map<Int~_Int>> $v) $k) $v)
  :pattern (($map_get<Int> ($map_init<$Map<Int~_Int>> $v) $k))
  :qid |prog.$map_init_ax|)))
(assert (forall (($m $Map<Int~_Int>) ($n $Map<Int~_Int>)) (!
  (and
    (= ($map_eq<Bool> $m $n) (= $m $n))
    (=
      ($map_eq<Bool> $m $n)
      (forall (($k Int)) (!
        (= ($map_get<Int> $m $k) ($map_get<Int> $n $k))
        :pattern (($map_get<Int> $m $k) ($map_get<Int> $n $k))
        ))))
  :pattern (($map_eq<Bool> $m $n))
  :qid |prog.$map_eq_ax|)))
(assert (forall (($m $Map<Int~_Int>) ($k Int) ($v Int) ($kk Int)) (!
  (=
    ($map_get<Int> ($map_set<$Map<Int~_Int>> $m $k $v) $kk)
    (ite (= $k $kk) $v ($map_get<Int> $m $kk)))
  :pattern (($map_get<Int> ($map_set<$Map<Int~_Int>> $m $k $v) $kk))
  :qid |prog.$map_set_ax|)))
(assert (forall (($arg_0 Int) ($arg_1 Bool) ($arg_2 Int) ($arg_3 Int)) (!
  (and
    (=
      ($struct_get<Int> ($struct_loc<Int> (s$struct$Voter$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3) (- 0 1)))
      2335365049822495359383813376730482)
    (and
      (=
        ($struct_get<Int> ($struct_loc<Int> (s$struct$Voter$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3) 0))
        $arg_0)
      (and
        (=
          ($struct_get<Bool> ($struct_loc<Int> (s$struct$Voter$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3) 1))
          $arg_1)
        (and
          (=
            ($struct_get<Int> ($struct_loc<Int> (s$struct$Voter$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3) 2))
            $arg_2)
          (=
            ($struct_get<Int> ($struct_loc<Int> (s$struct$Voter$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3) 3))
            $arg_3)))))
  :pattern ((s$struct$Voter$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3))
  :qid |prog.s$struct$Voter$init$ax|)))
(assert (forall (($l $Struct) ($r $Struct)) (!
  (and
    (= (s$struct$Voter$eq<Bool> $l $r) (= $l $r))
    (=
      (s$struct$Voter$eq<Bool> $l $r)
      (and
        (=
          ($struct_get<Int> ($struct_loc<Int> $l (- 0 1)))
          ($struct_get<Int> ($struct_loc<Int> $r (- 0 1))))
        (and
          (=
            ($struct_get<Int> ($struct_loc<Int> $l 0))
            ($struct_get<Int> ($struct_loc<Int> $r 0)))
          (and
            (=
              ($struct_get<Bool> ($struct_loc<Int> $l 1))
              ($struct_get<Bool> ($struct_loc<Int> $r 1)))
            (and
              (=
                ($struct_get<Int> ($struct_loc<Int> $l 2))
                ($struct_get<Int> ($struct_loc<Int> $r 2)))
              (=
                ($struct_get<Int> ($struct_loc<Int> $l 3))
                ($struct_get<Int> ($struct_loc<Int> $r 3)))))))))
  :pattern ((s$struct$Voter$eq<Bool> $l $r))
  :qid |prog.s$struct$Voter$eq$ax|)))
(assert (not (= (as $self_address<Int>  Int) 0)))
(assert (forall (($arg_0 Seq<Int>) ($arg_1 Int)) (!
  (and
    (=
      ($struct_get<Int> ($struct_loc<Int> (s$struct$Proposal$init<$Struct> $arg_0 $arg_1) (- 0 1)))
      39180923879722766303379432418507016593772)
    (and
      (Seq_equal
        ($struct_get<Seq<Int>> ($struct_loc<Int> (s$struct$Proposal$init<$Struct> $arg_0 $arg_1) 0))
        $arg_0)
      (=
        ($struct_get<Int> ($struct_loc<Int> (s$struct$Proposal$init<$Struct> $arg_0 $arg_1) 1))
        $arg_1)))
  :pattern ((s$struct$Proposal$init<$Struct> $arg_0 $arg_1))
  :qid |prog.s$struct$Proposal$init$ax|)))
(assert (forall (($l $Struct) ($r $Struct)) (!
  (and
    (= (s$struct$Proposal$eq<Bool> $l $r) (= $l $r))
    (=
      (s$struct$Proposal$eq<Bool> $l $r)
      (and
        (=
          ($struct_get<Int> ($struct_loc<Int> $l (- 0 1)))
          ($struct_get<Int> ($struct_loc<Int> $r (- 0 1))))
        (and
          (Seq_equal
            ($struct_get<Seq<Int>> ($struct_loc<Int> $l 0))
            ($struct_get<Seq<Int>> ($struct_loc<Int> $r 0)))
          (=
            ($struct_get<Int> ($struct_loc<Int> $l 1))
            ($struct_get<Int> ($struct_loc<Int> $r 1)))))))
  :pattern ((s$struct$Proposal$eq<Bool> $l $r))
  :qid |prog.s$struct$Proposal$eq$ax|)))
; End preamble
; ------------------------------------------------------------
; State saturation: after preamble
(set-option :timeout 100)
(check-sat)
; unknown
; ------------------------------------------------------------
; Begin function- and predicate-related preamble
; Declaring symbols related to program functions (from verification)
(declare-fun letvar@7@00 ($Snap Int Int) Bool)
(declare-fun letvar@8@00 ($Snap Int Int) Bool)
(declare-fun letvar@9@00 ($Snap Int Int) Int)
(declare-fun letvar@10@00 ($Snap Int Int) Int)
(assert (forall ((s@$ $Snap) (x@0@00 $Struct)) (!
  (= ($pure$success_get%limited s@$ x@0@00) ($pure$success_get s@$ x@0@00))
  :pattern (($pure$success_get s@$ x@0@00))
  :qid |quant-u-858|)))
(assert (forall ((s@$ $Snap) (x@0@00 $Struct)) (!
  ($pure$success_get%stateless x@0@00)
  :pattern (($pure$success_get%limited s@$ x@0@00))
  :qid |quant-u-859|)))
(assert (forall ((s@$ $Snap) (x@0@00 $Struct)) (!
  (=>
    ($pure$success_get%precondition s@$ x@0@00)
    (=
      ($pure$success_get s@$ x@0@00)
      ($struct_get<Bool> ($struct_loc<Int> x@0@00 0))))
  :pattern (($pure$success_get s@$ x@0@00))
  :qid |quant-u-864|)))
(assert (forall ((s@$ $Snap) (x@0@00 $Struct)) (!
  true
  :pattern (($pure$success_get s@$ x@0@00))
  :qid |quant-u-865|)))
(assert (forall ((s@$ $Snap) (x@2@00 $Struct)) (!
  (= ($pure$return_get%limited s@$ x@2@00) ($pure$return_get s@$ x@2@00))
  :pattern (($pure$return_get s@$ x@2@00))
  :qid |quant-u-860|)))
(assert (forall ((s@$ $Snap) (x@2@00 $Struct)) (!
  ($pure$return_get%stateless x@2@00)
  :pattern (($pure$return_get%limited s@$ x@2@00))
  :qid |quant-u-861|)))
(assert (forall ((s@$ $Snap) (x@2@00 $Struct)) (!
  (=>
    ($pure$return_get%precondition s@$ x@2@00)
    (= ($pure$return_get s@$ x@2@00) ($struct_loc<Int> x@2@00 1)))
  :pattern (($pure$return_get s@$ x@2@00))
  :qid |quant-u-866|)))
(assert (forall ((s@$ $Snap) (x@2@00 $Struct)) (!
  true
  :pattern (($pure$return_get s@$ x@2@00))
  :qid |quant-u-867|)))
(assert (forall ((s@$ $Snap) ($x@4@00 Int) ($y@5@00 Int)) (!
  (= ($range_sum%limited s@$ $x@4@00 $y@5@00) ($range_sum s@$ $x@4@00 $y@5@00))
  :pattern (($range_sum s@$ $x@4@00 $y@5@00))
  :qid |quant-u-862|)))
(assert (forall ((s@$ $Snap) ($x@4@00 Int) ($y@5@00 Int)) (!
  ($range_sum%stateless $x@4@00 $y@5@00)
  :pattern (($range_sum%limited s@$ $x@4@00 $y@5@00))
  :qid |quant-u-863|)))
(assert (forall ((s@$ $Snap) ($x@4@00 Int) ($y@5@00 Int)) (!
  (=>
    ($range_sum%precondition s@$ $x@4@00 $y@5@00)
    (=
      ($range_sum s@$ $x@4@00 $y@5@00)
      (let (($x_ge_0 (>= $x@4@00 0))) (let (($y_ge_0 (>= $y@5@00 0))) (let (($x_exclusive (ite
        $x_ge_0
        (div (* (- $x@4@00 1) $x@4@00) 2)
        (div (* (- (- 0 $x@4@00) 1) (- 0 $x@4@00)) 2)))) (let (($y_exclusive (ite
        $y_ge_0
        (div (* (- $y@5@00 1) $y@5@00) 2)
        (div (* (- (- 0 $y@5@00) 1) (- 0 $y@5@00)) 2)))) (ite
        (and $x_ge_0 $y_ge_0)
        (- $y_exclusive $x_exclusive)
        (ite
          (and (not $x_ge_0) $y_ge_0)
          (+ (- $y_exclusive $x_exclusive) $x@4@00)
          (+ (- (- $y_exclusive $y@5@00) $x_exclusive) $x@4@00)))))))))
  :pattern (($range_sum s@$ $x@4@00 $y@5@00))
  :qid |quant-u-868|)))
(assert (forall ((s@$ $Snap) ($x@4@00 Int) ($y@5@00 Int)) (!
  (=>
    ($range_sum%precondition s@$ $x@4@00 $y@5@00)
    (let (($x_ge_0 (>= $x@4@00 0))) (let (($y_ge_0 (>= $y@5@00 0))) (let (($x_exclusive (ite
      $x_ge_0
      (div (* (- $x@4@00 1) $x@4@00) 2)
      (div (* (- (- 0 $x@4@00) 1) (- 0 $x@4@00)) 2)))) (let (($y_exclusive (ite
      $y_ge_0
      (div (* (- $y@5@00 1) $y@5@00) 2)
      (div (* (- (- 0 $y@5@00) 1) (- 0 $y@5@00)) 2)))) true)))))
  :pattern (($range_sum s@$ $x@4@00 $y@5@00))
  :qid |quant-u-869|)))
; End function- and predicate-related preamble
; ------------------------------------------------------------
; ---------- $transitivity_check ----------
(set-option :timeout 0)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var $self$0: $Struct
(declare-const $self$0@0@01 $Struct)
; [exec]
; var $$contracts$0: $Map[Int, $Struct]
(declare-const $$contracts$0@1@01 $Map<Int~_$Struct>)
; [exec]
; var $self$1: $Struct
(declare-const $self$1@2@01 $Struct)
; [exec]
; var $$contracts$1: $Map[Int, $Struct]
(declare-const $$contracts$1@3@01 $Map<Int~_$Struct>)
; [exec]
; var $self$2: $Struct
(declare-const $self$2@4@01 $Struct)
; [exec]
; var $$contracts$2: $Map[Int, $Struct]
(declare-const $$contracts$2@5@01 $Map<Int~_$Struct>)
; [exec]
; var block: $Struct
(declare-const block@6@01 $Struct)
; [exec]
; var $post: Bool
(declare-const $post@7@01 Bool)
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@8@01 $Snap)
(assert (= $t@8@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@9@01 Int)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 0)
(push) ; 4
; [then-branch: 0 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 0)), $q0@9@01), 0))) | live]
; [else-branch: 0 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 0)), $q0@9@01), 0)) | live]
(push) ; 5
; [then-branch: 0 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 0)), $q0@9@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@9@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 0 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 0)), $q0@9@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@9@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@9@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@9@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@9@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@9@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@9@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@9@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@676@11@676@450-aux|)))
(assert (forall (($q0@9@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@9@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@9@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@9@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@676@11@676@450|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@10@01 $Snap)
(assert (= $t@10@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@11@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 0)
(push) ; 4
; [then-branch: 1 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 0)), $q0@11@01), 2))) | live]
; [else-branch: 1 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 0)), $q0@11@01), 2)) | live]
(push) ; 5
; [then-branch: 1 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 0)), $q0@11@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@11@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 1 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 0)), $q0@11@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@11@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@11@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@11@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@11@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@11@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@11@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@11@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@677@11@677@421-aux|)))
(assert (forall (($q0@11@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@11@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@11@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@11@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@677@11@677@421|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@12@01 $Snap)
(assert (= $t@12@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@13@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 0)
(push) ; 4
; [then-branch: 2 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 0)), $q0@13@01), 3))) | live]
; [else-branch: 2 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 0)), $q0@13@01), 3)) | live]
(push) ; 5
; [then-branch: 2 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 0)), $q0@13@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@13@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 2 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 0)), $q0@13@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@13@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@13@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@13@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@13@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@13@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@13@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@13@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@678@11@678@450-aux|)))
(assert (forall (($q0@13@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@13@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@13@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@13@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@678@11@678@450|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@14@01 $Snap)
(assert (= $t@14@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@15@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@15@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@15@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 0)) $q0@15@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@679@11@679@278|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@16@01 $Snap)
(assert (= $t@16@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@17@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@17@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 1)) $q1@17@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 1)) $q1@17@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@680@11@680@252|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@18@01 $Snap)
(assert (= $t@18@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@19@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 1)
(push) ; 4
; [then-branch: 3 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 1)), $q1@19@01), 1))) | live]
; [else-branch: 3 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 1)), $q1@19@01), 1)) | live]
(push) ; 5
; [then-branch: 3 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 1)), $q1@19@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 1)) $q1@19@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 3 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@0@01, 1)), $q1@19@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 1)) $q1@19@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 1)) $q1@19@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 1)) $q1@19@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@19@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 1)) $q1@19@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 1)) $q1@19@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 1)) $q1@19@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@681@11@681@450-aux|)))
(assert (forall (($q1@19@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 1)) $q1@19@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 1)) $q1@19@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 1)) $q1@19@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@681@11@681@450|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@20@01 $Snap)
(assert (= $t@20@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@21@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@21@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 1)) $q1@21@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@0@01 1)) $q1@21@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@682@11@682@285|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$0, 2)): Int) &&
;   ($struct_get($struct_loc($self$0, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@22@01 $Snap)
(assert (= $t@22@01 ($Snap.combine ($Snap.first $t@22@01) ($Snap.second $t@22@01))))
(assert (= ($Snap.first $t@22@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$0, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$0, 2)): Int)
; [eval] $struct_loc($self$0, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 2))))
(assert (= ($Snap.second $t@22@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$0, 2)): Int)
; [eval] $struct_loc($self$0, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$0, 3)): Int) &&
;   ($struct_get($struct_loc($self$0, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@23@01 $Snap)
(assert (= $t@23@01 ($Snap.combine ($Snap.first $t@23@01) ($Snap.second $t@23@01))))
(assert (= ($Snap.first $t@23@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$0, 3)): Int)
; [eval] ($struct_get($struct_loc($self$0, 3)): Int)
; [eval] $struct_loc($self$0, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 3))))
(assert (= ($Snap.second $t@23@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc($self$0, 3)): Int)
; [eval] $struct_loc($self$0, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$0, 4)): Int) &&
;   ($struct_get($struct_loc($self$0, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@24@01 $Snap)
(assert (= $t@24@01 ($Snap.combine ($Snap.first $t@24@01) ($Snap.second $t@24@01))))
(assert (= ($Snap.first $t@24@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$0, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$0, 4)): Int)
; [eval] $struct_loc($self$0, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 4))))
(assert (= ($Snap.second $t@24@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$0, 4)): Int)
; [eval] $struct_loc($self$0, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$0, 5)): Int) &&
;   ($struct_get($struct_loc($self$0, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@25@01 $Snap)
(assert (= $t@25@01 ($Snap.combine ($Snap.first $t@25@01) ($Snap.second $t@25@01))))
(assert (= ($Snap.first $t@25@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$0, 5)): Int)
; [eval] ($struct_get($struct_loc($self$0, 5)): Int)
; [eval] $struct_loc($self$0, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 5))))
(assert (= ($Snap.second $t@25@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$0, 5)): Int)
; [eval] $struct_loc($self$0, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$0, 6)): Int) &&
;   ($struct_get($struct_loc($self$0, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@26@01 $Snap)
(assert (= $t@26@01 ($Snap.combine ($Snap.first $t@26@01) ($Snap.second $t@26@01))))
(assert (= ($Snap.first $t@26@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] $struct_loc($self$0, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 6))))
(assert (= ($Snap.second $t@26@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] $struct_loc($self$0, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@27@01 $Snap)
(assert (= $t@27@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@28@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 8)
(push) ; 4
; [then-branch: 4 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 8)), $q3@28@01)) | live]
; [else-branch: 4 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 8)), $q3@28@01) | live]
(push) ; 5
; [then-branch: 4 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 8)), $q3@28@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 8)) $q3@28@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 4 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 8)), $q3@28@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 8)) $q3@28@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 8)) $q3@28@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 8)) $q3@28@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@28@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 8)) $q3@28@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 8)) $q3@28@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 8)) $q3@28@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@688@11@688@354-aux|)))
(assert (forall (($q3@28@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 8)) $q3@28@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 8)) $q3@28@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 8)) $q3@28@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@688@11@688@354|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])): Int))
(declare-const $t@29@01 $Snap)
(assert (= $t@29@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])): Int))
(declare-const $q3@30@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 8)
; [eval] ($map_sum(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@30@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 8)) $q3@30@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 8)) $q3@30@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@689@11@689@262|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@31@01 $Snap)
(assert (= $t@31@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@32@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 9)
(push) ; 4
; [then-branch: 5 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 9)), $q4@32@01)) | live]
; [else-branch: 5 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 9)), $q4@32@01) | live]
(push) ; 5
; [then-branch: 5 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 9)), $q4@32@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 9)) $q4@32@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 5 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 9)), $q4@32@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 9)) $q4@32@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 9)) $q4@32@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 9)) $q4@32@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@32@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 9)) $q4@32@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 9)) $q4@32@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 9)) $q4@32@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@690@11@690@354-aux|)))
(assert (forall (($q4@32@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 9)) $q4@32@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 9)) $q4@32@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 9)) $q4@32@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@690@11@690@354|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])): Int))
(declare-const $t@33@01 $Snap)
(assert (= $t@33@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])): Int))
(declare-const $q4@34@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 9)
; [eval] ($map_sum(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@34@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 9)) $q4@34@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 9)) $q4@34@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@691@11@691@262|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$0, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@35@01 $Snap)
(assert (= $t@35@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc($self$0, -1)): Int)
; [eval] $struct_loc($self$0, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@36@01 $Snap)
(assert (= $t@36@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@37@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 0)
(push) ; 4
; [then-branch: 6 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 0)), $q0@37@01), 0))) | live]
; [else-branch: 6 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 0)), $q0@37@01), 0)) | live]
(push) ; 5
; [then-branch: 6 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 0)), $q0@37@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@37@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 6 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 0)), $q0@37@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@37@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@37@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@37@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@37@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@37@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@37@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@37@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@693@11@693@450-aux|)))
(assert (forall (($q0@37@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@37@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@37@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@37@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@693@11@693@450|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@38@01 $Snap)
(assert (= $t@38@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@39@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 0)
(push) ; 4
; [then-branch: 7 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 0)), $q0@39@01), 2))) | live]
; [else-branch: 7 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 0)), $q0@39@01), 2)) | live]
(push) ; 5
; [then-branch: 7 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 0)), $q0@39@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@39@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 7 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 0)), $q0@39@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@39@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@39@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@39@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@39@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@39@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@39@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@39@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@694@11@694@421-aux|)))
(assert (forall (($q0@39@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@39@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@39@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@39@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@694@11@694@421|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@40@01 $Snap)
(assert (= $t@40@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@41@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 0)
(push) ; 4
; [then-branch: 8 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 0)), $q0@41@01), 3))) | live]
; [else-branch: 8 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 0)), $q0@41@01), 3)) | live]
(push) ; 5
; [then-branch: 8 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 0)), $q0@41@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@41@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 8 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 0)), $q0@41@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@41@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@41@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@41@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@41@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@41@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@41@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@41@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@695@11@695@450-aux|)))
(assert (forall (($q0@41@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@41@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@41@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@41@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@695@11@695@450|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@42@01 $Snap)
(assert (= $t@42@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@43@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@43@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@43@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 0)) $q0@43@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@696@11@696@278|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@44@01 $Snap)
(assert (= $t@44@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@45@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@45@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 1)) $q1@45@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 1)) $q1@45@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@697@11@697@252|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@46@01 $Snap)
(assert (= $t@46@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@47@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 1)
(push) ; 4
; [then-branch: 9 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 1)), $q1@47@01), 1))) | live]
; [else-branch: 9 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 1)), $q1@47@01), 1)) | live]
(push) ; 5
; [then-branch: 9 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 1)), $q1@47@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 1)) $q1@47@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 9 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@2@01, 1)), $q1@47@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 1)) $q1@47@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 1)) $q1@47@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 1)) $q1@47@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@47@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 1)) $q1@47@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 1)) $q1@47@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 1)) $q1@47@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@698@11@698@450-aux|)))
(assert (forall (($q1@47@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 1)) $q1@47@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 1)) $q1@47@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 1)) $q1@47@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@698@11@698@450|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@48@01 $Snap)
(assert (= $t@48@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@49@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@49@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 1)) $q1@49@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@2@01 1)) $q1@49@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@699@11@699@285|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$1, 2)): Int) &&
;   ($struct_get($struct_loc($self$1, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@50@01 $Snap)
(assert (= $t@50@01 ($Snap.combine ($Snap.first $t@50@01) ($Snap.second $t@50@01))))
(assert (= ($Snap.first $t@50@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$1, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$1, 2)): Int)
; [eval] $struct_loc($self$1, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 2))))
(assert (= ($Snap.second $t@50@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$1, 2)): Int)
; [eval] $struct_loc($self$1, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$1, 3)): Int) &&
;   ($struct_get($struct_loc($self$1, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@51@01 $Snap)
(assert (= $t@51@01 ($Snap.combine ($Snap.first $t@51@01) ($Snap.second $t@51@01))))
(assert (= ($Snap.first $t@51@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$1, 3)): Int)
; [eval] ($struct_get($struct_loc($self$1, 3)): Int)
; [eval] $struct_loc($self$1, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 3))))
(assert (= ($Snap.second $t@51@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc($self$1, 3)): Int)
; [eval] $struct_loc($self$1, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$1, 4)): Int) &&
;   ($struct_get($struct_loc($self$1, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@52@01 $Snap)
(assert (= $t@52@01 ($Snap.combine ($Snap.first $t@52@01) ($Snap.second $t@52@01))))
(assert (= ($Snap.first $t@52@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$1, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$1, 4)): Int)
; [eval] $struct_loc($self$1, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 4))))
(assert (= ($Snap.second $t@52@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$1, 4)): Int)
; [eval] $struct_loc($self$1, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$1, 5)): Int) &&
;   ($struct_get($struct_loc($self$1, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@53@01 $Snap)
(assert (= $t@53@01 ($Snap.combine ($Snap.first $t@53@01) ($Snap.second $t@53@01))))
(assert (= ($Snap.first $t@53@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$1, 5)): Int)
; [eval] ($struct_get($struct_loc($self$1, 5)): Int)
; [eval] $struct_loc($self$1, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 5))))
(assert (= ($Snap.second $t@53@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$1, 5)): Int)
; [eval] $struct_loc($self$1, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$1, 6)): Int) &&
;   ($struct_get($struct_loc($self$1, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@54@01 $Snap)
(assert (= $t@54@01 ($Snap.combine ($Snap.first $t@54@01) ($Snap.second $t@54@01))))
(assert (= ($Snap.first $t@54@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] $struct_loc($self$1, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 6))))
(assert (= ($Snap.second $t@54@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] $struct_loc($self$1, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@55@01 $Snap)
(assert (= $t@55@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@56@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 8)
(push) ; 4
; [then-branch: 10 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 8)), $q3@56@01)) | live]
; [else-branch: 10 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 8)), $q3@56@01) | live]
(push) ; 5
; [then-branch: 10 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 8)), $q3@56@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8)) $q3@56@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 10 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 8)), $q3@56@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8)) $q3@56@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8)) $q3@56@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8)) $q3@56@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@56@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8)) $q3@56@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8)) $q3@56@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8)) $q3@56@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@705@11@705@354-aux|)))
(assert (forall (($q3@56@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8)) $q3@56@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8)) $q3@56@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8)) $q3@56@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@705@11@705@354|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])): Int))
(declare-const $t@57@01 $Snap)
(assert (= $t@57@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])): Int))
(declare-const $q3@58@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 8)
; [eval] ($map_sum(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@58@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8)) $q3@58@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8)) $q3@58@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@706@11@706@262|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@59@01 $Snap)
(assert (= $t@59@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@60@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 9)
(push) ; 4
; [then-branch: 11 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 9)), $q4@60@01)) | live]
; [else-branch: 11 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 9)), $q4@60@01) | live]
(push) ; 5
; [then-branch: 11 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 9)), $q4@60@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 9)) $q4@60@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 11 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 9)), $q4@60@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 9)) $q4@60@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 9)) $q4@60@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 9)) $q4@60@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@60@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 9)) $q4@60@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 9)) $q4@60@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 9)) $q4@60@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@707@11@707@354-aux|)))
(assert (forall (($q4@60@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 9)) $q4@60@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 9)) $q4@60@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 9)) $q4@60@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@707@11@707@354|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])): Int))
(declare-const $t@61@01 $Snap)
(assert (= $t@61@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])): Int))
(declare-const $q4@62@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 9)
; [eval] ($map_sum(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@62@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 9)) $q4@62@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 9)) $q4@62@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@708@11@708@262|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$1, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@63@01 $Snap)
(assert (= $t@63@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc($self$1, -1)): Int)
; [eval] $struct_loc($self$1, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@64@01 $Snap)
(assert (= $t@64@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@65@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$2, 0)
(push) ; 4
; [then-branch: 12 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 0)), $q0@65@01), 0))) | live]
; [else-branch: 12 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 0)), $q0@65@01), 0)) | live]
(push) ; 5
; [then-branch: 12 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 0)), $q0@65@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@65@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 12 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 0)), $q0@65@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@65@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$2, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@65@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@65@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@65@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@65@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@65@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@65@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@710@11@710@450-aux|)))
(assert (forall (($q0@65@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@65@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@65@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@65@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@710@11@710@450|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@66@01 $Snap)
(assert (= $t@66@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@67@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$2, 0)
(push) ; 4
; [then-branch: 13 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 0)), $q0@67@01), 2))) | live]
; [else-branch: 13 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 0)), $q0@67@01), 2)) | live]
(push) ; 5
; [then-branch: 13 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 0)), $q0@67@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@67@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 13 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 0)), $q0@67@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@67@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$2, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@67@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@67@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@67@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@67@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@67@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@67@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@711@11@711@421-aux|)))
(assert (forall (($q0@67@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@67@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@67@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@67@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@711@11@711@421|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@68@01 $Snap)
(assert (= $t@68@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@69@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$2, 0)
(push) ; 4
; [then-branch: 14 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 0)), $q0@69@01), 3))) | live]
; [else-branch: 14 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 0)), $q0@69@01), 3)) | live]
(push) ; 5
; [then-branch: 14 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 0)), $q0@69@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@69@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 14 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 0)), $q0@69@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@69@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$2, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@69@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@69@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@69@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@69@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@69@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@69@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@712@11@712@450-aux|)))
(assert (forall (($q0@69@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@69@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@69@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@69@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@712@11@712@450|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@70@01 $Snap)
(assert (= $t@70@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@71@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$2, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$2, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@71@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@71@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 0)) $q0@71@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@713@11@713@278|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@72@01 $Snap)
(assert (= $t@72@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@73@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$2, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@73@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 1)) $q1@73@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 1)) $q1@73@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@714@11@714@252|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@74@01 $Snap)
(assert (= $t@74@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@75@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$2, 1)
(push) ; 4
; [then-branch: 15 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 1)), $q1@75@01), 1))) | live]
; [else-branch: 15 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 1)), $q1@75@01), 1)) | live]
(push) ; 5
; [then-branch: 15 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 1)), $q1@75@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 1)) $q1@75@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 15 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$2@4@01, 1)), $q1@75@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 1)) $q1@75@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$2, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 1)) $q1@75@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 1)) $q1@75@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@75@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 1)) $q1@75@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 1)) $q1@75@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 1)) $q1@75@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@715@11@715@450-aux|)))
(assert (forall (($q1@75@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 1)) $q1@75@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 1)) $q1@75@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 1)) $q1@75@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@715@11@715@450|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@76@01 $Snap)
(assert (= $t@76@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@77@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$2, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$2, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@77@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 1)) $q1@77@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$2@4@01 1)) $q1@77@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@716@11@716@285|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$2, 2)): Int) &&
;   ($struct_get($struct_loc($self$2, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@78@01 $Snap)
(assert (= $t@78@01 ($Snap.combine ($Snap.first $t@78@01) ($Snap.second $t@78@01))))
(assert (= ($Snap.first $t@78@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$2, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$2, 2)): Int)
; [eval] $struct_loc($self$2, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 2))))
(assert (= ($Snap.second $t@78@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$2, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$2, 2)): Int)
; [eval] $struct_loc($self$2, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$2, 3)): Int) &&
;   ($struct_get($struct_loc($self$2, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@79@01 $Snap)
(assert (= $t@79@01 ($Snap.combine ($Snap.first $t@79@01) ($Snap.second $t@79@01))))
(assert (= ($Snap.first $t@79@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$2, 3)): Int)
; [eval] ($struct_get($struct_loc($self$2, 3)): Int)
; [eval] $struct_loc($self$2, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 3))))
(assert (= ($Snap.second $t@79@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$2, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc($self$2, 3)): Int)
; [eval] $struct_loc($self$2, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$2, 4)): Int) &&
;   ($struct_get($struct_loc($self$2, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@80@01 $Snap)
(assert (= $t@80@01 ($Snap.combine ($Snap.first $t@80@01) ($Snap.second $t@80@01))))
(assert (= ($Snap.first $t@80@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$2, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$2, 4)): Int)
; [eval] $struct_loc($self$2, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 4))))
(assert (= ($Snap.second $t@80@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$2, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$2, 4)): Int)
; [eval] $struct_loc($self$2, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$2, 5)): Int) &&
;   ($struct_get($struct_loc($self$2, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@81@01 $Snap)
(assert (= $t@81@01 ($Snap.combine ($Snap.first $t@81@01) ($Snap.second $t@81@01))))
(assert (= ($Snap.first $t@81@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$2, 5)): Int)
; [eval] ($struct_get($struct_loc($self$2, 5)): Int)
; [eval] $struct_loc($self$2, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 5))))
(assert (= ($Snap.second $t@81@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$2, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$2, 5)): Int)
; [eval] $struct_loc($self$2, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$2, 6)): Int) &&
;   ($struct_get($struct_loc($self$2, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@82@01 $Snap)
(assert (= $t@82@01 ($Snap.combine ($Snap.first $t@82@01) ($Snap.second $t@82@01))))
(assert (= ($Snap.first $t@82@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$2, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$2, 6)): Int)
; [eval] $struct_loc($self$2, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 6))))
(assert (= ($Snap.second $t@82@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$2, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$2, 6)): Int)
; [eval] $struct_loc($self$2, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@83@01 $Snap)
(assert (= $t@83@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@84@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($self$2, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 8)
(push) ; 4
; [then-branch: 16 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 8)), $q3@84@01)) | live]
; [else-branch: 16 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 8)), $q3@84@01) | live]
(push) ; 5
; [then-branch: 16 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 8)), $q3@84@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 8)) $q3@84@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 16 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 8)), $q3@84@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 8)) $q3@84@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($self$2, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 8)) $q3@84@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 8)) $q3@84@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@84@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 8)) $q3@84@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 8)) $q3@84@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 8)) $q3@84@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@722@11@722@354-aux|)))
(assert (forall (($q3@84@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 8)) $q3@84@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 8)) $q3@84@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 8)) $q3@84@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@722@11@722@354|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int])): Int))
(declare-const $t@85@01 $Snap)
(assert (= $t@85@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int])): Int))
(declare-const $q3@86@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($self$2, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 8)
; [eval] ($map_sum(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$2, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@86@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 8)) $q3@86@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 8)) $q3@86@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@723@11@723@262|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@87@01 $Snap)
(assert (= $t@87@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@88@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($self$2, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 9)
(push) ; 4
; [then-branch: 17 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 9)), $q4@88@01)) | live]
; [else-branch: 17 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 9)), $q4@88@01) | live]
(push) ; 5
; [then-branch: 17 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 9)), $q4@88@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 9)) $q4@88@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 17 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 9)), $q4@88@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 9)) $q4@88@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($self$2, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 9)) $q4@88@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 9)) $q4@88@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@88@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 9)) $q4@88@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 9)) $q4@88@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 9)) $q4@88@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@724@11@724@354-aux|)))
(assert (forall (($q4@88@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 9)) $q4@88@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 9)) $q4@88@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 9)) $q4@88@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@724@11@724@354|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int])): Int))
(declare-const $t@89@01 $Snap)
(assert (= $t@89@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int])): Int))
(declare-const $q4@90@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($self$2, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 9)
; [eval] ($map_sum(($struct_get($struct_loc($self$2, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$2, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@90@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 9)) $q4@90@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 9)) $q4@90@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@725@11@725@262|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$2, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@91@01 $Snap)
(assert (= $t@91@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$2, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc($self$2, -1)): Int)
; [eval] $struct_loc($self$2, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@92@01 $Snap)
(assert (= $t@92@01 ($Snap.combine ($Snap.first $t@92@01) ($Snap.second $t@92@01))))
(assert (= ($Snap.first $t@92@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@6@01 0))))
(assert (= ($Snap.second $t@92@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@6@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@93@01 $Snap)
(assert (= $t@93@01 ($Snap.combine ($Snap.first $t@93@01) ($Snap.second $t@93@01))))
(assert (= ($Snap.first $t@93@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@6@01 1))))
(assert (= ($Snap.second $t@93@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@6@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@94@01 $Snap)
(assert (= $t@94@01 ($Snap.combine ($Snap.first $t@94@01) ($Snap.second $t@94@01))))
(assert (= ($Snap.first $t@94@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@6@01 2))))
(assert (= ($Snap.second $t@94@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@6@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@95@01 $Snap)
(assert (= $t@95@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@6@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@96@01 $Snap)
(assert (= $t@96@01 ($Snap.combine ($Snap.first $t@96@01) ($Snap.second $t@96@01))))
(assert (= ($Snap.first $t@96@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@6@01 4))))
(assert (= ($Snap.second $t@96@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@6@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@97@01 $Snap)
(assert (= $t@97@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@6@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int))
(declare-const $t@98@01 $Snap)
(assert (= $t@98@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int))
(declare-const $a@99@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 8)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int))
(declare-const $t@100@01 $Snap)
(assert (= $t@100@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int))
(declare-const $a@101@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 8)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($a@101@01 Int)) (!
  (>=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8)) $a@101@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 8)) $a@101@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8)) $a@101@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@734@11@734@263|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int))
(declare-const $t@102@01 $Snap)
(assert (= $t@102@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int))
(declare-const $a@103@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$2, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 8)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($a@103@01 Int)) (!
  (>=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 8)) $a@103@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 8)) $a@103@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 8)) $a@103@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@735@11@735@263|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
(pop) ; 2
(pop) ; 1
; ---------- $reflexivity_check ----------
(set-option :timeout 0)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var $self$0: $Struct
(declare-const $self$0@104@01 $Struct)
; [exec]
; var $$contracts$0: $Map[Int, $Struct]
(declare-const $$contracts$0@105@01 $Map<Int~_$Struct>)
; [exec]
; var $self$1: $Struct
(declare-const $self$1@106@01 $Struct)
; [exec]
; var $$contracts$1: $Map[Int, $Struct]
(declare-const $$contracts$1@107@01 $Map<Int~_$Struct>)
; [exec]
; var block: $Struct
(declare-const block@108@01 $Struct)
; [exec]
; var $post: Bool
(declare-const $post@109@01 Bool)
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@110@01 $Snap)
(assert (= $t@110@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@111@01 Int)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 0)
(push) ; 4
; [then-branch: 18 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 0)), $q0@111@01), 0))) | live]
; [else-branch: 18 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 0)), $q0@111@01), 0)) | live]
(push) ; 5
; [then-branch: 18 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 0)), $q0@111@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@111@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 18 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 0)), $q0@111@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@111@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@111@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@111@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@111@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@111@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@111@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@111@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@746@11@746@450-aux|)))
(assert (forall (($q0@111@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@111@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@111@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@111@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@746@11@746@450|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@112@01 $Snap)
(assert (= $t@112@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@113@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 0)
(push) ; 4
; [then-branch: 19 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 0)), $q0@113@01), 2))) | live]
; [else-branch: 19 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 0)), $q0@113@01), 2)) | live]
(push) ; 5
; [then-branch: 19 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 0)), $q0@113@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@113@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 19 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 0)), $q0@113@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@113@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@113@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@113@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@113@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@113@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@113@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@113@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@747@11@747@421-aux|)))
(assert (forall (($q0@113@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@113@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@113@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@113@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@747@11@747@421|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@114@01 $Snap)
(assert (= $t@114@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@115@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 0)
(push) ; 4
; [then-branch: 20 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 0)), $q0@115@01), 3))) | live]
; [else-branch: 20 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 0)), $q0@115@01), 3)) | live]
(push) ; 5
; [then-branch: 20 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 0)), $q0@115@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@115@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 20 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 0)), $q0@115@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@115@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@115@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@115@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@115@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@115@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@115@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@115@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@748@11@748@450-aux|)))
(assert (forall (($q0@115@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@115@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@115@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@115@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@748@11@748@450|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@116@01 $Snap)
(assert (= $t@116@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@117@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@117@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@117@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 0)) $q0@117@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@749@11@749@278|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@118@01 $Snap)
(assert (= $t@118@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@119@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@119@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 1)) $q1@119@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 1)) $q1@119@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@750@11@750@252|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@120@01 $Snap)
(assert (= $t@120@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@121@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 1)
(push) ; 4
; [then-branch: 21 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 1)), $q1@121@01), 1))) | live]
; [else-branch: 21 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 1)), $q1@121@01), 1)) | live]
(push) ; 5
; [then-branch: 21 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 1)), $q1@121@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 1)) $q1@121@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 21 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$0@104@01, 1)), $q1@121@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 1)) $q1@121@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 1)) $q1@121@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 1)) $q1@121@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@121@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 1)) $q1@121@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 1)) $q1@121@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 1)) $q1@121@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@751@11@751@450-aux|)))
(assert (forall (($q1@121@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 1)) $q1@121@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 1)) $q1@121@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 1)) $q1@121@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@751@11@751@450|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@122@01 $Snap)
(assert (= $t@122@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@123@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$0, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$0, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@123@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 1)) $q1@123@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$0@104@01 1)) $q1@123@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@752@11@752@285|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$0, 2)): Int) &&
;   ($struct_get($struct_loc($self$0, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@124@01 $Snap)
(assert (= $t@124@01 ($Snap.combine ($Snap.first $t@124@01) ($Snap.second $t@124@01))))
(assert (= ($Snap.first $t@124@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$0, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$0, 2)): Int)
; [eval] $struct_loc($self$0, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 2))))
(assert (= ($Snap.second $t@124@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$0, 2)): Int)
; [eval] $struct_loc($self$0, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$0, 3)): Int) &&
;   ($struct_get($struct_loc($self$0, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@125@01 $Snap)
(assert (= $t@125@01 ($Snap.combine ($Snap.first $t@125@01) ($Snap.second $t@125@01))))
(assert (= ($Snap.first $t@125@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$0, 3)): Int)
; [eval] ($struct_get($struct_loc($self$0, 3)): Int)
; [eval] $struct_loc($self$0, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 3))))
(assert (= ($Snap.second $t@125@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc($self$0, 3)): Int)
; [eval] $struct_loc($self$0, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$0, 4)): Int) &&
;   ($struct_get($struct_loc($self$0, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@126@01 $Snap)
(assert (= $t@126@01 ($Snap.combine ($Snap.first $t@126@01) ($Snap.second $t@126@01))))
(assert (= ($Snap.first $t@126@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$0, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$0, 4)): Int)
; [eval] $struct_loc($self$0, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 4))))
(assert (= ($Snap.second $t@126@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$0, 4)): Int)
; [eval] $struct_loc($self$0, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$0, 5)): Int) &&
;   ($struct_get($struct_loc($self$0, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@127@01 $Snap)
(assert (= $t@127@01 ($Snap.combine ($Snap.first $t@127@01) ($Snap.second $t@127@01))))
(assert (= ($Snap.first $t@127@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$0, 5)): Int)
; [eval] ($struct_get($struct_loc($self$0, 5)): Int)
; [eval] $struct_loc($self$0, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 5))))
(assert (= ($Snap.second $t@127@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$0, 5)): Int)
; [eval] $struct_loc($self$0, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$0, 6)): Int) &&
;   ($struct_get($struct_loc($self$0, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@128@01 $Snap)
(assert (= $t@128@01 ($Snap.combine ($Snap.first $t@128@01) ($Snap.second $t@128@01))))
(assert (= ($Snap.first $t@128@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] $struct_loc($self$0, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 6))))
(assert (= ($Snap.second $t@128@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] $struct_loc($self$0, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@129@01 $Snap)
(assert (= $t@129@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@130@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 8)
(push) ; 4
; [then-branch: 22 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 8)), $q3@130@01)) | live]
; [else-branch: 22 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 8)), $q3@130@01) | live]
(push) ; 5
; [then-branch: 22 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 8)), $q3@130@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 8)) $q3@130@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 22 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 8)), $q3@130@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 8)) $q3@130@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 8)) $q3@130@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 8)) $q3@130@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@130@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 8)) $q3@130@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 8)) $q3@130@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 8)) $q3@130@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@758@11@758@354-aux|)))
(assert (forall (($q3@130@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 8)) $q3@130@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 8)) $q3@130@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 8)) $q3@130@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@758@11@758@354|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])): Int))
(declare-const $t@131@01 $Snap)
(assert (= $t@131@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])): Int))
(declare-const $q3@132@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 8)
; [eval] ($map_sum(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@132@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 8)) $q3@132@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 8)) $q3@132@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@759@11@759@262|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@133@01 $Snap)
(assert (= $t@133@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@134@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 9)
(push) ; 4
; [then-branch: 23 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 9)), $q4@134@01)) | live]
; [else-branch: 23 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 9)), $q4@134@01) | live]
(push) ; 5
; [then-branch: 23 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 9)), $q4@134@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 9)) $q4@134@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 23 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 9)), $q4@134@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 9)) $q4@134@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 9)) $q4@134@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 9)) $q4@134@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@134@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 9)) $q4@134@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 9)) $q4@134@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 9)) $q4@134@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@760@11@760@354-aux|)))
(assert (forall (($q4@134@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 9)) $q4@134@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 9)) $q4@134@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 9)) $q4@134@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@760@11@760@354|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])): Int))
(declare-const $t@135@01 $Snap)
(assert (= $t@135@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])): Int))
(declare-const $q4@136@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 9)
; [eval] ($map_sum(($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$0, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@136@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 9)) $q4@136@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 9)) $q4@136@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@761@11@761@262|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$0, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@137@01 $Snap)
(assert (= $t@137@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc($self$0, -1)): Int)
; [eval] $struct_loc($self$0, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@138@01 $Snap)
(assert (= $t@138@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@139@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 0)
(push) ; 4
; [then-branch: 24 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 0)), $q0@139@01), 0))) | live]
; [else-branch: 24 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 0)), $q0@139@01), 0)) | live]
(push) ; 5
; [then-branch: 24 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 0)), $q0@139@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@139@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 24 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 0)), $q0@139@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@139@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@139@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@139@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@139@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@139@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@139@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@139@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@763@11@763@450-aux|)))
(assert (forall (($q0@139@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@139@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@139@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@139@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@763@11@763@450|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@140@01 $Snap)
(assert (= $t@140@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@141@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 0)
(push) ; 4
; [then-branch: 25 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 0)), $q0@141@01), 2))) | live]
; [else-branch: 25 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 0)), $q0@141@01), 2)) | live]
(push) ; 5
; [then-branch: 25 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 0)), $q0@141@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@141@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 25 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 0)), $q0@141@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@141@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@141@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@141@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@141@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@141@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@141@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@141@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@764@11@764@421-aux|)))
(assert (forall (($q0@141@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@141@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@141@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@141@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@764@11@764@421|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@142@01 $Snap)
(assert (= $t@142@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@143@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 0)
(push) ; 4
; [then-branch: 26 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 0)), $q0@143@01), 3))) | live]
; [else-branch: 26 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 0)), $q0@143@01), 3)) | live]
(push) ; 5
; [then-branch: 26 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 0)), $q0@143@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@143@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 26 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 0)), $q0@143@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@143@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@143@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@143@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@143@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@143@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@143@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@143@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@765@11@765@450-aux|)))
(assert (forall (($q0@143@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@143@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@143@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@143@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@765@11@765@450|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@144@01 $Snap)
(assert (= $t@144@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@145@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@145@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@145@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 0)) $q0@145@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@766@11@766@278|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@146@01 $Snap)
(assert (= $t@146@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@147@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@147@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 1)) $q1@147@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 1)) $q1@147@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@767@11@767@252|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@148@01 $Snap)
(assert (= $t@148@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@149@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 1)
(push) ; 4
; [then-branch: 27 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 1)), $q1@149@01), 1))) | live]
; [else-branch: 27 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 1)), $q1@149@01), 1)) | live]
(push) ; 5
; [then-branch: 27 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 1)), $q1@149@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 1)) $q1@149@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 27 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($self$1@106@01, 1)), $q1@149@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 1)) $q1@149@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 1)) $q1@149@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 1)) $q1@149@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@149@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 1)) $q1@149@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 1)) $q1@149@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 1)) $q1@149@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@768@11@768@450-aux|)))
(assert (forall (($q1@149@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 1)) $q1@149@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 1)) $q1@149@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 1)) $q1@149@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@768@11@768@450|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@150@01 $Snap)
(assert (= $t@150@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@151@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($self$1, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($self$1, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@151@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 1)) $q1@151@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $self$1@106@01 1)) $q1@151@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@769@11@769@285|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$1, 2)): Int) &&
;   ($struct_get($struct_loc($self$1, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@152@01 $Snap)
(assert (= $t@152@01 ($Snap.combine ($Snap.first $t@152@01) ($Snap.second $t@152@01))))
(assert (= ($Snap.first $t@152@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$1, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$1, 2)): Int)
; [eval] $struct_loc($self$1, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 2))))
(assert (= ($Snap.second $t@152@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$1, 2)): Int)
; [eval] $struct_loc($self$1, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$1, 3)): Int) &&
;   ($struct_get($struct_loc($self$1, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@153@01 $Snap)
(assert (= $t@153@01 ($Snap.combine ($Snap.first $t@153@01) ($Snap.second $t@153@01))))
(assert (= ($Snap.first $t@153@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$1, 3)): Int)
; [eval] ($struct_get($struct_loc($self$1, 3)): Int)
; [eval] $struct_loc($self$1, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 3))))
(assert (= ($Snap.second $t@153@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc($self$1, 3)): Int)
; [eval] $struct_loc($self$1, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$1, 4)): Int) &&
;   ($struct_get($struct_loc($self$1, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@154@01 $Snap)
(assert (= $t@154@01 ($Snap.combine ($Snap.first $t@154@01) ($Snap.second $t@154@01))))
(assert (= ($Snap.first $t@154@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$1, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$1, 4)): Int)
; [eval] $struct_loc($self$1, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 4))))
(assert (= ($Snap.second $t@154@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$1, 4)): Int)
; [eval] $struct_loc($self$1, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$1, 5)): Int) &&
;   ($struct_get($struct_loc($self$1, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@155@01 $Snap)
(assert (= $t@155@01 ($Snap.combine ($Snap.first $t@155@01) ($Snap.second $t@155@01))))
(assert (= ($Snap.first $t@155@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$1, 5)): Int)
; [eval] ($struct_get($struct_loc($self$1, 5)): Int)
; [eval] $struct_loc($self$1, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 5))))
(assert (= ($Snap.second $t@155@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$1, 5)): Int)
; [eval] $struct_loc($self$1, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$1, 6)): Int) &&
;   ($struct_get($struct_loc($self$1, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@156@01 $Snap)
(assert (= $t@156@01 ($Snap.combine ($Snap.first $t@156@01) ($Snap.second $t@156@01))))
(assert (= ($Snap.first $t@156@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] $struct_loc($self$1, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 6))))
(assert (= ($Snap.second $t@156@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] $struct_loc($self$1, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@157@01 $Snap)
(assert (= $t@157@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@158@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 8)
(push) ; 4
; [then-branch: 28 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 8)), $q3@158@01)) | live]
; [else-branch: 28 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 8)), $q3@158@01) | live]
(push) ; 5
; [then-branch: 28 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 8)), $q3@158@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 8)) $q3@158@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 28 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 8)), $q3@158@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 8)) $q3@158@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 8)) $q3@158@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 8)) $q3@158@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@158@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 8)) $q3@158@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 8)) $q3@158@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 8)) $q3@158@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@775@11@775@354-aux|)))
(assert (forall (($q3@158@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 8)) $q3@158@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 8)) $q3@158@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 8)) $q3@158@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@775@11@775@354|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])): Int))
(declare-const $t@159@01 $Snap)
(assert (= $t@159@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])): Int))
(declare-const $q3@160@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 8)
; [eval] ($map_sum(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@160@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 8)) $q3@160@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 8)) $q3@160@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@776@11@776@262|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@161@01 $Snap)
(assert (= $t@161@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@162@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 9)
(push) ; 4
; [then-branch: 29 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 9)), $q4@162@01)) | live]
; [else-branch: 29 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 9)), $q4@162@01) | live]
(push) ; 5
; [then-branch: 29 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 9)), $q4@162@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 9)) $q4@162@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 29 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 9)), $q4@162@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 9)) $q4@162@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 9)) $q4@162@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 9)) $q4@162@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@162@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 9)) $q4@162@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 9)) $q4@162@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 9)) $q4@162@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@777@11@777@354-aux|)))
(assert (forall (($q4@162@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 9)) $q4@162@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 9)) $q4@162@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 9)) $q4@162@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@777@11@777@354|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])): Int))
(declare-const $t@163@01 $Snap)
(assert (= $t@163@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])): Int))
(declare-const $q4@164@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 9)
; [eval] ($map_sum(($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 9)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@164@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 9)) $q4@164@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 9)) $q4@164@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@778@11@778@262|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$1, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@165@01 $Snap)
(assert (= $t@165@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc($self$1, -1)): Int)
; [eval] $struct_loc($self$1, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@166@01 $Snap)
(assert (= $t@166@01 ($Snap.combine ($Snap.first $t@166@01) ($Snap.second $t@166@01))))
(assert (= ($Snap.first $t@166@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@108@01 0))))
(assert (= ($Snap.second $t@166@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@108@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@167@01 $Snap)
(assert (= $t@167@01 ($Snap.combine ($Snap.first $t@167@01) ($Snap.second $t@167@01))))
(assert (= ($Snap.first $t@167@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@108@01 1))))
(assert (= ($Snap.second $t@167@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@108@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@168@01 $Snap)
(assert (= $t@168@01 ($Snap.combine ($Snap.first $t@168@01) ($Snap.second $t@168@01))))
(assert (= ($Snap.first $t@168@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@108@01 2))))
(assert (= ($Snap.second $t@168@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@108@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@169@01 $Snap)
(assert (= $t@169@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@108@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@170@01 $Snap)
(assert (= $t@170@01 ($Snap.combine ($Snap.first $t@170@01) ($Snap.second $t@170@01))))
(assert (= ($Snap.first $t@170@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@108@01 4))))
(assert (= ($Snap.second $t@170@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@108@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@171@01 $Snap)
(assert (= $t@171@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@108@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int))
(declare-const $t@172@01 $Snap)
(assert (= $t@172@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int))
(declare-const $a@173@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$1, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 8)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$0, 8)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($a@173@01 Int)) (!
  (>=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 8)) $a@173@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 8)) $a@173@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 8)) $a@173@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@786@11@786@263|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
(pop) ; 2
(pop) ; 1
; ---------- $forced_ether_check ----------
(set-option :timeout 0)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var self: $Struct
(declare-const self@174@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@175@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@176@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@177@01 $Map<Int~_$Struct>)
; [exec]
; var $post: Bool
(declare-const $post@178@01 Bool)
; [exec]
; var $havoc: Int
(declare-const $havoc@179@01 Int)
; [exec]
; var block: $Struct
(declare-const block@180@01 $Struct)
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@181@01 $Snap)
(assert (= $t@181@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@182@01 Int)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 30 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 0)), $q0@182@01), 0))) | live]
; [else-branch: 30 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 0)), $q0@182@01), 0)) | live]
(push) ; 5
; [then-branch: 30 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 0)), $q0@182@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@182@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 30 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 0)), $q0@182@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@182@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@182@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@182@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@182@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@182@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@182@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@182@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@798@11@798@441-aux|)))
(assert (forall (($q0@182@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@182@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@182@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@182@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@798@11@798@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@183@01 $Snap)
(assert (= $t@183@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@184@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 31 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 0)), $q0@184@01), 2))) | live]
; [else-branch: 31 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 0)), $q0@184@01), 2)) | live]
(push) ; 5
; [then-branch: 31 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 0)), $q0@184@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@184@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 31 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 0)), $q0@184@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@184@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@184@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@184@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@184@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@184@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@184@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@184@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@799@11@799@412-aux|)))
(assert (forall (($q0@184@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@184@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@184@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@184@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@799@11@799@412|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@185@01 $Snap)
(assert (= $t@185@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@186@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 32 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 0)), $q0@186@01), 3))) | live]
; [else-branch: 32 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 0)), $q0@186@01), 3)) | live]
(push) ; 5
; [then-branch: 32 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 0)), $q0@186@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@186@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 32 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 0)), $q0@186@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@186@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@186@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@186@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@186@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@186@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@186@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@186@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@800@11@800@441-aux|)))
(assert (forall (($q0@186@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@186@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@186@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@186@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@800@11@800@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@187@01 $Snap)
(assert (= $t@187@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@188@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@188@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@188@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 0)) $q0@188@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@801@11@801@272|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@189@01 $Snap)
(assert (= $t@189@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@190@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@190@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 1)) $q1@190@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 1)) $q1@190@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@802@11@802@246|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@191@01 $Snap)
(assert (= $t@191@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@192@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(push) ; 4
; [then-branch: 33 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 1)), $q1@192@01), 1))) | live]
; [else-branch: 33 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 1)), $q1@192@01), 1)) | live]
(push) ; 5
; [then-branch: 33 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 1)), $q1@192@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 1)) $q1@192@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 33 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@174@01, 1)), $q1@192@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 1)) $q1@192@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 1)) $q1@192@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 1)) $q1@192@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@192@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 1)) $q1@192@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 1)) $q1@192@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 1)) $q1@192@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@803@11@803@441-aux|)))
(assert (forall (($q1@192@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 1)) $q1@192@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 1)) $q1@192@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 1)) $q1@192@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@803@11@803@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@193@01 $Snap)
(assert (= $t@193@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@194@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@194@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 1)) $q1@194@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@174@01 1)) $q1@194@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@804@11@804@279|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@195@01 $Snap)
(assert (= $t@195@01 ($Snap.combine ($Snap.first $t@195@01) ($Snap.second $t@195@01))))
(assert (= ($Snap.first $t@195@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@174@01 2))))
(assert (= ($Snap.second $t@195@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@174@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 3)): Int) &&
;   ($struct_get($struct_loc(self, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@196@01 $Snap)
(assert (= $t@196@01 ($Snap.combine ($Snap.first $t@196@01) ($Snap.second $t@196@01))))
(assert (= ($Snap.first $t@196@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 3)): Int)
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@174@01 3))))
(assert (= ($Snap.second $t@196@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@174@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 4)): Int) &&
;   ($struct_get($struct_loc(self, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@197@01 $Snap)
(assert (= $t@197@01 ($Snap.combine ($Snap.first $t@197@01) ($Snap.second $t@197@01))))
(assert (= ($Snap.first $t@197@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@174@01 4))))
(assert (= ($Snap.second $t@197@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@174@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@198@01 $Snap)
(assert (= $t@198@01 ($Snap.combine ($Snap.first $t@198@01) ($Snap.second $t@198@01))))
(assert (= ($Snap.first $t@198@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@174@01 5))))
(assert (= ($Snap.second $t@198@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@174@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@199@01 $Snap)
(assert (= $t@199@01 ($Snap.combine ($Snap.first $t@199@01) ($Snap.second $t@199@01))))
(assert (= ($Snap.first $t@199@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@174@01 6))))
(assert (= ($Snap.second $t@199@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@174@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@200@01 $Snap)
(assert (= $t@200@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@201@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(push) ; 4
; [then-branch: 34 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@174@01, 8)), $q3@201@01)) | live]
; [else-branch: 34 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@174@01, 8)), $q3@201@01) | live]
(push) ; 5
; [then-branch: 34 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@174@01, 8)), $q3@201@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 8)) $q3@201@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 34 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@174@01, 8)), $q3@201@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 8)) $q3@201@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 8)) $q3@201@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 8)) $q3@201@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@201@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 8)) $q3@201@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 8)) $q3@201@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 8)) $q3@201@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@810@11@810@345-aux|)))
(assert (forall (($q3@201@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 8)) $q3@201@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 8)) $q3@201@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 8)) $q3@201@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@810@11@810@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $t@202@01 $Snap)
(assert (= $t@202@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $q3@203@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@203@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 8)) $q3@203@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 8)) $q3@203@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@811@11@811@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@204@01 $Snap)
(assert (= $t@204@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@205@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(push) ; 4
; [then-branch: 35 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@174@01, 9)), $q4@205@01)) | live]
; [else-branch: 35 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@174@01, 9)), $q4@205@01) | live]
(push) ; 5
; [then-branch: 35 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@174@01, 9)), $q4@205@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 9)) $q4@205@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 35 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@174@01, 9)), $q4@205@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 9)) $q4@205@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 9)) $q4@205@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 9)) $q4@205@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@205@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 9)) $q4@205@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 9)) $q4@205@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 9)) $q4@205@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@812@11@812@345-aux|)))
(assert (forall (($q4@205@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 9)) $q4@205@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 9)) $q4@205@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 9)) $q4@205@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@812@11@812@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $t@206@01 $Snap)
(assert (= $t@206@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $q4@207@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
; [eval] ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@207@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 9)) $q4@207@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@174@01 9)) $q4@207@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@813@11@813@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@208@01 $Snap)
(assert (= $t@208@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@174@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@209@01 $Snap)
(assert (= $t@209@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@210@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($pre_self, 0)
(push) ; 4
; [then-branch: 36 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 0)), $q0@210@01), 0))) | live]
; [else-branch: 36 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 0)), $q0@210@01), 0)) | live]
(push) ; 5
; [then-branch: 36 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 0)), $q0@210@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@210@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 36 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 0)), $q0@210@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@210@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($pre_self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@210@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@210@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@210@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@210@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@210@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@210@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@815@11@815@456-aux|)))
(assert (forall (($q0@210@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@210@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@210@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@210@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@815@11@815@456|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@211@01 $Snap)
(assert (= $t@211@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@212@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($pre_self, 0)
(push) ; 4
; [then-branch: 37 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 0)), $q0@212@01), 2))) | live]
; [else-branch: 37 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 0)), $q0@212@01), 2)) | live]
(push) ; 5
; [then-branch: 37 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 0)), $q0@212@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@212@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 37 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 0)), $q0@212@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@212@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($pre_self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@212@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@212@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@212@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@212@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@212@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@212@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@816@11@816@427-aux|)))
(assert (forall (($q0@212@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@212@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@212@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@212@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@816@11@816@427|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@213@01 $Snap)
(assert (= $t@213@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@214@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($pre_self, 0)
(push) ; 4
; [then-branch: 38 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 0)), $q0@214@01), 3))) | live]
; [else-branch: 38 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 0)), $q0@214@01), 3)) | live]
(push) ; 5
; [then-branch: 38 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 0)), $q0@214@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@214@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 38 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 0)), $q0@214@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@214@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($pre_self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@214@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@214@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@214@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@214@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@214@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@214@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@817@11@817@456-aux|)))
(assert (forall (($q0@214@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@214@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@214@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@214@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@817@11@817@456|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@215@01 $Snap)
(assert (= $t@215@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@216@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc($pre_self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc($pre_self, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@216@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@216@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 0)) $q0@216@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@818@11@818@282|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self,
;     1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@217@01 $Snap)
(assert (= $t@217@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@218@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($pre_self, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@218@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 1)) $q1@218@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 1)) $q1@218@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@819@11@819@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@219@01 $Snap)
(assert (= $t@219@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@220@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($pre_self, 1)
(push) ; 4
; [then-branch: 39 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 1)), $q1@220@01), 1))) | live]
; [else-branch: 39 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 1)), $q1@220@01), 1)) | live]
(push) ; 5
; [then-branch: 39 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 1)), $q1@220@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 1)) $q1@220@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 39 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int]($pre_self@176@01, 1)), $q1@220@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 1)) $q1@220@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($pre_self, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 1)) $q1@220@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 1)) $q1@220@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@220@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 1)) $q1@220@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 1)) $q1@220@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 1)) $q1@220@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@820@11@820@456-aux|)))
(assert (forall (($q1@220@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 1)) $q1@220@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 1)) $q1@220@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 1)) $q1@220@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@820@11@820@456|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@221@01 $Snap)
(assert (= $t@221@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@222@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc($pre_self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc($pre_self, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@222@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 1)) $q1@222@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> $pre_self@176@01 1)) $q1@222@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@821@11@821@289|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($pre_self, 2)): Int) &&
;   ($struct_get($struct_loc($pre_self, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@223@01 $Snap)
(assert (= $t@223@01 ($Snap.combine ($Snap.first $t@223@01) ($Snap.second $t@223@01))))
(assert (= ($Snap.first $t@223@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($pre_self, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($pre_self, 2)): Int)
; [eval] $struct_loc($pre_self, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $pre_self@176@01 2))))
(assert (= ($Snap.second $t@223@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($pre_self, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($pre_self, 2)): Int)
; [eval] $struct_loc($pre_self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $pre_self@176@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($pre_self, 3)): Int) &&
;   ($struct_get($struct_loc($pre_self, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@224@01 $Snap)
(assert (= $t@224@01 ($Snap.combine ($Snap.first $t@224@01) ($Snap.second $t@224@01))))
(assert (= ($Snap.first $t@224@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($pre_self, 3)): Int)
; [eval] ($struct_get($struct_loc($pre_self, 3)): Int)
; [eval] $struct_loc($pre_self, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $pre_self@176@01 3))))
(assert (= ($Snap.second $t@224@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($pre_self, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc($pre_self, 3)): Int)
; [eval] $struct_loc($pre_self, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $pre_self@176@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($pre_self, 4)): Int) &&
;   ($struct_get($struct_loc($pre_self, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@225@01 $Snap)
(assert (= $t@225@01 ($Snap.combine ($Snap.first $t@225@01) ($Snap.second $t@225@01))))
(assert (= ($Snap.first $t@225@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($pre_self, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($pre_self, 4)): Int)
; [eval] $struct_loc($pre_self, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $pre_self@176@01 4))))
(assert (= ($Snap.second $t@225@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($pre_self, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($pre_self, 4)): Int)
; [eval] $struct_loc($pre_self, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $pre_self@176@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($pre_self, 5)): Int) &&
;   ($struct_get($struct_loc($pre_self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@226@01 $Snap)
(assert (= $t@226@01 ($Snap.combine ($Snap.first $t@226@01) ($Snap.second $t@226@01))))
(assert (= ($Snap.first $t@226@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($pre_self, 5)): Int)
; [eval] ($struct_get($struct_loc($pre_self, 5)): Int)
; [eval] $struct_loc($pre_self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $pre_self@176@01 5))))
(assert (= ($Snap.second $t@226@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($pre_self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($pre_self, 5)): Int)
; [eval] $struct_loc($pre_self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $pre_self@176@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($pre_self, 6)): Int) &&
;   ($struct_get($struct_loc($pre_self, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@227@01 $Snap)
(assert (= $t@227@01 ($Snap.combine ($Snap.first $t@227@01) ($Snap.second $t@227@01))))
(assert (= ($Snap.first $t@227@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($pre_self, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($pre_self, 6)): Int)
; [eval] $struct_loc($pre_self, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $pre_self@176@01 6))))
(assert (= ($Snap.second $t@227@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($pre_self, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($pre_self, 6)): Int)
; [eval] $struct_loc($pre_self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $pre_self@176@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@228@01 $Snap)
(assert (= $t@228@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@229@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 8)
(push) ; 4
; [then-branch: 40 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@176@01, 8)), $q3@229@01)) | live]
; [else-branch: 40 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@176@01, 8)), $q3@229@01) | live]
(push) ; 5
; [then-branch: 40 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@176@01, 8)), $q3@229@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 8)) $q3@229@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 40 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@176@01, 8)), $q3@229@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 8)) $q3@229@01)))
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 8)) $q3@229@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 8)) $q3@229@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@229@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 8)) $q3@229@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 8)) $q3@229@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 8)) $q3@229@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@827@11@827@360-aux|)))
(assert (forall (($q3@229@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 8)) $q3@229@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 8)) $q3@229@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 8)) $q3@229@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@827@11@827@360|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int])): Int))
(declare-const $t@230@01 $Snap)
(assert (= $t@230@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int])): Int))
(declare-const $q3@231@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 8)
; [eval] ($map_sum(($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($pre_self, 8)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@231@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 8)) $q3@231@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 8)) $q3@231@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@828@11@828@268|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@232@01 $Snap)
(assert (= $t@232@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@233@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 9)
(push) ; 4
; [then-branch: 41 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@176@01, 9)), $q4@233@01)) | live]
; [else-branch: 41 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@176@01, 9)), $q4@233@01) | live]
(push) ; 5
; [then-branch: 41 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@176@01, 9)), $q4@233@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 9)) $q4@233@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 41 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@176@01, 9)), $q4@233@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 9)) $q4@233@01)))
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 9)) $q4@233@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 9)) $q4@233@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@233@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 9)) $q4@233@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 9)) $q4@233@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 9)) $q4@233@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@829@11@829@360-aux|)))
(assert (forall (($q4@233@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 9)) $q4@233@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 9)) $q4@233@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 9)) $q4@233@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@829@11@829@360|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int])): Int))
(declare-const $t@234@01 $Snap)
(assert (= $t@234@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int])): Int))
(declare-const $q4@235@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 9)
; [eval] ($map_sum(($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($pre_self, 9)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@235@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 9)) $q4@235@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@176@01 9)) $q4@235@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@830@11@830@268|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($pre_self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@236@01 $Snap)
(assert (= $t@236@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($pre_self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc($pre_self, -1)): Int)
; [eval] $struct_loc($pre_self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $pre_self@176@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@237@01 $Snap)
(assert (= $t@237@01 ($Snap.combine ($Snap.first $t@237@01) ($Snap.second $t@237@01))))
(assert (= ($Snap.first $t@237@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@180@01 0))))
(assert (= ($Snap.second $t@237@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@180@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@238@01 $Snap)
(assert (= $t@238@01 ($Snap.combine ($Snap.first $t@238@01) ($Snap.second $t@238@01))))
(assert (= ($Snap.first $t@238@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@180@01 1))))
(assert (= ($Snap.second $t@238@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@180@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@239@01 $Snap)
(assert (= $t@239@01 ($Snap.combine ($Snap.first $t@239@01) ($Snap.second $t@239@01))))
(assert (= ($Snap.first $t@239@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@180@01 2))))
(assert (= ($Snap.second $t@239@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@180@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@240@01 $Snap)
(assert (= $t@240@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@180@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@241@01 $Snap)
(assert (= $t@241@01 ($Snap.combine ($Snap.first $t@241@01) ($Snap.second $t@241@01))))
(assert (= ($Snap.first $t@241@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@180@01 4))))
(assert (= ($Snap.second $t@241@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@180@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@242@01 $Snap)
(assert (= $t@242@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@180@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale $havoc >= 0
(declare-const $t@243@01 $Snap)
(assert (= $t@243@01 $Snap.unit))
; [eval] $havoc >= 0
(assert (>= $havoc@179@01 0))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $t@244@01 $Snap)
(assert (= $t@244@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $a@245@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   $havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + $havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + $havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@246@01 $Struct)
(assert (=
  self@246@01
  ($struct_set<$Struct> self@174@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@174@01 5))
    $havoc@179@01))))
(pop) ; 2
(pop) ; 1
; ---------- f$delegated ----------
(declare-const l$addr@247@01 Int)
(declare-const $succ@248@01 Bool)
(declare-const $res@249@01 Bool)
(declare-const l$addr@250@01 Int)
(declare-const $succ@251@01 Bool)
(declare-const $res@252@01 Bool)
(set-option :timeout 0)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@253@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@254@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@255@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@256@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@257@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@258@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@259@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@260@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@261@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@262@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@263@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@264@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@265@01 Bool)
; [exec]
; var l$i0$addr: Int
(declare-const l$i0$addr@266@01 Int)
; [exec]
; var i0$$res: Bool
(declare-const i0$$res@267@01 Bool)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@268@01 Bool)
; [exec]
; var l$havoc: Bool
(declare-const l$havoc@269@01 Bool)
; [exec]
; var l$havoc$1: Int
(declare-const l$havoc$1@270@01 Int)
; [exec]
; var l$havoc$2: $Map[Int, $Struct]
(declare-const l$havoc$2@271@01 $Map<Int~_$Struct>)
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@272@01 $Snap)
(assert (= $t@272@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@273@01 Int)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 42 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 0)), $q0@273@01), 0))) | live]
; [else-branch: 42 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 0)), $q0@273@01), 0)) | live]
(push) ; 5
; [then-branch: 42 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 0)), $q0@273@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@273@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 42 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 0)), $q0@273@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@273@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@273@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@273@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@273@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@273@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@273@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@273@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@868@11@868@441-aux|)))
(assert (forall (($q0@273@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@273@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@273@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@273@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@868@11@868@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@274@01 $Snap)
(assert (= $t@274@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@275@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 43 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 0)), $q0@275@01), 2))) | live]
; [else-branch: 43 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 0)), $q0@275@01), 2)) | live]
(push) ; 5
; [then-branch: 43 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 0)), $q0@275@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@275@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 43 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 0)), $q0@275@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@275@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@275@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@275@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@275@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@275@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@275@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@275@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@869@11@869@412-aux|)))
(assert (forall (($q0@275@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@275@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@275@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@275@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@869@11@869@412|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@276@01 $Snap)
(assert (= $t@276@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@277@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 44 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 0)), $q0@277@01), 3))) | live]
; [else-branch: 44 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 0)), $q0@277@01), 3)) | live]
(push) ; 5
; [then-branch: 44 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 0)), $q0@277@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@277@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 44 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 0)), $q0@277@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@277@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@277@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@277@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@277@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@277@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@277@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@277@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@870@11@870@441-aux|)))
(assert (forall (($q0@277@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@277@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@277@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@277@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@870@11@870@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@278@01 $Snap)
(assert (= $t@278@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@279@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@279@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@279@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) $q0@279@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@871@11@871@272|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@280@01 $Snap)
(assert (= $t@280@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@281@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@281@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 1)) $q1@281@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 1)) $q1@281@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@872@11@872@246|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@282@01 $Snap)
(assert (= $t@282@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@283@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(push) ; 4
; [then-branch: 45 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 1)), $q1@283@01), 1))) | live]
; [else-branch: 45 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 1)), $q1@283@01), 1)) | live]
(push) ; 5
; [then-branch: 45 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 1)), $q1@283@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 1)) $q1@283@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 45 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@257@01, 1)), $q1@283@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 1)) $q1@283@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 1)) $q1@283@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 1)) $q1@283@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@283@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 1)) $q1@283@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 1)) $q1@283@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 1)) $q1@283@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@873@11@873@441-aux|)))
(assert (forall (($q1@283@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 1)) $q1@283@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 1)) $q1@283@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 1)) $q1@283@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@873@11@873@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@284@01 $Snap)
(assert (= $t@284@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@285@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@285@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 1)) $q1@285@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 1)) $q1@285@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@874@11@874@279|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@286@01 $Snap)
(assert (= $t@286@01 ($Snap.combine ($Snap.first $t@286@01) ($Snap.second $t@286@01))))
(assert (= ($Snap.first $t@286@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@257@01 2))))
(assert (= ($Snap.second $t@286@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@257@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 3)): Int) &&
;   ($struct_get($struct_loc(self, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@287@01 $Snap)
(assert (= $t@287@01 ($Snap.combine ($Snap.first $t@287@01) ($Snap.second $t@287@01))))
(assert (= ($Snap.first $t@287@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 3)): Int)
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@257@01 3))))
(assert (= ($Snap.second $t@287@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@257@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 4)): Int) &&
;   ($struct_get($struct_loc(self, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@288@01 $Snap)
(assert (= $t@288@01 ($Snap.combine ($Snap.first $t@288@01) ($Snap.second $t@288@01))))
(assert (= ($Snap.first $t@288@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@257@01 4))))
(assert (= ($Snap.second $t@288@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@257@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@289@01 $Snap)
(assert (= $t@289@01 ($Snap.combine ($Snap.first $t@289@01) ($Snap.second $t@289@01))))
(assert (= ($Snap.first $t@289@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@257@01 5))))
(assert (= ($Snap.second $t@289@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@257@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@290@01 $Snap)
(assert (= $t@290@01 ($Snap.combine ($Snap.first $t@290@01) ($Snap.second $t@290@01))))
(assert (= ($Snap.first $t@290@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@257@01 6))))
(assert (= ($Snap.second $t@290@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@257@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@291@01 $Snap)
(assert (= $t@291@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@292@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(push) ; 4
; [then-branch: 46 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 8)), $q3@292@01)) | live]
; [else-branch: 46 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 8)), $q3@292@01) | live]
(push) ; 5
; [then-branch: 46 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 8)), $q3@292@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 8)) $q3@292@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 46 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 8)), $q3@292@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 8)) $q3@292@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 8)) $q3@292@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 8)) $q3@292@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@292@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 8)) $q3@292@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 8)) $q3@292@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 8)) $q3@292@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@880@11@880@345-aux|)))
(assert (forall (($q3@292@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 8)) $q3@292@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 8)) $q3@292@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 8)) $q3@292@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@880@11@880@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $t@293@01 $Snap)
(assert (= $t@293@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $q3@294@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@294@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 8)) $q3@294@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 8)) $q3@294@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@881@11@881@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@295@01 $Snap)
(assert (= $t@295@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@296@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(push) ; 4
; [then-branch: 47 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 9)), $q4@296@01)) | live]
; [else-branch: 47 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 9)), $q4@296@01) | live]
(push) ; 5
; [then-branch: 47 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 9)), $q4@296@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 9)) $q4@296@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 47 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 9)), $q4@296@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 9)) $q4@296@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 9)) $q4@296@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 9)) $q4@296@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@296@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 9)) $q4@296@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 9)) $q4@296@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 9)) $q4@296@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@882@11@882@345-aux|)))
(assert (forall (($q4@296@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 9)) $q4@296@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 9)) $q4@296@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 9)) $q4@296@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@882@11@882@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $t@297@01 $Snap)
(assert (= $t@297@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $q4@298@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
; [eval] ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@298@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 9)) $q4@298@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 9)) $q4@298@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@883@11@883@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@299@01 $Snap)
(assert (= $t@299@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@257@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@300@01 $Snap)
(assert (= $t@300@01 ($Snap.combine ($Snap.first $t@300@01) ($Snap.second $t@300@01))))
(assert (= ($Snap.first $t@300@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@300@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= l$addr &&
;   l$addr <= 1461501637330902918203684832716283019655932542975
(declare-const $t@301@01 $Snap)
(assert (= $t@301@01 ($Snap.combine ($Snap.first $t@301@01) ($Snap.second $t@301@01))))
(assert (= ($Snap.first $t@301@01) $Snap.unit))
; [eval] 0 <= l$addr
(assert (<= 0 l$addr@250@01))
(assert (= ($Snap.second $t@301@01) $Snap.unit))
; [eval] l$addr <= 1461501637330902918203684832716283019655932542975
(assert (<= l$addr@250@01 1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@302@01 $Snap)
(assert (= $t@302@01 ($Snap.combine ($Snap.first $t@302@01) ($Snap.second $t@302@01))))
(assert (= ($Snap.first $t@302@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@254@01 0))))
(assert (= ($Snap.second $t@302@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@254@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@303@01 $Snap)
(assert (= $t@303@01 ($Snap.combine ($Snap.first $t@303@01) ($Snap.second $t@303@01))))
(assert (= ($Snap.first $t@303@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@254@01 1))))
(assert (= ($Snap.second $t@303@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@254@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@304@01 $Snap)
(assert (= $t@304@01 ($Snap.combine ($Snap.first $t@304@01) ($Snap.second $t@304@01))))
(assert (= ($Snap.first $t@304@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@254@01 2))))
(assert (= ($Snap.second $t@304@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@254@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@305@01 $Snap)
(assert (= $t@305@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@254@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@306@01 $Snap)
(assert (= $t@306@01 ($Snap.combine ($Snap.first $t@306@01) ($Snap.second $t@306@01))))
(assert (= ($Snap.first $t@306@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@254@01 4))))
(assert (= ($Snap.second $t@306@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@254@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@307@01 $Snap)
(assert (= $t@307@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@254@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@308@01 $Snap)
(assert (= $t@308@01 ($Snap.combine ($Snap.first $t@308@01) ($Snap.second $t@308@01))))
(assert (= ($Snap.first $t@308@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@253@01 0))))
(assert (= ($Snap.second $t@308@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@253@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@309@01 $Snap)
(assert (= $t@309@01 ($Snap.combine ($Snap.first $t@309@01) ($Snap.second $t@309@01))))
(assert (= ($Snap.first $t@309@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@253@01 1))))
(assert (= ($Snap.second $t@309@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@253@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@310@01 $Snap)
(assert (= $t@310@01 ($Snap.combine ($Snap.first $t@310@01) ($Snap.second $t@310@01))))
(assert (= ($Snap.first $t@310@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@253@01 2))))
(assert (= ($Snap.second $t@310@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@253@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@311@01 $Snap)
(assert (= $t@311@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@253@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@312@01 $Snap)
(assert (= $t@312@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@253@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $t@313@01 $Snap)
(assert (= $t@313@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $a@314@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@315@01 $Snap)
(assert (= $t@315@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@253@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; l$i0$addr := l$addr
; [exec]
; i0$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$addr): $Struct), 2)): Int) !=
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$addr): $Struct), 2)): Int) != 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const i0$$res@316@01 Bool)
(assert (=
  i0$$res@316@01
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@257@01 0)) l$addr@250@01) 2))
      0))))
; [exec]
; label i0$return
; [exec]
; $res := i0$$res
; [exec]
; label return
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not $out_of_gas@268@01)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not $out_of_gas@268@01))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 48 | $out_of_gas@268@01 | live]
; [else-branch: 48 | !($out_of_gas@268@01) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 48 | $out_of_gas@268@01]
(assert $out_of_gas@268@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 49 | True | live]
; [else-branch: 49 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 49 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@317@01 $Snap)
(assert (= $t@317@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@270@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@318@01 $Struct)
(assert (=
  self@318@01
  ($struct_set<$Struct> self@257@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@257@01 5))
    l$havoc$1@270@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 4
; [then-branch: 50 | False | dead]
; [else-branch: 50 | True | live]
(set-option :timeout 0)
(push) ; 4
; [else-branch: 50 | True]
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 48 | !($out_of_gas@268@01)]
(assert (not $out_of_gas@268@01))
(pop) ; 3
; [eval] !$out_of_gas
(push) ; 3
(set-option :timeout 10)
(assert (not $out_of_gas@268@01))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not $out_of_gas@268@01)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 51 | !($out_of_gas@268@01) | live]
; [else-branch: 51 | $out_of_gas@268@01 | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 51 | !($out_of_gas@268@01)]
(assert (not $out_of_gas@268@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 52 | False | dead]
; [else-branch: 52 | True | live]
(push) ; 4
; [else-branch: 52 | True]
(pop) ; 4
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 53 | True | live]
; [else-branch: 53 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 53 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@319@01 $Snap)
(assert (= $t@319@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@270@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@320@01 $Struct)
(assert (=
  self@320@01
  ($struct_set<$Struct> self@257@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@257@01 5))
    l$havoc$1@270@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 4
(pop) ; 3
(set-option :timeout 0)
(push) ; 3
; [else-branch: 51 | $out_of_gas@268@01]
(assert $out_of_gas@268@01)
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$directlyVoted ----------
(declare-const l$addr@321@01 Int)
(declare-const $succ@322@01 Bool)
(declare-const $res@323@01 Bool)
(declare-const l$addr@324@01 Int)
(declare-const $succ@325@01 Bool)
(declare-const $res@326@01 Bool)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@327@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@328@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@329@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@330@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@331@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@332@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@333@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@334@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@335@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@336@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@337@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@338@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@339@01 Bool)
; [exec]
; var l$i0$addr: Int
(declare-const l$i0$addr@340@01 Int)
; [exec]
; var i0$$res: Bool
(declare-const i0$$res@341@01 Bool)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@342@01 Bool)
; [exec]
; var l$havoc: Bool
(declare-const l$havoc@343@01 Bool)
; [exec]
; var l$havoc$1: Int
(declare-const l$havoc$1@344@01 Int)
; [exec]
; var l$havoc$2: $Map[Int, $Struct]
(declare-const l$havoc$2@345@01 $Map<Int~_$Struct>)
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@346@01 $Snap)
(assert (= $t@346@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@347@01 Int)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 54 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), $q0@347@01), 0))) | live]
; [else-branch: 54 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), $q0@347@01), 0)) | live]
(push) ; 5
; [then-branch: 54 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), $q0@347@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@347@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 54 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), $q0@347@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@347@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@347@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@347@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@347@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@347@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@347@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@347@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@969@11@969@441-aux|)))
(assert (forall (($q0@347@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@347@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@347@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@347@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@969@11@969@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@348@01 $Snap)
(assert (= $t@348@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@349@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 55 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), $q0@349@01), 2))) | live]
; [else-branch: 55 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), $q0@349@01), 2)) | live]
(push) ; 5
; [then-branch: 55 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), $q0@349@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@349@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 55 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), $q0@349@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@349@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@349@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@349@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@349@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@349@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@349@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@349@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@970@11@970@412-aux|)))
(assert (forall (($q0@349@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@349@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@349@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@349@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@970@11@970@412|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@350@01 $Snap)
(assert (= $t@350@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@351@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 56 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), $q0@351@01), 3))) | live]
; [else-branch: 56 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), $q0@351@01), 3)) | live]
(push) ; 5
; [then-branch: 56 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), $q0@351@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@351@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 56 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), $q0@351@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@351@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@351@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@351@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@351@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@351@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@351@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@351@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@971@11@971@441-aux|)))
(assert (forall (($q0@351@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@351@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@351@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@351@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@971@11@971@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@352@01 $Snap)
(assert (= $t@352@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@353@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@353@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@353@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) $q0@353@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@972@11@972@272|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@354@01 $Snap)
(assert (= $t@354@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@355@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@355@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 1)) $q1@355@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 1)) $q1@355@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@973@11@973@246|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@356@01 $Snap)
(assert (= $t@356@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@357@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(push) ; 4
; [then-branch: 57 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 1)), $q1@357@01), 1))) | live]
; [else-branch: 57 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 1)), $q1@357@01), 1)) | live]
(push) ; 5
; [then-branch: 57 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 1)), $q1@357@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 1)) $q1@357@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 57 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 1)), $q1@357@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 1)) $q1@357@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 1)) $q1@357@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 1)) $q1@357@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@357@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 1)) $q1@357@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 1)) $q1@357@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 1)) $q1@357@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@974@11@974@441-aux|)))
(assert (forall (($q1@357@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 1)) $q1@357@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 1)) $q1@357@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 1)) $q1@357@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@974@11@974@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@358@01 $Snap)
(assert (= $t@358@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@359@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@359@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 1)) $q1@359@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 1)) $q1@359@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@975@11@975@279|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@360@01 $Snap)
(assert (= $t@360@01 ($Snap.combine ($Snap.first $t@360@01) ($Snap.second $t@360@01))))
(assert (= ($Snap.first $t@360@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@331@01 2))))
(assert (= ($Snap.second $t@360@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@331@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 3)): Int) &&
;   ($struct_get($struct_loc(self, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@361@01 $Snap)
(assert (= $t@361@01 ($Snap.combine ($Snap.first $t@361@01) ($Snap.second $t@361@01))))
(assert (= ($Snap.first $t@361@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 3)): Int)
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@331@01 3))))
(assert (= ($Snap.second $t@361@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@331@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 4)): Int) &&
;   ($struct_get($struct_loc(self, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@362@01 $Snap)
(assert (= $t@362@01 ($Snap.combine ($Snap.first $t@362@01) ($Snap.second $t@362@01))))
(assert (= ($Snap.first $t@362@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@331@01 4))))
(assert (= ($Snap.second $t@362@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@331@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@363@01 $Snap)
(assert (= $t@363@01 ($Snap.combine ($Snap.first $t@363@01) ($Snap.second $t@363@01))))
(assert (= ($Snap.first $t@363@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@331@01 5))))
(assert (= ($Snap.second $t@363@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@331@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@364@01 $Snap)
(assert (= $t@364@01 ($Snap.combine ($Snap.first $t@364@01) ($Snap.second $t@364@01))))
(assert (= ($Snap.first $t@364@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@331@01 6))))
(assert (= ($Snap.second $t@364@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@331@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@365@01 $Snap)
(assert (= $t@365@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@366@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(push) ; 4
; [then-branch: 58 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@331@01, 8)), $q3@366@01)) | live]
; [else-branch: 58 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@331@01, 8)), $q3@366@01) | live]
(push) ; 5
; [then-branch: 58 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@331@01, 8)), $q3@366@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 8)) $q3@366@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 58 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@331@01, 8)), $q3@366@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 8)) $q3@366@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 8)) $q3@366@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 8)) $q3@366@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@366@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 8)) $q3@366@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 8)) $q3@366@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 8)) $q3@366@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@981@11@981@345-aux|)))
(assert (forall (($q3@366@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 8)) $q3@366@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 8)) $q3@366@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 8)) $q3@366@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@981@11@981@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $t@367@01 $Snap)
(assert (= $t@367@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $q3@368@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@368@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 8)) $q3@368@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 8)) $q3@368@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@982@11@982@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@369@01 $Snap)
(assert (= $t@369@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@370@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(push) ; 4
; [then-branch: 59 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@331@01, 9)), $q4@370@01)) | live]
; [else-branch: 59 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@331@01, 9)), $q4@370@01) | live]
(push) ; 5
; [then-branch: 59 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@331@01, 9)), $q4@370@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 9)) $q4@370@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 59 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@331@01, 9)), $q4@370@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 9)) $q4@370@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 9)) $q4@370@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 9)) $q4@370@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@370@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 9)) $q4@370@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 9)) $q4@370@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 9)) $q4@370@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@983@11@983@345-aux|)))
(assert (forall (($q4@370@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 9)) $q4@370@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 9)) $q4@370@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 9)) $q4@370@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@983@11@983@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $t@371@01 $Snap)
(assert (= $t@371@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $q4@372@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
; [eval] ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@372@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 9)) $q4@372@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@331@01 9)) $q4@372@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@984@11@984@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@373@01 $Snap)
(assert (= $t@373@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@331@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@374@01 $Snap)
(assert (= $t@374@01 ($Snap.combine ($Snap.first $t@374@01) ($Snap.second $t@374@01))))
(assert (= ($Snap.first $t@374@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@374@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= l$addr &&
;   l$addr <= 1461501637330902918203684832716283019655932542975
(declare-const $t@375@01 $Snap)
(assert (= $t@375@01 ($Snap.combine ($Snap.first $t@375@01) ($Snap.second $t@375@01))))
(assert (= ($Snap.first $t@375@01) $Snap.unit))
; [eval] 0 <= l$addr
(assert (<= 0 l$addr@324@01))
(assert (= ($Snap.second $t@375@01) $Snap.unit))
; [eval] l$addr <= 1461501637330902918203684832716283019655932542975
(assert (<= l$addr@324@01 1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@376@01 $Snap)
(assert (= $t@376@01 ($Snap.combine ($Snap.first $t@376@01) ($Snap.second $t@376@01))))
(assert (= ($Snap.first $t@376@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@328@01 0))))
(assert (= ($Snap.second $t@376@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@328@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@377@01 $Snap)
(assert (= $t@377@01 ($Snap.combine ($Snap.first $t@377@01) ($Snap.second $t@377@01))))
(assert (= ($Snap.first $t@377@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@328@01 1))))
(assert (= ($Snap.second $t@377@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@328@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@378@01 $Snap)
(assert (= $t@378@01 ($Snap.combine ($Snap.first $t@378@01) ($Snap.second $t@378@01))))
(assert (= ($Snap.first $t@378@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@328@01 2))))
(assert (= ($Snap.second $t@378@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@328@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@379@01 $Snap)
(assert (= $t@379@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@328@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@380@01 $Snap)
(assert (= $t@380@01 ($Snap.combine ($Snap.first $t@380@01) ($Snap.second $t@380@01))))
(assert (= ($Snap.first $t@380@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@328@01 4))))
(assert (= ($Snap.second $t@380@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@328@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@381@01 $Snap)
(assert (= $t@381@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@328@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@382@01 $Snap)
(assert (= $t@382@01 ($Snap.combine ($Snap.first $t@382@01) ($Snap.second $t@382@01))))
(assert (= ($Snap.first $t@382@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@327@01 0))))
(assert (= ($Snap.second $t@382@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@327@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@383@01 $Snap)
(assert (= $t@383@01 ($Snap.combine ($Snap.first $t@383@01) ($Snap.second $t@383@01))))
(assert (= ($Snap.first $t@383@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@327@01 1))))
(assert (= ($Snap.second $t@383@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@327@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@384@01 $Snap)
(assert (= $t@384@01 ($Snap.combine ($Snap.first $t@384@01) ($Snap.second $t@384@01))))
(assert (= ($Snap.first $t@384@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@327@01 2))))
(assert (= ($Snap.second $t@384@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@327@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@385@01 $Snap)
(assert (= $t@385@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@327@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@386@01 $Snap)
(assert (= $t@386@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@327@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $t@387@01 $Snap)
(assert (= $t@387@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $a@388@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@389@01 $Snap)
(assert (= $t@389@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@327@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; l$i0$addr := l$addr
; [exec]
; i0$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$addr): $Struct), 1)): Bool) &&
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$addr): $Struct), 2)): Int) ==
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$addr): $Struct), 1)): Bool) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$addr): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$addr): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(set-option :timeout 0)
(push) ; 3
; [then-branch: 60 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), l$addr@324@01), 1))) | live]
; [else-branch: 60 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), l$addr@324@01), 1)) | live]
(push) ; 4
; [then-branch: 60 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), l$addr@324@01), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) l$addr@324@01) 1))))
(pop) ; 4
(push) ; 4
; [else-branch: 60 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@331@01, 0)), l$addr@324@01), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) l$addr@324@01) 1)))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 4
(pop) ; 3
; Joined path conditions
; Joined path conditions
(assert (or
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) l$addr@324@01) 1))
  (not
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) l$addr@324@01) 1)))))
(declare-const i0$$res@390@01 Bool)
(assert (=
  i0$$res@390@01
  (and
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) l$addr@324@01) 1))
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@331@01 0)) l$addr@324@01) 2))
      0))))
; [exec]
; label i0$return
; [exec]
; $res := i0$$res
; [exec]
; label return
(push) ; 3
(set-option :timeout 10)
(assert (not (not $out_of_gas@342@01)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not $out_of_gas@342@01))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 61 | $out_of_gas@342@01 | live]
; [else-branch: 61 | !($out_of_gas@342@01) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 61 | $out_of_gas@342@01]
(assert $out_of_gas@342@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 62 | True | live]
; [else-branch: 62 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 62 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@391@01 $Snap)
(assert (= $t@391@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@344@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@392@01 $Struct)
(assert (=
  self@392@01
  ($struct_set<$Struct> self@331@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@331@01 5))
    l$havoc$1@344@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 4
; [then-branch: 63 | False | dead]
; [else-branch: 63 | True | live]
(set-option :timeout 0)
(push) ; 4
; [else-branch: 63 | True]
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 61 | !($out_of_gas@342@01)]
(assert (not $out_of_gas@342@01))
(pop) ; 3
; [eval] !$out_of_gas
(push) ; 3
(set-option :timeout 10)
(assert (not $out_of_gas@342@01))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not $out_of_gas@342@01)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 64 | !($out_of_gas@342@01) | live]
; [else-branch: 64 | $out_of_gas@342@01 | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 64 | !($out_of_gas@342@01)]
(assert (not $out_of_gas@342@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 65 | False | dead]
; [else-branch: 65 | True | live]
(push) ; 4
; [else-branch: 65 | True]
(pop) ; 4
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 66 | True | live]
; [else-branch: 66 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 66 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@393@01 $Snap)
(assert (= $t@393@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@344@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@394@01 $Struct)
(assert (=
  self@394@01
  ($struct_set<$Struct> self@331@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@331@01 5))
    l$havoc$1@344@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 4
(pop) ; 3
(set-option :timeout 0)
(push) ; 3
; [else-branch: 64 | $out_of_gas@342@01]
(assert $out_of_gas@342@01)
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$__init__ ----------
(declare-const l$_proposalNames@395@01 Seq<Seq<Int>>)
(declare-const $succ@396@01 Bool)
(declare-const l$_proposalNames@397@01 Seq<Seq<Int>>)
(declare-const $succ@398@01 Bool)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@399@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@400@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@401@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@402@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@403@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@404@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@405@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@406@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@407@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@408@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@409@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@410@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@411@01 Bool)
; [exec]
; var $first_public_state: Bool
(declare-const $first_public_state@412@01 Bool)
; [exec]
; var l$havoc: Int
(declare-const l$havoc@413@01 Int)
; [exec]
; var l$i: $Int
(declare-const l$i@414@01 $Int)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@415@01 Bool)
; [exec]
; var l$havoc$1: Int
(declare-const l$havoc$1@416@01 Int)
; [exec]
; var l$havoc$2: $Map[Int, $Struct]
(declare-const l$havoc$2@417@01 $Map<Int~_$Struct>)
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@418@01 $Snap)
(assert (= $t@418@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@419@01 Int)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 67 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 0)), $q0@419@01), 0))) | live]
; [else-branch: 67 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 0)), $q0@419@01), 0)) | live]
(push) ; 5
; [then-branch: 67 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 0)), $q0@419@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@419@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 67 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 0)), $q0@419@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@419@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@419@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@419@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@419@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@419@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@419@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@419@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1070@11@1070@441-aux|)))
(assert (forall (($q0@419@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@419@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@419@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@419@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1070@11@1070@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@420@01 $Snap)
(assert (= $t@420@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@421@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 68 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 0)), $q0@421@01), 2))) | live]
; [else-branch: 68 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 0)), $q0@421@01), 2)) | live]
(push) ; 5
; [then-branch: 68 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 0)), $q0@421@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@421@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 68 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 0)), $q0@421@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@421@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@421@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@421@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@421@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@421@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@421@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@421@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1071@11@1071@412-aux|)))
(assert (forall (($q0@421@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@421@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@421@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@421@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1071@11@1071@412|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@422@01 $Snap)
(assert (= $t@422@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@423@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 69 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 0)), $q0@423@01), 3))) | live]
; [else-branch: 69 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 0)), $q0@423@01), 3)) | live]
(push) ; 5
; [then-branch: 69 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 0)), $q0@423@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@423@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 69 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 0)), $q0@423@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@423@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@423@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@423@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@423@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@423@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@423@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@423@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1072@11@1072@441-aux|)))
(assert (forall (($q0@423@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@423@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@423@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@423@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1072@11@1072@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@424@01 $Snap)
(assert (= $t@424@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@425@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@425@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@425@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 0)) $q0@425@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1073@11@1073@272|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@426@01 $Snap)
(assert (= $t@426@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@427@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@427@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 1)) $q1@427@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 1)) $q1@427@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1074@11@1074@246|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@428@01 $Snap)
(assert (= $t@428@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@429@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(push) ; 4
; [then-branch: 70 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 1)), $q1@429@01), 1))) | live]
; [else-branch: 70 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 1)), $q1@429@01), 1)) | live]
(push) ; 5
; [then-branch: 70 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 1)), $q1@429@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 1)) $q1@429@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 70 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@403@01, 1)), $q1@429@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 1)) $q1@429@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 1)) $q1@429@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 1)) $q1@429@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@429@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 1)) $q1@429@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 1)) $q1@429@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 1)) $q1@429@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1075@11@1075@441-aux|)))
(assert (forall (($q1@429@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 1)) $q1@429@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 1)) $q1@429@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 1)) $q1@429@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1075@11@1075@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@430@01 $Snap)
(assert (= $t@430@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@431@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@431@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 1)) $q1@431@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@403@01 1)) $q1@431@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1076@11@1076@279|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@432@01 $Snap)
(assert (= $t@432@01 ($Snap.combine ($Snap.first $t@432@01) ($Snap.second $t@432@01))))
(assert (= ($Snap.first $t@432@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@403@01 2))))
(assert (= ($Snap.second $t@432@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@403@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 3)): Int) &&
;   ($struct_get($struct_loc(self, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@433@01 $Snap)
(assert (= $t@433@01 ($Snap.combine ($Snap.first $t@433@01) ($Snap.second $t@433@01))))
(assert (= ($Snap.first $t@433@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 3)): Int)
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@403@01 3))))
(assert (= ($Snap.second $t@433@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@403@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 4)): Int) &&
;   ($struct_get($struct_loc(self, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@434@01 $Snap)
(assert (= $t@434@01 ($Snap.combine ($Snap.first $t@434@01) ($Snap.second $t@434@01))))
(assert (= ($Snap.first $t@434@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@403@01 4))))
(assert (= ($Snap.second $t@434@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@403@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@435@01 $Snap)
(assert (= $t@435@01 ($Snap.combine ($Snap.first $t@435@01) ($Snap.second $t@435@01))))
(assert (= ($Snap.first $t@435@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@403@01 5))))
(assert (= ($Snap.second $t@435@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@403@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@436@01 $Snap)
(assert (= $t@436@01 ($Snap.combine ($Snap.first $t@436@01) ($Snap.second $t@436@01))))
(assert (= ($Snap.first $t@436@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@403@01 6))))
(assert (= ($Snap.second $t@436@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@403@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@437@01 $Snap)
(assert (= $t@437@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@438@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(push) ; 4
; [then-branch: 71 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@403@01, 8)), $q3@438@01)) | live]
; [else-branch: 71 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@403@01, 8)), $q3@438@01) | live]
(push) ; 5
; [then-branch: 71 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@403@01, 8)), $q3@438@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 8)) $q3@438@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 71 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@403@01, 8)), $q3@438@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 8)) $q3@438@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 8)) $q3@438@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 8)) $q3@438@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@438@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 8)) $q3@438@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 8)) $q3@438@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 8)) $q3@438@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1082@11@1082@345-aux|)))
(assert (forall (($q3@438@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 8)) $q3@438@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 8)) $q3@438@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 8)) $q3@438@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1082@11@1082@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $t@439@01 $Snap)
(assert (= $t@439@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $q3@440@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@440@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 8)) $q3@440@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 8)) $q3@440@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1083@11@1083@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@441@01 $Snap)
(assert (= $t@441@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@442@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(push) ; 4
; [then-branch: 72 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@403@01, 9)), $q4@442@01)) | live]
; [else-branch: 72 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@403@01, 9)), $q4@442@01) | live]
(push) ; 5
; [then-branch: 72 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@403@01, 9)), $q4@442@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 9)) $q4@442@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 72 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@403@01, 9)), $q4@442@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 9)) $q4@442@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 9)) $q4@442@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 9)) $q4@442@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@442@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 9)) $q4@442@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 9)) $q4@442@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 9)) $q4@442@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1084@11@1084@345-aux|)))
(assert (forall (($q4@442@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 9)) $q4@442@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 9)) $q4@442@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 9)) $q4@442@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1084@11@1084@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $t@443@01 $Snap)
(assert (= $t@443@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $q4@444@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
; [eval] ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@444@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 9)) $q4@444@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@403@01 9)) $q4@444@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1085@11@1085@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@445@01 $Snap)
(assert (= $t@445@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@403@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@446@01 $Snap)
(assert (= $t@446@01 ($Snap.combine ($Snap.first $t@446@01) ($Snap.second $t@446@01))))
(assert (= ($Snap.first $t@446@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@446@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |l$_proposalNames| == 2
(declare-const $t@447@01 $Snap)
(assert (= $t@447@01 $Snap.unit))
; [eval] |l$_proposalNames| == 2
; [eval] |l$_proposalNames|
(assert (= (Seq_length l$_proposalNames@397@01) 2))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { l$_proposalNames[$q0] }
;     0 <= $q0 && $q0 < |l$_proposalNames| ==> |l$_proposalNames[$q0]| == 32)
(declare-const $t@448@01 $Snap)
(assert (= $t@448@01 $Snap.unit))
; [eval] (forall $q0: Int :: { l$_proposalNames[$q0] } 0 <= $q0 && $q0 < |l$_proposalNames| ==> |l$_proposalNames[$q0]| == 32)
(declare-const $q0@449@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= $q0 && $q0 < |l$_proposalNames| ==> |l$_proposalNames[$q0]| == 32
; [eval] 0 <= $q0 && $q0 < |l$_proposalNames|
; [eval] 0 <= $q0
(push) ; 4
; [then-branch: 73 | !(0 <= $q0@449@01) | live]
; [else-branch: 73 | 0 <= $q0@449@01 | live]
(push) ; 5
; [then-branch: 73 | !(0 <= $q0@449@01)]
(assert (not (<= 0 $q0@449@01)))
(pop) ; 5
(push) ; 5
; [else-branch: 73 | 0 <= $q0@449@01]
(assert (<= 0 $q0@449@01))
; [eval] $q0 < |l$_proposalNames|
; [eval] |l$_proposalNames|
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 $q0@449@01) (not (<= 0 $q0@449@01))))
(push) ; 4
; [then-branch: 74 | 0 <= $q0@449@01 && $q0@449@01 < |l$_proposalNames@397@01| | live]
; [else-branch: 74 | !(0 <= $q0@449@01 && $q0@449@01 < |l$_proposalNames@397@01|) | live]
(push) ; 5
; [then-branch: 74 | 0 <= $q0@449@01 && $q0@449@01 < |l$_proposalNames@397@01|]
(assert (and (<= 0 $q0@449@01) (< $q0@449@01 (Seq_length l$_proposalNames@397@01))))
; [eval] |l$_proposalNames[$q0]| == 32
; [eval] |l$_proposalNames[$q0]|
; [eval] l$_proposalNames[$q0]
(push) ; 6
(assert (not (>= $q0@449@01 0)))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(pop) ; 5
(push) ; 5
; [else-branch: 74 | !(0 <= $q0@449@01 && $q0@449@01 < |l$_proposalNames@397@01|)]
(assert (not (and (<= 0 $q0@449@01) (< $q0@449@01 (Seq_length l$_proposalNames@397@01)))))
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and (<= 0 $q0@449@01) (< $q0@449@01 (Seq_length l$_proposalNames@397@01))))
  (and (<= 0 $q0@449@01) (< $q0@449@01 (Seq_length l$_proposalNames@397@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@449@01 Int)) (!
  (and
    (or (<= 0 $q0@449@01) (not (<= 0 $q0@449@01)))
    (or
      (not
        (and
          (<= 0 $q0@449@01)
          (< $q0@449@01 (Seq_length l$_proposalNames@397@01))))
      (and (<= 0 $q0@449@01) (< $q0@449@01 (Seq_length l$_proposalNames@397@01)))))
  :pattern ((Seq_index l$_proposalNames@397@01 $q0@449@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1091@11@1091@126-aux|)))
(assert (forall (($q0@449@01 Int)) (!
  (=>
    (and (<= 0 $q0@449@01) (< $q0@449@01 (Seq_length l$_proposalNames@397@01)))
    (= (Seq_length (Seq_index l$_proposalNames@397@01 $q0@449@01)) 32))
  :pattern ((Seq_index l$_proposalNames@397@01 $q0@449@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1091@11@1091@126|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@450@01 $Snap)
(assert (= $t@450@01 ($Snap.combine ($Snap.first $t@450@01) ($Snap.second $t@450@01))))
(assert (= ($Snap.first $t@450@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@400@01 0))))
(assert (= ($Snap.second $t@450@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@400@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@451@01 $Snap)
(assert (= $t@451@01 ($Snap.combine ($Snap.first $t@451@01) ($Snap.second $t@451@01))))
(assert (= ($Snap.first $t@451@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@400@01 1))))
(assert (= ($Snap.second $t@451@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@400@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@452@01 $Snap)
(assert (= $t@452@01 ($Snap.combine ($Snap.first $t@452@01) ($Snap.second $t@452@01))))
(assert (= ($Snap.first $t@452@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@400@01 2))))
(assert (= ($Snap.second $t@452@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@400@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@453@01 $Snap)
(assert (= $t@453@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@400@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@454@01 $Snap)
(assert (= $t@454@01 ($Snap.combine ($Snap.first $t@454@01) ($Snap.second $t@454@01))))
(assert (= ($Snap.first $t@454@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@400@01 4))))
(assert (= ($Snap.second $t@454@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@400@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@455@01 $Snap)
(assert (= $t@455@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@400@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@456@01 $Snap)
(assert (= $t@456@01 ($Snap.combine ($Snap.first $t@456@01) ($Snap.second $t@456@01))))
(assert (= ($Snap.first $t@456@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@399@01 0))))
(assert (= ($Snap.second $t@456@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@399@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@457@01 $Snap)
(assert (= $t@457@01 ($Snap.combine ($Snap.first $t@457@01) ($Snap.second $t@457@01))))
(assert (= ($Snap.first $t@457@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@399@01 1))))
(assert (= ($Snap.second $t@457@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@399@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@458@01 $Snap)
(assert (= $t@458@01 ($Snap.combine ($Snap.first $t@458@01) ($Snap.second $t@458@01))))
(assert (= ($Snap.first $t@458@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@399@01 2))))
(assert (= ($Snap.second $t@458@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@399@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@459@01 $Snap)
(assert (= $t@459@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@399@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@460@01 $Snap)
(assert (= $t@460@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@399@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; $first_public_state := true
; [exec]
; self := s$struct$self$init(($map_init(s$struct$Voter$init(0, false, 0, 0)): $Map[Int, $Struct]),
;   ($map_init(s$struct$Proposal$init(($array_init(0, 32): Seq[Int]), 0)): $Map[Int, $Struct]),
;   0, 0, 0, 0, 0, false, ($map_init(0): $Map[Int, Int]), ($map_init(0): $Map[Int, Int]),
;   false)
; [eval] s$struct$self$init(($map_init(s$struct$Voter$init(0, false, 0, 0)): $Map[Int, $Struct]), ($map_init(s$struct$Proposal$init(($array_init(0, 32): Seq[Int]), 0)): $Map[Int, $Struct]), 0, 0, 0, 0, 0, false, ($map_init(0): $Map[Int, Int]), ($map_init(0): $Map[Int, Int]), false)
; [eval] ($map_init(s$struct$Voter$init(0, false, 0, 0)): $Map[Int, $Struct])
; [eval] s$struct$Voter$init(0, false, 0, 0)
; [eval] ($map_init(s$struct$Proposal$init(($array_init(0, 32): Seq[Int]), 0)): $Map[Int, $Struct])
; [eval] s$struct$Proposal$init(($array_init(0, 32): Seq[Int]), 0)
; [eval] ($array_init(0, 32): Seq[Int])
; [eval] ($map_init(0): $Map[Int, Int])
; [eval] ($map_init(0): $Map[Int, Int])
(declare-const self@461@01 $Struct)
(assert (=
  self@461@01
  (s$struct$self$init<$Struct> ($map_init<$Map<Int~_$Struct>> (s$struct$Voter$init<$Struct> 0 false 0 0)) ($map_init<$Map<Int~_$Struct>> (s$struct$Proposal$init<$Struct> ($array_init<Seq<Int>> 0 32) 0)) 0 0 0 0 0 false ($map_init<$Map<Int~_Int>> 0) ($map_init<$Map<Int~_Int>> 0) false)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@462@01 $Snap)
(assert (= $t@462@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@413@01 0))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@463@01 $Struct)
(assert (=
  self@463@01
  ($struct_set<$Struct> self@461@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@461@01 5))
    l$havoc@413@01))))
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@464@01 $Snap)
(assert (= $t@464@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@399@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 3, ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_set(self, 3, ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(declare-const self@465@01 $Struct)
(assert (=
  self@465@01
  ($struct_set<$Struct> self@463@01 3 ($struct_get<Int> ($struct_loc<Int> msg@399@01 0)))))
; [exec]
; self := ($struct_set(self, 2, 0): $Struct)
; [eval] ($struct_set(self, 2, 0): $Struct)
(declare-const self@466@01 $Struct)
(assert (= self@466@01 ($struct_set<$Struct> self@465@01 2 0)))
; [exec]
; l$i := $wrap($range(0, 2)[0])
; [eval] $wrap($range(0, 2)[0])
; [eval] $range(0, 2)[0]
; [eval] $range(0, 2)
(set-option :timeout 0)
(push) ; 3
(assert (not (< 0 (Seq_length ($range<Seq<Int>> 0 2)))))
(check-sat)
; unsat
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(declare-const l$i@467@01 $Int)
(assert (= l$i@467@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 2) 0))))
; [eval] !(0 <= $unwrap(l$i) && $unwrap(l$i) < |l$_proposalNames|)
; [eval] 0 <= $unwrap(l$i) && $unwrap(l$i) < |l$_proposalNames|
; [eval] 0 <= $unwrap(l$i)
; [eval] $unwrap(l$i)
(push) ; 3
; [then-branch: 75 | !(0 <= $unwrap[Int](l$i@467@01)) | live]
; [else-branch: 75 | 0 <= $unwrap[Int](l$i@467@01) | live]
(push) ; 4
; [then-branch: 75 | !(0 <= $unwrap[Int](l$i@467@01))]
(assert (not (<= 0 ($unwrap<Int> l$i@467@01))))
(pop) ; 4
(push) ; 4
; [else-branch: 75 | 0 <= $unwrap[Int](l$i@467@01)]
(assert (<= 0 ($unwrap<Int> l$i@467@01)))
; [eval] $unwrap(l$i) < |l$_proposalNames|
; [eval] $unwrap(l$i)
; [eval] |l$_proposalNames|
(pop) ; 4
(pop) ; 3
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 ($unwrap<Int> l$i@467@01)) (not (<= 0 ($unwrap<Int> l$i@467@01)))))
(push) ; 3
(set-option :timeout 10)
(assert (not (and
  (<= 0 ($unwrap<Int> l$i@467@01))
  (< ($unwrap<Int> l$i@467@01) (Seq_length l$_proposalNames@397@01)))))
(check-sat)
; unsat
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 76 | !(0 <= $unwrap[Int](l$i@467@01) && $unwrap[Int](l$i@467@01) < |l$_proposalNames@397@01|) | dead]
; [else-branch: 76 | 0 <= $unwrap[Int](l$i@467@01) && $unwrap[Int](l$i@467@01) < |l$_proposalNames@397@01| | live]
(set-option :timeout 0)
(push) ; 3
; [else-branch: 76 | 0 <= $unwrap[Int](l$i@467@01) && $unwrap[Int](l$i@467@01) < |l$_proposalNames@397@01|]
(assert (and
  (<= 0 ($unwrap<Int> l$i@467@01))
  (< ($unwrap<Int> l$i@467@01) (Seq_length l$_proposalNames@397@01))))
(pop) ; 3
; [eval] !!(0 <= $unwrap(l$i) && $unwrap(l$i) < |l$_proposalNames|)
; [eval] !(0 <= $unwrap(l$i) && $unwrap(l$i) < |l$_proposalNames|)
; [eval] 0 <= $unwrap(l$i) && $unwrap(l$i) < |l$_proposalNames|
; [eval] 0 <= $unwrap(l$i)
; [eval] $unwrap(l$i)
(push) ; 3
; [then-branch: 77 | !(0 <= $unwrap[Int](l$i@467@01)) | live]
; [else-branch: 77 | 0 <= $unwrap[Int](l$i@467@01) | live]
(push) ; 4
; [then-branch: 77 | !(0 <= $unwrap[Int](l$i@467@01))]
(assert (not (<= 0 ($unwrap<Int> l$i@467@01))))
(pop) ; 4
(push) ; 4
; [else-branch: 77 | 0 <= $unwrap[Int](l$i@467@01)]
(assert (<= 0 ($unwrap<Int> l$i@467@01)))
; [eval] $unwrap(l$i) < |l$_proposalNames|
; [eval] $unwrap(l$i)
; [eval] |l$_proposalNames|
(pop) ; 4
(pop) ; 3
; Joined path conditions
; Joined path conditions
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  (and
    (<= 0 ($unwrap<Int> l$i@467@01))
    (< ($unwrap<Int> l$i@467@01) (Seq_length l$_proposalNames@397@01))))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (and
  (<= 0 ($unwrap<Int> l$i@467@01))
  (< ($unwrap<Int> l$i@467@01) (Seq_length l$_proposalNames@397@01)))))
(check-sat)
; unsat
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 78 | 0 <= $unwrap[Int](l$i@467@01) && $unwrap[Int](l$i@467@01) < |l$_proposalNames@397@01| | live]
; [else-branch: 78 | !(0 <= $unwrap[Int](l$i@467@01) && $unwrap[Int](l$i@467@01) < |l$_proposalNames@397@01|) | dead]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 78 | 0 <= $unwrap[Int](l$i@467@01) && $unwrap[Int](l$i@467@01) < |l$_proposalNames@397@01|]
(assert (and
  (<= 0 ($unwrap<Int> l$i@467@01))
  (< ($unwrap<Int> l$i@467@01) (Seq_length l$_proposalNames@397@01))))
; [exec]
; self := ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   $unwrap(l$i), s$struct$Proposal$init(l$_proposalNames[$unwrap(l$i)], 0)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i), s$struct$Proposal$init(l$_proposalNames[$unwrap(l$i)], 0)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i), s$struct$Proposal$init(l$_proposalNames[$unwrap(l$i)], 0)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i)
; [eval] s$struct$Proposal$init(l$_proposalNames[$unwrap(l$i)], 0)
; [eval] l$_proposalNames[$unwrap(l$i)]
; [eval] $unwrap(l$i)
(push) ; 4
(assert (not (>= ($unwrap<Int> l$i@467@01) 0)))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(declare-const self@468@01 $Struct)
(assert (=
  self@468@01
  ($struct_set<$Struct> self@466@01 1 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@466@01 1)) ($unwrap<Int> l$i@467@01) (s$struct$Proposal$init<$Struct> (Seq_index
    l$_proposalNames@397@01
    ($unwrap<Int> l$i@467@01)) 0)))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 4)): Int))
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
; [eval] -170141183460469231731687303715884105728
(push) ; 4
; [then-branch: 79 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 < -170141183460469231731687303715884105728 | live]
; [else-branch: 79 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 < -170141183460469231731687303715884105728) | live]
(push) ; 5
; [then-branch: 79 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
    1)
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 5
(push) ; 5
; [else-branch: 79 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
      1)
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 4)): Int))
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
        1)
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
      1)
    (- 0 170141183460469231731687303715884105728))))
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
        1)
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
        1)
      170141183460469231731687303715884105727)))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 80 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 > 170141183460469231731687303715884105727 | dead]
; [else-branch: 80 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 4
; [else-branch: 80 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
        1)
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
        1)
      170141183460469231731687303715884105727))))
(pop) ; 4
; [eval] !($unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 4)): Int))
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
; [eval] -170141183460469231731687303715884105728
(push) ; 4
; [then-branch: 81 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 < -170141183460469231731687303715884105728 | live]
; [else-branch: 81 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 < -170141183460469231731687303715884105728) | live]
(push) ; 5
; [then-branch: 81 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
    1)
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 5
(push) ; 5
; [else-branch: 81 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
      1)
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 4)): Int))
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(push) ; 4
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
      1)
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
      1)
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
        1)
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
        1)
      170141183460469231731687303715884105727)))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 82 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 > 170141183460469231731687303715884105727) | live]
; [else-branch: 82 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 > 170141183460469231731687303715884105727 | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 82 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@468@01, 4)))) + 1 > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
        1)
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
        1)
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 4, $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) +
;   1): $Struct)
; [eval] ($struct_set(self, 4, $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1): $Struct)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 4)): Int))
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(declare-const self@469@01 $Struct)
(assert (=
  self@469@01
  ($struct_set<$Struct> self@468@01 4 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@468@01 4))))
    1))))
; [exec]
; label continue_0
; [exec]
; l$i := $wrap($range(0, 2)[1])
; [eval] $wrap($range(0, 2)[1])
; [eval] $range(0, 2)[1]
; [eval] $range(0, 2)
(push) ; 5
(assert (not (< 1 (Seq_length ($range<Seq<Int>> 0 2)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(declare-const l$i@470@01 $Int)
(assert (= l$i@470@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 2) 1))))
; [eval] !(0 <= $unwrap(l$i) && $unwrap(l$i) < |l$_proposalNames|)
; [eval] 0 <= $unwrap(l$i) && $unwrap(l$i) < |l$_proposalNames|
; [eval] 0 <= $unwrap(l$i)
; [eval] $unwrap(l$i)
(push) ; 5
; [then-branch: 83 | !(0 <= $unwrap[Int](l$i@470@01)) | live]
; [else-branch: 83 | 0 <= $unwrap[Int](l$i@470@01) | live]
(push) ; 6
; [then-branch: 83 | !(0 <= $unwrap[Int](l$i@470@01))]
(assert (not (<= 0 ($unwrap<Int> l$i@470@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 83 | 0 <= $unwrap[Int](l$i@470@01)]
(assert (<= 0 ($unwrap<Int> l$i@470@01)))
; [eval] $unwrap(l$i) < |l$_proposalNames|
; [eval] $unwrap(l$i)
; [eval] |l$_proposalNames|
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 ($unwrap<Int> l$i@470@01)) (not (<= 0 ($unwrap<Int> l$i@470@01)))))
(push) ; 5
(set-option :timeout 10)
(assert (not (and
  (<= 0 ($unwrap<Int> l$i@470@01))
  (< ($unwrap<Int> l$i@470@01) (Seq_length l$_proposalNames@397@01)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 84 | !(0 <= $unwrap[Int](l$i@470@01) && $unwrap[Int](l$i@470@01) < |l$_proposalNames@397@01|) | dead]
; [else-branch: 84 | 0 <= $unwrap[Int](l$i@470@01) && $unwrap[Int](l$i@470@01) < |l$_proposalNames@397@01| | live]
(set-option :timeout 0)
(push) ; 5
; [else-branch: 84 | 0 <= $unwrap[Int](l$i@470@01) && $unwrap[Int](l$i@470@01) < |l$_proposalNames@397@01|]
(assert (and
  (<= 0 ($unwrap<Int> l$i@470@01))
  (< ($unwrap<Int> l$i@470@01) (Seq_length l$_proposalNames@397@01))))
(pop) ; 5
; [eval] !!(0 <= $unwrap(l$i) && $unwrap(l$i) < |l$_proposalNames|)
; [eval] !(0 <= $unwrap(l$i) && $unwrap(l$i) < |l$_proposalNames|)
; [eval] 0 <= $unwrap(l$i) && $unwrap(l$i) < |l$_proposalNames|
; [eval] 0 <= $unwrap(l$i)
; [eval] $unwrap(l$i)
(push) ; 5
; [then-branch: 85 | !(0 <= $unwrap[Int](l$i@470@01)) | live]
; [else-branch: 85 | 0 <= $unwrap[Int](l$i@470@01) | live]
(push) ; 6
; [then-branch: 85 | !(0 <= $unwrap[Int](l$i@470@01))]
(assert (not (<= 0 ($unwrap<Int> l$i@470@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 85 | 0 <= $unwrap[Int](l$i@470@01)]
(assert (<= 0 ($unwrap<Int> l$i@470@01)))
; [eval] $unwrap(l$i) < |l$_proposalNames|
; [eval] $unwrap(l$i)
; [eval] |l$_proposalNames|
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (and
    (<= 0 ($unwrap<Int> l$i@470@01))
    (< ($unwrap<Int> l$i@470@01) (Seq_length l$_proposalNames@397@01))))))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (and
  (<= 0 ($unwrap<Int> l$i@470@01))
  (< ($unwrap<Int> l$i@470@01) (Seq_length l$_proposalNames@397@01)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 86 | 0 <= $unwrap[Int](l$i@470@01) && $unwrap[Int](l$i@470@01) < |l$_proposalNames@397@01| | live]
; [else-branch: 86 | !(0 <= $unwrap[Int](l$i@470@01) && $unwrap[Int](l$i@470@01) < |l$_proposalNames@397@01|) | dead]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 86 | 0 <= $unwrap[Int](l$i@470@01) && $unwrap[Int](l$i@470@01) < |l$_proposalNames@397@01|]
(assert (and
  (<= 0 ($unwrap<Int> l$i@470@01))
  (< ($unwrap<Int> l$i@470@01) (Seq_length l$_proposalNames@397@01))))
; [exec]
; self := ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   $unwrap(l$i), s$struct$Proposal$init(l$_proposalNames[$unwrap(l$i)], 0)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i), s$struct$Proposal$init(l$_proposalNames[$unwrap(l$i)], 0)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i), s$struct$Proposal$init(l$_proposalNames[$unwrap(l$i)], 0)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i)
; [eval] s$struct$Proposal$init(l$_proposalNames[$unwrap(l$i)], 0)
; [eval] l$_proposalNames[$unwrap(l$i)]
; [eval] $unwrap(l$i)
(push) ; 6
(assert (not (>= ($unwrap<Int> l$i@470@01) 0)))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(declare-const self@471@01 $Struct)
(assert (=
  self@471@01
  ($struct_set<$Struct> self@469@01 1 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@469@01 1)) ($unwrap<Int> l$i@470@01) (s$struct$Proposal$init<$Struct> (Seq_index
    l$_proposalNames@397@01
    ($unwrap<Int> l$i@470@01)) 0)))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 4)): Int))
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
; [eval] -170141183460469231731687303715884105728
(push) ; 6
; [then-branch: 87 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 < -170141183460469231731687303715884105728 | live]
; [else-branch: 87 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 < -170141183460469231731687303715884105728) | live]
(push) ; 7
; [then-branch: 87 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
    1)
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 7
(push) ; 7
; [else-branch: 87 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
      1)
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 4)): Int))
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
        1)
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
      1)
    (- 0 170141183460469231731687303715884105728))))
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
        1)
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
        1)
      170141183460469231731687303715884105727)))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 88 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 > 170141183460469231731687303715884105727 | dead]
; [else-branch: 88 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 6
; [else-branch: 88 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
        1)
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
        1)
      170141183460469231731687303715884105727))))
(pop) ; 6
; [eval] !($unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 4)): Int))
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
; [eval] -170141183460469231731687303715884105728
(push) ; 6
; [then-branch: 89 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 < -170141183460469231731687303715884105728 | live]
; [else-branch: 89 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 < -170141183460469231731687303715884105728) | live]
(push) ; 7
; [then-branch: 89 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
    1)
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 7
(push) ; 7
; [else-branch: 89 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
      1)
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1 > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 4)): Int))
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(push) ; 6
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
      1)
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
      1)
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
        1)
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
        1)
      170141183460469231731687303715884105727)))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 90 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 > 170141183460469231731687303715884105727) | live]
; [else-branch: 90 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 > 170141183460469231731687303715884105727 | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 90 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@471@01, 4)))) + 1 > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
        1)
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
        1)
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 4, $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) +
;   1): $Struct)
; [eval] ($struct_set(self, 4, $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1): $Struct)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int))) + 1
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 4)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 4)): Int))
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(declare-const self@472@01 $Struct)
(assert (=
  self@472@01
  ($struct_set<$Struct> self@471@01 4 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@471@01 4))))
    1))))
; [exec]
; label continue_1
; [exec]
; label break_0
; [exec]
; label return
(push) ; 7
(set-option :timeout 10)
(assert (not (not $out_of_gas@415@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not $out_of_gas@415@01))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 91 | $out_of_gas@415@01 | live]
; [else-branch: 91 | !($out_of_gas@415@01) | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 91 | $out_of_gas@415@01]
(assert $out_of_gas@415@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
(push) ; 8
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 92 | True | live]
; [else-branch: 92 | False | dead]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 92 | True]
; [exec]
; $old_self := self
; [eval] !$succ
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 93 | True | live]
; [else-branch: 93 | False | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 93 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@473@01 $Snap)
(assert (= $t@473@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@416@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@474@01 $Struct)
(assert (=
  self@474@01
  ($struct_set<$Struct> self@403@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@403@01 5))
    l$havoc$1@416@01))))
; [exec]
; $contracts := l$havoc$2
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 94 | True | live]
; [else-branch: 94 | False | dead]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 94 | True]
; [exec]
; $old_self := self
(pop) ; 10
; [eval] !$first_public_state
; [then-branch: 95 | False | dead]
; [else-branch: 95 | True | live]
(push) ; 10
; [else-branch: 95 | True]
(pop) ; 10
(pop) ; 9
; [then-branch: 96 | False | dead]
; [else-branch: 96 | True | live]
(push) ; 9
; [else-branch: 96 | True]
(pop) ; 9
(pop) ; 8
; [eval] !$first_public_state
; [then-branch: 97 | False | dead]
; [else-branch: 97 | True | live]
(push) ; 8
; [else-branch: 97 | True]
(pop) ; 8
(pop) ; 7
(push) ; 7
; [else-branch: 91 | !($out_of_gas@415@01)]
(assert (not $out_of_gas@415@01))
(pop) ; 7
; [eval] !$out_of_gas
(push) ; 7
(set-option :timeout 10)
(assert (not $out_of_gas@415@01))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not $out_of_gas@415@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 98 | !($out_of_gas@415@01) | live]
; [else-branch: 98 | $out_of_gas@415@01 | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 98 | !($out_of_gas@415@01)]
(assert (not $out_of_gas@415@01))
; [exec]
; label end
(push) ; 8
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 99 | True | live]
; [else-branch: 99 | False | dead]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 99 | True]
; [exec]
; $old_self := self
; [eval] !$succ
; [then-branch: 100 | False | dead]
; [else-branch: 100 | True | live]
(push) ; 9
; [else-branch: 100 | True]
(pop) ; 9
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 101 | True | live]
; [else-branch: 101 | False | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 101 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@475@01 $Snap)
(assert (= $t@475@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@416@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@476@01 $Struct)
(assert (=
  self@476@01
  ($struct_set<$Struct> self@472@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@472@01 5))
    l$havoc$1@416@01))))
; [exec]
; $contracts := l$havoc$2
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 102 | True | live]
; [else-branch: 102 | False | dead]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 102 | True]
; [exec]
; $old_self := self
(pop) ; 10
; [eval] !$first_public_state
; [then-branch: 103 | False | dead]
; [else-branch: 103 | True | live]
(push) ; 10
; [else-branch: 103 | True]
(pop) ; 10
(pop) ; 9
(pop) ; 8
; [eval] !$first_public_state
; [then-branch: 104 | False | dead]
; [else-branch: 104 | True | live]
(push) ; 8
; [else-branch: 104 | True]
(pop) ; 8
(pop) ; 7
(push) ; 7
; [else-branch: 98 | $out_of_gas@415@01]
(assert $out_of_gas@415@01)
(pop) ; 7
(pop) ; 6
(pop) ; 5
(pop) ; 4
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$giveRightToVote ----------
(declare-const l$voter@477@01 Int)
(declare-const $succ@478@01 Bool)
(declare-const l$voter@479@01 Int)
(declare-const $succ@480@01 Bool)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@481@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@482@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@483@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@484@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@485@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@486@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@487@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@488@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@489@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@490@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@491@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@492@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@493@01 Bool)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@494@01 Bool)
; [exec]
; var l$havoc: Int
(declare-const l$havoc@495@01 Int)
; [exec]
; var l$havoc$1: $Map[Int, $Struct]
(declare-const l$havoc$1@496@01 $Map<Int~_$Struct>)
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@497@01 $Snap)
(assert (= $t@497@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@498@01 Int)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 105 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), $q0@498@01), 0))) | live]
; [else-branch: 105 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), $q0@498@01), 0)) | live]
(push) ; 5
; [then-branch: 105 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), $q0@498@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@498@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 105 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), $q0@498@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@498@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@498@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@498@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@498@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@498@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@498@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@498@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1199@11@1199@441-aux|)))
(assert (forall (($q0@498@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@498@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@498@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@498@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1199@11@1199@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@499@01 $Snap)
(assert (= $t@499@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@500@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 106 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), $q0@500@01), 2))) | live]
; [else-branch: 106 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), $q0@500@01), 2)) | live]
(push) ; 5
; [then-branch: 106 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), $q0@500@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@500@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 106 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), $q0@500@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@500@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@500@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@500@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@500@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@500@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@500@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@500@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1200@11@1200@412-aux|)))
(assert (forall (($q0@500@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@500@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@500@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@500@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1200@11@1200@412|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@501@01 $Snap)
(assert (= $t@501@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@502@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 107 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), $q0@502@01), 3))) | live]
; [else-branch: 107 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), $q0@502@01), 3)) | live]
(push) ; 5
; [then-branch: 107 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), $q0@502@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@502@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 107 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), $q0@502@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@502@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@502@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@502@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@502@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@502@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@502@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@502@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1201@11@1201@441-aux|)))
(assert (forall (($q0@502@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@502@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@502@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@502@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1201@11@1201@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@503@01 $Snap)
(assert (= $t@503@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@504@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@504@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@504@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) $q0@504@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1202@11@1202@272|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@505@01 $Snap)
(assert (= $t@505@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@506@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@506@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 1)) $q1@506@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 1)) $q1@506@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1203@11@1203@246|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@507@01 $Snap)
(assert (= $t@507@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@508@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(push) ; 4
; [then-branch: 108 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 1)), $q1@508@01), 1))) | live]
; [else-branch: 108 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 1)), $q1@508@01), 1)) | live]
(push) ; 5
; [then-branch: 108 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 1)), $q1@508@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 1)) $q1@508@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 108 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 1)), $q1@508@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 1)) $q1@508@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 1)) $q1@508@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 1)) $q1@508@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@508@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 1)) $q1@508@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 1)) $q1@508@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 1)) $q1@508@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1204@11@1204@441-aux|)))
(assert (forall (($q1@508@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 1)) $q1@508@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 1)) $q1@508@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 1)) $q1@508@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1204@11@1204@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@509@01 $Snap)
(assert (= $t@509@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@510@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@510@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 1)) $q1@510@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 1)) $q1@510@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1205@11@1205@279|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@511@01 $Snap)
(assert (= $t@511@01 ($Snap.combine ($Snap.first $t@511@01) ($Snap.second $t@511@01))))
(assert (= ($Snap.first $t@511@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@485@01 2))))
(assert (= ($Snap.second $t@511@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@485@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 3)): Int) &&
;   ($struct_get($struct_loc(self, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@512@01 $Snap)
(assert (= $t@512@01 ($Snap.combine ($Snap.first $t@512@01) ($Snap.second $t@512@01))))
(assert (= ($Snap.first $t@512@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 3)): Int)
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@485@01 3))))
(assert (= ($Snap.second $t@512@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@485@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 4)): Int) &&
;   ($struct_get($struct_loc(self, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@513@01 $Snap)
(assert (= $t@513@01 ($Snap.combine ($Snap.first $t@513@01) ($Snap.second $t@513@01))))
(assert (= ($Snap.first $t@513@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@485@01 4))))
(assert (= ($Snap.second $t@513@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@485@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@514@01 $Snap)
(assert (= $t@514@01 ($Snap.combine ($Snap.first $t@514@01) ($Snap.second $t@514@01))))
(assert (= ($Snap.first $t@514@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@485@01 5))))
(assert (= ($Snap.second $t@514@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@485@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@515@01 $Snap)
(assert (= $t@515@01 ($Snap.combine ($Snap.first $t@515@01) ($Snap.second $t@515@01))))
(assert (= ($Snap.first $t@515@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@485@01 6))))
(assert (= ($Snap.second $t@515@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@485@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@516@01 $Snap)
(assert (= $t@516@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@517@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(push) ; 4
; [then-branch: 109 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@485@01, 8)), $q3@517@01)) | live]
; [else-branch: 109 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@485@01, 8)), $q3@517@01) | live]
(push) ; 5
; [then-branch: 109 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@485@01, 8)), $q3@517@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 8)) $q3@517@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 109 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@485@01, 8)), $q3@517@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 8)) $q3@517@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 8)) $q3@517@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 8)) $q3@517@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@517@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 8)) $q3@517@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 8)) $q3@517@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 8)) $q3@517@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1211@11@1211@345-aux|)))
(assert (forall (($q3@517@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 8)) $q3@517@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 8)) $q3@517@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 8)) $q3@517@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1211@11@1211@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $t@518@01 $Snap)
(assert (= $t@518@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $q3@519@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@519@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 8)) $q3@519@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 8)) $q3@519@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1212@11@1212@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@520@01 $Snap)
(assert (= $t@520@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@521@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(push) ; 4
; [then-branch: 110 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@485@01, 9)), $q4@521@01)) | live]
; [else-branch: 110 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@485@01, 9)), $q4@521@01) | live]
(push) ; 5
; [then-branch: 110 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@485@01, 9)), $q4@521@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 9)) $q4@521@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 110 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@485@01, 9)), $q4@521@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 9)) $q4@521@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 9)) $q4@521@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 9)) $q4@521@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@521@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 9)) $q4@521@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 9)) $q4@521@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 9)) $q4@521@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1213@11@1213@345-aux|)))
(assert (forall (($q4@521@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 9)) $q4@521@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 9)) $q4@521@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 9)) $q4@521@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1213@11@1213@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $t@522@01 $Snap)
(assert (= $t@522@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $q4@523@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
; [eval] ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@523@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 9)) $q4@523@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@485@01 9)) $q4@523@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1214@11@1214@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@524@01 $Snap)
(assert (= $t@524@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@485@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@525@01 $Snap)
(assert (= $t@525@01 ($Snap.combine ($Snap.first $t@525@01) ($Snap.second $t@525@01))))
(assert (= ($Snap.first $t@525@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@525@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= l$voter &&
;   l$voter <= 1461501637330902918203684832716283019655932542975
(declare-const $t@526@01 $Snap)
(assert (= $t@526@01 ($Snap.combine ($Snap.first $t@526@01) ($Snap.second $t@526@01))))
(assert (= ($Snap.first $t@526@01) $Snap.unit))
; [eval] 0 <= l$voter
(assert (<= 0 l$voter@479@01))
(assert (= ($Snap.second $t@526@01) $Snap.unit))
; [eval] l$voter <= 1461501637330902918203684832716283019655932542975
(assert (<= l$voter@479@01 1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@527@01 $Snap)
(assert (= $t@527@01 ($Snap.combine ($Snap.first $t@527@01) ($Snap.second $t@527@01))))
(assert (= ($Snap.first $t@527@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@482@01 0))))
(assert (= ($Snap.second $t@527@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@482@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@528@01 $Snap)
(assert (= $t@528@01 ($Snap.combine ($Snap.first $t@528@01) ($Snap.second $t@528@01))))
(assert (= ($Snap.first $t@528@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@482@01 1))))
(assert (= ($Snap.second $t@528@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@482@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@529@01 $Snap)
(assert (= $t@529@01 ($Snap.combine ($Snap.first $t@529@01) ($Snap.second $t@529@01))))
(assert (= ($Snap.first $t@529@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@482@01 2))))
(assert (= ($Snap.second $t@529@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@482@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@530@01 $Snap)
(assert (= $t@530@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@482@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@531@01 $Snap)
(assert (= $t@531@01 ($Snap.combine ($Snap.first $t@531@01) ($Snap.second $t@531@01))))
(assert (= ($Snap.first $t@531@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@482@01 4))))
(assert (= ($Snap.second $t@531@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@482@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@532@01 $Snap)
(assert (= $t@532@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@482@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@533@01 $Snap)
(assert (= $t@533@01 ($Snap.combine ($Snap.first $t@533@01) ($Snap.second $t@533@01))))
(assert (= ($Snap.first $t@533@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@481@01 0))))
(assert (= ($Snap.second $t@533@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@481@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@534@01 $Snap)
(assert (= $t@534@01 ($Snap.combine ($Snap.first $t@534@01) ($Snap.second $t@534@01))))
(assert (= ($Snap.first $t@534@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@481@01 1))))
(assert (= ($Snap.second $t@534@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@481@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@535@01 $Snap)
(assert (= $t@535@01 ($Snap.combine ($Snap.first $t@535@01) ($Snap.second $t@535@01))))
(assert (= ($Snap.first $t@535@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@481@01 2))))
(assert (= ($Snap.second $t@535@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@481@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@536@01 $Snap)
(assert (= $t@536@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@481@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@537@01 $Snap)
(assert (= $t@537@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@481@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $t@538@01 $Snap)
(assert (= $t@538@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $a@539@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@540@01 $Snap)
(assert (= $t@540@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@481@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [eval] !(($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(self, 3)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(self, 3)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@481@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@485@01 3)))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@481@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@485@01 3))))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 111 | $struct_get[Int]($struct_loc[Int](msg@481@01, 0)) != $struct_get[Int]($struct_loc[Int](self@485@01, 3)) | live]
; [else-branch: 111 | $struct_get[Int]($struct_loc[Int](msg@481@01, 0)) == $struct_get[Int]($struct_loc[Int](self@485@01, 3)) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 111 | $struct_get[Int]($struct_loc[Int](msg@481@01, 0)) != $struct_get[Int]($struct_loc[Int](self@485@01, 3))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@481@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@485@01 3)))))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 112 | True | live]
; [else-branch: 112 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 112 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@541@01 $Snap)
(assert (= $t@541@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@495@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@542@01 $Struct)
(assert (=
  self@542@01
  ($struct_set<$Struct> self@485@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@485@01 5))
    l$havoc@495@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 4
; [then-branch: 113 | False | dead]
; [else-branch: 113 | True | live]
(set-option :timeout 0)
(push) ; 4
; [else-branch: 113 | True]
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 111 | $struct_get[Int]($struct_loc[Int](msg@481@01, 0)) == $struct_get[Int]($struct_loc[Int](self@485@01, 3))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@481@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@485@01 3))))
(pop) ; 3
; [eval] !!(($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(self, 3)): Int))
; [eval] !(($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(self, 3)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(self, 3)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@481@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@485@01 3))))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@481@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@485@01 3)))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 114 | $struct_get[Int]($struct_loc[Int](msg@481@01, 0)) == $struct_get[Int]($struct_loc[Int](self@485@01, 3)) | live]
; [else-branch: 114 | $struct_get[Int]($struct_loc[Int](msg@481@01, 0)) != $struct_get[Int]($struct_loc[Int](self@485@01, 3)) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 114 | $struct_get[Int]($struct_loc[Int](msg@481@01, 0)) == $struct_get[Int]($struct_loc[Int](self@485@01, 3))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@481@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@485@01 3))))
; [eval] !!($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 1)): Bool)
; [eval] !($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 1)): Bool)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 1)))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 1))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 115 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 1)) | live]
; [else-branch: 115 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 1))) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 115 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 1)))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 5
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 116 | True | live]
; [else-branch: 116 | False | dead]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 116 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@543@01 $Snap)
(assert (= $t@543@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@495@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@544@01 $Struct)
(assert (=
  self@544@01
  ($struct_set<$Struct> self@485@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@485@01 5))
    l$havoc@495@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 5
; [then-branch: 117 | False | dead]
; [else-branch: 117 | True | live]
(set-option :timeout 0)
(push) ; 5
; [else-branch: 117 | True]
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 115 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 1))))
(pop) ; 4
; [eval] !!!($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 1)): Bool)
; [eval] !!($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 1)): Bool)
; [eval] !($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 1)): Bool)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
(set-option :timeout 10)
(assert (not ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 1))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 1)))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 118 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 1))) | live]
; [else-branch: 118 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 1)) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 118 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 1))))
; [eval] !(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 0)): Int) == 0)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 0)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 0))
  0)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 0))
    0))))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 119 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 0)) != 0 | live]
; [else-branch: 119 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 0)) == 0 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 119 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 0)) != 0]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 0))
    0)))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 120 | True | live]
; [else-branch: 120 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 120 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@545@01 $Snap)
(assert (= $t@545@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@495@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@546@01 $Struct)
(assert (=
  self@546@01
  ($struct_set<$Struct> self@485@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@485@01 5))
    l$havoc@495@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 6
; [then-branch: 121 | False | dead]
; [else-branch: 121 | True | live]
(set-option :timeout 0)
(push) ; 6
; [else-branch: 121 | True]
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 119 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 0)) == 0]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 0))
  0))
(pop) ; 5
; [eval] !!(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 0)): Int) == 0)
; [eval] !(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 0)): Int) == 0)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 0)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 0))
    0))))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 0))
  0)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 122 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 0)) == 0 | live]
; [else-branch: 122 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 0)) != 0 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 122 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 0)) == 0]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 0))
  0))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$voter, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$voter): $Struct), 0, 1): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 0, 1): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 0, 1): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct), 0, 1): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$voter): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@547@01 $Struct)
(assert (=
  self@547@01
  ($struct_set<$Struct> self@485@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 0 1)))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1 < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1 > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1 < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 2)): Int))
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
; [eval] -170141183460469231731687303715884105728
(push) ; 6
; [then-branch: 123 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728 | live]
; [else-branch: 123 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728) | live]
(push) ; 7
; [then-branch: 123 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
    1)
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 7
(push) ; 7
; [else-branch: 123 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
      1)
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1 > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 2)): Int))
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
        1)
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
      1)
    (- 0 170141183460469231731687303715884105728))))
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
        1)
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
        1)
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
      1)
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
      1)
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 124 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 > 170141183460469231731687303715884105727 | live]
; [else-branch: 124 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 124 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
      1)
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
      1)
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 7
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 125 | True | live]
; [else-branch: 125 | False | dead]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 125 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@548@01 $Snap)
(assert (= $t@548@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@495@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@549@01 $Struct)
(assert (=
  self@549@01
  ($struct_set<$Struct> self@485@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@485@01 5))
    l$havoc@495@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 7
; [then-branch: 126 | False | dead]
; [else-branch: 126 | True | live]
(set-option :timeout 0)
(push) ; 7
; [else-branch: 126 | True]
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 124 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
        1)
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
        1)
      170141183460469231731687303715884105727))))
(pop) ; 6
; [eval] !($unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1 < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1 > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1 < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1 > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1 < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 2)): Int))
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
; [eval] -170141183460469231731687303715884105728
(push) ; 6
; [then-branch: 127 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728 | live]
; [else-branch: 127 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728) | live]
(push) ; 7
; [then-branch: 127 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
    1)
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 7
(push) ; 7
; [else-branch: 127 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
      1)
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1 > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 2)): Int))
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(push) ; 6
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
      1)
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
      1)
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
        1)
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
        1)
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 128 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 > 170141183460469231731687303715884105727) | live]
; [else-branch: 128 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 128 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
        1)
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
        1)
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 2, $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) +
;   1): $Struct)
; [eval] ($struct_set(self, 2, $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1): $Struct)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int))) + 1
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 2)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 2)): Int))
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(declare-const self@550@01 $Struct)
(assert (=
  self@550@01
  ($struct_set<$Struct> self@547@01 2 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
    1))))
; [exec]
; label return
(push) ; 7
(set-option :timeout 10)
(assert (not (not $out_of_gas@494@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not $out_of_gas@494@01))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 129 | $out_of_gas@494@01 | live]
; [else-branch: 129 | !($out_of_gas@494@01) | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 129 | $out_of_gas@494@01]
(assert $out_of_gas@494@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 8
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 130 | True | live]
; [else-branch: 130 | False | dead]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 130 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@551@01 $Snap)
(assert (= $t@551@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@495@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@552@01 $Struct)
(assert (=
  self@552@01
  ($struct_set<$Struct> self@485@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@485@01 5))
    l$havoc@495@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 8
; [then-branch: 131 | False | dead]
; [else-branch: 131 | True | live]
(set-option :timeout 0)
(push) ; 8
; [else-branch: 131 | True]
(pop) ; 8
(pop) ; 7
(push) ; 7
; [else-branch: 129 | !($out_of_gas@494@01)]
(assert (not $out_of_gas@494@01))
(pop) ; 7
; [eval] !$out_of_gas
(push) ; 7
(set-option :timeout 10)
(assert (not $out_of_gas@494@01))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not $out_of_gas@494@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 132 | !($out_of_gas@494@01) | live]
; [else-branch: 132 | $out_of_gas@494@01 | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 132 | !($out_of_gas@494@01)]
(assert (not $out_of_gas@494@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 133 | False | dead]
; [else-branch: 133 | True | live]
(push) ; 8
; [else-branch: 133 | True]
(pop) ; 8
(push) ; 8
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 134 | True | live]
; [else-branch: 134 | False | dead]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 134 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@553@01 $Snap)
(assert (= $t@553@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@495@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@554@01 $Struct)
(assert (=
  self@554@01
  ($struct_set<$Struct> self@550@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@550@01 5))
    l$havoc@495@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 8
(pop) ; 7
(set-option :timeout 0)
(push) ; 7
; [else-branch: 132 | $out_of_gas@494@01]
(assert $out_of_gas@494@01)
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 128 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@547@01, 2)))) + 1 > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
      1)
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@547@01 2))))
      1)
    170141183460469231731687303715884105727)))
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 122 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 0)) != 0]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 0))
    0)))
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 118 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@485@01, 0)), l$voter@479@01), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@485@01 0)) l$voter@479@01) 1)))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 114 | $struct_get[Int]($struct_loc[Int](msg@481@01, 0)) != $struct_get[Int]($struct_loc[Int](self@485@01, 3))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@481@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@485@01 3)))))
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$forwardWeight ----------
(declare-const l$delegate_with_weight_to_forward@555@01 Int)
(declare-const $succ@556@01 Bool)
(declare-const l$delegate_with_weight_to_forward@557@01 Int)
(declare-const $succ@558@01 Bool)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@559@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@560@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@561@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@562@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@563@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@564@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@565@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@566@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@567@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@568@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@569@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@570@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@571@01 Bool)
; [exec]
; var l$i0$delegate_with_weight_to_forward: Int
(declare-const l$i0$delegate_with_weight_to_forward@572@01 Int)
; [exec]
; var i0$$pre_self: $Struct
(declare-const i0$$pre_self@573@01 $Struct)
; [exec]
; var i0$$pre_$contracts: $Map[Int, $Struct]
(declare-const i0$$pre_$contracts@574@01 $Map<Int~_$Struct>)
; [exec]
; var l$i1$addr: Int
(declare-const l$i1$addr@575@01 Int)
; [exec]
; var i1$$res: Bool
(declare-const i1$$res@576@01 Bool)
; [exec]
; var l$i0$target: Int
(declare-const l$i0$target@577@01 Int)
; [exec]
; var l$i0$i: $Int
(declare-const l$i0$i@578@01 $Int)
; [exec]
; var l$i2$addr: Int
(declare-const l$i2$addr@579@01 Int)
; [exec]
; var i2$$res: Bool
(declare-const i2$$res@580@01 Bool)
; [exec]
; var l$i3$addr: Int
(declare-const l$i3$addr@581@01 Int)
; [exec]
; var i3$$res: Bool
(declare-const i3$$res@582@01 Bool)
; [exec]
; var l$i4$addr: Int
(declare-const l$i4$addr@583@01 Int)
; [exec]
; var i4$$res: Bool
(declare-const i4$$res@584@01 Bool)
; [exec]
; var l$i5$addr: Int
(declare-const l$i5$addr@585@01 Int)
; [exec]
; var i5$$res: Bool
(declare-const i5$$res@586@01 Bool)
; [exec]
; var l$i0$weight_to_forward: $Int
(declare-const l$i0$weight_to_forward@587@01 $Int)
; [exec]
; var l$i6$addr: Int
(declare-const l$i6$addr@588@01 Int)
; [exec]
; var i6$$res: Bool
(declare-const i6$$res@589@01 Bool)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@590@01 Bool)
; [exec]
; var l$havoc: Int
(declare-const l$havoc@591@01 Int)
; [exec]
; var l$havoc$1: $Map[Int, $Struct]
(declare-const l$havoc$1@592@01 $Map<Int~_$Struct>)
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@593@01 $Snap)
(assert (= $t@593@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@594@01 Int)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 135 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), $q0@594@01), 0))) | live]
; [else-branch: 135 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), $q0@594@01), 0)) | live]
(push) ; 5
; [then-branch: 135 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), $q0@594@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@594@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 135 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), $q0@594@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@594@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@594@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@594@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@594@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@594@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@594@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@594@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1322@11@1322@441-aux|)))
(assert (forall (($q0@594@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@594@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@594@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@594@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1322@11@1322@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@595@01 $Snap)
(assert (= $t@595@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@596@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 136 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), $q0@596@01), 2))) | live]
; [else-branch: 136 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), $q0@596@01), 2)) | live]
(push) ; 5
; [then-branch: 136 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), $q0@596@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@596@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 136 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), $q0@596@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@596@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@596@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@596@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@596@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@596@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@596@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@596@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1323@11@1323@412-aux|)))
(assert (forall (($q0@596@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@596@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@596@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@596@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1323@11@1323@412|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@597@01 $Snap)
(assert (= $t@597@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@598@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 137 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), $q0@598@01), 3))) | live]
; [else-branch: 137 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), $q0@598@01), 3)) | live]
(push) ; 5
; [then-branch: 137 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), $q0@598@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@598@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 137 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), $q0@598@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@598@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@598@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@598@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@598@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@598@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@598@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@598@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1324@11@1324@441-aux|)))
(assert (forall (($q0@598@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@598@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@598@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@598@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1324@11@1324@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@599@01 $Snap)
(assert (= $t@599@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@600@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@600@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@600@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) $q0@600@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1325@11@1325@272|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@601@01 $Snap)
(assert (= $t@601@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@602@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@602@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 1)) $q1@602@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 1)) $q1@602@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1326@11@1326@246|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@603@01 $Snap)
(assert (= $t@603@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@604@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(push) ; 4
; [then-branch: 138 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 1)), $q1@604@01), 1))) | live]
; [else-branch: 138 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 1)), $q1@604@01), 1)) | live]
(push) ; 5
; [then-branch: 138 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 1)), $q1@604@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 1)) $q1@604@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 138 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 1)), $q1@604@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 1)) $q1@604@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 1)) $q1@604@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 1)) $q1@604@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@604@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 1)) $q1@604@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 1)) $q1@604@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 1)) $q1@604@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1327@11@1327@441-aux|)))
(assert (forall (($q1@604@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 1)) $q1@604@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 1)) $q1@604@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 1)) $q1@604@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1327@11@1327@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@605@01 $Snap)
(assert (= $t@605@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@606@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@606@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 1)) $q1@606@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 1)) $q1@606@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1328@11@1328@279|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@607@01 $Snap)
(assert (= $t@607@01 ($Snap.combine ($Snap.first $t@607@01) ($Snap.second $t@607@01))))
(assert (= ($Snap.first $t@607@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@563@01 2))))
(assert (= ($Snap.second $t@607@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@563@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 3)): Int) &&
;   ($struct_get($struct_loc(self, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@608@01 $Snap)
(assert (= $t@608@01 ($Snap.combine ($Snap.first $t@608@01) ($Snap.second $t@608@01))))
(assert (= ($Snap.first $t@608@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 3)): Int)
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@563@01 3))))
(assert (= ($Snap.second $t@608@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@563@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 4)): Int) &&
;   ($struct_get($struct_loc(self, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@609@01 $Snap)
(assert (= $t@609@01 ($Snap.combine ($Snap.first $t@609@01) ($Snap.second $t@609@01))))
(assert (= ($Snap.first $t@609@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@563@01 4))))
(assert (= ($Snap.second $t@609@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@563@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@610@01 $Snap)
(assert (= $t@610@01 ($Snap.combine ($Snap.first $t@610@01) ($Snap.second $t@610@01))))
(assert (= ($Snap.first $t@610@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@563@01 5))))
(assert (= ($Snap.second $t@610@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@611@01 $Snap)
(assert (= $t@611@01 ($Snap.combine ($Snap.first $t@611@01) ($Snap.second $t@611@01))))
(assert (= ($Snap.first $t@611@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@563@01 6))))
(assert (= ($Snap.second $t@611@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@563@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@612@01 $Snap)
(assert (= $t@612@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@613@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(push) ; 4
; [then-branch: 139 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@563@01, 8)), $q3@613@01)) | live]
; [else-branch: 139 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@563@01, 8)), $q3@613@01) | live]
(push) ; 5
; [then-branch: 139 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@563@01, 8)), $q3@613@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 8)) $q3@613@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 139 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@563@01, 8)), $q3@613@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 8)) $q3@613@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 8)) $q3@613@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 8)) $q3@613@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@613@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 8)) $q3@613@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 8)) $q3@613@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 8)) $q3@613@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1334@11@1334@345-aux|)))
(assert (forall (($q3@613@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 8)) $q3@613@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 8)) $q3@613@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 8)) $q3@613@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1334@11@1334@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $t@614@01 $Snap)
(assert (= $t@614@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $q3@615@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@615@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 8)) $q3@615@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 8)) $q3@615@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1335@11@1335@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@616@01 $Snap)
(assert (= $t@616@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@617@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(push) ; 4
; [then-branch: 140 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@563@01, 9)), $q4@617@01)) | live]
; [else-branch: 140 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@563@01, 9)), $q4@617@01) | live]
(push) ; 5
; [then-branch: 140 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@563@01, 9)), $q4@617@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 9)) $q4@617@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 140 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@563@01, 9)), $q4@617@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 9)) $q4@617@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 9)) $q4@617@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 9)) $q4@617@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@617@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 9)) $q4@617@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 9)) $q4@617@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 9)) $q4@617@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1336@11@1336@345-aux|)))
(assert (forall (($q4@617@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 9)) $q4@617@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 9)) $q4@617@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 9)) $q4@617@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1336@11@1336@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $t@618@01 $Snap)
(assert (= $t@618@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $q4@619@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
; [eval] ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@619@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 9)) $q4@619@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@563@01 9)) $q4@619@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1337@11@1337@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@620@01 $Snap)
(assert (= $t@620@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@563@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@621@01 $Snap)
(assert (= $t@621@01 ($Snap.combine ($Snap.first $t@621@01) ($Snap.second $t@621@01))))
(assert (= ($Snap.first $t@621@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@621@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= l$delegate_with_weight_to_forward &&
;   l$delegate_with_weight_to_forward <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@622@01 $Snap)
(assert (= $t@622@01 ($Snap.combine ($Snap.first $t@622@01) ($Snap.second $t@622@01))))
(assert (= ($Snap.first $t@622@01) $Snap.unit))
; [eval] 0 <= l$delegate_with_weight_to_forward
(assert (<= 0 l$delegate_with_weight_to_forward@557@01))
(assert (= ($Snap.second $t@622@01) $Snap.unit))
; [eval] l$delegate_with_weight_to_forward <= 1461501637330902918203684832716283019655932542975
(assert (<=
  l$delegate_with_weight_to_forward@557@01
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@623@01 $Snap)
(assert (= $t@623@01 ($Snap.combine ($Snap.first $t@623@01) ($Snap.second $t@623@01))))
(assert (= ($Snap.first $t@623@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@560@01 0))))
(assert (= ($Snap.second $t@623@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@560@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@624@01 $Snap)
(assert (= $t@624@01 ($Snap.combine ($Snap.first $t@624@01) ($Snap.second $t@624@01))))
(assert (= ($Snap.first $t@624@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@560@01 1))))
(assert (= ($Snap.second $t@624@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@560@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@625@01 $Snap)
(assert (= $t@625@01 ($Snap.combine ($Snap.first $t@625@01) ($Snap.second $t@625@01))))
(assert (= ($Snap.first $t@625@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@560@01 2))))
(assert (= ($Snap.second $t@625@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@560@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@626@01 $Snap)
(assert (= $t@626@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@560@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@627@01 $Snap)
(assert (= $t@627@01 ($Snap.combine ($Snap.first $t@627@01) ($Snap.second $t@627@01))))
(assert (= ($Snap.first $t@627@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@560@01 4))))
(assert (= ($Snap.second $t@627@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@560@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@628@01 $Snap)
(assert (= $t@628@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@560@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@629@01 $Snap)
(assert (= $t@629@01 ($Snap.combine ($Snap.first $t@629@01) ($Snap.second $t@629@01))))
(assert (= ($Snap.first $t@629@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@559@01 0))))
(assert (= ($Snap.second $t@629@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@559@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@630@01 $Snap)
(assert (= $t@630@01 ($Snap.combine ($Snap.first $t@630@01) ($Snap.second $t@630@01))))
(assert (= ($Snap.first $t@630@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@559@01 1))))
(assert (= ($Snap.second $t@630@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@559@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@631@01 $Snap)
(assert (= $t@631@01 ($Snap.combine ($Snap.first $t@631@01) ($Snap.second $t@631@01))))
(assert (= ($Snap.first $t@631@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@559@01 2))))
(assert (= ($Snap.second $t@631@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@559@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@632@01 $Snap)
(assert (= $t@632@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@559@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@633@01 $Snap)
(assert (= $t@633@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@559@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $t@634@01 $Snap)
(assert (= $t@634@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $a@635@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@636@01 $Snap)
(assert (= $t@636@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@559@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; i0$$pre_self := self
; [exec]
; i0$$pre_$contracts := $contracts
; [exec]
; l$i0$delegate_with_weight_to_forward := l$delegate_with_weight_to_forward
; [exec]
; l$i1$addr := l$i0$delegate_with_weight_to_forward
; [exec]
; i1$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i1$addr): $Struct), 2)): Int) !=
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i1$addr): $Struct), 2)): Int) != 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i1$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i1$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i1$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const i1$$res@637@01 Bool)
(assert (=
  i1$$res@637@01
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 2))
      0))))
; [exec]
; label i1$return
; [eval] !i1$$res
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not i1$$res@637@01))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not i1$$res@637@01)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 141 | !(i1$$res@637@01) | live]
; [else-branch: 141 | i1$$res@637@01 | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 141 | !(i1$$res@637@01)]
(assert (not i1$$res@637@01))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 142 | True | live]
; [else-branch: 142 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 142 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@638@01 $Snap)
(assert (= $t@638@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@639@01 $Struct)
(assert (=
  self@639@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 4
; [then-branch: 143 | False | dead]
; [else-branch: 143 | True | live]
(set-option :timeout 0)
(push) ; 4
; [else-branch: 143 | True]
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 141 | i1$$res@637@01]
(assert i1$$res@637@01)
(pop) ; 3
; [eval] !!i1$$res
; [eval] !i1$$res
(push) ; 3
(set-option :timeout 10)
(assert (not (not i1$$res@637@01)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not i1$$res@637@01))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 144 | i1$$res@637@01 | live]
; [else-branch: 144 | !(i1$$res@637@01) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 144 | i1$$res@637@01]
(assert i1$$res@637@01)
; [eval] !(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int) > 0)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int) > 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0))
  0)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0))
    0))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 145 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), l$delegate_with_weight_to_forward@557@01), 0)) > 0) | live]
; [else-branch: 145 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), l$delegate_with_weight_to_forward@557@01), 0)) > 0 | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 145 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), l$delegate_with_weight_to_forward@557@01), 0)) > 0)]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0))
    0)))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 5
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 146 | True | live]
; [else-branch: 146 | False | dead]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 146 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@640@01 $Snap)
(assert (= $t@640@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@641@01 $Struct)
(assert (=
  self@641@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 5
; [then-branch: 147 | False | dead]
; [else-branch: 147 | True | live]
(set-option :timeout 0)
(push) ; 5
; [else-branch: 147 | True]
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 145 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), l$delegate_with_weight_to_forward@557@01), 0)) > 0]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0))
  0))
(pop) ; 4
; [eval] !!(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int) > 0)
; [eval] !(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int) > 0)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int) > 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0))
    0))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0))
  0)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 148 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), l$delegate_with_weight_to_forward@557@01), 0)) > 0 | live]
; [else-branch: 148 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), l$delegate_with_weight_to_forward@557@01), 0)) > 0) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 148 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), l$delegate_with_weight_to_forward@557@01), 0)) > 0]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0))
  0))
; [exec]
; l$i0$target := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$target@642@01 Int)
(assert (=
  l$i0$target@642@01
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 2))))
; [exec]
; l$i0$i := $wrap($range(0, 4)[0])
; [eval] $wrap($range(0, 4)[0])
; [eval] $range(0, 4)[0]
; [eval] $range(0, 4)
(push) ; 5
(assert (not (< 0 (Seq_length ($range<Seq<Int>> 0 4)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(declare-const l$i0$i@643@01 $Int)
(assert (= l$i0$i@643@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 4) 0))))
; [exec]
; l$i2$addr := l$i0$target
; [exec]
; i2$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i2$addr): $Struct), 2)): Int) !=
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i2$addr): $Struct), 2)): Int) != 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i2$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i2$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i2$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const i2$$res@644@01 Bool)
(assert (=
  i2$$res@644@01
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$i0$target@642@01) 2))
      0))))
; [exec]
; label i2$return
(push) ; 5
(set-option :timeout 10)
(assert (not (not i2$$res@644@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not i2$$res@644@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 149 | i2$$res@644@01 | live]
; [else-branch: 149 | !(i2$$res@644@01) | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 149 | i2$$res@644@01]
(assert i2$$res@644@01)
; [exec]
; l$i0$target := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$target@645@01 Int)
(assert (=
  l$i0$target@645@01
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$i0$target@642@01) 2))))
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 6
(set-option :timeout 10)
(assert (not (not (= l$i0$target@645@01 l$delegate_with_weight_to_forward@557@01))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= l$i0$target@645@01 l$delegate_with_weight_to_forward@557@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 150 | l$i0$target@645@01 == l$delegate_with_weight_to_forward@557@01 | live]
; [else-branch: 150 | l$i0$target@645@01 != l$delegate_with_weight_to_forward@557@01 | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 150 | l$i0$target@645@01 == l$delegate_with_weight_to_forward@557@01]
(assert (= l$i0$target@645@01 l$delegate_with_weight_to_forward@557@01))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 7
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 151 | True | live]
; [else-branch: 151 | False | dead]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 151 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@646@01 $Snap)
(assert (= $t@646@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@647@01 $Struct)
(assert (=
  self@647@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 7
; [then-branch: 152 | False | dead]
; [else-branch: 152 | True | live]
(set-option :timeout 0)
(push) ; 7
; [else-branch: 152 | True]
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 150 | l$i0$target@645@01 != l$delegate_with_weight_to_forward@557@01]
(assert (not (= l$i0$target@645@01 l$delegate_with_weight_to_forward@557@01)))
(pop) ; 6
; [eval] !!(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 6
(set-option :timeout 10)
(assert (not (= l$i0$target@645@01 l$delegate_with_weight_to_forward@557@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not (= l$i0$target@645@01 l$delegate_with_weight_to_forward@557@01))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 153 | l$i0$target@645@01 != l$delegate_with_weight_to_forward@557@01 | live]
; [else-branch: 153 | l$i0$target@645@01 == l$delegate_with_weight_to_forward@557@01 | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 153 | l$i0$target@645@01 != l$delegate_with_weight_to_forward@557@01]
(assert (not (= l$i0$target@645@01 l$delegate_with_weight_to_forward@557@01)))
; [exec]
; label continue_0
; [exec]
; l$i0$i := $wrap($range(0, 4)[1])
; [eval] $wrap($range(0, 4)[1])
; [eval] $range(0, 4)[1]
; [eval] $range(0, 4)
(push) ; 7
(assert (not (< 1 (Seq_length ($range<Seq<Int>> 0 4)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(declare-const l$i0$i@648@01 $Int)
(assert (= l$i0$i@648@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 4) 1))))
; [exec]
; l$i3$addr := l$i0$target
; [exec]
; i3$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i3$addr): $Struct), 2)): Int) !=
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i3$addr): $Struct), 2)): Int) != 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i3$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i3$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i3$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const i3$$res@649@01 Bool)
(assert (=
  i3$$res@649@01
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$i0$target@645@01) 2))
      0))))
; [exec]
; label i3$return
(push) ; 7
(set-option :timeout 10)
(assert (not (not i3$$res@649@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not i3$$res@649@01))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 154 | i3$$res@649@01 | live]
; [else-branch: 154 | !(i3$$res@649@01) | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 154 | i3$$res@649@01]
(assert i3$$res@649@01)
; [exec]
; l$i0$target := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$target@650@01 Int)
(assert (=
  l$i0$target@650@01
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$i0$target@645@01) 2))))
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 8
(set-option :timeout 10)
(assert (not (not (= l$i0$target@650@01 l$delegate_with_weight_to_forward@557@01))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= l$i0$target@650@01 l$delegate_with_weight_to_forward@557@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 155 | l$i0$target@650@01 == l$delegate_with_weight_to_forward@557@01 | live]
; [else-branch: 155 | l$i0$target@650@01 != l$delegate_with_weight_to_forward@557@01 | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 155 | l$i0$target@650@01 == l$delegate_with_weight_to_forward@557@01]
(assert (= l$i0$target@650@01 l$delegate_with_weight_to_forward@557@01))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 156 | True | live]
; [else-branch: 156 | False | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 156 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@651@01 $Snap)
(assert (= $t@651@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@652@01 $Struct)
(assert (=
  self@652@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 9
; [then-branch: 157 | False | dead]
; [else-branch: 157 | True | live]
(set-option :timeout 0)
(push) ; 9
; [else-branch: 157 | True]
(pop) ; 9
(pop) ; 8
(push) ; 8
; [else-branch: 155 | l$i0$target@650@01 != l$delegate_with_weight_to_forward@557@01]
(assert (not (= l$i0$target@650@01 l$delegate_with_weight_to_forward@557@01)))
(pop) ; 8
; [eval] !!(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 8
(set-option :timeout 10)
(assert (not (= l$i0$target@650@01 l$delegate_with_weight_to_forward@557@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (not (= l$i0$target@650@01 l$delegate_with_weight_to_forward@557@01))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 158 | l$i0$target@650@01 != l$delegate_with_weight_to_forward@557@01 | live]
; [else-branch: 158 | l$i0$target@650@01 == l$delegate_with_weight_to_forward@557@01 | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 158 | l$i0$target@650@01 != l$delegate_with_weight_to_forward@557@01]
(assert (not (= l$i0$target@650@01 l$delegate_with_weight_to_forward@557@01)))
; [exec]
; label continue_1
; [exec]
; l$i0$i := $wrap($range(0, 4)[2])
; [eval] $wrap($range(0, 4)[2])
; [eval] $range(0, 4)[2]
; [eval] $range(0, 4)
(push) ; 9
(assert (not (< 2 (Seq_length ($range<Seq<Int>> 0 4)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(declare-const l$i0$i@653@01 $Int)
(assert (= l$i0$i@653@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 4) 2))))
; [exec]
; l$i4$addr := l$i0$target
; [exec]
; i4$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i4$addr): $Struct), 2)): Int) !=
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i4$addr): $Struct), 2)): Int) != 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i4$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i4$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i4$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const i4$$res@654@01 Bool)
(assert (=
  i4$$res@654@01
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$i0$target@650@01) 2))
      0))))
; [exec]
; label i4$return
(push) ; 9
(set-option :timeout 10)
(assert (not (not i4$$res@654@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not i4$$res@654@01))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 159 | i4$$res@654@01 | live]
; [else-branch: 159 | !(i4$$res@654@01) | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 159 | i4$$res@654@01]
(assert i4$$res@654@01)
; [exec]
; l$i0$target := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$target@655@01 Int)
(assert (=
  l$i0$target@655@01
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$i0$target@650@01) 2))))
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 10
(set-option :timeout 10)
(assert (not (not (= l$i0$target@655@01 l$delegate_with_weight_to_forward@557@01))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= l$i0$target@655@01 l$delegate_with_weight_to_forward@557@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 160 | l$i0$target@655@01 == l$delegate_with_weight_to_forward@557@01 | live]
; [else-branch: 160 | l$i0$target@655@01 != l$delegate_with_weight_to_forward@557@01 | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 160 | l$i0$target@655@01 == l$delegate_with_weight_to_forward@557@01]
(assert (= l$i0$target@655@01 l$delegate_with_weight_to_forward@557@01))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 11
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 161 | True | live]
; [else-branch: 161 | False | dead]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 161 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@656@01 $Snap)
(assert (= $t@656@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@657@01 $Struct)
(assert (=
  self@657@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 11
; [then-branch: 162 | False | dead]
; [else-branch: 162 | True | live]
(set-option :timeout 0)
(push) ; 11
; [else-branch: 162 | True]
(pop) ; 11
(pop) ; 10
(push) ; 10
; [else-branch: 160 | l$i0$target@655@01 != l$delegate_with_weight_to_forward@557@01]
(assert (not (= l$i0$target@655@01 l$delegate_with_weight_to_forward@557@01)))
(pop) ; 10
; [eval] !!(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 10
(set-option :timeout 10)
(assert (not (= l$i0$target@655@01 l$delegate_with_weight_to_forward@557@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (not (= l$i0$target@655@01 l$delegate_with_weight_to_forward@557@01))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 163 | l$i0$target@655@01 != l$delegate_with_weight_to_forward@557@01 | live]
; [else-branch: 163 | l$i0$target@655@01 == l$delegate_with_weight_to_forward@557@01 | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 163 | l$i0$target@655@01 != l$delegate_with_weight_to_forward@557@01]
(assert (not (= l$i0$target@655@01 l$delegate_with_weight_to_forward@557@01)))
; [exec]
; label continue_2
; [exec]
; l$i0$i := $wrap($range(0, 4)[3])
; [eval] $wrap($range(0, 4)[3])
; [eval] $range(0, 4)[3]
; [eval] $range(0, 4)
(push) ; 11
(assert (not (< 3 (Seq_length ($range<Seq<Int>> 0 4)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(declare-const l$i0$i@658@01 $Int)
(assert (= l$i0$i@658@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 4) 3))))
; [exec]
; l$i5$addr := l$i0$target
; [exec]
; i5$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i5$addr): $Struct), 2)): Int) !=
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i5$addr): $Struct), 2)): Int) != 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i5$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i5$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i5$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const i5$$res@659@01 Bool)
(assert (=
  i5$$res@659@01
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$i0$target@655@01) 2))
      0))))
; [exec]
; label i5$return
(push) ; 11
(set-option :timeout 10)
(assert (not (not i5$$res@659@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not i5$$res@659@01))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 164 | i5$$res@659@01 | live]
; [else-branch: 164 | !(i5$$res@659@01) | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 164 | i5$$res@659@01]
(assert i5$$res@659@01)
; [exec]
; l$i0$target := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$target@660@01 Int)
(assert (=
  l$i0$target@660@01
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$i0$target@655@01) 2))))
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 12
(set-option :timeout 10)
(assert (not (not (= l$i0$target@660@01 l$delegate_with_weight_to_forward@557@01))))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (= l$i0$target@660@01 l$delegate_with_weight_to_forward@557@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 165 | l$i0$target@660@01 == l$delegate_with_weight_to_forward@557@01 | live]
; [else-branch: 165 | l$i0$target@660@01 != l$delegate_with_weight_to_forward@557@01 | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 165 | l$i0$target@660@01 == l$delegate_with_weight_to_forward@557@01]
(assert (= l$i0$target@660@01 l$delegate_with_weight_to_forward@557@01))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 13
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 166 | True | live]
; [else-branch: 166 | False | dead]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 166 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@661@01 $Snap)
(assert (= $t@661@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@662@01 $Struct)
(assert (=
  self@662@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 13
; [then-branch: 167 | False | dead]
; [else-branch: 167 | True | live]
(set-option :timeout 0)
(push) ; 13
; [else-branch: 167 | True]
(pop) ; 13
(pop) ; 12
(push) ; 12
; [else-branch: 165 | l$i0$target@660@01 != l$delegate_with_weight_to_forward@557@01]
(assert (not (= l$i0$target@660@01 l$delegate_with_weight_to_forward@557@01)))
(pop) ; 12
; [eval] !!(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 12
(set-option :timeout 10)
(assert (not (= l$i0$target@660@01 l$delegate_with_weight_to_forward@557@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (not (= l$i0$target@660@01 l$delegate_with_weight_to_forward@557@01))))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 168 | l$i0$target@660@01 != l$delegate_with_weight_to_forward@557@01 | live]
; [else-branch: 168 | l$i0$target@660@01 == l$delegate_with_weight_to_forward@557@01 | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 168 | l$i0$target@660@01 != l$delegate_with_weight_to_forward@557@01]
(assert (not (= l$i0$target@660@01 l$delegate_with_weight_to_forward@557@01)))
; [exec]
; label continue_3
; [exec]
; label break_0
; [exec]
; l$i0$weight_to_forward := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$weight_to_forward@663@01 $Int)
(assert (=
  l$i0$weight_to_forward@663@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0)))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@664@01 $Struct)
(assert (=
  self@664@01
  ($struct_set<$Struct> self@563@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0 0)))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 13
; [then-branch: 169 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 169 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728) | live]
(push) ; 14
; [then-branch: 169 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@663@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 14
(push) ; 14
; [else-branch: 169 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 13
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 170 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 170 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 170 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 14
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 171 | True | live]
; [else-branch: 171 | False | dead]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 171 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@665@01 $Snap)
(assert (= $t@665@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@666@01 $Struct)
(assert (=
  self@666@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 14
; [then-branch: 172 | False | dead]
; [else-branch: 172 | True | live]
(set-option :timeout 0)
(push) ; 14
; [else-branch: 172 | True]
(pop) ; 14
(pop) ; 13
(push) ; 13
; [else-branch: 170 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      170141183460469231731687303715884105727))))
(pop) ; 13
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 13
; [then-branch: 173 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 173 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728) | live]
(push) ; 14
; [then-branch: 173 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@663@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 14
(push) ; 14
; [else-branch: 173 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(push) ; 13
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 174 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 174 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 174 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@667@01 $Struct)
(assert (=
  self@667@01
  ($struct_set<$Struct> self@664@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@663@01)))))))
; [exec]
; l$i6$addr := l$i0$target
; [exec]
; i6$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) &&
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i6$addr): $Struct), 2)): Int) ==
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 14
; [then-branch: 175 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 1))) | live]
; [else-branch: 175 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 1)) | live]
(push) ; 15
; [then-branch: 175 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 1))))
(pop) ; 15
(push) ; 15
; [else-branch: 175 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 1)))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 1))
  (not
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 1)))))
(declare-const i6$$res@668@01 Bool)
(assert (=
  i6$$res@668@01
  (and
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 1))
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 2))
      0))))
; [exec]
; label i6$return
(push) ; 14
(set-option :timeout 10)
(assert (not (not i6$$res@668@01)))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 14
(set-option :timeout 10)
(assert (not i6$$res@668@01))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 176 | i6$$res@668@01 | live]
; [else-branch: 176 | !(i6$$res@668@01) | live]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 176 | i6$$res@668@01]
(assert i6$$res@668@01)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 15
; [then-branch: 177 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 177 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728) | live]
(push) ; 16
; [then-branch: 177 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@663@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 16
(push) ; 16
; [else-branch: 177 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 15
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 178 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 178 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 178 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 16
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 179 | True | live]
; [else-branch: 179 | False | dead]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 179 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@669@01 $Snap)
(assert (= $t@669@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@670@01 $Struct)
(assert (=
  self@670@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 16
; [then-branch: 180 | False | dead]
; [else-branch: 180 | True | live]
(set-option :timeout 0)
(push) ; 16
; [else-branch: 180 | True]
(pop) ; 16
(pop) ; 15
(push) ; 15
; [else-branch: 178 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      170141183460469231731687303715884105727))))
(pop) ; 15
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 15
; [then-branch: 181 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 181 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728) | live]
(push) ; 16
; [then-branch: 181 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@663@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 16
(push) ; 16
; [else-branch: 181 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(push) ; 15
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 182 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 182 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 182 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@663@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1,
;   $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@671@01 $Struct)
(assert (=
  self@671@01
  ($struct_set<$Struct> self@667@01 1 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3)) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@663@01)))))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@672@01 $Struct)
(assert (=
  self@672@01
  ($struct_set<$Struct> self@671@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@671@01 0)) l$i0$target@660@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@671@01 0)) l$i0$target@660@01) 0 0)))))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 16
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 16
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 183 | $out_of_gas@590@01 | live]
; [else-branch: 183 | !($out_of_gas@590@01) | live]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 183 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 17
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
; [then-branch: 184 | True | live]
; [else-branch: 184 | False | dead]
(set-option :timeout 0)
(push) ; 17
; [then-branch: 184 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@673@01 $Snap)
(assert (= $t@673@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@674@01 $Struct)
(assert (=
  self@674@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 17
; [then-branch: 185 | False | dead]
; [else-branch: 185 | True | live]
(set-option :timeout 0)
(push) ; 17
; [else-branch: 185 | True]
(pop) ; 17
(pop) ; 16
(push) ; 16
; [else-branch: 183 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
(pop) ; 16
; [eval] !$out_of_gas
(push) ; 16
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 16
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 186 | !($out_of_gas@590@01) | live]
; [else-branch: 186 | $out_of_gas@590@01 | live]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 186 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 187 | False | dead]
; [else-branch: 187 | True | live]
(push) ; 17
; [else-branch: 187 | True]
(pop) ; 17
(push) ; 17
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
; [then-branch: 188 | True | live]
; [else-branch: 188 | False | dead]
(set-option :timeout 0)
(push) ; 17
; [then-branch: 188 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@675@01 $Snap)
(assert (= $t@675@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@676@01 $Struct)
(assert (=
  self@676@01
  ($struct_set<$Struct> self@672@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@672@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 17
(pop) ; 16
(set-option :timeout 0)
(push) ; 16
; [else-branch: 186 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
(pop) ; 16
(pop) ; 15
(push) ; 15
; [else-branch: 182 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@667@01, 0)), l$i0$target@660@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@667@01 0)) l$i0$target@660@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    170141183460469231731687303715884105727)))
(pop) ; 15
(pop) ; 14
(push) ; 14
; [else-branch: 176 | !(i6$$res@668@01)]
(assert (not i6$$res@668@01))
(pop) ; 14
; [eval] !i6$$res
(push) ; 14
(set-option :timeout 10)
(assert (not i6$$res@668@01))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 14
(set-option :timeout 10)
(assert (not (not i6$$res@668@01)))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 189 | !(i6$$res@668@01) | live]
; [else-branch: 189 | i6$$res@668@01 | live]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 189 | !(i6$$res@668@01)]
(assert (not i6$$res@668@01))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 15
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 190 | $out_of_gas@590@01 | live]
; [else-branch: 190 | !($out_of_gas@590@01) | live]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 190 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 16
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 191 | True | live]
; [else-branch: 191 | False | dead]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 191 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@677@01 $Snap)
(assert (= $t@677@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@678@01 $Struct)
(assert (=
  self@678@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 16
; [then-branch: 192 | False | dead]
; [else-branch: 192 | True | live]
(set-option :timeout 0)
(push) ; 16
; [else-branch: 192 | True]
(pop) ; 16
(pop) ; 15
(push) ; 15
; [else-branch: 190 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
(pop) ; 15
; [eval] !$out_of_gas
(push) ; 15
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 193 | !($out_of_gas@590@01) | live]
; [else-branch: 193 | $out_of_gas@590@01 | live]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 193 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 194 | False | dead]
; [else-branch: 194 | True | live]
(push) ; 16
; [else-branch: 194 | True]
(pop) ; 16
(push) ; 16
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 195 | True | live]
; [else-branch: 195 | False | dead]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 195 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@679@01 $Snap)
(assert (= $t@679@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@680@01 $Struct)
(assert (=
  self@680@01
  ($struct_set<$Struct> self@667@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@667@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 16
(pop) ; 15
(set-option :timeout 0)
(push) ; 15
; [else-branch: 193 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
(pop) ; 15
(pop) ; 14
(push) ; 14
; [else-branch: 189 | i6$$res@668@01]
(assert i6$$res@668@01)
(pop) ; 14
(pop) ; 13
(push) ; 13
; [else-branch: 174 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@664@01, 0)), l$i0$target@660@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@663@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@664@01 0)) l$i0$target@660@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@663@01))
    170141183460469231731687303715884105727)))
(pop) ; 13
(pop) ; 12
(push) ; 12
; [else-branch: 168 | l$i0$target@660@01 == l$delegate_with_weight_to_forward@557@01]
(assert (= l$i0$target@660@01 l$delegate_with_weight_to_forward@557@01))
(pop) ; 12
(pop) ; 11
(push) ; 11
; [else-branch: 164 | !(i5$$res@659@01)]
(assert (not i5$$res@659@01))
(pop) ; 11
; [eval] !i5$$res
(push) ; 11
(set-option :timeout 10)
(assert (not i5$$res@659@01))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not i5$$res@659@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 196 | !(i5$$res@659@01) | live]
; [else-branch: 196 | i5$$res@659@01 | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 196 | !(i5$$res@659@01)]
(assert (not i5$$res@659@01))
; [exec]
; label break_0
; [exec]
; l$i0$weight_to_forward := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$weight_to_forward@681@01 $Int)
(assert (=
  l$i0$weight_to_forward@681@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0)))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@682@01 $Struct)
(assert (=
  self@682@01
  ($struct_set<$Struct> self@563@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0 0)))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 12
; [then-branch: 197 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 197 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728) | live]
(push) ; 13
; [then-branch: 197 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@681@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 13
(push) ; 13
; [else-branch: 197 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 12
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 198 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 198 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 198 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 13
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 199 | True | live]
; [else-branch: 199 | False | dead]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 199 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@683@01 $Snap)
(assert (= $t@683@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@684@01 $Struct)
(assert (=
  self@684@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 13
; [then-branch: 200 | False | dead]
; [else-branch: 200 | True | live]
(set-option :timeout 0)
(push) ; 13
; [else-branch: 200 | True]
(pop) ; 13
(pop) ; 12
(push) ; 12
; [else-branch: 198 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      170141183460469231731687303715884105727))))
(pop) ; 12
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 12
; [then-branch: 201 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 201 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728) | live]
(push) ; 13
; [then-branch: 201 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@681@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 13
(push) ; 13
; [else-branch: 201 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(push) ; 12
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 202 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 202 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 202 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@685@01 $Struct)
(assert (=
  self@685@01
  ($struct_set<$Struct> self@682@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@681@01)))))))
; [exec]
; l$i6$addr := l$i0$target
; [exec]
; i6$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) &&
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i6$addr): $Struct), 2)): Int) ==
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 13
; [then-branch: 203 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 1))) | live]
; [else-branch: 203 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 1)) | live]
(push) ; 14
; [then-branch: 203 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 1))))
(pop) ; 14
(push) ; 14
; [else-branch: 203 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 1)))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 1))
  (not
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 1)))))
(declare-const i6$$res@686@01 Bool)
(assert (=
  i6$$res@686@01
  (and
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 1))
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 2))
      0))))
; [exec]
; label i6$return
(push) ; 13
(set-option :timeout 10)
(assert (not (not i6$$res@686@01)))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not i6$$res@686@01))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 204 | i6$$res@686@01 | live]
; [else-branch: 204 | !(i6$$res@686@01) | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 204 | i6$$res@686@01]
(assert i6$$res@686@01)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 14
; [then-branch: 205 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 205 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728) | live]
(push) ; 15
; [then-branch: 205 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@681@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 15
(push) ; 15
; [else-branch: 205 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 14
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 14
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 206 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 206 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 206 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 15
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 207 | True | live]
; [else-branch: 207 | False | dead]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 207 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@687@01 $Snap)
(assert (= $t@687@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@688@01 $Struct)
(assert (=
  self@688@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 15
; [then-branch: 208 | False | dead]
; [else-branch: 208 | True | live]
(set-option :timeout 0)
(push) ; 15
; [else-branch: 208 | True]
(pop) ; 15
(pop) ; 14
(push) ; 14
; [else-branch: 206 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      170141183460469231731687303715884105727))))
(pop) ; 14
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 14
; [then-branch: 209 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 209 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728) | live]
(push) ; 15
; [then-branch: 209 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@681@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 15
(push) ; 15
; [else-branch: 209 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(push) ; 14
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 14
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 210 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 210 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 210 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@681@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1,
;   $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@689@01 $Struct)
(assert (=
  self@689@01
  ($struct_set<$Struct> self@685@01 1 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3)) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@681@01)))))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@690@01 $Struct)
(assert (=
  self@690@01
  ($struct_set<$Struct> self@689@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@689@01 0)) l$i0$target@655@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@689@01 0)) l$i0$target@655@01) 0 0)))))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 15
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 211 | $out_of_gas@590@01 | live]
; [else-branch: 211 | !($out_of_gas@590@01) | live]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 211 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 16
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 212 | True | live]
; [else-branch: 212 | False | dead]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 212 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@691@01 $Snap)
(assert (= $t@691@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@692@01 $Struct)
(assert (=
  self@692@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 16
; [then-branch: 213 | False | dead]
; [else-branch: 213 | True | live]
(set-option :timeout 0)
(push) ; 16
; [else-branch: 213 | True]
(pop) ; 16
(pop) ; 15
(push) ; 15
; [else-branch: 211 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
(pop) ; 15
; [eval] !$out_of_gas
(push) ; 15
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 214 | !($out_of_gas@590@01) | live]
; [else-branch: 214 | $out_of_gas@590@01 | live]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 214 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 215 | False | dead]
; [else-branch: 215 | True | live]
(push) ; 16
; [else-branch: 215 | True]
(pop) ; 16
(push) ; 16
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 216 | True | live]
; [else-branch: 216 | False | dead]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 216 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@693@01 $Snap)
(assert (= $t@693@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@694@01 $Struct)
(assert (=
  self@694@01
  ($struct_set<$Struct> self@690@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@690@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 16
(pop) ; 15
(set-option :timeout 0)
(push) ; 15
; [else-branch: 214 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
(pop) ; 15
(pop) ; 14
(push) ; 14
; [else-branch: 210 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@685@01, 0)), l$i0$target@655@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@685@01 0)) l$i0$target@655@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    170141183460469231731687303715884105727)))
(pop) ; 14
(pop) ; 13
(push) ; 13
; [else-branch: 204 | !(i6$$res@686@01)]
(assert (not i6$$res@686@01))
(pop) ; 13
; [eval] !i6$$res
(push) ; 13
(set-option :timeout 10)
(assert (not i6$$res@686@01))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not (not i6$$res@686@01)))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 217 | !(i6$$res@686@01) | live]
; [else-branch: 217 | i6$$res@686@01 | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 217 | !(i6$$res@686@01)]
(assert (not i6$$res@686@01))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 14
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 14
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 218 | $out_of_gas@590@01 | live]
; [else-branch: 218 | !($out_of_gas@590@01) | live]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 218 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 15
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 219 | True | live]
; [else-branch: 219 | False | dead]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 219 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@695@01 $Snap)
(assert (= $t@695@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@696@01 $Struct)
(assert (=
  self@696@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 15
; [then-branch: 220 | False | dead]
; [else-branch: 220 | True | live]
(set-option :timeout 0)
(push) ; 15
; [else-branch: 220 | True]
(pop) ; 15
(pop) ; 14
(push) ; 14
; [else-branch: 218 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
(pop) ; 14
; [eval] !$out_of_gas
(push) ; 14
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 14
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 221 | !($out_of_gas@590@01) | live]
; [else-branch: 221 | $out_of_gas@590@01 | live]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 221 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 222 | False | dead]
; [else-branch: 222 | True | live]
(push) ; 15
; [else-branch: 222 | True]
(pop) ; 15
(push) ; 15
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 223 | True | live]
; [else-branch: 223 | False | dead]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 223 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@697@01 $Snap)
(assert (= $t@697@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@698@01 $Struct)
(assert (=
  self@698@01
  ($struct_set<$Struct> self@685@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@685@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 15
(pop) ; 14
(set-option :timeout 0)
(push) ; 14
; [else-branch: 221 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
(pop) ; 14
(pop) ; 13
(push) ; 13
; [else-branch: 217 | i6$$res@686@01]
(assert i6$$res@686@01)
(pop) ; 13
(pop) ; 12
(push) ; 12
; [else-branch: 202 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@682@01, 0)), l$i0$target@655@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@681@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@682@01 0)) l$i0$target@655@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@681@01))
    170141183460469231731687303715884105727)))
(pop) ; 12
(pop) ; 11
(push) ; 11
; [else-branch: 196 | i5$$res@659@01]
(assert i5$$res@659@01)
(pop) ; 11
(pop) ; 10
(push) ; 10
; [else-branch: 163 | l$i0$target@655@01 == l$delegate_with_weight_to_forward@557@01]
(assert (= l$i0$target@655@01 l$delegate_with_weight_to_forward@557@01))
(pop) ; 10
(pop) ; 9
(push) ; 9
; [else-branch: 159 | !(i4$$res@654@01)]
(assert (not i4$$res@654@01))
(pop) ; 9
; [eval] !i4$$res
(push) ; 9
(set-option :timeout 10)
(assert (not i4$$res@654@01))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not i4$$res@654@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 224 | !(i4$$res@654@01) | live]
; [else-branch: 224 | i4$$res@654@01 | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 224 | !(i4$$res@654@01)]
(assert (not i4$$res@654@01))
; [exec]
; label break_0
; [exec]
; l$i0$weight_to_forward := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$weight_to_forward@699@01 $Int)
(assert (=
  l$i0$weight_to_forward@699@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0)))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@700@01 $Struct)
(assert (=
  self@700@01
  ($struct_set<$Struct> self@563@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0 0)))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 10
; [then-branch: 225 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 225 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728) | live]
(push) ; 11
; [then-branch: 225 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@699@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 11
(push) ; 11
; [else-branch: 225 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 10
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 226 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 226 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 226 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 11
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 227 | True | live]
; [else-branch: 227 | False | dead]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 227 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@701@01 $Snap)
(assert (= $t@701@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@702@01 $Struct)
(assert (=
  self@702@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 11
; [then-branch: 228 | False | dead]
; [else-branch: 228 | True | live]
(set-option :timeout 0)
(push) ; 11
; [else-branch: 228 | True]
(pop) ; 11
(pop) ; 10
(push) ; 10
; [else-branch: 226 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      170141183460469231731687303715884105727))))
(pop) ; 10
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 10
; [then-branch: 229 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 229 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728) | live]
(push) ; 11
; [then-branch: 229 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@699@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 11
(push) ; 11
; [else-branch: 229 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(push) ; 10
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 230 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 230 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 230 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@703@01 $Struct)
(assert (=
  self@703@01
  ($struct_set<$Struct> self@700@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@699@01)))))))
; [exec]
; l$i6$addr := l$i0$target
; [exec]
; i6$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) &&
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i6$addr): $Struct), 2)): Int) ==
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 11
; [then-branch: 231 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 1))) | live]
; [else-branch: 231 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 1)) | live]
(push) ; 12
; [then-branch: 231 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 1))))
(pop) ; 12
(push) ; 12
; [else-branch: 231 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 1)))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 1))
  (not
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 1)))))
(declare-const i6$$res@704@01 Bool)
(assert (=
  i6$$res@704@01
  (and
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 1))
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 2))
      0))))
; [exec]
; label i6$return
(push) ; 11
(set-option :timeout 10)
(assert (not (not i6$$res@704@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not i6$$res@704@01))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 232 | i6$$res@704@01 | live]
; [else-branch: 232 | !(i6$$res@704@01) | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 232 | i6$$res@704@01]
(assert i6$$res@704@01)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 12
; [then-branch: 233 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 233 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728) | live]
(push) ; 13
; [then-branch: 233 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@699@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 13
(push) ; 13
; [else-branch: 233 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 12
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 234 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 234 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 234 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 13
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 235 | True | live]
; [else-branch: 235 | False | dead]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 235 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@705@01 $Snap)
(assert (= $t@705@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@706@01 $Struct)
(assert (=
  self@706@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 13
; [then-branch: 236 | False | dead]
; [else-branch: 236 | True | live]
(set-option :timeout 0)
(push) ; 13
; [else-branch: 236 | True]
(pop) ; 13
(pop) ; 12
(push) ; 12
; [else-branch: 234 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      170141183460469231731687303715884105727))))
(pop) ; 12
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 12
; [then-branch: 237 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 237 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728) | live]
(push) ; 13
; [then-branch: 237 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@699@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 13
(push) ; 13
; [else-branch: 237 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(push) ; 12
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 238 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 238 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 238 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@699@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1,
;   $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@707@01 $Struct)
(assert (=
  self@707@01
  ($struct_set<$Struct> self@703@01 1 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3)) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@699@01)))))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@708@01 $Struct)
(assert (=
  self@708@01
  ($struct_set<$Struct> self@707@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@707@01 0)) l$i0$target@650@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@707@01 0)) l$i0$target@650@01) 0 0)))))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 13
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 239 | $out_of_gas@590@01 | live]
; [else-branch: 239 | !($out_of_gas@590@01) | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 239 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 14
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 240 | True | live]
; [else-branch: 240 | False | dead]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 240 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@709@01 $Snap)
(assert (= $t@709@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@710@01 $Struct)
(assert (=
  self@710@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 14
; [then-branch: 241 | False | dead]
; [else-branch: 241 | True | live]
(set-option :timeout 0)
(push) ; 14
; [else-branch: 241 | True]
(pop) ; 14
(pop) ; 13
(push) ; 13
; [else-branch: 239 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
(pop) ; 13
; [eval] !$out_of_gas
(push) ; 13
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 242 | !($out_of_gas@590@01) | live]
; [else-branch: 242 | $out_of_gas@590@01 | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 242 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 243 | False | dead]
; [else-branch: 243 | True | live]
(push) ; 14
; [else-branch: 243 | True]
(pop) ; 14
(push) ; 14
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 244 | True | live]
; [else-branch: 244 | False | dead]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 244 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@711@01 $Snap)
(assert (= $t@711@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@712@01 $Struct)
(assert (=
  self@712@01
  ($struct_set<$Struct> self@708@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@708@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 14
(pop) ; 13
(set-option :timeout 0)
(push) ; 13
; [else-branch: 242 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
(pop) ; 13
(pop) ; 12
(push) ; 12
; [else-branch: 238 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@703@01, 0)), l$i0$target@650@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@703@01 0)) l$i0$target@650@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    170141183460469231731687303715884105727)))
(pop) ; 12
(pop) ; 11
(push) ; 11
; [else-branch: 232 | !(i6$$res@704@01)]
(assert (not i6$$res@704@01))
(pop) ; 11
; [eval] !i6$$res
(push) ; 11
(set-option :timeout 10)
(assert (not i6$$res@704@01))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not i6$$res@704@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 245 | !(i6$$res@704@01) | live]
; [else-branch: 245 | i6$$res@704@01 | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 245 | !(i6$$res@704@01)]
(assert (not i6$$res@704@01))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 12
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 246 | $out_of_gas@590@01 | live]
; [else-branch: 246 | !($out_of_gas@590@01) | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 246 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 13
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 247 | True | live]
; [else-branch: 247 | False | dead]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 247 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@713@01 $Snap)
(assert (= $t@713@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@714@01 $Struct)
(assert (=
  self@714@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 13
; [then-branch: 248 | False | dead]
; [else-branch: 248 | True | live]
(set-option :timeout 0)
(push) ; 13
; [else-branch: 248 | True]
(pop) ; 13
(pop) ; 12
(push) ; 12
; [else-branch: 246 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
(pop) ; 12
; [eval] !$out_of_gas
(push) ; 12
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 249 | !($out_of_gas@590@01) | live]
; [else-branch: 249 | $out_of_gas@590@01 | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 249 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 250 | False | dead]
; [else-branch: 250 | True | live]
(push) ; 13
; [else-branch: 250 | True]
(pop) ; 13
(push) ; 13
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 251 | True | live]
; [else-branch: 251 | False | dead]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 251 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@715@01 $Snap)
(assert (= $t@715@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@716@01 $Struct)
(assert (=
  self@716@01
  ($struct_set<$Struct> self@703@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@703@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 13
(pop) ; 12
(set-option :timeout 0)
(push) ; 12
; [else-branch: 249 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
(pop) ; 12
(pop) ; 11
(push) ; 11
; [else-branch: 245 | i6$$res@704@01]
(assert i6$$res@704@01)
(pop) ; 11
(pop) ; 10
(push) ; 10
; [else-branch: 230 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@700@01, 0)), l$i0$target@650@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@699@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@700@01 0)) l$i0$target@650@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@699@01))
    170141183460469231731687303715884105727)))
(pop) ; 10
(pop) ; 9
(push) ; 9
; [else-branch: 224 | i4$$res@654@01]
(assert i4$$res@654@01)
(pop) ; 9
(pop) ; 8
(push) ; 8
; [else-branch: 158 | l$i0$target@650@01 == l$delegate_with_weight_to_forward@557@01]
(assert (= l$i0$target@650@01 l$delegate_with_weight_to_forward@557@01))
(pop) ; 8
(pop) ; 7
(push) ; 7
; [else-branch: 154 | !(i3$$res@649@01)]
(assert (not i3$$res@649@01))
(pop) ; 7
; [eval] !i3$$res
(push) ; 7
(set-option :timeout 10)
(assert (not i3$$res@649@01))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not i3$$res@649@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 252 | !(i3$$res@649@01) | live]
; [else-branch: 252 | i3$$res@649@01 | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 252 | !(i3$$res@649@01)]
(assert (not i3$$res@649@01))
; [exec]
; label break_0
; [exec]
; l$i0$weight_to_forward := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$weight_to_forward@717@01 $Int)
(assert (=
  l$i0$weight_to_forward@717@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0)))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@718@01 $Struct)
(assert (=
  self@718@01
  ($struct_set<$Struct> self@563@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0 0)))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 8
; [then-branch: 253 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 253 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728) | live]
(push) ; 9
; [then-branch: 253 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@717@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 9
(push) ; 9
; [else-branch: 253 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 8
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 254 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 254 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 254 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 255 | True | live]
; [else-branch: 255 | False | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 255 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@719@01 $Snap)
(assert (= $t@719@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@720@01 $Struct)
(assert (=
  self@720@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 9
; [then-branch: 256 | False | dead]
; [else-branch: 256 | True | live]
(set-option :timeout 0)
(push) ; 9
; [else-branch: 256 | True]
(pop) ; 9
(pop) ; 8
(push) ; 8
; [else-branch: 254 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      170141183460469231731687303715884105727))))
(pop) ; 8
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 8
; [then-branch: 257 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 257 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728) | live]
(push) ; 9
; [then-branch: 257 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@717@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 9
(push) ; 9
; [else-branch: 257 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(push) ; 8
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 258 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 258 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 258 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@721@01 $Struct)
(assert (=
  self@721@01
  ($struct_set<$Struct> self@718@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@717@01)))))))
; [exec]
; l$i6$addr := l$i0$target
; [exec]
; i6$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) &&
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i6$addr): $Struct), 2)): Int) ==
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 9
; [then-branch: 259 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 1))) | live]
; [else-branch: 259 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 1)) | live]
(push) ; 10
; [then-branch: 259 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 1))))
(pop) ; 10
(push) ; 10
; [else-branch: 259 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 1)))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 1))
  (not
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 1)))))
(declare-const i6$$res@722@01 Bool)
(assert (=
  i6$$res@722@01
  (and
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 1))
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 2))
      0))))
; [exec]
; label i6$return
(push) ; 9
(set-option :timeout 10)
(assert (not (not i6$$res@722@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not i6$$res@722@01))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 260 | i6$$res@722@01 | live]
; [else-branch: 260 | !(i6$$res@722@01) | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 260 | i6$$res@722@01]
(assert i6$$res@722@01)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 10
; [then-branch: 261 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 261 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728) | live]
(push) ; 11
; [then-branch: 261 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@717@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 11
(push) ; 11
; [else-branch: 261 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 10
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 262 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 262 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 262 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 11
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 263 | True | live]
; [else-branch: 263 | False | dead]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 263 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@723@01 $Snap)
(assert (= $t@723@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@724@01 $Struct)
(assert (=
  self@724@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 11
; [then-branch: 264 | False | dead]
; [else-branch: 264 | True | live]
(set-option :timeout 0)
(push) ; 11
; [else-branch: 264 | True]
(pop) ; 11
(pop) ; 10
(push) ; 10
; [else-branch: 262 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      170141183460469231731687303715884105727))))
(pop) ; 10
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 10
; [then-branch: 265 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 265 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728) | live]
(push) ; 11
; [then-branch: 265 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@717@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 11
(push) ; 11
; [else-branch: 265 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(push) ; 10
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 266 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 266 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 266 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@717@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1,
;   $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@725@01 $Struct)
(assert (=
  self@725@01
  ($struct_set<$Struct> self@721@01 1 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3)) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@717@01)))))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@726@01 $Struct)
(assert (=
  self@726@01
  ($struct_set<$Struct> self@725@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@725@01 0)) l$i0$target@645@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@725@01 0)) l$i0$target@645@01) 0 0)))))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 11
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 267 | $out_of_gas@590@01 | live]
; [else-branch: 267 | !($out_of_gas@590@01) | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 267 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 12
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 268 | True | live]
; [else-branch: 268 | False | dead]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 268 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@727@01 $Snap)
(assert (= $t@727@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@728@01 $Struct)
(assert (=
  self@728@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 12
; [then-branch: 269 | False | dead]
; [else-branch: 269 | True | live]
(set-option :timeout 0)
(push) ; 12
; [else-branch: 269 | True]
(pop) ; 12
(pop) ; 11
(push) ; 11
; [else-branch: 267 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
(pop) ; 11
; [eval] !$out_of_gas
(push) ; 11
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 270 | !($out_of_gas@590@01) | live]
; [else-branch: 270 | $out_of_gas@590@01 | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 270 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 271 | False | dead]
; [else-branch: 271 | True | live]
(push) ; 12
; [else-branch: 271 | True]
(pop) ; 12
(push) ; 12
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 272 | True | live]
; [else-branch: 272 | False | dead]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 272 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@729@01 $Snap)
(assert (= $t@729@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@730@01 $Struct)
(assert (=
  self@730@01
  ($struct_set<$Struct> self@726@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@726@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 12
(pop) ; 11
(set-option :timeout 0)
(push) ; 11
; [else-branch: 270 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
(pop) ; 11
(pop) ; 10
(push) ; 10
; [else-branch: 266 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@721@01, 0)), l$i0$target@645@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@721@01 0)) l$i0$target@645@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    170141183460469231731687303715884105727)))
(pop) ; 10
(pop) ; 9
(push) ; 9
; [else-branch: 260 | !(i6$$res@722@01)]
(assert (not i6$$res@722@01))
(pop) ; 9
; [eval] !i6$$res
(push) ; 9
(set-option :timeout 10)
(assert (not i6$$res@722@01))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not i6$$res@722@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 273 | !(i6$$res@722@01) | live]
; [else-branch: 273 | i6$$res@722@01 | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 273 | !(i6$$res@722@01)]
(assert (not i6$$res@722@01))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 10
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 274 | $out_of_gas@590@01 | live]
; [else-branch: 274 | !($out_of_gas@590@01) | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 274 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 11
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 275 | True | live]
; [else-branch: 275 | False | dead]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 275 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@731@01 $Snap)
(assert (= $t@731@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@732@01 $Struct)
(assert (=
  self@732@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 11
; [then-branch: 276 | False | dead]
; [else-branch: 276 | True | live]
(set-option :timeout 0)
(push) ; 11
; [else-branch: 276 | True]
(pop) ; 11
(pop) ; 10
(push) ; 10
; [else-branch: 274 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
(pop) ; 10
; [eval] !$out_of_gas
(push) ; 10
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 277 | !($out_of_gas@590@01) | live]
; [else-branch: 277 | $out_of_gas@590@01 | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 277 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 278 | False | dead]
; [else-branch: 278 | True | live]
(push) ; 11
; [else-branch: 278 | True]
(pop) ; 11
(push) ; 11
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 279 | True | live]
; [else-branch: 279 | False | dead]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 279 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@733@01 $Snap)
(assert (= $t@733@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@734@01 $Struct)
(assert (=
  self@734@01
  ($struct_set<$Struct> self@721@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@721@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 11
(pop) ; 10
(set-option :timeout 0)
(push) ; 10
; [else-branch: 277 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
(pop) ; 10
(pop) ; 9
(push) ; 9
; [else-branch: 273 | i6$$res@722@01]
(assert i6$$res@722@01)
(pop) ; 9
(pop) ; 8
(push) ; 8
; [else-branch: 258 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@718@01, 0)), l$i0$target@645@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@717@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@718@01 0)) l$i0$target@645@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@717@01))
    170141183460469231731687303715884105727)))
(pop) ; 8
(pop) ; 7
(push) ; 7
; [else-branch: 252 | i3$$res@649@01]
(assert i3$$res@649@01)
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 153 | l$i0$target@645@01 == l$delegate_with_weight_to_forward@557@01]
(assert (= l$i0$target@645@01 l$delegate_with_weight_to_forward@557@01))
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 149 | !(i2$$res@644@01)]
(assert (not i2$$res@644@01))
(pop) ; 5
; [eval] !i2$$res
(push) ; 5
(set-option :timeout 10)
(assert (not i2$$res@644@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not i2$$res@644@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 280 | !(i2$$res@644@01) | live]
; [else-branch: 280 | i2$$res@644@01 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 280 | !(i2$$res@644@01)]
(assert (not i2$$res@644@01))
; [exec]
; label break_0
; [exec]
; l$i0$weight_to_forward := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$weight_to_forward@735@01 $Int)
(assert (=
  l$i0$weight_to_forward@735@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0)))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@736@01 $Struct)
(assert (=
  self@736@01
  ($struct_set<$Struct> self@563@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0 0)))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 6
; [then-branch: 281 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 281 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728) | live]
(push) ; 7
; [then-branch: 281 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@735@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 7
(push) ; 7
; [else-branch: 281 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 282 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 282 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 282 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 7
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 283 | True | live]
; [else-branch: 283 | False | dead]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 283 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@737@01 $Snap)
(assert (= $t@737@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@738@01 $Struct)
(assert (=
  self@738@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 7
; [then-branch: 284 | False | dead]
; [else-branch: 284 | True | live]
(set-option :timeout 0)
(push) ; 7
; [else-branch: 284 | True]
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 282 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      170141183460469231731687303715884105727))))
(pop) ; 6
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 6
; [then-branch: 285 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 285 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728) | live]
(push) ; 7
; [then-branch: 285 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@735@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 7
(push) ; 7
; [else-branch: 285 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(push) ; 6
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 286 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 286 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 286 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@739@01 $Struct)
(assert (=
  self@739@01
  ($struct_set<$Struct> self@736@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@735@01)))))))
; [exec]
; l$i6$addr := l$i0$target
; [exec]
; i6$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) &&
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i6$addr): $Struct), 2)): Int) ==
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 7
; [then-branch: 287 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 1))) | live]
; [else-branch: 287 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 1)) | live]
(push) ; 8
; [then-branch: 287 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 1))))
(pop) ; 8
(push) ; 8
; [else-branch: 287 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 1)))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (or
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 1))
  (not
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 1)))))
(declare-const i6$$res@740@01 Bool)
(assert (=
  i6$$res@740@01
  (and
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 1))
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 2))
      0))))
; [exec]
; label i6$return
(push) ; 7
(set-option :timeout 10)
(assert (not (not i6$$res@740@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not i6$$res@740@01))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 288 | i6$$res@740@01 | live]
; [else-branch: 288 | !(i6$$res@740@01) | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 288 | i6$$res@740@01]
(assert i6$$res@740@01)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 8
; [then-branch: 289 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 289 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728) | live]
(push) ; 9
; [then-branch: 289 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@735@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 9
(push) ; 9
; [else-branch: 289 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 8
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 290 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 290 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 290 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 291 | True | live]
; [else-branch: 291 | False | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 291 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@741@01 $Snap)
(assert (= $t@741@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@742@01 $Struct)
(assert (=
  self@742@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 9
; [then-branch: 292 | False | dead]
; [else-branch: 292 | True | live]
(set-option :timeout 0)
(push) ; 9
; [else-branch: 292 | True]
(pop) ; 9
(pop) ; 8
(push) ; 8
; [else-branch: 290 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      170141183460469231731687303715884105727))))
(pop) ; 8
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 8
; [then-branch: 293 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 293 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728) | live]
(push) ; 9
; [then-branch: 293 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@735@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 9
(push) ; 9
; [else-branch: 293 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(push) ; 8
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 294 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 294 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 294 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@735@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1,
;   $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@743@01 $Struct)
(assert (=
  self@743@01
  ($struct_set<$Struct> self@739@01 1 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3)) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@735@01)))))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@744@01 $Struct)
(assert (=
  self@744@01
  ($struct_set<$Struct> self@743@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@743@01 0)) l$i0$target@642@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@743@01 0)) l$i0$target@642@01) 0 0)))))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 9
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 295 | $out_of_gas@590@01 | live]
; [else-branch: 295 | !($out_of_gas@590@01) | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 295 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 10
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 296 | True | live]
; [else-branch: 296 | False | dead]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 296 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@745@01 $Snap)
(assert (= $t@745@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@746@01 $Struct)
(assert (=
  self@746@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 10
; [then-branch: 297 | False | dead]
; [else-branch: 297 | True | live]
(set-option :timeout 0)
(push) ; 10
; [else-branch: 297 | True]
(pop) ; 10
(pop) ; 9
(push) ; 9
; [else-branch: 295 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
(pop) ; 9
; [eval] !$out_of_gas
(push) ; 9
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 298 | !($out_of_gas@590@01) | live]
; [else-branch: 298 | $out_of_gas@590@01 | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 298 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 299 | False | dead]
; [else-branch: 299 | True | live]
(push) ; 10
; [else-branch: 299 | True]
(pop) ; 10
(push) ; 10
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 300 | True | live]
; [else-branch: 300 | False | dead]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 300 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@747@01 $Snap)
(assert (= $t@747@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@748@01 $Struct)
(assert (=
  self@748@01
  ($struct_set<$Struct> self@744@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@744@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 10
(pop) ; 9
(set-option :timeout 0)
(push) ; 9
; [else-branch: 298 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
(pop) ; 9
(pop) ; 8
(push) ; 8
; [else-branch: 294 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@739@01, 0)), l$i0$target@642@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@739@01 0)) l$i0$target@642@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    170141183460469231731687303715884105727)))
(pop) ; 8
(pop) ; 7
(push) ; 7
; [else-branch: 288 | !(i6$$res@740@01)]
(assert (not i6$$res@740@01))
(pop) ; 7
; [eval] !i6$$res
(push) ; 7
(set-option :timeout 10)
(assert (not i6$$res@740@01))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not i6$$res@740@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 301 | !(i6$$res@740@01) | live]
; [else-branch: 301 | i6$$res@740@01 | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 301 | !(i6$$res@740@01)]
(assert (not i6$$res@740@01))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 8
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 302 | $out_of_gas@590@01 | live]
; [else-branch: 302 | !($out_of_gas@590@01) | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 302 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 303 | True | live]
; [else-branch: 303 | False | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 303 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@749@01 $Snap)
(assert (= $t@749@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@750@01 $Struct)
(assert (=
  self@750@01
  ($struct_set<$Struct> self@563@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@563@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 9
; [then-branch: 304 | False | dead]
; [else-branch: 304 | True | live]
(set-option :timeout 0)
(push) ; 9
; [else-branch: 304 | True]
(pop) ; 9
(pop) ; 8
(push) ; 8
; [else-branch: 302 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
(pop) ; 8
; [eval] !$out_of_gas
(push) ; 8
(set-option :timeout 10)
(assert (not $out_of_gas@590@01))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (not $out_of_gas@590@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 305 | !($out_of_gas@590@01) | live]
; [else-branch: 305 | $out_of_gas@590@01 | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 305 | !($out_of_gas@590@01)]
(assert (not $out_of_gas@590@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 306 | False | dead]
; [else-branch: 306 | True | live]
(push) ; 9
; [else-branch: 306 | True]
(pop) ; 9
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 307 | True | live]
; [else-branch: 307 | False | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 307 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@751@01 $Snap)
(assert (= $t@751@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@591@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@752@01 $Struct)
(assert (=
  self@752@01
  ($struct_set<$Struct> self@739@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@739@01 5))
    l$havoc@591@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 9
(pop) ; 8
(set-option :timeout 0)
(push) ; 8
; [else-branch: 305 | $out_of_gas@590@01]
(assert $out_of_gas@590@01)
(pop) ; 8
(pop) ; 7
(push) ; 7
; [else-branch: 301 | i6$$res@740@01]
(assert i6$$res@740@01)
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 286 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@736@01, 0)), l$i0$target@642@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@735@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@736@01 0)) l$i0$target@642@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@735@01))
    170141183460469231731687303715884105727)))
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 280 | i2$$res@644@01]
(assert i2$$res@644@01)
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 148 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@563@01, 0)), l$delegate_with_weight_to_forward@557@01), 0)) > 0)]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@563@01 0)) l$delegate_with_weight_to_forward@557@01) 0))
    0)))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 144 | !(i1$$res@637@01)]
(assert (not i1$$res@637@01))
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$delegate ----------
(declare-const l$to@753@01 Int)
(declare-const $succ@754@01 Bool)
(declare-const l$to@755@01 Int)
(declare-const $succ@756@01 Bool)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@757@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@758@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@759@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@760@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@761@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@762@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@763@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@764@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@765@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@766@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@767@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@768@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@769@01 Bool)
; [exec]
; var l$i0$delegate_with_weight_to_forward: Int
(declare-const l$i0$delegate_with_weight_to_forward@770@01 Int)
; [exec]
; var i0$$pre_self: $Struct
(declare-const i0$$pre_self@771@01 $Struct)
; [exec]
; var i0$$pre_$contracts: $Map[Int, $Struct]
(declare-const i0$$pre_$contracts@772@01 $Map<Int~_$Struct>)
; [exec]
; var l$i1$addr: Int
(declare-const l$i1$addr@773@01 Int)
; [exec]
; var i1$$res: Bool
(declare-const i1$$res@774@01 Bool)
; [exec]
; var l$i0$target: Int
(declare-const l$i0$target@775@01 Int)
; [exec]
; var l$i0$i: $Int
(declare-const l$i0$i@776@01 $Int)
; [exec]
; var l$i2$addr: Int
(declare-const l$i2$addr@777@01 Int)
; [exec]
; var i2$$res: Bool
(declare-const i2$$res@778@01 Bool)
; [exec]
; var l$i3$addr: Int
(declare-const l$i3$addr@779@01 Int)
; [exec]
; var i3$$res: Bool
(declare-const i3$$res@780@01 Bool)
; [exec]
; var l$i4$addr: Int
(declare-const l$i4$addr@781@01 Int)
; [exec]
; var i4$$res: Bool
(declare-const i4$$res@782@01 Bool)
; [exec]
; var l$i5$addr: Int
(declare-const l$i5$addr@783@01 Int)
; [exec]
; var i5$$res: Bool
(declare-const i5$$res@784@01 Bool)
; [exec]
; var l$i0$weight_to_forward: $Int
(declare-const l$i0$weight_to_forward@785@01 $Int)
; [exec]
; var l$i6$addr: Int
(declare-const l$i6$addr@786@01 Int)
; [exec]
; var i6$$res: Bool
(declare-const i6$$res@787@01 Bool)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@788@01 Bool)
; [exec]
; var l$havoc: Int
(declare-const l$havoc@789@01 Int)
; [exec]
; var l$havoc$1: $Map[Int, $Struct]
(declare-const l$havoc$1@790@01 $Map<Int~_$Struct>)
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@791@01 $Snap)
(assert (= $t@791@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@792@01 Int)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 308 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $q0@792@01), 0))) | live]
; [else-branch: 308 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $q0@792@01), 0)) | live]
(push) ; 5
; [then-branch: 308 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $q0@792@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@792@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 308 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $q0@792@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@792@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@792@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@792@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@792@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@792@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@792@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@792@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1538@11@1538@441-aux|)))
(assert (forall (($q0@792@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@792@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@792@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@792@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1538@11@1538@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@793@01 $Snap)
(assert (= $t@793@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@794@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 309 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $q0@794@01), 2))) | live]
; [else-branch: 309 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $q0@794@01), 2)) | live]
(push) ; 5
; [then-branch: 309 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $q0@794@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@794@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 309 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $q0@794@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@794@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@794@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@794@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@794@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@794@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@794@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@794@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1539@11@1539@412-aux|)))
(assert (forall (($q0@794@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@794@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@794@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@794@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1539@11@1539@412|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@795@01 $Snap)
(assert (= $t@795@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@796@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 310 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $q0@796@01), 3))) | live]
; [else-branch: 310 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $q0@796@01), 3)) | live]
(push) ; 5
; [then-branch: 310 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $q0@796@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@796@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 310 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $q0@796@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@796@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@796@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@796@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@796@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@796@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@796@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@796@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1540@11@1540@441-aux|)))
(assert (forall (($q0@796@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@796@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@796@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@796@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1540@11@1540@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@797@01 $Snap)
(assert (= $t@797@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@798@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@798@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@798@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) $q0@798@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1541@11@1541@272|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@799@01 $Snap)
(assert (= $t@799@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@800@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@800@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 1)) $q1@800@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 1)) $q1@800@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1542@11@1542@246|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@801@01 $Snap)
(assert (= $t@801@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@802@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(push) ; 4
; [then-branch: 311 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 1)), $q1@802@01), 1))) | live]
; [else-branch: 311 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 1)), $q1@802@01), 1)) | live]
(push) ; 5
; [then-branch: 311 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 1)), $q1@802@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 1)) $q1@802@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 311 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 1)), $q1@802@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 1)) $q1@802@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 1)) $q1@802@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 1)) $q1@802@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@802@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 1)) $q1@802@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 1)) $q1@802@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 1)) $q1@802@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1543@11@1543@441-aux|)))
(assert (forall (($q1@802@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 1)) $q1@802@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 1)) $q1@802@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 1)) $q1@802@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1543@11@1543@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@803@01 $Snap)
(assert (= $t@803@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@804@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@804@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 1)) $q1@804@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 1)) $q1@804@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1544@11@1544@279|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@805@01 $Snap)
(assert (= $t@805@01 ($Snap.combine ($Snap.first $t@805@01) ($Snap.second $t@805@01))))
(assert (= ($Snap.first $t@805@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@761@01 2))))
(assert (= ($Snap.second $t@805@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@761@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 3)): Int) &&
;   ($struct_get($struct_loc(self, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@806@01 $Snap)
(assert (= $t@806@01 ($Snap.combine ($Snap.first $t@806@01) ($Snap.second $t@806@01))))
(assert (= ($Snap.first $t@806@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 3)): Int)
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@761@01 3))))
(assert (= ($Snap.second $t@806@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@761@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 4)): Int) &&
;   ($struct_get($struct_loc(self, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@807@01 $Snap)
(assert (= $t@807@01 ($Snap.combine ($Snap.first $t@807@01) ($Snap.second $t@807@01))))
(assert (= ($Snap.first $t@807@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@761@01 4))))
(assert (= ($Snap.second $t@807@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@761@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@808@01 $Snap)
(assert (= $t@808@01 ($Snap.combine ($Snap.first $t@808@01) ($Snap.second $t@808@01))))
(assert (= ($Snap.first $t@808@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@761@01 5))))
(assert (= ($Snap.second $t@808@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@809@01 $Snap)
(assert (= $t@809@01 ($Snap.combine ($Snap.first $t@809@01) ($Snap.second $t@809@01))))
(assert (= ($Snap.first $t@809@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@761@01 6))))
(assert (= ($Snap.second $t@809@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@761@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@810@01 $Snap)
(assert (= $t@810@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@811@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(push) ; 4
; [then-branch: 312 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@761@01, 8)), $q3@811@01)) | live]
; [else-branch: 312 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@761@01, 8)), $q3@811@01) | live]
(push) ; 5
; [then-branch: 312 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@761@01, 8)), $q3@811@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 8)) $q3@811@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 312 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@761@01, 8)), $q3@811@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 8)) $q3@811@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 8)) $q3@811@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 8)) $q3@811@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@811@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 8)) $q3@811@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 8)) $q3@811@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 8)) $q3@811@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1550@11@1550@345-aux|)))
(assert (forall (($q3@811@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 8)) $q3@811@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 8)) $q3@811@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 8)) $q3@811@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1550@11@1550@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $t@812@01 $Snap)
(assert (= $t@812@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $q3@813@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@813@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 8)) $q3@813@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 8)) $q3@813@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1551@11@1551@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@814@01 $Snap)
(assert (= $t@814@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@815@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(push) ; 4
; [then-branch: 313 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@761@01, 9)), $q4@815@01)) | live]
; [else-branch: 313 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@761@01, 9)), $q4@815@01) | live]
(push) ; 5
; [then-branch: 313 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@761@01, 9)), $q4@815@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 9)) $q4@815@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 313 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@761@01, 9)), $q4@815@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 9)) $q4@815@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 9)) $q4@815@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 9)) $q4@815@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@815@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 9)) $q4@815@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 9)) $q4@815@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 9)) $q4@815@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1552@11@1552@345-aux|)))
(assert (forall (($q4@815@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 9)) $q4@815@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 9)) $q4@815@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 9)) $q4@815@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1552@11@1552@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $t@816@01 $Snap)
(assert (= $t@816@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $q4@817@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
; [eval] ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@817@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 9)) $q4@817@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@761@01 9)) $q4@817@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1553@11@1553@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@818@01 $Snap)
(assert (= $t@818@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@761@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@819@01 $Snap)
(assert (= $t@819@01 ($Snap.combine ($Snap.first $t@819@01) ($Snap.second $t@819@01))))
(assert (= ($Snap.first $t@819@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@819@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= l$to &&
;   l$to <= 1461501637330902918203684832716283019655932542975
(declare-const $t@820@01 $Snap)
(assert (= $t@820@01 ($Snap.combine ($Snap.first $t@820@01) ($Snap.second $t@820@01))))
(assert (= ($Snap.first $t@820@01) $Snap.unit))
; [eval] 0 <= l$to
(assert (<= 0 l$to@755@01))
(assert (= ($Snap.second $t@820@01) $Snap.unit))
; [eval] l$to <= 1461501637330902918203684832716283019655932542975
(assert (<= l$to@755@01 1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@821@01 $Snap)
(assert (= $t@821@01 ($Snap.combine ($Snap.first $t@821@01) ($Snap.second $t@821@01))))
(assert (= ($Snap.first $t@821@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@758@01 0))))
(assert (= ($Snap.second $t@821@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@758@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@822@01 $Snap)
(assert (= $t@822@01 ($Snap.combine ($Snap.first $t@822@01) ($Snap.second $t@822@01))))
(assert (= ($Snap.first $t@822@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@758@01 1))))
(assert (= ($Snap.second $t@822@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@758@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@823@01 $Snap)
(assert (= $t@823@01 ($Snap.combine ($Snap.first $t@823@01) ($Snap.second $t@823@01))))
(assert (= ($Snap.first $t@823@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@758@01 2))))
(assert (= ($Snap.second $t@823@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@758@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@824@01 $Snap)
(assert (= $t@824@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@758@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@825@01 $Snap)
(assert (= $t@825@01 ($Snap.combine ($Snap.first $t@825@01) ($Snap.second $t@825@01))))
(assert (= ($Snap.first $t@825@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@758@01 4))))
(assert (= ($Snap.second $t@825@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@758@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@826@01 $Snap)
(assert (= $t@826@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@758@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@827@01 $Snap)
(assert (= $t@827@01 ($Snap.combine ($Snap.first $t@827@01) ($Snap.second $t@827@01))))
(assert (= ($Snap.first $t@827@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))))
(assert (= ($Snap.second $t@827@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@828@01 $Snap)
(assert (= $t@828@01 ($Snap.combine ($Snap.first $t@828@01) ($Snap.second $t@828@01))))
(assert (= ($Snap.first $t@828@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@757@01 1))))
(assert (= ($Snap.second $t@828@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@757@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@829@01 $Snap)
(assert (= $t@829@01 ($Snap.combine ($Snap.first $t@829@01) ($Snap.second $t@829@01))))
(assert (= ($Snap.first $t@829@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@757@01 2))))
(assert (= ($Snap.second $t@829@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@757@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@830@01 $Snap)
(assert (= $t@830@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@757@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@831@01 $Snap)
(assert (= $t@831@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@757@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $t@832@01 $Snap)
(assert (= $t@832@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $a@833@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@834@01 $Snap)
(assert (= $t@834@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@757@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [eval] !!($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)): Bool)
; [eval] !($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)): Bool)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))) 1)))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))) 1))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 314 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $struct_get[Int]($struct_loc[Int](msg@757@01, 0))), 1)) | live]
; [else-branch: 314 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $struct_get[Int]($struct_loc[Int](msg@757@01, 0))), 1))) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 314 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $struct_get[Int]($struct_loc[Int](msg@757@01, 0))), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))) 1)))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 315 | True | live]
; [else-branch: 315 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 315 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@835@01 $Snap)
(assert (= $t@835@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@836@01 $Struct)
(assert (=
  self@836@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 4
; [then-branch: 316 | False | dead]
; [else-branch: 316 | True | live]
(set-option :timeout 0)
(push) ; 4
; [else-branch: 316 | True]
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 314 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $struct_get[Int]($struct_loc[Int](msg@757@01, 0))), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))) 1))))
(pop) ; 3
; [eval] !!!($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)): Bool)
; [eval] !!($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)): Bool)
; [eval] !($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)): Bool)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(push) ; 3
(set-option :timeout 10)
(assert (not ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))) 1))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))) 1)))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 317 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $struct_get[Int]($struct_loc[Int](msg@757@01, 0))), 1))) | live]
; [else-branch: 317 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $struct_get[Int]($struct_loc[Int](msg@757@01, 0))), 1)) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 317 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $struct_get[Int]($struct_loc[Int](msg@757@01, 0))), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))) 1))))
; [eval] !(l$to != ($struct_get($struct_loc(msg, 0)): Int))
; [eval] l$to != ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not (= l$to@755@01 ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (= l$to@755@01 ($struct_get<Int> ($struct_loc<Int> msg@757@01 0)))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 318 | l$to@755@01 == $struct_get[Int]($struct_loc[Int](msg@757@01, 0)) | live]
; [else-branch: 318 | l$to@755@01 != $struct_get[Int]($struct_loc[Int](msg@757@01, 0)) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 318 | l$to@755@01 == $struct_get[Int]($struct_loc[Int](msg@757@01, 0))]
(assert (= l$to@755@01 ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 5
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 319 | True | live]
; [else-branch: 319 | False | dead]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 319 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@837@01 $Snap)
(assert (= $t@837@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@838@01 $Struct)
(assert (=
  self@838@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 5
; [then-branch: 320 | False | dead]
; [else-branch: 320 | True | live]
(set-option :timeout 0)
(push) ; 5
; [else-branch: 320 | True]
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 318 | l$to@755@01 != $struct_get[Int]($struct_loc[Int](msg@757@01, 0))]
(assert (not (= l$to@755@01 ($struct_get<Int> ($struct_loc<Int> msg@757@01 0)))))
(pop) ; 4
; [eval] !!(l$to != ($struct_get($struct_loc(msg, 0)): Int))
; [eval] !(l$to != ($struct_get($struct_loc(msg, 0)): Int))
; [eval] l$to != ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (= l$to@755@01 ($struct_get<Int> ($struct_loc<Int> msg@757@01 0)))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not (= l$to@755@01 ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 321 | l$to@755@01 != $struct_get[Int]($struct_loc[Int](msg@757@01, 0)) | live]
; [else-branch: 321 | l$to@755@01 == $struct_get[Int]($struct_loc[Int](msg@757@01, 0)) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 321 | l$to@755@01 != $struct_get[Int]($struct_loc[Int](msg@757@01, 0))]
(assert (not (= l$to@755@01 ($struct_get<Int> ($struct_loc<Int> msg@757@01 0)))))
; [eval] !(l$to != 0)
; [eval] l$to != 0
(push) ; 5
(set-option :timeout 10)
(assert (not (not (= l$to@755@01 0))))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (= l$to@755@01 0)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 322 | l$to@755@01 == 0 | live]
; [else-branch: 322 | l$to@755@01 != 0 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 322 | l$to@755@01 == 0]
(assert (= l$to@755@01 0))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 323 | True | live]
; [else-branch: 323 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 323 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@839@01 $Snap)
(assert (= $t@839@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@840@01 $Struct)
(assert (=
  self@840@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 6
; [then-branch: 324 | False | dead]
; [else-branch: 324 | True | live]
(set-option :timeout 0)
(push) ; 6
; [else-branch: 324 | True]
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 322 | l$to@755@01 != 0]
(assert (not (= l$to@755@01 0)))
(pop) ; 5
; [eval] !!(l$to != 0)
; [eval] !(l$to != 0)
; [eval] l$to != 0
(push) ; 5
(set-option :timeout 10)
(assert (not (= l$to@755@01 0)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not (= l$to@755@01 0))))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 325 | l$to@755@01 != 0 | live]
; [else-branch: 325 | l$to@755@01 == 0 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 325 | l$to@755@01 != 0]
(assert (not (= l$to@755@01 0)))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   ($struct_get($struct_loc(msg, 0)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct),
;   1, true): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1, true): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1, true): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1, true): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(declare-const self@841@01 $Struct)
(assert (=
  self@841@01
  ($struct_set<$Struct> self@761@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@757@01 0)) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))) 1 true)))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   ($struct_get($struct_loc(msg, 0)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct),
;   2, l$to): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 2, l$to): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 2, l$to): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 2, l$to): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(declare-const self@842@01 $Struct)
(assert (=
  self@842@01
  ($struct_set<$Struct> self@841@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@841@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@757@01 0)) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@841@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))) 2 l$to@755@01)))))
; [exec]
; i0$$pre_self := self
; [exec]
; i0$$pre_$contracts := $contracts
; [exec]
; l$i0$delegate_with_weight_to_forward := ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(declare-const l$i0$delegate_with_weight_to_forward@843@01 Int)
(assert (=
  l$i0$delegate_with_weight_to_forward@843@01
  ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))))
; [exec]
; l$i1$addr := l$i0$delegate_with_weight_to_forward
; [exec]
; i1$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i1$addr): $Struct), 2)): Int) !=
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i1$addr): $Struct), 2)): Int) != 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i1$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i1$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i1$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const i1$$res@844@01 Bool)
(assert (=
  i1$$res@844@01
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 2))
      0))))
; [exec]
; label i1$return
; [eval] !i1$$res
(push) ; 6
(set-option :timeout 10)
(assert (not i1$$res@844@01))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 326 | !(i1$$res@844@01) | dead]
; [else-branch: 326 | i1$$res@844@01 | live]
(set-option :timeout 0)
(push) ; 6
; [else-branch: 326 | i1$$res@844@01]
(assert i1$$res@844@01)
(pop) ; 6
; [eval] !!i1$$res
; [eval] !i1$$res
(push) ; 6
(set-option :timeout 10)
(assert (not (not i1$$res@844@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not i1$$res@844@01))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 327 | i1$$res@844@01 | live]
; [else-branch: 327 | !(i1$$res@844@01) | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 327 | i1$$res@844@01]
(assert i1$$res@844@01)
; [eval] !(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int) > 0)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int) > 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0))
  0)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0))
    0))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 328 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@842@01, 0)), l$i0$delegate_with_weight_to_forward@843@01), 0)) > 0) | live]
; [else-branch: 328 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@842@01, 0)), l$i0$delegate_with_weight_to_forward@843@01), 0)) > 0 | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 328 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@842@01, 0)), l$i0$delegate_with_weight_to_forward@843@01), 0)) > 0)]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0))
    0)))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 8
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 329 | True | live]
; [else-branch: 329 | False | dead]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 329 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@845@01 $Snap)
(assert (= $t@845@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@846@01 $Struct)
(assert (=
  self@846@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 8
; [then-branch: 330 | False | dead]
; [else-branch: 330 | True | live]
(set-option :timeout 0)
(push) ; 8
; [else-branch: 330 | True]
(pop) ; 8
(pop) ; 7
(push) ; 7
; [else-branch: 328 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@842@01, 0)), l$i0$delegate_with_weight_to_forward@843@01), 0)) > 0]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0))
  0))
(pop) ; 7
; [eval] !!(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int) > 0)
; [eval] !(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int) > 0)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int) > 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0))
    0))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0))
  0)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 331 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@842@01, 0)), l$i0$delegate_with_weight_to_forward@843@01), 0)) > 0 | live]
; [else-branch: 331 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@842@01, 0)), l$i0$delegate_with_weight_to_forward@843@01), 0)) > 0) | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 331 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@842@01, 0)), l$i0$delegate_with_weight_to_forward@843@01), 0)) > 0]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0))
  0))
; [exec]
; l$i0$target := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$target@847@01 Int)
(assert (=
  l$i0$target@847@01
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 2))))
; [exec]
; l$i0$i := $wrap($range(0, 4)[0])
; [eval] $wrap($range(0, 4)[0])
; [eval] $range(0, 4)[0]
; [eval] $range(0, 4)
(push) ; 8
(assert (not (< 0 (Seq_length ($range<Seq<Int>> 0 4)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(declare-const l$i0$i@848@01 $Int)
(assert (= l$i0$i@848@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 4) 0))))
; [exec]
; l$i2$addr := l$i0$target
; [exec]
; i2$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i2$addr): $Struct), 2)): Int) !=
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i2$addr): $Struct), 2)): Int) != 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i2$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i2$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i2$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const i2$$res@849@01 Bool)
(assert (=
  i2$$res@849@01
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$target@847@01) 2))
      0))))
; [exec]
; label i2$return
(push) ; 8
(set-option :timeout 10)
(assert (not (not i2$$res@849@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not i2$$res@849@01))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 332 | i2$$res@849@01 | live]
; [else-branch: 332 | !(i2$$res@849@01) | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 332 | i2$$res@849@01]
(assert i2$$res@849@01)
; [exec]
; l$i0$target := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$target@850@01 Int)
(assert (=
  l$i0$target@850@01
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$target@847@01) 2))))
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= l$i0$target@850@01 l$i0$delegate_with_weight_to_forward@843@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= l$i0$target@850@01 l$i0$delegate_with_weight_to_forward@843@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 333 | l$i0$target@850@01 == l$i0$delegate_with_weight_to_forward@843@01 | live]
; [else-branch: 333 | l$i0$target@850@01 != l$i0$delegate_with_weight_to_forward@843@01 | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 333 | l$i0$target@850@01 == l$i0$delegate_with_weight_to_forward@843@01]
(assert (= l$i0$target@850@01 l$i0$delegate_with_weight_to_forward@843@01))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 10
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 334 | True | live]
; [else-branch: 334 | False | dead]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 334 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@851@01 $Snap)
(assert (= $t@851@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@852@01 $Struct)
(assert (=
  self@852@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 10
; [then-branch: 335 | False | dead]
; [else-branch: 335 | True | live]
(set-option :timeout 0)
(push) ; 10
; [else-branch: 335 | True]
(pop) ; 10
(pop) ; 9
(push) ; 9
; [else-branch: 333 | l$i0$target@850@01 != l$i0$delegate_with_weight_to_forward@843@01]
(assert (not (= l$i0$target@850@01 l$i0$delegate_with_weight_to_forward@843@01)))
(pop) ; 9
; [eval] !!(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 9
(set-option :timeout 10)
(assert (not (= l$i0$target@850@01 l$i0$delegate_with_weight_to_forward@843@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= l$i0$target@850@01 l$i0$delegate_with_weight_to_forward@843@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 336 | l$i0$target@850@01 != l$i0$delegate_with_weight_to_forward@843@01 | live]
; [else-branch: 336 | l$i0$target@850@01 == l$i0$delegate_with_weight_to_forward@843@01 | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 336 | l$i0$target@850@01 != l$i0$delegate_with_weight_to_forward@843@01]
(assert (not (= l$i0$target@850@01 l$i0$delegate_with_weight_to_forward@843@01)))
; [exec]
; label continue_0
; [exec]
; l$i0$i := $wrap($range(0, 4)[1])
; [eval] $wrap($range(0, 4)[1])
; [eval] $range(0, 4)[1]
; [eval] $range(0, 4)
(push) ; 10
(assert (not (< 1 (Seq_length ($range<Seq<Int>> 0 4)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(declare-const l$i0$i@853@01 $Int)
(assert (= l$i0$i@853@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 4) 1))))
; [exec]
; l$i3$addr := l$i0$target
; [exec]
; i3$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i3$addr): $Struct), 2)): Int) !=
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i3$addr): $Struct), 2)): Int) != 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i3$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i3$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i3$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const i3$$res@854@01 Bool)
(assert (=
  i3$$res@854@01
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$target@850@01) 2))
      0))))
; [exec]
; label i3$return
(push) ; 10
(set-option :timeout 10)
(assert (not (not i3$$res@854@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not i3$$res@854@01))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 337 | i3$$res@854@01 | live]
; [else-branch: 337 | !(i3$$res@854@01) | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 337 | i3$$res@854@01]
(assert i3$$res@854@01)
; [exec]
; l$i0$target := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$target@855@01 Int)
(assert (=
  l$i0$target@855@01
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$target@850@01) 2))))
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= l$i0$target@855@01 l$i0$delegate_with_weight_to_forward@843@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= l$i0$target@855@01 l$i0$delegate_with_weight_to_forward@843@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 338 | l$i0$target@855@01 == l$i0$delegate_with_weight_to_forward@843@01 | live]
; [else-branch: 338 | l$i0$target@855@01 != l$i0$delegate_with_weight_to_forward@843@01 | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 338 | l$i0$target@855@01 == l$i0$delegate_with_weight_to_forward@843@01]
(assert (= l$i0$target@855@01 l$i0$delegate_with_weight_to_forward@843@01))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 12
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 339 | True | live]
; [else-branch: 339 | False | dead]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 339 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@856@01 $Snap)
(assert (= $t@856@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@857@01 $Struct)
(assert (=
  self@857@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 12
; [then-branch: 340 | False | dead]
; [else-branch: 340 | True | live]
(set-option :timeout 0)
(push) ; 12
; [else-branch: 340 | True]
(pop) ; 12
(pop) ; 11
(push) ; 11
; [else-branch: 338 | l$i0$target@855@01 != l$i0$delegate_with_weight_to_forward@843@01]
(assert (not (= l$i0$target@855@01 l$i0$delegate_with_weight_to_forward@843@01)))
(pop) ; 11
; [eval] !!(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 11
(set-option :timeout 10)
(assert (not (= l$i0$target@855@01 l$i0$delegate_with_weight_to_forward@843@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= l$i0$target@855@01 l$i0$delegate_with_weight_to_forward@843@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 341 | l$i0$target@855@01 != l$i0$delegate_with_weight_to_forward@843@01 | live]
; [else-branch: 341 | l$i0$target@855@01 == l$i0$delegate_with_weight_to_forward@843@01 | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 341 | l$i0$target@855@01 != l$i0$delegate_with_weight_to_forward@843@01]
(assert (not (= l$i0$target@855@01 l$i0$delegate_with_weight_to_forward@843@01)))
; [exec]
; label continue_1
; [exec]
; l$i0$i := $wrap($range(0, 4)[2])
; [eval] $wrap($range(0, 4)[2])
; [eval] $range(0, 4)[2]
; [eval] $range(0, 4)
(push) ; 12
(assert (not (< 2 (Seq_length ($range<Seq<Int>> 0 4)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(declare-const l$i0$i@858@01 $Int)
(assert (= l$i0$i@858@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 4) 2))))
; [exec]
; l$i4$addr := l$i0$target
; [exec]
; i4$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i4$addr): $Struct), 2)): Int) !=
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i4$addr): $Struct), 2)): Int) != 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i4$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i4$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i4$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const i4$$res@859@01 Bool)
(assert (=
  i4$$res@859@01
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$target@855@01) 2))
      0))))
; [exec]
; label i4$return
(push) ; 12
(set-option :timeout 10)
(assert (not (not i4$$res@859@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not i4$$res@859@01))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 342 | i4$$res@859@01 | live]
; [else-branch: 342 | !(i4$$res@859@01) | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 342 | i4$$res@859@01]
(assert i4$$res@859@01)
; [exec]
; l$i0$target := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$target@860@01 Int)
(assert (=
  l$i0$target@860@01
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$target@855@01) 2))))
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 13
(set-option :timeout 10)
(assert (not (not (= l$i0$target@860@01 l$i0$delegate_with_weight_to_forward@843@01))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not (= l$i0$target@860@01 l$i0$delegate_with_weight_to_forward@843@01)))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 343 | l$i0$target@860@01 == l$i0$delegate_with_weight_to_forward@843@01 | live]
; [else-branch: 343 | l$i0$target@860@01 != l$i0$delegate_with_weight_to_forward@843@01 | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 343 | l$i0$target@860@01 == l$i0$delegate_with_weight_to_forward@843@01]
(assert (= l$i0$target@860@01 l$i0$delegate_with_weight_to_forward@843@01))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 14
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 344 | True | live]
; [else-branch: 344 | False | dead]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 344 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@861@01 $Snap)
(assert (= $t@861@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@862@01 $Struct)
(assert (=
  self@862@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 14
; [then-branch: 345 | False | dead]
; [else-branch: 345 | True | live]
(set-option :timeout 0)
(push) ; 14
; [else-branch: 345 | True]
(pop) ; 14
(pop) ; 13
(push) ; 13
; [else-branch: 343 | l$i0$target@860@01 != l$i0$delegate_with_weight_to_forward@843@01]
(assert (not (= l$i0$target@860@01 l$i0$delegate_with_weight_to_forward@843@01)))
(pop) ; 13
; [eval] !!(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 13
(set-option :timeout 10)
(assert (not (= l$i0$target@860@01 l$i0$delegate_with_weight_to_forward@843@01)))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not (not (= l$i0$target@860@01 l$i0$delegate_with_weight_to_forward@843@01))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 346 | l$i0$target@860@01 != l$i0$delegate_with_weight_to_forward@843@01 | live]
; [else-branch: 346 | l$i0$target@860@01 == l$i0$delegate_with_weight_to_forward@843@01 | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 346 | l$i0$target@860@01 != l$i0$delegate_with_weight_to_forward@843@01]
(assert (not (= l$i0$target@860@01 l$i0$delegate_with_weight_to_forward@843@01)))
; [exec]
; label continue_2
; [exec]
; l$i0$i := $wrap($range(0, 4)[3])
; [eval] $wrap($range(0, 4)[3])
; [eval] $range(0, 4)[3]
; [eval] $range(0, 4)
(push) ; 14
(assert (not (< 3 (Seq_length ($range<Seq<Int>> 0 4)))))
(check-sat)
; unsat
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(declare-const l$i0$i@863@01 $Int)
(assert (= l$i0$i@863@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 4) 3))))
; [exec]
; l$i5$addr := l$i0$target
; [exec]
; i5$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i5$addr): $Struct), 2)): Int) !=
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i5$addr): $Struct), 2)): Int) != 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i5$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i5$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i5$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const i5$$res@864@01 Bool)
(assert (=
  i5$$res@864@01
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$target@860@01) 2))
      0))))
; [exec]
; label i5$return
(push) ; 14
(set-option :timeout 10)
(assert (not (not i5$$res@864@01)))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 14
(set-option :timeout 10)
(assert (not i5$$res@864@01))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 347 | i5$$res@864@01 | live]
; [else-branch: 347 | !(i5$$res@864@01) | live]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 347 | i5$$res@864@01]
(assert i5$$res@864@01)
; [exec]
; l$i0$target := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$target@865@01 Int)
(assert (=
  l$i0$target@865@01
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$target@860@01) 2))))
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 15
(set-option :timeout 10)
(assert (not (not (= l$i0$target@865@01 l$i0$delegate_with_weight_to_forward@843@01))))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
(set-option :timeout 10)
(assert (not (= l$i0$target@865@01 l$i0$delegate_with_weight_to_forward@843@01)))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 348 | l$i0$target@865@01 == l$i0$delegate_with_weight_to_forward@843@01 | live]
; [else-branch: 348 | l$i0$target@865@01 != l$i0$delegate_with_weight_to_forward@843@01 | live]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 348 | l$i0$target@865@01 == l$i0$delegate_with_weight_to_forward@843@01]
(assert (= l$i0$target@865@01 l$i0$delegate_with_weight_to_forward@843@01))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 16
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 349 | True | live]
; [else-branch: 349 | False | dead]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 349 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@866@01 $Snap)
(assert (= $t@866@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@867@01 $Struct)
(assert (=
  self@867@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 16
; [then-branch: 350 | False | dead]
; [else-branch: 350 | True | live]
(set-option :timeout 0)
(push) ; 16
; [else-branch: 350 | True]
(pop) ; 16
(pop) ; 15
(push) ; 15
; [else-branch: 348 | l$i0$target@865@01 != l$i0$delegate_with_weight_to_forward@843@01]
(assert (not (= l$i0$target@865@01 l$i0$delegate_with_weight_to_forward@843@01)))
(pop) ; 15
; [eval] !!(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] !(l$i0$target != l$i0$delegate_with_weight_to_forward)
; [eval] l$i0$target != l$i0$delegate_with_weight_to_forward
(push) ; 15
(set-option :timeout 10)
(assert (not (= l$i0$target@865@01 l$i0$delegate_with_weight_to_forward@843@01)))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
(set-option :timeout 10)
(assert (not (not (= l$i0$target@865@01 l$i0$delegate_with_weight_to_forward@843@01))))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 351 | l$i0$target@865@01 != l$i0$delegate_with_weight_to_forward@843@01 | live]
; [else-branch: 351 | l$i0$target@865@01 == l$i0$delegate_with_weight_to_forward@843@01 | live]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 351 | l$i0$target@865@01 != l$i0$delegate_with_weight_to_forward@843@01]
(assert (not (= l$i0$target@865@01 l$i0$delegate_with_weight_to_forward@843@01)))
; [exec]
; label continue_3
; [exec]
; label break_0
; [exec]
; l$i0$weight_to_forward := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$weight_to_forward@868@01 $Int)
(assert (=
  l$i0$weight_to_forward@868@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0)))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@869@01 $Struct)
(assert (=
  self@869@01
  ($struct_set<$Struct> self@842@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0 0)))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 16
; [then-branch: 352 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 352 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728) | live]
(push) ; 17
; [then-branch: 352 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@868@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 17
(push) ; 17
; [else-branch: 352 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 17
(pop) ; 16
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 16
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 16
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 353 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 353 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 353 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 17
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
; [then-branch: 354 | True | live]
; [else-branch: 354 | False | dead]
(set-option :timeout 0)
(push) ; 17
; [then-branch: 354 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@870@01 $Snap)
(assert (= $t@870@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@871@01 $Struct)
(assert (=
  self@871@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 17
; [then-branch: 355 | False | dead]
; [else-branch: 355 | True | live]
(set-option :timeout 0)
(push) ; 17
; [else-branch: 355 | True]
(pop) ; 17
(pop) ; 16
(push) ; 16
; [else-branch: 353 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      170141183460469231731687303715884105727))))
(pop) ; 16
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 16
; [then-branch: 356 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 356 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728) | live]
(push) ; 17
; [then-branch: 356 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@868@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 17
(push) ; 17
; [else-branch: 356 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 17
(pop) ; 16
; Joined path conditions
; Joined path conditions
(push) ; 16
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 16
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 357 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 357 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 357 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@872@01 $Struct)
(assert (=
  self@872@01
  ($struct_set<$Struct> self@869@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@868@01)))))))
; [exec]
; l$i6$addr := l$i0$target
; [exec]
; i6$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) &&
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i6$addr): $Struct), 2)): Int) ==
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 17
; [then-branch: 358 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 1))) | live]
; [else-branch: 358 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 1)) | live]
(push) ; 18
; [then-branch: 358 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 1))))
(pop) ; 18
(push) ; 18
; [else-branch: 358 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 1)))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 18
(pop) ; 17
; Joined path conditions
; Joined path conditions
(assert (or
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 1))
  (not
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 1)))))
(declare-const i6$$res@873@01 Bool)
(assert (=
  i6$$res@873@01
  (and
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 1))
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 2))
      0))))
; [exec]
; label i6$return
(push) ; 17
(set-option :timeout 10)
(assert (not (not i6$$res@873@01)))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 17
(set-option :timeout 10)
(assert (not i6$$res@873@01))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
; [then-branch: 359 | i6$$res@873@01 | live]
; [else-branch: 359 | !(i6$$res@873@01) | live]
(set-option :timeout 0)
(push) ; 17
; [then-branch: 359 | i6$$res@873@01]
(assert i6$$res@873@01)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 18
; [then-branch: 360 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 360 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728) | live]
(push) ; 19
; [then-branch: 360 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@868@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 19
(push) ; 19
; [else-branch: 360 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 19
(pop) ; 18
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 18
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 18
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 18
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 18
; 0.00s
; (get-info :all-statistics)
; [then-branch: 361 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 361 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 18
; [then-branch: 361 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 19
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 19
; 0.00s
; (get-info :all-statistics)
; [then-branch: 362 | True | live]
; [else-branch: 362 | False | dead]
(set-option :timeout 0)
(push) ; 19
; [then-branch: 362 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@874@01 $Snap)
(assert (= $t@874@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@875@01 $Struct)
(assert (=
  self@875@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 19
; [then-branch: 363 | False | dead]
; [else-branch: 363 | True | live]
(set-option :timeout 0)
(push) ; 19
; [else-branch: 363 | True]
(pop) ; 19
(pop) ; 18
(push) ; 18
; [else-branch: 361 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      170141183460469231731687303715884105727))))
(pop) ; 18
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 18
; [then-branch: 364 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 364 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728) | live]
(push) ; 19
; [then-branch: 364 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@868@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 19
(push) ; 19
; [else-branch: 364 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 19
(pop) ; 18
; Joined path conditions
; Joined path conditions
(push) ; 18
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 18
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 18
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 18
; 0.00s
; (get-info :all-statistics)
; [then-branch: 365 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 365 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 18
; [then-branch: 365 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@868@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1,
;   $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@876@01 $Struct)
(assert (=
  self@876@01
  ($struct_set<$Struct> self@872@01 1 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3)) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@868@01)))))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@877@01 $Struct)
(assert (=
  self@877@01
  ($struct_set<$Struct> self@876@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@876@01 0)) l$i0$target@865@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@876@01 0)) l$i0$target@865@01) 0 0)))))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 19
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 19
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 19
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 19
; 0.00s
; (get-info :all-statistics)
; [then-branch: 366 | $out_of_gas@788@01 | live]
; [else-branch: 366 | !($out_of_gas@788@01) | live]
(set-option :timeout 0)
(push) ; 19
; [then-branch: 366 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 20
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 20
; 0.00s
; (get-info :all-statistics)
; [then-branch: 367 | True | live]
; [else-branch: 367 | False | dead]
(set-option :timeout 0)
(push) ; 20
; [then-branch: 367 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@878@01 $Snap)
(assert (= $t@878@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@879@01 $Struct)
(assert (=
  self@879@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 20
; [then-branch: 368 | False | dead]
; [else-branch: 368 | True | live]
(set-option :timeout 0)
(push) ; 20
; [else-branch: 368 | True]
(pop) ; 20
(pop) ; 19
(push) ; 19
; [else-branch: 366 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
(pop) ; 19
; [eval] !$out_of_gas
(push) ; 19
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 19
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 19
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 19
; 0.00s
; (get-info :all-statistics)
; [then-branch: 369 | !($out_of_gas@788@01) | live]
; [else-branch: 369 | $out_of_gas@788@01 | live]
(set-option :timeout 0)
(push) ; 19
; [then-branch: 369 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 370 | False | dead]
; [else-branch: 370 | True | live]
(push) ; 20
; [else-branch: 370 | True]
(pop) ; 20
(push) ; 20
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 20
; 0.00s
; (get-info :all-statistics)
; [then-branch: 371 | True | live]
; [else-branch: 371 | False | dead]
(set-option :timeout 0)
(push) ; 20
; [then-branch: 371 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@880@01 $Snap)
(assert (= $t@880@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@881@01 $Struct)
(assert (=
  self@881@01
  ($struct_set<$Struct> self@877@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@877@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 20
(pop) ; 19
(set-option :timeout 0)
(push) ; 19
; [else-branch: 369 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
(pop) ; 19
(pop) ; 18
(push) ; 18
; [else-branch: 365 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@872@01, 0)), l$i0$target@865@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@872@01 0)) l$i0$target@865@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    170141183460469231731687303715884105727)))
(pop) ; 18
(pop) ; 17
(push) ; 17
; [else-branch: 359 | !(i6$$res@873@01)]
(assert (not i6$$res@873@01))
(pop) ; 17
; [eval] !i6$$res
(push) ; 17
(set-option :timeout 10)
(assert (not i6$$res@873@01))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 17
(set-option :timeout 10)
(assert (not (not i6$$res@873@01)))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
; [then-branch: 372 | !(i6$$res@873@01) | live]
; [else-branch: 372 | i6$$res@873@01 | live]
(set-option :timeout 0)
(push) ; 17
; [then-branch: 372 | !(i6$$res@873@01)]
(assert (not i6$$res@873@01))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 18
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 18
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 18
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 18
; 0.00s
; (get-info :all-statistics)
; [then-branch: 373 | $out_of_gas@788@01 | live]
; [else-branch: 373 | !($out_of_gas@788@01) | live]
(set-option :timeout 0)
(push) ; 18
; [then-branch: 373 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 19
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 19
; 0.00s
; (get-info :all-statistics)
; [then-branch: 374 | True | live]
; [else-branch: 374 | False | dead]
(set-option :timeout 0)
(push) ; 19
; [then-branch: 374 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@882@01 $Snap)
(assert (= $t@882@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@883@01 $Struct)
(assert (=
  self@883@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 19
; [then-branch: 375 | False | dead]
; [else-branch: 375 | True | live]
(set-option :timeout 0)
(push) ; 19
; [else-branch: 375 | True]
(pop) ; 19
(pop) ; 18
(push) ; 18
; [else-branch: 373 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
(pop) ; 18
; [eval] !$out_of_gas
(push) ; 18
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 18
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 18
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 18
; 0.00s
; (get-info :all-statistics)
; [then-branch: 376 | !($out_of_gas@788@01) | live]
; [else-branch: 376 | $out_of_gas@788@01 | live]
(set-option :timeout 0)
(push) ; 18
; [then-branch: 376 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 377 | False | dead]
; [else-branch: 377 | True | live]
(push) ; 19
; [else-branch: 377 | True]
(pop) ; 19
(push) ; 19
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 19
; 0.00s
; (get-info :all-statistics)
; [then-branch: 378 | True | live]
; [else-branch: 378 | False | dead]
(set-option :timeout 0)
(push) ; 19
; [then-branch: 378 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@884@01 $Snap)
(assert (= $t@884@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@885@01 $Struct)
(assert (=
  self@885@01
  ($struct_set<$Struct> self@872@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@872@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 19
(pop) ; 18
(set-option :timeout 0)
(push) ; 18
; [else-branch: 376 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
(pop) ; 18
(pop) ; 17
(push) ; 17
; [else-branch: 372 | i6$$res@873@01]
(assert i6$$res@873@01)
(pop) ; 17
(pop) ; 16
(push) ; 16
; [else-branch: 357 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@869@01, 0)), l$i0$target@865@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@868@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@869@01 0)) l$i0$target@865@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@868@01))
    170141183460469231731687303715884105727)))
(pop) ; 16
(pop) ; 15
(push) ; 15
; [else-branch: 351 | l$i0$target@865@01 == l$i0$delegate_with_weight_to_forward@843@01]
(assert (= l$i0$target@865@01 l$i0$delegate_with_weight_to_forward@843@01))
(pop) ; 15
(pop) ; 14
(push) ; 14
; [else-branch: 347 | !(i5$$res@864@01)]
(assert (not i5$$res@864@01))
(pop) ; 14
; [eval] !i5$$res
(push) ; 14
(set-option :timeout 10)
(assert (not i5$$res@864@01))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 14
(set-option :timeout 10)
(assert (not (not i5$$res@864@01)))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 379 | !(i5$$res@864@01) | live]
; [else-branch: 379 | i5$$res@864@01 | live]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 379 | !(i5$$res@864@01)]
(assert (not i5$$res@864@01))
; [exec]
; label break_0
; [exec]
; l$i0$weight_to_forward := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$weight_to_forward@886@01 $Int)
(assert (=
  l$i0$weight_to_forward@886@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0)))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@887@01 $Struct)
(assert (=
  self@887@01
  ($struct_set<$Struct> self@842@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0 0)))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 15
; [then-branch: 380 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 380 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728) | live]
(push) ; 16
; [then-branch: 380 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@886@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 16
(push) ; 16
; [else-branch: 380 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 15
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 381 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 381 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 381 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 16
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 382 | True | live]
; [else-branch: 382 | False | dead]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 382 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@888@01 $Snap)
(assert (= $t@888@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@889@01 $Struct)
(assert (=
  self@889@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 16
; [then-branch: 383 | False | dead]
; [else-branch: 383 | True | live]
(set-option :timeout 0)
(push) ; 16
; [else-branch: 383 | True]
(pop) ; 16
(pop) ; 15
(push) ; 15
; [else-branch: 381 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      170141183460469231731687303715884105727))))
(pop) ; 15
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 15
; [then-branch: 384 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 384 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728) | live]
(push) ; 16
; [then-branch: 384 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@886@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 16
(push) ; 16
; [else-branch: 384 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(push) ; 15
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 385 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 385 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 385 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@890@01 $Struct)
(assert (=
  self@890@01
  ($struct_set<$Struct> self@887@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@886@01)))))))
; [exec]
; l$i6$addr := l$i0$target
; [exec]
; i6$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) &&
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i6$addr): $Struct), 2)): Int) ==
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 16
; [then-branch: 386 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 1))) | live]
; [else-branch: 386 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 1)) | live]
(push) ; 17
; [then-branch: 386 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 1))))
(pop) ; 17
(push) ; 17
; [else-branch: 386 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 1)))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 17
(pop) ; 16
; Joined path conditions
; Joined path conditions
(assert (or
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 1))
  (not
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 1)))))
(declare-const i6$$res@891@01 Bool)
(assert (=
  i6$$res@891@01
  (and
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 1))
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 2))
      0))))
; [exec]
; label i6$return
(push) ; 16
(set-option :timeout 10)
(assert (not (not i6$$res@891@01)))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 16
(set-option :timeout 10)
(assert (not i6$$res@891@01))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 387 | i6$$res@891@01 | live]
; [else-branch: 387 | !(i6$$res@891@01) | live]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 387 | i6$$res@891@01]
(assert i6$$res@891@01)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 17
; [then-branch: 388 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 388 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728) | live]
(push) ; 18
; [then-branch: 388 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@886@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 18
(push) ; 18
; [else-branch: 388 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 18
(pop) ; 17
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 17
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 17
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
; [then-branch: 389 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 389 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 17
; [then-branch: 389 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 18
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 18
; 0.00s
; (get-info :all-statistics)
; [then-branch: 390 | True | live]
; [else-branch: 390 | False | dead]
(set-option :timeout 0)
(push) ; 18
; [then-branch: 390 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@892@01 $Snap)
(assert (= $t@892@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@893@01 $Struct)
(assert (=
  self@893@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 18
; [then-branch: 391 | False | dead]
; [else-branch: 391 | True | live]
(set-option :timeout 0)
(push) ; 18
; [else-branch: 391 | True]
(pop) ; 18
(pop) ; 17
(push) ; 17
; [else-branch: 389 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      170141183460469231731687303715884105727))))
(pop) ; 17
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 17
; [then-branch: 392 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 392 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728) | live]
(push) ; 18
; [then-branch: 392 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@886@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 18
(push) ; 18
; [else-branch: 392 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 18
(pop) ; 17
; Joined path conditions
; Joined path conditions
(push) ; 17
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 17
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
; [then-branch: 393 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 393 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 17
; [then-branch: 393 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@886@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1,
;   $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@894@01 $Struct)
(assert (=
  self@894@01
  ($struct_set<$Struct> self@890@01 1 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3)) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@886@01)))))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@895@01 $Struct)
(assert (=
  self@895@01
  ($struct_set<$Struct> self@894@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@894@01 0)) l$i0$target@860@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@894@01 0)) l$i0$target@860@01) 0 0)))))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 18
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 18
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 18
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 18
; 0.00s
; (get-info :all-statistics)
; [then-branch: 394 | $out_of_gas@788@01 | live]
; [else-branch: 394 | !($out_of_gas@788@01) | live]
(set-option :timeout 0)
(push) ; 18
; [then-branch: 394 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 19
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 19
; 0.00s
; (get-info :all-statistics)
; [then-branch: 395 | True | live]
; [else-branch: 395 | False | dead]
(set-option :timeout 0)
(push) ; 19
; [then-branch: 395 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@896@01 $Snap)
(assert (= $t@896@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@897@01 $Struct)
(assert (=
  self@897@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 19
; [then-branch: 396 | False | dead]
; [else-branch: 396 | True | live]
(set-option :timeout 0)
(push) ; 19
; [else-branch: 396 | True]
(pop) ; 19
(pop) ; 18
(push) ; 18
; [else-branch: 394 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
(pop) ; 18
; [eval] !$out_of_gas
(push) ; 18
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 18
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 18
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 18
; 0.00s
; (get-info :all-statistics)
; [then-branch: 397 | !($out_of_gas@788@01) | live]
; [else-branch: 397 | $out_of_gas@788@01 | live]
(set-option :timeout 0)
(push) ; 18
; [then-branch: 397 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 398 | False | dead]
; [else-branch: 398 | True | live]
(push) ; 19
; [else-branch: 398 | True]
(pop) ; 19
(push) ; 19
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 19
; 0.00s
; (get-info :all-statistics)
; [then-branch: 399 | True | live]
; [else-branch: 399 | False | dead]
(set-option :timeout 0)
(push) ; 19
; [then-branch: 399 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@898@01 $Snap)
(assert (= $t@898@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@899@01 $Struct)
(assert (=
  self@899@01
  ($struct_set<$Struct> self@895@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@895@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 19
(pop) ; 18
(set-option :timeout 0)
(push) ; 18
; [else-branch: 397 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
(pop) ; 18
(pop) ; 17
(push) ; 17
; [else-branch: 393 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@890@01, 0)), l$i0$target@860@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@890@01 0)) l$i0$target@860@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    170141183460469231731687303715884105727)))
(pop) ; 17
(pop) ; 16
(push) ; 16
; [else-branch: 387 | !(i6$$res@891@01)]
(assert (not i6$$res@891@01))
(pop) ; 16
; [eval] !i6$$res
(push) ; 16
(set-option :timeout 10)
(assert (not i6$$res@891@01))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 16
(set-option :timeout 10)
(assert (not (not i6$$res@891@01)))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 400 | !(i6$$res@891@01) | live]
; [else-branch: 400 | i6$$res@891@01 | live]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 400 | !(i6$$res@891@01)]
(assert (not i6$$res@891@01))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 17
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 17
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
; [then-branch: 401 | $out_of_gas@788@01 | live]
; [else-branch: 401 | !($out_of_gas@788@01) | live]
(set-option :timeout 0)
(push) ; 17
; [then-branch: 401 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 18
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 18
; 0.00s
; (get-info :all-statistics)
; [then-branch: 402 | True | live]
; [else-branch: 402 | False | dead]
(set-option :timeout 0)
(push) ; 18
; [then-branch: 402 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@900@01 $Snap)
(assert (= $t@900@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@901@01 $Struct)
(assert (=
  self@901@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 18
; [then-branch: 403 | False | dead]
; [else-branch: 403 | True | live]
(set-option :timeout 0)
(push) ; 18
; [else-branch: 403 | True]
(pop) ; 18
(pop) ; 17
(push) ; 17
; [else-branch: 401 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
(pop) ; 17
; [eval] !$out_of_gas
(push) ; 17
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 17
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
; [then-branch: 404 | !($out_of_gas@788@01) | live]
; [else-branch: 404 | $out_of_gas@788@01 | live]
(set-option :timeout 0)
(push) ; 17
; [then-branch: 404 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 405 | False | dead]
; [else-branch: 405 | True | live]
(push) ; 18
; [else-branch: 405 | True]
(pop) ; 18
(push) ; 18
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 18
; 0.00s
; (get-info :all-statistics)
; [then-branch: 406 | True | live]
; [else-branch: 406 | False | dead]
(set-option :timeout 0)
(push) ; 18
; [then-branch: 406 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@902@01 $Snap)
(assert (= $t@902@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@903@01 $Struct)
(assert (=
  self@903@01
  ($struct_set<$Struct> self@890@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@890@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 18
(pop) ; 17
(set-option :timeout 0)
(push) ; 17
; [else-branch: 404 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
(pop) ; 17
(pop) ; 16
(push) ; 16
; [else-branch: 400 | i6$$res@891@01]
(assert i6$$res@891@01)
(pop) ; 16
(pop) ; 15
(push) ; 15
; [else-branch: 385 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@887@01, 0)), l$i0$target@860@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@886@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@887@01 0)) l$i0$target@860@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@886@01))
    170141183460469231731687303715884105727)))
(pop) ; 15
(pop) ; 14
(push) ; 14
; [else-branch: 379 | i5$$res@864@01]
(assert i5$$res@864@01)
(pop) ; 14
(pop) ; 13
(push) ; 13
; [else-branch: 346 | l$i0$target@860@01 == l$i0$delegate_with_weight_to_forward@843@01]
(assert (= l$i0$target@860@01 l$i0$delegate_with_weight_to_forward@843@01))
(pop) ; 13
(pop) ; 12
(push) ; 12
; [else-branch: 342 | !(i4$$res@859@01)]
(assert (not i4$$res@859@01))
(pop) ; 12
; [eval] !i4$$res
(push) ; 12
(set-option :timeout 10)
(assert (not i4$$res@859@01))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (not i4$$res@859@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 407 | !(i4$$res@859@01) | live]
; [else-branch: 407 | i4$$res@859@01 | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 407 | !(i4$$res@859@01)]
(assert (not i4$$res@859@01))
; [exec]
; label break_0
; [exec]
; l$i0$weight_to_forward := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$weight_to_forward@904@01 $Int)
(assert (=
  l$i0$weight_to_forward@904@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0)))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@905@01 $Struct)
(assert (=
  self@905@01
  ($struct_set<$Struct> self@842@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0 0)))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 13
; [then-branch: 408 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 408 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728) | live]
(push) ; 14
; [then-branch: 408 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@904@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 14
(push) ; 14
; [else-branch: 408 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 13
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 409 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 409 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 409 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 14
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 410 | True | live]
; [else-branch: 410 | False | dead]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 410 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@906@01 $Snap)
(assert (= $t@906@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@907@01 $Struct)
(assert (=
  self@907@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 14
; [then-branch: 411 | False | dead]
; [else-branch: 411 | True | live]
(set-option :timeout 0)
(push) ; 14
; [else-branch: 411 | True]
(pop) ; 14
(pop) ; 13
(push) ; 13
; [else-branch: 409 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      170141183460469231731687303715884105727))))
(pop) ; 13
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 13
; [then-branch: 412 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 412 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728) | live]
(push) ; 14
; [then-branch: 412 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@904@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 14
(push) ; 14
; [else-branch: 412 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(push) ; 13
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 413 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 413 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 413 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@908@01 $Struct)
(assert (=
  self@908@01
  ($struct_set<$Struct> self@905@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@904@01)))))))
; [exec]
; l$i6$addr := l$i0$target
; [exec]
; i6$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) &&
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i6$addr): $Struct), 2)): Int) ==
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 14
; [then-branch: 414 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 1))) | live]
; [else-branch: 414 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 1)) | live]
(push) ; 15
; [then-branch: 414 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 1))))
(pop) ; 15
(push) ; 15
; [else-branch: 414 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 1)))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 1))
  (not
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 1)))))
(declare-const i6$$res@909@01 Bool)
(assert (=
  i6$$res@909@01
  (and
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 1))
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 2))
      0))))
; [exec]
; label i6$return
(push) ; 14
(set-option :timeout 10)
(assert (not (not i6$$res@909@01)))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 14
(set-option :timeout 10)
(assert (not i6$$res@909@01))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 415 | i6$$res@909@01 | live]
; [else-branch: 415 | !(i6$$res@909@01) | live]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 415 | i6$$res@909@01]
(assert i6$$res@909@01)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 15
; [then-branch: 416 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 416 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728) | live]
(push) ; 16
; [then-branch: 416 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@904@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 16
(push) ; 16
; [else-branch: 416 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 15
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 417 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 417 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 417 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 16
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 418 | True | live]
; [else-branch: 418 | False | dead]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 418 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@910@01 $Snap)
(assert (= $t@910@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@911@01 $Struct)
(assert (=
  self@911@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 16
; [then-branch: 419 | False | dead]
; [else-branch: 419 | True | live]
(set-option :timeout 0)
(push) ; 16
; [else-branch: 419 | True]
(pop) ; 16
(pop) ; 15
(push) ; 15
; [else-branch: 417 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      170141183460469231731687303715884105727))))
(pop) ; 15
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 15
; [then-branch: 420 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 420 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728) | live]
(push) ; 16
; [then-branch: 420 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@904@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 16
(push) ; 16
; [else-branch: 420 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(push) ; 15
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 421 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 421 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 421 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@904@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1,
;   $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@912@01 $Struct)
(assert (=
  self@912@01
  ($struct_set<$Struct> self@908@01 1 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3)) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@904@01)))))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@913@01 $Struct)
(assert (=
  self@913@01
  ($struct_set<$Struct> self@912@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@912@01 0)) l$i0$target@855@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@912@01 0)) l$i0$target@855@01) 0 0)))))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 16
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 16
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 422 | $out_of_gas@788@01 | live]
; [else-branch: 422 | !($out_of_gas@788@01) | live]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 422 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 17
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
; [then-branch: 423 | True | live]
; [else-branch: 423 | False | dead]
(set-option :timeout 0)
(push) ; 17
; [then-branch: 423 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@914@01 $Snap)
(assert (= $t@914@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@915@01 $Struct)
(assert (=
  self@915@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 17
; [then-branch: 424 | False | dead]
; [else-branch: 424 | True | live]
(set-option :timeout 0)
(push) ; 17
; [else-branch: 424 | True]
(pop) ; 17
(pop) ; 16
(push) ; 16
; [else-branch: 422 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
(pop) ; 16
; [eval] !$out_of_gas
(push) ; 16
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 16
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 425 | !($out_of_gas@788@01) | live]
; [else-branch: 425 | $out_of_gas@788@01 | live]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 425 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 426 | False | dead]
; [else-branch: 426 | True | live]
(push) ; 17
; [else-branch: 426 | True]
(pop) ; 17
(push) ; 17
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
; [then-branch: 427 | True | live]
; [else-branch: 427 | False | dead]
(set-option :timeout 0)
(push) ; 17
; [then-branch: 427 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@916@01 $Snap)
(assert (= $t@916@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@917@01 $Struct)
(assert (=
  self@917@01
  ($struct_set<$Struct> self@913@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@913@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 17
(pop) ; 16
(set-option :timeout 0)
(push) ; 16
; [else-branch: 425 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
(pop) ; 16
(pop) ; 15
(push) ; 15
; [else-branch: 421 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@908@01, 0)), l$i0$target@855@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@908@01 0)) l$i0$target@855@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    170141183460469231731687303715884105727)))
(pop) ; 15
(pop) ; 14
(push) ; 14
; [else-branch: 415 | !(i6$$res@909@01)]
(assert (not i6$$res@909@01))
(pop) ; 14
; [eval] !i6$$res
(push) ; 14
(set-option :timeout 10)
(assert (not i6$$res@909@01))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 14
(set-option :timeout 10)
(assert (not (not i6$$res@909@01)))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 428 | !(i6$$res@909@01) | live]
; [else-branch: 428 | i6$$res@909@01 | live]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 428 | !(i6$$res@909@01)]
(assert (not i6$$res@909@01))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 15
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 429 | $out_of_gas@788@01 | live]
; [else-branch: 429 | !($out_of_gas@788@01) | live]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 429 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 16
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 430 | True | live]
; [else-branch: 430 | False | dead]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 430 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@918@01 $Snap)
(assert (= $t@918@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@919@01 $Struct)
(assert (=
  self@919@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 16
; [then-branch: 431 | False | dead]
; [else-branch: 431 | True | live]
(set-option :timeout 0)
(push) ; 16
; [else-branch: 431 | True]
(pop) ; 16
(pop) ; 15
(push) ; 15
; [else-branch: 429 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
(pop) ; 15
; [eval] !$out_of_gas
(push) ; 15
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 432 | !($out_of_gas@788@01) | live]
; [else-branch: 432 | $out_of_gas@788@01 | live]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 432 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 433 | False | dead]
; [else-branch: 433 | True | live]
(push) ; 16
; [else-branch: 433 | True]
(pop) ; 16
(push) ; 16
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
; [then-branch: 434 | True | live]
; [else-branch: 434 | False | dead]
(set-option :timeout 0)
(push) ; 16
; [then-branch: 434 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@920@01 $Snap)
(assert (= $t@920@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@921@01 $Struct)
(assert (=
  self@921@01
  ($struct_set<$Struct> self@908@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@908@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 16
(pop) ; 15
(set-option :timeout 0)
(push) ; 15
; [else-branch: 432 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
(pop) ; 15
(pop) ; 14
(push) ; 14
; [else-branch: 428 | i6$$res@909@01]
(assert i6$$res@909@01)
(pop) ; 14
(pop) ; 13
(push) ; 13
; [else-branch: 413 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@905@01, 0)), l$i0$target@855@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@904@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@905@01 0)) l$i0$target@855@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@904@01))
    170141183460469231731687303715884105727)))
(pop) ; 13
(pop) ; 12
(push) ; 12
; [else-branch: 407 | i4$$res@859@01]
(assert i4$$res@859@01)
(pop) ; 12
(pop) ; 11
(push) ; 11
; [else-branch: 341 | l$i0$target@855@01 == l$i0$delegate_with_weight_to_forward@843@01]
(assert (= l$i0$target@855@01 l$i0$delegate_with_weight_to_forward@843@01))
(pop) ; 11
(pop) ; 10
(push) ; 10
; [else-branch: 337 | !(i3$$res@854@01)]
(assert (not i3$$res@854@01))
(pop) ; 10
; [eval] !i3$$res
(push) ; 10
(set-option :timeout 10)
(assert (not i3$$res@854@01))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (not i3$$res@854@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 435 | !(i3$$res@854@01) | live]
; [else-branch: 435 | i3$$res@854@01 | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 435 | !(i3$$res@854@01)]
(assert (not i3$$res@854@01))
; [exec]
; label break_0
; [exec]
; l$i0$weight_to_forward := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$weight_to_forward@922@01 $Int)
(assert (=
  l$i0$weight_to_forward@922@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0)))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@923@01 $Struct)
(assert (=
  self@923@01
  ($struct_set<$Struct> self@842@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0 0)))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 11
; [then-branch: 436 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 436 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728) | live]
(push) ; 12
; [then-branch: 436 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@922@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 12
(push) ; 12
; [else-branch: 436 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 11
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 437 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 437 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 437 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 12
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 438 | True | live]
; [else-branch: 438 | False | dead]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 438 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@924@01 $Snap)
(assert (= $t@924@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@925@01 $Struct)
(assert (=
  self@925@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 12
; [then-branch: 439 | False | dead]
; [else-branch: 439 | True | live]
(set-option :timeout 0)
(push) ; 12
; [else-branch: 439 | True]
(pop) ; 12
(pop) ; 11
(push) ; 11
; [else-branch: 437 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      170141183460469231731687303715884105727))))
(pop) ; 11
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 11
; [then-branch: 440 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 440 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728) | live]
(push) ; 12
; [then-branch: 440 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@922@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 12
(push) ; 12
; [else-branch: 440 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(push) ; 11
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 441 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 441 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 441 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@926@01 $Struct)
(assert (=
  self@926@01
  ($struct_set<$Struct> self@923@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@922@01)))))))
; [exec]
; l$i6$addr := l$i0$target
; [exec]
; i6$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) &&
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i6$addr): $Struct), 2)): Int) ==
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 12
; [then-branch: 442 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 1))) | live]
; [else-branch: 442 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 1)) | live]
(push) ; 13
; [then-branch: 442 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 1))))
(pop) ; 13
(push) ; 13
; [else-branch: 442 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 1)))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 1))
  (not
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 1)))))
(declare-const i6$$res@927@01 Bool)
(assert (=
  i6$$res@927@01
  (and
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 1))
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 2))
      0))))
; [exec]
; label i6$return
(push) ; 12
(set-option :timeout 10)
(assert (not (not i6$$res@927@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not i6$$res@927@01))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 443 | i6$$res@927@01 | live]
; [else-branch: 443 | !(i6$$res@927@01) | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 443 | i6$$res@927@01]
(assert i6$$res@927@01)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 13
; [then-branch: 444 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 444 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728) | live]
(push) ; 14
; [then-branch: 444 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@922@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 14
(push) ; 14
; [else-branch: 444 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 13
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 445 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 445 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 445 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 14
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 446 | True | live]
; [else-branch: 446 | False | dead]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 446 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@928@01 $Snap)
(assert (= $t@928@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@929@01 $Struct)
(assert (=
  self@929@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 14
; [then-branch: 447 | False | dead]
; [else-branch: 447 | True | live]
(set-option :timeout 0)
(push) ; 14
; [else-branch: 447 | True]
(pop) ; 14
(pop) ; 13
(push) ; 13
; [else-branch: 445 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      170141183460469231731687303715884105727))))
(pop) ; 13
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 13
; [then-branch: 448 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 448 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728) | live]
(push) ; 14
; [then-branch: 448 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@922@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 14
(push) ; 14
; [else-branch: 448 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(push) ; 13
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 449 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 449 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 449 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@922@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1,
;   $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@930@01 $Struct)
(assert (=
  self@930@01
  ($struct_set<$Struct> self@926@01 1 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3)) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@922@01)))))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@931@01 $Struct)
(assert (=
  self@931@01
  ($struct_set<$Struct> self@930@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@930@01 0)) l$i0$target@850@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@930@01 0)) l$i0$target@850@01) 0 0)))))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 14
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 14
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 450 | $out_of_gas@788@01 | live]
; [else-branch: 450 | !($out_of_gas@788@01) | live]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 450 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 15
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 451 | True | live]
; [else-branch: 451 | False | dead]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 451 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@932@01 $Snap)
(assert (= $t@932@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@933@01 $Struct)
(assert (=
  self@933@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 15
; [then-branch: 452 | False | dead]
; [else-branch: 452 | True | live]
(set-option :timeout 0)
(push) ; 15
; [else-branch: 452 | True]
(pop) ; 15
(pop) ; 14
(push) ; 14
; [else-branch: 450 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
(pop) ; 14
; [eval] !$out_of_gas
(push) ; 14
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 14
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 453 | !($out_of_gas@788@01) | live]
; [else-branch: 453 | $out_of_gas@788@01 | live]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 453 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 454 | False | dead]
; [else-branch: 454 | True | live]
(push) ; 15
; [else-branch: 454 | True]
(pop) ; 15
(push) ; 15
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [then-branch: 455 | True | live]
; [else-branch: 455 | False | dead]
(set-option :timeout 0)
(push) ; 15
; [then-branch: 455 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@934@01 $Snap)
(assert (= $t@934@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@935@01 $Struct)
(assert (=
  self@935@01
  ($struct_set<$Struct> self@931@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@931@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 15
(pop) ; 14
(set-option :timeout 0)
(push) ; 14
; [else-branch: 453 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
(pop) ; 14
(pop) ; 13
(push) ; 13
; [else-branch: 449 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@926@01, 0)), l$i0$target@850@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@926@01 0)) l$i0$target@850@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    170141183460469231731687303715884105727)))
(pop) ; 13
(pop) ; 12
(push) ; 12
; [else-branch: 443 | !(i6$$res@927@01)]
(assert (not i6$$res@927@01))
(pop) ; 12
; [eval] !i6$$res
(push) ; 12
(set-option :timeout 10)
(assert (not i6$$res@927@01))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (not i6$$res@927@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 456 | !(i6$$res@927@01) | live]
; [else-branch: 456 | i6$$res@927@01 | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 456 | !(i6$$res@927@01)]
(assert (not i6$$res@927@01))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 13
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 457 | $out_of_gas@788@01 | live]
; [else-branch: 457 | !($out_of_gas@788@01) | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 457 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 14
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 458 | True | live]
; [else-branch: 458 | False | dead]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 458 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@936@01 $Snap)
(assert (= $t@936@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@937@01 $Struct)
(assert (=
  self@937@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 14
; [then-branch: 459 | False | dead]
; [else-branch: 459 | True | live]
(set-option :timeout 0)
(push) ; 14
; [else-branch: 459 | True]
(pop) ; 14
(pop) ; 13
(push) ; 13
; [else-branch: 457 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
(pop) ; 13
; [eval] !$out_of_gas
(push) ; 13
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 460 | !($out_of_gas@788@01) | live]
; [else-branch: 460 | $out_of_gas@788@01 | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 460 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 461 | False | dead]
; [else-branch: 461 | True | live]
(push) ; 14
; [else-branch: 461 | True]
(pop) ; 14
(push) ; 14
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
; [then-branch: 462 | True | live]
; [else-branch: 462 | False | dead]
(set-option :timeout 0)
(push) ; 14
; [then-branch: 462 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@938@01 $Snap)
(assert (= $t@938@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@939@01 $Struct)
(assert (=
  self@939@01
  ($struct_set<$Struct> self@926@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@926@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 14
(pop) ; 13
(set-option :timeout 0)
(push) ; 13
; [else-branch: 460 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
(pop) ; 13
(pop) ; 12
(push) ; 12
; [else-branch: 456 | i6$$res@927@01]
(assert i6$$res@927@01)
(pop) ; 12
(pop) ; 11
(push) ; 11
; [else-branch: 441 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@923@01, 0)), l$i0$target@850@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@922@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@923@01 0)) l$i0$target@850@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@922@01))
    170141183460469231731687303715884105727)))
(pop) ; 11
(pop) ; 10
(push) ; 10
; [else-branch: 435 | i3$$res@854@01]
(assert i3$$res@854@01)
(pop) ; 10
(pop) ; 9
(push) ; 9
; [else-branch: 336 | l$i0$target@850@01 == l$i0$delegate_with_weight_to_forward@843@01]
(assert (= l$i0$target@850@01 l$i0$delegate_with_weight_to_forward@843@01))
(pop) ; 9
(pop) ; 8
(push) ; 8
; [else-branch: 332 | !(i2$$res@849@01)]
(assert (not i2$$res@849@01))
(pop) ; 8
; [eval] !i2$$res
(push) ; 8
(set-option :timeout 10)
(assert (not i2$$res@849@01))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (not i2$$res@849@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 463 | !(i2$$res@849@01) | live]
; [else-branch: 463 | i2$$res@849@01 | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 463 | !(i2$$res@849@01)]
(assert (not i2$$res@849@01))
; [exec]
; label break_0
; [exec]
; l$i0$weight_to_forward := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const l$i0$weight_to_forward@940@01 $Int)
(assert (=
  l$i0$weight_to_forward@940@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0)))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct),
;   0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$delegate_with_weight_to_forward): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@941@01 $Struct)
(assert (=
  self@941@01
  ($struct_set<$Struct> self@842@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0 0)))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 9
; [then-branch: 464 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 464 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728) | live]
(push) ; 10
; [then-branch: 464 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@940@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 10
(push) ; 10
; [else-branch: 464 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 9
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 465 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 465 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 465 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 10
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 466 | True | live]
; [else-branch: 466 | False | dead]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 466 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@942@01 $Snap)
(assert (= $t@942@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@943@01 $Struct)
(assert (=
  self@943@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 10
; [then-branch: 467 | False | dead]
; [else-branch: 467 | True | live]
(set-option :timeout 0)
(push) ; 10
; [else-branch: 467 | True]
(pop) ; 10
(pop) ; 9
(push) ; 9
; [else-branch: 465 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      170141183460469231731687303715884105727))))
(pop) ; 9
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 9
; [then-branch: 468 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 468 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728) | live]
(push) ; 10
; [then-branch: 468 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@940@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 10
(push) ; 10
; [else-branch: 468 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(push) ; 9
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 469 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 469 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 469 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@944@01 $Struct)
(assert (=
  self@944@01
  ($struct_set<$Struct> self@941@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
    ($unwrap<Int> l$i0$weight_to_forward@940@01)))))))
; [exec]
; l$i6$addr := l$i0$target
; [exec]
; i6$$res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) &&
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i6$addr): $Struct), 2)): Int) ==
;   0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 10
; [then-branch: 470 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 1))) | live]
; [else-branch: 470 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 1)) | live]
(push) ; 11
; [then-branch: 470 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 1))))
(pop) ; 11
(push) ; 11
; [else-branch: 470 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 1)))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int) == 0
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i6$addr): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 1))
  (not
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 1)))))
(declare-const i6$$res@945@01 Bool)
(assert (=
  i6$$res@945@01
  (and
    ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 1))
    (=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 2))
      0))))
; [exec]
; label i6$return
(push) ; 10
(set-option :timeout 10)
(assert (not (not i6$$res@945@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not i6$$res@945@01))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 471 | i6$$res@945@01 | live]
; [else-branch: 471 | !(i6$$res@945@01) | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 471 | i6$$res@945@01]
(assert i6$$res@945@01)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 11
; [then-branch: 472 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 472 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728) | live]
(push) ; 12
; [then-branch: 472 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@940@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 12
(push) ; 12
; [else-branch: 472 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 11
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 473 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727 | live]
; [else-branch: 473 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 473 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 12
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 474 | True | live]
; [else-branch: 474 | False | dead]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 474 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@946@01 $Snap)
(assert (= $t@946@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@947@01 $Struct)
(assert (=
  self@947@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 12
; [then-branch: 475 | False | dead]
; [else-branch: 475 | True | live]
(set-option :timeout 0)
(push) ; 12
; [else-branch: 475 | True]
(pop) ; 12
(pop) ; 11
(push) ; 11
; [else-branch: 473 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      170141183460469231731687303715884105727))))
(pop) ; 11
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
; [eval] -170141183460469231731687303715884105728
(push) ; 11
; [then-branch: 476 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 | live]
; [else-branch: 476 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728) | live]
(push) ; 12
; [then-branch: 476 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@940@01))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 12
(push) ; 12
; [else-branch: 476 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(push) ; 11
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 477 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727) | live]
; [else-branch: 477 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 477 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
        ($unwrap<Int> l$i0$weight_to_forward@940@01))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1,
;   $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) +
;   $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))) + $unwrap(l$i0$weight_to_forward)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] $unwrap(l$i0$weight_to_forward)
(declare-const self@948@01 $Struct)
(assert (=
  self@948@01
  ($struct_set<$Struct> self@944@01 1 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3)) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
    ($unwrap<Int> l$i0$weight_to_forward@940@01)))))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target, ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), l$i0$target): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(declare-const self@949@01 $Struct)
(assert (=
  self@949@01
  ($struct_set<$Struct> self@948@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@948@01 0)) l$i0$target@847@01 ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@948@01 0)) l$i0$target@847@01) 0 0)))))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 12
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 478 | $out_of_gas@788@01 | live]
; [else-branch: 478 | !($out_of_gas@788@01) | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 478 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 13
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 479 | True | live]
; [else-branch: 479 | False | dead]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 479 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@950@01 $Snap)
(assert (= $t@950@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@951@01 $Struct)
(assert (=
  self@951@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 13
; [then-branch: 480 | False | dead]
; [else-branch: 480 | True | live]
(set-option :timeout 0)
(push) ; 13
; [else-branch: 480 | True]
(pop) ; 13
(pop) ; 12
(push) ; 12
; [else-branch: 478 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
(pop) ; 12
; [eval] !$out_of_gas
(push) ; 12
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 481 | !($out_of_gas@788@01) | live]
; [else-branch: 481 | $out_of_gas@788@01 | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 481 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 482 | False | dead]
; [else-branch: 482 | True | live]
(push) ; 13
; [else-branch: 482 | True]
(pop) ; 13
(push) ; 13
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 483 | True | live]
; [else-branch: 483 | False | dead]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 483 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@952@01 $Snap)
(assert (= $t@952@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@953@01 $Struct)
(assert (=
  self@953@01
  ($struct_set<$Struct> self@949@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@949@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 13
(pop) ; 12
(set-option :timeout 0)
(push) ; 12
; [else-branch: 481 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
(pop) ; 12
(pop) ; 11
(push) ; 11
; [else-branch: 477 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 1)), $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@944@01, 0)), l$i0$target@847@01), 3))), 1)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 1)) ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@944@01 0)) l$i0$target@847@01) 3))) 1))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    170141183460469231731687303715884105727)))
(pop) ; 11
(pop) ; 10
(push) ; 10
; [else-branch: 471 | !(i6$$res@945@01)]
(assert (not i6$$res@945@01))
(pop) ; 10
; [eval] !i6$$res
(push) ; 10
(set-option :timeout 10)
(assert (not i6$$res@945@01))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (not i6$$res@945@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 484 | !(i6$$res@945@01) | live]
; [else-branch: 484 | i6$$res@945@01 | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 484 | !(i6$$res@945@01)]
(assert (not i6$$res@945@01))
; [exec]
; label i0$return
; [exec]
; label return
(push) ; 11
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 485 | $out_of_gas@788@01 | live]
; [else-branch: 485 | !($out_of_gas@788@01) | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 485 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 12
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 486 | True | live]
; [else-branch: 486 | False | dead]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 486 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@954@01 $Snap)
(assert (= $t@954@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@955@01 $Struct)
(assert (=
  self@955@01
  ($struct_set<$Struct> self@761@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@761@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 12
; [then-branch: 487 | False | dead]
; [else-branch: 487 | True | live]
(set-option :timeout 0)
(push) ; 12
; [else-branch: 487 | True]
(pop) ; 12
(pop) ; 11
(push) ; 11
; [else-branch: 485 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
(pop) ; 11
; [eval] !$out_of_gas
(push) ; 11
(set-option :timeout 10)
(assert (not $out_of_gas@788@01))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not $out_of_gas@788@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 488 | !($out_of_gas@788@01) | live]
; [else-branch: 488 | $out_of_gas@788@01 | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 488 | !($out_of_gas@788@01)]
(assert (not $out_of_gas@788@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 489 | False | dead]
; [else-branch: 489 | True | live]
(push) ; 12
; [else-branch: 489 | True]
(pop) ; 12
(push) ; 12
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 490 | True | live]
; [else-branch: 490 | False | dead]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 490 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@956@01 $Snap)
(assert (= $t@956@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@789@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@957@01 $Struct)
(assert (=
  self@957@01
  ($struct_set<$Struct> self@944@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@944@01 5))
    l$havoc@789@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 12
(pop) ; 11
(set-option :timeout 0)
(push) ; 11
; [else-branch: 488 | $out_of_gas@788@01]
(assert $out_of_gas@788@01)
(pop) ; 11
(pop) ; 10
(push) ; 10
; [else-branch: 484 | i6$$res@945@01]
(assert i6$$res@945@01)
(pop) ; 10
(pop) ; 9
(push) ; 9
; [else-branch: 469 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@941@01, 0)), l$i0$target@847@01), 0)))) + $unwrap[Int](l$i0$weight_to_forward@940@01) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@941@01 0)) l$i0$target@847@01) 0))))
      ($unwrap<Int> l$i0$weight_to_forward@940@01))
    170141183460469231731687303715884105727)))
(pop) ; 9
(pop) ; 8
(push) ; 8
; [else-branch: 463 | i2$$res@849@01]
(assert i2$$res@849@01)
(pop) ; 8
(pop) ; 7
(push) ; 7
; [else-branch: 331 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@842@01, 0)), l$i0$delegate_with_weight_to_forward@843@01), 0)) > 0)]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@842@01 0)) l$i0$delegate_with_weight_to_forward@843@01) 0))
    0)))
(pop) ; 7
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 325 | l$to@755@01 == 0]
(assert (= l$to@755@01 0))
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 321 | l$to@755@01 == $struct_get[Int]($struct_loc[Int](msg@757@01, 0))]
(assert (= l$to@755@01 ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 317 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@761@01, 0)), $struct_get[Int]($struct_loc[Int](msg@757@01, 0))), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@761@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@757@01 0))) 1)))
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$vote ----------
(declare-const l$proposal@958@01 $Int)
(declare-const $succ@959@01 Bool)
(declare-const l$proposal@960@01 $Int)
(declare-const $succ@961@01 Bool)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@962@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@963@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@964@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@965@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@966@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@967@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@968@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@969@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@970@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@971@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@972@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@973@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@974@01 Bool)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@975@01 Bool)
; [exec]
; var l$havoc: Int
(declare-const l$havoc@976@01 Int)
; [exec]
; var l$havoc$1: $Map[Int, $Struct]
(declare-const l$havoc$1@977@01 $Map<Int~_$Struct>)
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@978@01 $Snap)
(assert (= $t@978@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@979@01 Int)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 491 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $q0@979@01), 0))) | live]
; [else-branch: 491 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $q0@979@01), 0)) | live]
(push) ; 5
; [then-branch: 491 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $q0@979@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@979@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 491 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $q0@979@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@979@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@979@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@979@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@979@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@979@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@979@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@979@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1747@11@1747@441-aux|)))
(assert (forall (($q0@979@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@979@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@979@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@979@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1747@11@1747@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@980@01 $Snap)
(assert (= $t@980@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@981@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 492 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $q0@981@01), 2))) | live]
; [else-branch: 492 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $q0@981@01), 2)) | live]
(push) ; 5
; [then-branch: 492 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $q0@981@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@981@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 492 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $q0@981@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@981@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@981@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@981@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@981@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@981@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@981@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@981@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1748@11@1748@412-aux|)))
(assert (forall (($q0@981@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@981@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@981@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@981@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1748@11@1748@412|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@982@01 $Snap)
(assert (= $t@982@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@983@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 493 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $q0@983@01), 3))) | live]
; [else-branch: 493 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $q0@983@01), 3)) | live]
(push) ; 5
; [then-branch: 493 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $q0@983@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@983@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 493 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $q0@983@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@983@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@983@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@983@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@983@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@983@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@983@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@983@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1749@11@1749@441-aux|)))
(assert (forall (($q0@983@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@983@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@983@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@983@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1749@11@1749@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@984@01 $Snap)
(assert (= $t@984@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@985@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@985@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@985@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) $q0@985@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1750@11@1750@272|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@986@01 $Snap)
(assert (= $t@986@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@987@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@987@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 1)) $q1@987@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 1)) $q1@987@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1751@11@1751@246|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@988@01 $Snap)
(assert (= $t@988@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@989@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(push) ; 4
; [then-branch: 494 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 1)), $q1@989@01), 1))) | live]
; [else-branch: 494 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 1)), $q1@989@01), 1)) | live]
(push) ; 5
; [then-branch: 494 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 1)), $q1@989@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 1)) $q1@989@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 494 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 1)), $q1@989@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 1)) $q1@989@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 1)) $q1@989@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 1)) $q1@989@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@989@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 1)) $q1@989@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 1)) $q1@989@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 1)) $q1@989@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1752@11@1752@441-aux|)))
(assert (forall (($q1@989@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 1)) $q1@989@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 1)) $q1@989@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 1)) $q1@989@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1752@11@1752@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@990@01 $Snap)
(assert (= $t@990@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@991@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@991@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 1)) $q1@991@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 1)) $q1@991@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1753@11@1753@279|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@992@01 $Snap)
(assert (= $t@992@01 ($Snap.combine ($Snap.first $t@992@01) ($Snap.second $t@992@01))))
(assert (= ($Snap.first $t@992@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@966@01 2))))
(assert (= ($Snap.second $t@992@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@966@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 3)): Int) &&
;   ($struct_get($struct_loc(self, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@993@01 $Snap)
(assert (= $t@993@01 ($Snap.combine ($Snap.first $t@993@01) ($Snap.second $t@993@01))))
(assert (= ($Snap.first $t@993@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 3)): Int)
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@966@01 3))))
(assert (= ($Snap.second $t@993@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@966@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 4)): Int) &&
;   ($struct_get($struct_loc(self, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@994@01 $Snap)
(assert (= $t@994@01 ($Snap.combine ($Snap.first $t@994@01) ($Snap.second $t@994@01))))
(assert (= ($Snap.first $t@994@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@966@01 4))))
(assert (= ($Snap.second $t@994@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@966@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@995@01 $Snap)
(assert (= $t@995@01 ($Snap.combine ($Snap.first $t@995@01) ($Snap.second $t@995@01))))
(assert (= ($Snap.first $t@995@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@966@01 5))))
(assert (= ($Snap.second $t@995@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@966@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@996@01 $Snap)
(assert (= $t@996@01 ($Snap.combine ($Snap.first $t@996@01) ($Snap.second $t@996@01))))
(assert (= ($Snap.first $t@996@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@966@01 6))))
(assert (= ($Snap.second $t@996@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@966@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@997@01 $Snap)
(assert (= $t@997@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@998@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(push) ; 4
; [then-branch: 495 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@966@01, 8)), $q3@998@01)) | live]
; [else-branch: 495 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@966@01, 8)), $q3@998@01) | live]
(push) ; 5
; [then-branch: 495 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@966@01, 8)), $q3@998@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 8)) $q3@998@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 495 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@966@01, 8)), $q3@998@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 8)) $q3@998@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 8)) $q3@998@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 8)) $q3@998@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@998@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 8)) $q3@998@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 8)) $q3@998@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 8)) $q3@998@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1759@11@1759@345-aux|)))
(assert (forall (($q3@998@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 8)) $q3@998@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 8)) $q3@998@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 8)) $q3@998@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1759@11@1759@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $t@999@01 $Snap)
(assert (= $t@999@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $q3@1000@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@1000@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 8)) $q3@1000@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 8)) $q3@1000@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1760@11@1760@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@1001@01 $Snap)
(assert (= $t@1001@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@1002@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(push) ; 4
; [then-branch: 496 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@966@01, 9)), $q4@1002@01)) | live]
; [else-branch: 496 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@966@01, 9)), $q4@1002@01) | live]
(push) ; 5
; [then-branch: 496 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@966@01, 9)), $q4@1002@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 9)) $q4@1002@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 496 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@966@01, 9)), $q4@1002@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 9)) $q4@1002@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 9)) $q4@1002@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 9)) $q4@1002@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@1002@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 9)) $q4@1002@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 9)) $q4@1002@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 9)) $q4@1002@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1761@11@1761@345-aux|)))
(assert (forall (($q4@1002@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 9)) $q4@1002@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 9)) $q4@1002@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 9)) $q4@1002@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1761@11@1761@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $t@1003@01 $Snap)
(assert (= $t@1003@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $q4@1004@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
; [eval] ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@1004@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 9)) $q4@1004@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@966@01 9)) $q4@1004@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1762@11@1762@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@1005@01 $Snap)
(assert (= $t@1005@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@966@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@1006@01 $Snap)
(assert (= $t@1006@01 ($Snap.combine ($Snap.first $t@1006@01) ($Snap.second $t@1006@01))))
(assert (= ($Snap.first $t@1006@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@1006@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <= $unwrap(l$proposal) &&
;   $unwrap(l$proposal) <= 170141183460469231731687303715884105727
(declare-const $t@1007@01 $Snap)
(assert (= $t@1007@01 ($Snap.combine ($Snap.first $t@1007@01) ($Snap.second $t@1007@01))))
(assert (= ($Snap.first $t@1007@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= $unwrap(l$proposal)
; [eval] -170141183460469231731687303715884105728
; [eval] $unwrap(l$proposal)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($unwrap<Int> l$proposal@960@01)))
(assert (= ($Snap.second $t@1007@01) $Snap.unit))
; [eval] $unwrap(l$proposal) <= 170141183460469231731687303715884105727
; [eval] $unwrap(l$proposal)
(assert (<= ($unwrap<Int> l$proposal@960@01) 170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@1008@01 $Snap)
(assert (= $t@1008@01 ($Snap.combine ($Snap.first $t@1008@01) ($Snap.second $t@1008@01))))
(assert (= ($Snap.first $t@1008@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@963@01 0))))
(assert (= ($Snap.second $t@1008@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@963@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1009@01 $Snap)
(assert (= $t@1009@01 ($Snap.combine ($Snap.first $t@1009@01) ($Snap.second $t@1009@01))))
(assert (= ($Snap.first $t@1009@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@963@01 1))))
(assert (= ($Snap.second $t@1009@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@963@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1010@01 $Snap)
(assert (= $t@1010@01 ($Snap.combine ($Snap.first $t@1010@01) ($Snap.second $t@1010@01))))
(assert (= ($Snap.first $t@1010@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@963@01 2))))
(assert (= ($Snap.second $t@1010@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@963@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@1011@01 $Snap)
(assert (= $t@1011@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@963@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1012@01 $Snap)
(assert (= $t@1012@01 ($Snap.combine ($Snap.first $t@1012@01) ($Snap.second $t@1012@01))))
(assert (= ($Snap.first $t@1012@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@963@01 4))))
(assert (= ($Snap.second $t@1012@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@963@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@1013@01 $Snap)
(assert (= $t@1013@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@963@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@1014@01 $Snap)
(assert (= $t@1014@01 ($Snap.combine ($Snap.first $t@1014@01) ($Snap.second $t@1014@01))))
(assert (= ($Snap.first $t@1014@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))))
(assert (= ($Snap.second $t@1014@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1015@01 $Snap)
(assert (= $t@1015@01 ($Snap.combine ($Snap.first $t@1015@01) ($Snap.second $t@1015@01))))
(assert (= ($Snap.first $t@1015@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@962@01 1))))
(assert (= ($Snap.second $t@1015@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@962@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1016@01 $Snap)
(assert (= $t@1016@01 ($Snap.combine ($Snap.first $t@1016@01) ($Snap.second $t@1016@01))))
(assert (= ($Snap.first $t@1016@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@962@01 2))))
(assert (= ($Snap.second $t@1016@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@962@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@1017@01 $Snap)
(assert (= $t@1017@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@962@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@1018@01 $Snap)
(assert (= $t@1018@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@962@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $t@1019@01 $Snap)
(assert (= $t@1019@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $a@1020@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@1021@01 $Snap)
(assert (= $t@1021@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@962@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [eval] !!($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)): Bool)
; [eval] !($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)): Bool)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 1)))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 1))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 497 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 1)) | live]
; [else-branch: 497 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 1))) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 497 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 1)))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 498 | True | live]
; [else-branch: 498 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 498 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@1022@01 $Snap)
(assert (= $t@1022@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@976@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1023@01 $Struct)
(assert (=
  self@1023@01
  ($struct_set<$Struct> self@966@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@966@01 5))
    l$havoc@976@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 4
; [then-branch: 499 | False | dead]
; [else-branch: 499 | True | live]
(set-option :timeout 0)
(push) ; 4
; [else-branch: 499 | True]
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 497 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 1))))
(pop) ; 3
; [eval] !!!($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)): Bool)
; [eval] !!($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)): Bool)
; [eval] !($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)): Bool)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)): Bool)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(push) ; 3
(set-option :timeout 10)
(assert (not ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 1))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 1)))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 500 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 1))) | live]
; [else-branch: 500 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 1)) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 500 | !($struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 1)))]
(assert (not
  ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 1))))
; [eval] !($unwrap(l$proposal) < ($struct_get($struct_loc(self, 4)): Int))
; [eval] $unwrap(l$proposal) < ($struct_get($struct_loc(self, 4)): Int)
; [eval] $unwrap(l$proposal)
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(push) ; 4
(set-option :timeout 10)
(assert (not (<
  ($unwrap<Int> l$proposal@960@01)
  ($struct_get<Int> ($struct_loc<Int> self@966@01 4)))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (<
    ($unwrap<Int> l$proposal@960@01)
    ($struct_get<Int> ($struct_loc<Int> self@966@01 4))))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 501 | !($unwrap[Int](l$proposal@960@01) < $struct_get[Int]($struct_loc[Int](self@966@01, 4))) | live]
; [else-branch: 501 | $unwrap[Int](l$proposal@960@01) < $struct_get[Int]($struct_loc[Int](self@966@01, 4)) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 501 | !($unwrap[Int](l$proposal@960@01) < $struct_get[Int]($struct_loc[Int](self@966@01, 4)))]
(assert (not
  (<
    ($unwrap<Int> l$proposal@960@01)
    ($struct_get<Int> ($struct_loc<Int> self@966@01 4)))))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 5
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 502 | True | live]
; [else-branch: 502 | False | dead]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 502 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@1024@01 $Snap)
(assert (= $t@1024@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@976@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1025@01 $Struct)
(assert (=
  self@1025@01
  ($struct_set<$Struct> self@966@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@966@01 5))
    l$havoc@976@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 5
; [then-branch: 503 | False | dead]
; [else-branch: 503 | True | live]
(set-option :timeout 0)
(push) ; 5
; [else-branch: 503 | True]
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 501 | $unwrap[Int](l$proposal@960@01) < $struct_get[Int]($struct_loc[Int](self@966@01, 4))]
(assert (<
  ($unwrap<Int> l$proposal@960@01)
  ($struct_get<Int> ($struct_loc<Int> self@966@01 4))))
(pop) ; 4
; [eval] !!($unwrap(l$proposal) < ($struct_get($struct_loc(self, 4)): Int))
; [eval] !($unwrap(l$proposal) < ($struct_get($struct_loc(self, 4)): Int))
; [eval] $unwrap(l$proposal) < ($struct_get($struct_loc(self, 4)): Int)
; [eval] $unwrap(l$proposal)
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (<
    ($unwrap<Int> l$proposal@960@01)
    ($struct_get<Int> ($struct_loc<Int> self@966@01 4))))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (<
  ($unwrap<Int> l$proposal@960@01)
  ($struct_get<Int> ($struct_loc<Int> self@966@01 4)))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 504 | $unwrap[Int](l$proposal@960@01) < $struct_get[Int]($struct_loc[Int](self@966@01, 4)) | live]
; [else-branch: 504 | !($unwrap[Int](l$proposal@960@01) < $struct_get[Int]($struct_loc[Int](self@966@01, 4))) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 504 | $unwrap[Int](l$proposal@960@01) < $struct_get[Int]($struct_loc[Int](self@966@01, 4))]
(assert (<
  ($unwrap<Int> l$proposal@960@01)
  ($struct_get<Int> ($struct_loc<Int> self@966@01 4))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   ($struct_get($struct_loc(msg, 0)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct),
;   3, $unwrap(l$proposal)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 3, $unwrap(l$proposal)): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 3, $unwrap(l$proposal)): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 3, $unwrap(l$proposal)): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$proposal)
(declare-const self@1026@01 $Struct)
(assert (=
  self@1026@01
  ($struct_set<$Struct> self@966@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0)) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 3 ($unwrap<Int> l$proposal@960@01))))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   ($struct_get($struct_loc(msg, 0)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct),
;   1, true): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1, true): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1, true): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 1, true): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(declare-const self@1027@01 $Struct)
(assert (=
  self@1027@01
  ($struct_set<$Struct> self@1026@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1026@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0)) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1026@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 1 true)))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int))) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int))) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int))) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$proposal)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] -170141183460469231731687303715884105728
(push) ; 5
; [then-branch: 505 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728 | live]
; [else-branch: 505 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728) | live]
(push) ; 6
; [then-branch: 505 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 6
(push) ; 6
; [else-branch: 505 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int))) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$proposal)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
      (- 0 170141183460469231731687303715884105728)))
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
    (- 0 170141183460469231731687303715884105728))))
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 506 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) > 170141183460469231731687303715884105727 | live]
; [else-branch: 506 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) > 170141183460469231731687303715884105727) | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 506 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
    170141183460469231731687303715884105727)))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 507 | True | live]
; [else-branch: 507 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 507 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@1028@01 $Snap)
(assert (= $t@1028@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@976@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1029@01 $Struct)
(assert (=
  self@1029@01
  ($struct_set<$Struct> self@966@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@966@01 5))
    l$havoc@976@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 6
; [then-branch: 508 | False | dead]
; [else-branch: 508 | True | live]
(set-option :timeout 0)
(push) ; 6
; [else-branch: 508 | True]
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 506 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
      170141183460469231731687303715884105727))))
(pop) ; 5
; [eval] !($unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int))) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int))) > 170141183460469231731687303715884105727)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int))) < -170141183460469231731687303715884105728 || $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int))) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int))) < -170141183460469231731687303715884105728
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$proposal)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] -170141183460469231731687303715884105728
(push) ; 5
; [then-branch: 509 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728 | live]
; [else-branch: 509 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728) | live]
(push) ; 6
; [then-branch: 509 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728]
(assert (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
  (- 0 170141183460469231731687303715884105728)))
(pop) ; 6
(push) ; 6
; [else-branch: 509 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
    (- 0 170141183460469231731687303715884105728))))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int))) > 170141183460469231731687303715884105727
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$proposal)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(push) ; 5
(set-option :timeout 10)
(assert (not (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
    170141183460469231731687303715884105727))))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
      170141183460469231731687303715884105727)))))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 510 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) > 170141183460469231731687303715884105727) | live]
; [else-branch: 510 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) > 170141183460469231731687303715884105727 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 510 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) > 170141183460469231731687303715884105727)]
(assert (not
  (or
    (<
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
      (- 0 170141183460469231731687303715884105728))
    (>
      (+
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
        ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
      170141183460469231731687303715884105727))))
; [exec]
; self := ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   $unwrap(l$proposal), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) +
;   $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct),
;   0)): Int)))): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 1, ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)))): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal), ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)))): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$proposal)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1, $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)))): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$proposal)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))) + $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)))
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$proposal)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$proposal)
; [eval] $unwrap($wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(declare-const self@1030@01 $Struct)
(assert (=
  self@1030@01
  ($struct_set<$Struct> self@1027@01 1 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0))))))))))
; [exec]
; self := ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;   ($struct_get($struct_loc(msg, 0)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self,
;   0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct),
;   0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($struct_set(self, 0, ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int), ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0, 0): $Struct)): $Map[Int, $Struct])
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_set(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct), 0, 0): $Struct)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(declare-const self@1031@01 $Struct)
(assert (=
  self@1031@01
  ($struct_set<$Struct> self@1030@01 0 ($map_set<$Map<Int~_$Struct>> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1030@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0)) ($struct_set<$Struct> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1030@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0 0)))))
; [exec]
; label return
(push) ; 6
(set-option :timeout 10)
(assert (not (not $out_of_gas@975@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not $out_of_gas@975@01))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 511 | $out_of_gas@975@01 | live]
; [else-branch: 511 | !($out_of_gas@975@01) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 511 | $out_of_gas@975@01]
(assert $out_of_gas@975@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 7
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 512 | True | live]
; [else-branch: 512 | False | dead]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 512 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@1032@01 $Snap)
(assert (= $t@1032@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@976@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1033@01 $Struct)
(assert (=
  self@1033@01
  ($struct_set<$Struct> self@966@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@966@01 5))
    l$havoc@976@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 7
; [then-branch: 513 | False | dead]
; [else-branch: 513 | True | live]
(set-option :timeout 0)
(push) ; 7
; [else-branch: 513 | True]
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 511 | !($out_of_gas@975@01)]
(assert (not $out_of_gas@975@01))
(pop) ; 6
; [eval] !$out_of_gas
(push) ; 6
(set-option :timeout 10)
(assert (not $out_of_gas@975@01))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not $out_of_gas@975@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 514 | !($out_of_gas@975@01) | live]
; [else-branch: 514 | $out_of_gas@975@01 | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 514 | !($out_of_gas@975@01)]
(assert (not $out_of_gas@975@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 515 | False | dead]
; [else-branch: 515 | True | live]
(push) ; 7
; [else-branch: 515 | True]
(pop) ; 7
(push) ; 7
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 516 | True | live]
; [else-branch: 516 | False | dead]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 516 | True]
; [exec]
; inhale l$havoc >= 0
(declare-const $t@1034@01 $Snap)
(assert (= $t@1034@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@976@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1035@01 $Struct)
(assert (=
  self@1035@01
  ($struct_set<$Struct> self@1031@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1031@01 5))
    l$havoc@976@01))))
; [exec]
; $contracts := l$havoc$1
(pop) ; 7
(pop) ; 6
(set-option :timeout 0)
(push) ; 6
; [else-branch: 514 | $out_of_gas@975@01]
(assert $out_of_gas@975@01)
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 510 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) < -170141183460469231731687303715884105728 || $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 1)), $unwrap[Int](l$proposal@960@01)), 1)))) + $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1027@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 0)))) > 170141183460469231731687303715884105727]
(assert (or
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
    (- 0 170141183460469231731687303715884105728))
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 1)) ($unwrap<Int> l$proposal@960@01)) 1))))
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1027@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 0)))))
    170141183460469231731687303715884105727)))
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 504 | !($unwrap[Int](l$proposal@960@01) < $struct_get[Int]($struct_loc[Int](self@966@01, 4)))]
(assert (not
  (<
    ($unwrap<Int> l$proposal@960@01)
    ($struct_get<Int> ($struct_loc<Int> self@966@01 4)))))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 500 | $struct_get[Bool]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@966@01, 0)), $struct_get[Int]($struct_loc[Int](msg@962@01, 0))), 1))]
(assert ($struct_get<Bool> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@966@01 0)) ($struct_get<Int> ($struct_loc<Int> msg@962@01 0))) 1)))
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$winningProposal ----------
(declare-const $succ@1036@01 Bool)
(declare-const $res@1037@01 Int)
(declare-const $succ@1038@01 Bool)
(declare-const $res@1039@01 Int)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@1040@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@1041@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@1042@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@1043@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@1044@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@1045@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@1046@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@1047@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@1048@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@1049@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@1050@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@1051@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@1052@01 Bool)
; [exec]
; var i0$$res: Int
(declare-const i0$$res@1053@01 Int)
; [exec]
; var l$i0$winning_vote_count: Int
(declare-const l$i0$winning_vote_count@1054@01 Int)
; [exec]
; var l$i0$winning_proposal: Int
(declare-const l$i0$winning_proposal@1055@01 Int)
; [exec]
; var l$i0$i: $Int
(declare-const l$i0$i@1056@01 $Int)
; [exec]
; var l$i0$winning_vote_count$1: $Int
(declare-const l$i0$winning_vote_count$1@1057@01 $Int)
; [exec]
; var l$i0$winning_proposal$1: $Int
(declare-const l$i0$winning_proposal$1@1058@01 $Int)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@1059@01 Bool)
; [exec]
; var l$havoc: Int
(declare-const l$havoc@1060@01 Int)
; [exec]
; var l$havoc$1: Int
(declare-const l$havoc$1@1061@01 Int)
; [exec]
; var l$havoc$2: $Map[Int, $Struct]
(declare-const l$havoc$2@1062@01 $Map<Int~_$Struct>)
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@1063@01 $Snap)
(assert (= $t@1063@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@1064@01 Int)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 517 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 0)), $q0@1064@01), 0))) | live]
; [else-branch: 517 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 0)), $q0@1064@01), 0)) | live]
(push) ; 5
; [then-branch: 517 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 0)), $q0@1064@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1064@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 517 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 0)), $q0@1064@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1064@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1064@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1064@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@1064@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1064@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1064@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1064@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1858@11@1858@441-aux|)))
(assert (forall (($q0@1064@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1064@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1064@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1064@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1858@11@1858@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@1065@01 $Snap)
(assert (= $t@1065@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@1066@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 518 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 0)), $q0@1066@01), 2))) | live]
; [else-branch: 518 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 0)), $q0@1066@01), 2)) | live]
(push) ; 5
; [then-branch: 518 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 0)), $q0@1066@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1066@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 518 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 0)), $q0@1066@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1066@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1066@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1066@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@1066@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1066@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1066@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1066@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1859@11@1859@412-aux|)))
(assert (forall (($q0@1066@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1066@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1066@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1066@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1859@11@1859@412|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@1067@01 $Snap)
(assert (= $t@1067@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@1068@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 519 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 0)), $q0@1068@01), 3))) | live]
; [else-branch: 519 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 0)), $q0@1068@01), 3)) | live]
(push) ; 5
; [then-branch: 519 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 0)), $q0@1068@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1068@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 519 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 0)), $q0@1068@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1068@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1068@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1068@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@1068@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1068@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1068@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1068@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1860@11@1860@441-aux|)))
(assert (forall (($q0@1068@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1068@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1068@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1068@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1860@11@1860@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@1069@01 $Snap)
(assert (= $t@1069@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@1070@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@1070@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1070@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 0)) $q0@1070@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1861@11@1861@272|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@1071@01 $Snap)
(assert (= $t@1071@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@1072@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@1072@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) $q1@1072@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) $q1@1072@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1862@11@1862@246|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@1073@01 $Snap)
(assert (= $t@1073@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@1074@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(push) ; 4
; [then-branch: 520 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $q1@1074@01), 1))) | live]
; [else-branch: 520 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $q1@1074@01), 1)) | live]
(push) ; 5
; [then-branch: 520 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $q1@1074@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) $q1@1074@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 520 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $q1@1074@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) $q1@1074@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) $q1@1074@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) $q1@1074@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@1074@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) $q1@1074@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) $q1@1074@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) $q1@1074@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1863@11@1863@441-aux|)))
(assert (forall (($q1@1074@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) $q1@1074@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) $q1@1074@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) $q1@1074@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1863@11@1863@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@1075@01 $Snap)
(assert (= $t@1075@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@1076@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@1076@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) $q1@1076@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) $q1@1076@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1864@11@1864@279|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@1077@01 $Snap)
(assert (= $t@1077@01 ($Snap.combine ($Snap.first $t@1077@01) ($Snap.second $t@1077@01))))
(assert (= ($Snap.first $t@1077@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@1044@01 2))))
(assert (= ($Snap.second $t@1077@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@1044@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 3)): Int) &&
;   ($struct_get($struct_loc(self, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@1078@01 $Snap)
(assert (= $t@1078@01 ($Snap.combine ($Snap.first $t@1078@01) ($Snap.second $t@1078@01))))
(assert (= ($Snap.first $t@1078@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 3)): Int)
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@1044@01 3))))
(assert (= ($Snap.second $t@1078@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@1044@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 4)): Int) &&
;   ($struct_get($struct_loc(self, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@1079@01 $Snap)
(assert (= $t@1079@01 ($Snap.combine ($Snap.first $t@1079@01) ($Snap.second $t@1079@01))))
(assert (= ($Snap.first $t@1079@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@1044@01 4))))
(assert (= ($Snap.second $t@1079@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@1044@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1080@01 $Snap)
(assert (= $t@1080@01 ($Snap.combine ($Snap.first $t@1080@01) ($Snap.second $t@1080@01))))
(assert (= ($Snap.first $t@1080@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@1044@01 5))))
(assert (= ($Snap.second $t@1080@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@1044@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@1081@01 $Snap)
(assert (= $t@1081@01 ($Snap.combine ($Snap.first $t@1081@01) ($Snap.second $t@1081@01))))
(assert (= ($Snap.first $t@1081@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@1044@01 6))))
(assert (= ($Snap.second $t@1081@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@1044@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@1082@01 $Snap)
(assert (= $t@1082@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@1083@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(push) ; 4
; [then-branch: 521 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1044@01, 8)), $q3@1083@01)) | live]
; [else-branch: 521 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1044@01, 8)), $q3@1083@01) | live]
(push) ; 5
; [then-branch: 521 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1044@01, 8)), $q3@1083@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 8)) $q3@1083@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 521 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1044@01, 8)), $q3@1083@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 8)) $q3@1083@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 8)) $q3@1083@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 8)) $q3@1083@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@1083@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 8)) $q3@1083@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 8)) $q3@1083@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 8)) $q3@1083@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1870@11@1870@345-aux|)))
(assert (forall (($q3@1083@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 8)) $q3@1083@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 8)) $q3@1083@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 8)) $q3@1083@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1870@11@1870@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $t@1084@01 $Snap)
(assert (= $t@1084@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $q3@1085@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@1085@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 8)) $q3@1085@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 8)) $q3@1085@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1871@11@1871@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@1086@01 $Snap)
(assert (= $t@1086@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@1087@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(push) ; 4
; [then-branch: 522 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1044@01, 9)), $q4@1087@01)) | live]
; [else-branch: 522 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1044@01, 9)), $q4@1087@01) | live]
(push) ; 5
; [then-branch: 522 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1044@01, 9)), $q4@1087@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 9)) $q4@1087@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 522 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1044@01, 9)), $q4@1087@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 9)) $q4@1087@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 9)) $q4@1087@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 9)) $q4@1087@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@1087@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 9)) $q4@1087@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 9)) $q4@1087@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 9)) $q4@1087@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1872@11@1872@345-aux|)))
(assert (forall (($q4@1087@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 9)) $q4@1087@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 9)) $q4@1087@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 9)) $q4@1087@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1872@11@1872@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $t@1088@01 $Snap)
(assert (= $t@1088@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $q4@1089@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
; [eval] ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@1089@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 9)) $q4@1089@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1044@01 9)) $q4@1089@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1873@11@1873@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@1090@01 $Snap)
(assert (= $t@1090@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1044@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@1091@01 $Snap)
(assert (= $t@1091@01 ($Snap.combine ($Snap.first $t@1091@01) ($Snap.second $t@1091@01))))
(assert (= ($Snap.first $t@1091@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@1091@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@1092@01 $Snap)
(assert (= $t@1092@01 ($Snap.combine ($Snap.first $t@1092@01) ($Snap.second $t@1092@01))))
(assert (= ($Snap.first $t@1092@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@1041@01 0))))
(assert (= ($Snap.second $t@1092@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@1041@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1093@01 $Snap)
(assert (= $t@1093@01 ($Snap.combine ($Snap.first $t@1093@01) ($Snap.second $t@1093@01))))
(assert (= ($Snap.first $t@1093@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@1041@01 1))))
(assert (= ($Snap.second $t@1093@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@1041@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1094@01 $Snap)
(assert (= $t@1094@01 ($Snap.combine ($Snap.first $t@1094@01) ($Snap.second $t@1094@01))))
(assert (= ($Snap.first $t@1094@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@1041@01 2))))
(assert (= ($Snap.second $t@1094@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@1041@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@1095@01 $Snap)
(assert (= $t@1095@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@1041@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1096@01 $Snap)
(assert (= $t@1096@01 ($Snap.combine ($Snap.first $t@1096@01) ($Snap.second $t@1096@01))))
(assert (= ($Snap.first $t@1096@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@1041@01 4))))
(assert (= ($Snap.second $t@1096@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@1041@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@1097@01 $Snap)
(assert (= $t@1097@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@1041@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@1098@01 $Snap)
(assert (= $t@1098@01 ($Snap.combine ($Snap.first $t@1098@01) ($Snap.second $t@1098@01))))
(assert (= ($Snap.first $t@1098@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@1040@01 0))))
(assert (= ($Snap.second $t@1098@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@1040@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1099@01 $Snap)
(assert (= $t@1099@01 ($Snap.combine ($Snap.first $t@1099@01) ($Snap.second $t@1099@01))))
(assert (= ($Snap.first $t@1099@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@1040@01 1))))
(assert (= ($Snap.second $t@1099@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@1040@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1100@01 $Snap)
(assert (= $t@1100@01 ($Snap.combine ($Snap.first $t@1100@01) ($Snap.second $t@1100@01))))
(assert (= ($Snap.first $t@1100@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@1040@01 2))))
(assert (= ($Snap.second $t@1100@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@1040@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@1101@01 $Snap)
(assert (= $t@1101@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@1040@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@1102@01 $Snap)
(assert (= $t@1102@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@1040@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $t@1103@01 $Snap)
(assert (= $t@1103@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $a@1104@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@1105@01 $Snap)
(assert (= $t@1105@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@1040@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; l$i0$winning_vote_count := 0
; [exec]
; l$i0$winning_proposal := 0
; [exec]
; l$i0$winning_proposal$1 := $wrap(l$i0$winning_proposal)
; [eval] $wrap(l$i0$winning_proposal)
(declare-const l$i0$winning_proposal$1@1106@01 $Int)
(assert (= l$i0$winning_proposal$1@1106@01 ($wrap<$Int> 0)))
; [exec]
; l$i0$winning_vote_count$1 := $wrap(l$i0$winning_vote_count)
; [eval] $wrap(l$i0$winning_vote_count)
(declare-const l$i0$winning_vote_count$1@1107@01 $Int)
(assert (= l$i0$winning_vote_count$1@1107@01 ($wrap<$Int> 0)))
; [exec]
; l$i0$i := $wrap($range(0, 2)[0])
; [eval] $wrap($range(0, 2)[0])
; [eval] $range(0, 2)[0]
; [eval] $range(0, 2)
(set-option :timeout 0)
(push) ; 3
(assert (not (< 0 (Seq_length ($range<Seq<Int>> 0 2)))))
(check-sat)
; unsat
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(declare-const l$i0$i@1108@01 $Int)
(assert (= l$i0$i@1108@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 2) 0))))
; [exec]
; l$i0$winning_vote_count$1 := $wrap(l$i0$winning_vote_count)
; [eval] $wrap(l$i0$winning_vote_count)
(declare-const l$i0$winning_vote_count$1@1109@01 $Int)
(assert (= l$i0$winning_vote_count$1@1109@01 ($wrap<$Int> 0)))
; [exec]
; l$i0$winning_proposal$1 := $wrap(l$i0$winning_proposal)
; [eval] $wrap(l$i0$winning_proposal)
(declare-const l$i0$winning_proposal$1@1110@01 $Int)
(assert (= l$i0$winning_proposal$1@1110@01 ($wrap<$Int> 0)))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > l$i0$winning_vote_count
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1108@01)) 1))
    0))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1108@01)) 1))
  0)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 523 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1108@01)), 1)) > 0 | live]
; [else-branch: 523 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1108@01)), 1)) > 0) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 523 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1108@01)), 1)) > 0]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1108@01)) 1))
  0))
; [exec]
; l$i0$winning_vote_count$1 := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
(declare-const l$i0$winning_vote_count$1@1111@01 $Int)
(assert (=
  l$i0$winning_vote_count$1@1111@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1108@01)) 1)))))
; [exec]
; l$i0$winning_proposal$1 := l$i0$i
; [exec]
; label continue_0
; [exec]
; l$i0$i := $wrap($range(0, 2)[1])
; [eval] $wrap($range(0, 2)[1])
; [eval] $range(0, 2)[1]
; [eval] $range(0, 2)
(push) ; 4
(assert (not (< 1 (Seq_length ($range<Seq<Int>> 0 2)))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(declare-const l$i0$i@1112@01 $Int)
(assert (= l$i0$i@1112@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 2) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > $unwrap(l$i0$winning_vote_count$1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
; [eval] $unwrap(l$i0$winning_vote_count$1)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1112@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1111@01)))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1112@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1111@01))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 524 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1112@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1111@01) | live]
; [else-branch: 524 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1112@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1111@01)) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 524 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1112@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1111@01)]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1112@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1111@01)))
; [exec]
; l$i0$winning_vote_count$1 := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
(declare-const l$i0$winning_vote_count$1@1113@01 $Int)
(assert (=
  l$i0$winning_vote_count$1@1113@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1112@01)) 1)))))
; [exec]
; l$i0$winning_proposal$1 := l$i0$i
; [exec]
; label continue_1
; [exec]
; label break_0
; [exec]
; i0$$res := $unwrap(l$i0$winning_proposal$1)
; [eval] $unwrap(l$i0$winning_proposal$1)
(declare-const i0$$res@1114@01 Int)
(assert (= i0$$res@1114@01 ($unwrap<Int> l$i0$i@1112@01)))
; [exec]
; label i0$return
; [exec]
; $res := i0$$res
; [exec]
; label return
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1059@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1059@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 525 | $out_of_gas@1059@01 | live]
; [else-branch: 525 | !($out_of_gas@1059@01) | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 525 | $out_of_gas@1059@01]
(assert $out_of_gas@1059@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 526 | True | live]
; [else-branch: 526 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 526 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1115@01 $Snap)
(assert (= $t@1115@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1061@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1116@01 $Struct)
(assert (=
  self@1116@01
  ($struct_set<$Struct> self@1044@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1044@01 5))
    l$havoc$1@1061@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
; [then-branch: 527 | False | dead]
; [else-branch: 527 | True | live]
(set-option :timeout 0)
(push) ; 6
; [else-branch: 527 | True]
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 525 | !($out_of_gas@1059@01)]
(assert (not $out_of_gas@1059@01))
(pop) ; 5
; [eval] !$out_of_gas
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1059@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1059@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 528 | !($out_of_gas@1059@01) | live]
; [else-branch: 528 | $out_of_gas@1059@01 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 528 | !($out_of_gas@1059@01)]
(assert (not $out_of_gas@1059@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 529 | False | dead]
; [else-branch: 529 | True | live]
(push) ; 6
; [else-branch: 529 | True]
(pop) ; 6
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 530 | True | live]
; [else-branch: 530 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 530 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1117@01 $Snap)
(assert (= $t@1117@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1061@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1118@01 $Struct)
(assert (=
  self@1118@01
  ($struct_set<$Struct> self@1044@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1044@01 5))
    l$havoc$1@1061@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
(pop) ; 5
(set-option :timeout 0)
(push) ; 5
; [else-branch: 528 | $out_of_gas@1059@01]
(assert $out_of_gas@1059@01)
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 524 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1112@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1111@01))]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1112@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1111@01))))
(pop) ; 4
; [eval] !(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > $unwrap(l$i0$winning_vote_count$1))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > $unwrap(l$i0$winning_vote_count$1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
; [eval] $unwrap(l$i0$winning_vote_count$1)
(push) ; 4
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1112@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1111@01))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1112@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1111@01)))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 531 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1112@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1111@01)) | live]
; [else-branch: 531 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1112@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1111@01) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 531 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1112@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1111@01))]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1112@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1111@01))))
; [exec]
; label continue_1
; [exec]
; label break_0
; [exec]
; i0$$res := $unwrap(l$i0$winning_proposal$1)
; [eval] $unwrap(l$i0$winning_proposal$1)
(declare-const i0$$res@1119@01 Int)
(assert (= i0$$res@1119@01 ($unwrap<Int> l$i0$i@1108@01)))
; [exec]
; label i0$return
; [exec]
; $res := i0$$res
; [exec]
; label return
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1059@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1059@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 532 | $out_of_gas@1059@01 | live]
; [else-branch: 532 | !($out_of_gas@1059@01) | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 532 | $out_of_gas@1059@01]
(assert $out_of_gas@1059@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 533 | True | live]
; [else-branch: 533 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 533 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1120@01 $Snap)
(assert (= $t@1120@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1061@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1121@01 $Struct)
(assert (=
  self@1121@01
  ($struct_set<$Struct> self@1044@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1044@01 5))
    l$havoc$1@1061@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
; [then-branch: 534 | False | dead]
; [else-branch: 534 | True | live]
(set-option :timeout 0)
(push) ; 6
; [else-branch: 534 | True]
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 532 | !($out_of_gas@1059@01)]
(assert (not $out_of_gas@1059@01))
(pop) ; 5
; [eval] !$out_of_gas
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1059@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1059@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 535 | !($out_of_gas@1059@01) | live]
; [else-branch: 535 | $out_of_gas@1059@01 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 535 | !($out_of_gas@1059@01)]
(assert (not $out_of_gas@1059@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 536 | False | dead]
; [else-branch: 536 | True | live]
(push) ; 6
; [else-branch: 536 | True]
(pop) ; 6
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 537 | True | live]
; [else-branch: 537 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 537 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1122@01 $Snap)
(assert (= $t@1122@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1061@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1123@01 $Struct)
(assert (=
  self@1123@01
  ($struct_set<$Struct> self@1044@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1044@01 5))
    l$havoc$1@1061@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
(pop) ; 5
(set-option :timeout 0)
(push) ; 5
; [else-branch: 535 | $out_of_gas@1059@01]
(assert $out_of_gas@1059@01)
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 531 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1112@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1111@01)]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1112@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1111@01)))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 523 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1108@01)), 1)) > 0)]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1108@01)) 1))
    0)))
(pop) ; 3
; [eval] !(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > l$i0$winning_vote_count)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > l$i0$winning_vote_count
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
(push) ; 3
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1108@01)) 1))
  0)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1108@01)) 1))
    0))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 538 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1108@01)), 1)) > 0) | live]
; [else-branch: 538 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1108@01)), 1)) > 0 | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 538 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1108@01)), 1)) > 0)]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1108@01)) 1))
    0)))
; [exec]
; label continue_0
; [exec]
; l$i0$i := $wrap($range(0, 2)[1])
; [eval] $wrap($range(0, 2)[1])
; [eval] $range(0, 2)[1]
; [eval] $range(0, 2)
(push) ; 4
(assert (not (< 1 (Seq_length ($range<Seq<Int>> 0 2)))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(declare-const l$i0$i@1124@01 $Int)
(assert (= l$i0$i@1124@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 2) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > $unwrap(l$i0$winning_vote_count$1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
; [eval] $unwrap(l$i0$winning_vote_count$1)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1124@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1109@01)))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1124@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1109@01))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 539 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1124@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1109@01) | live]
; [else-branch: 539 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1124@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1109@01)) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 539 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1124@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1109@01)]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1124@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1109@01)))
; [exec]
; l$i0$winning_vote_count$1 := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
(declare-const l$i0$winning_vote_count$1@1125@01 $Int)
(assert (=
  l$i0$winning_vote_count$1@1125@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1124@01)) 1)))))
; [exec]
; l$i0$winning_proposal$1 := l$i0$i
; [exec]
; label continue_1
; [exec]
; label break_0
; [exec]
; i0$$res := $unwrap(l$i0$winning_proposal$1)
; [eval] $unwrap(l$i0$winning_proposal$1)
(declare-const i0$$res@1126@01 Int)
(assert (= i0$$res@1126@01 ($unwrap<Int> l$i0$i@1124@01)))
; [exec]
; label i0$return
; [exec]
; $res := i0$$res
; [exec]
; label return
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1059@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1059@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 540 | $out_of_gas@1059@01 | live]
; [else-branch: 540 | !($out_of_gas@1059@01) | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 540 | $out_of_gas@1059@01]
(assert $out_of_gas@1059@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 541 | True | live]
; [else-branch: 541 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 541 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1127@01 $Snap)
(assert (= $t@1127@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1061@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1128@01 $Struct)
(assert (=
  self@1128@01
  ($struct_set<$Struct> self@1044@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1044@01 5))
    l$havoc$1@1061@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
; [then-branch: 542 | False | dead]
; [else-branch: 542 | True | live]
(set-option :timeout 0)
(push) ; 6
; [else-branch: 542 | True]
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 540 | !($out_of_gas@1059@01)]
(assert (not $out_of_gas@1059@01))
(pop) ; 5
; [eval] !$out_of_gas
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1059@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1059@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 543 | !($out_of_gas@1059@01) | live]
; [else-branch: 543 | $out_of_gas@1059@01 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 543 | !($out_of_gas@1059@01)]
(assert (not $out_of_gas@1059@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 544 | False | dead]
; [else-branch: 544 | True | live]
(push) ; 6
; [else-branch: 544 | True]
(pop) ; 6
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 545 | True | live]
; [else-branch: 545 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 545 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1129@01 $Snap)
(assert (= $t@1129@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1061@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1130@01 $Struct)
(assert (=
  self@1130@01
  ($struct_set<$Struct> self@1044@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1044@01 5))
    l$havoc$1@1061@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
(pop) ; 5
(set-option :timeout 0)
(push) ; 5
; [else-branch: 543 | $out_of_gas@1059@01]
(assert $out_of_gas@1059@01)
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 539 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1124@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1109@01))]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1124@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1109@01))))
(pop) ; 4
; [eval] !(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > $unwrap(l$i0$winning_vote_count$1))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > $unwrap(l$i0$winning_vote_count$1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
; [eval] $unwrap(l$i0$winning_vote_count$1)
(push) ; 4
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1124@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1109@01))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1124@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1109@01)))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 546 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1124@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1109@01)) | live]
; [else-branch: 546 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1124@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1109@01) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 546 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1124@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1109@01))]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1124@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1109@01))))
; [exec]
; label continue_1
; [exec]
; label break_0
; [exec]
; i0$$res := $unwrap(l$i0$winning_proposal$1)
; [eval] $unwrap(l$i0$winning_proposal$1)
(declare-const i0$$res@1131@01 Int)
(assert (= i0$$res@1131@01 ($unwrap<Int> l$i0$winning_proposal$1@1110@01)))
; [exec]
; label i0$return
; [exec]
; $res := i0$$res
; [exec]
; label return
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1059@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1059@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 547 | $out_of_gas@1059@01 | live]
; [else-branch: 547 | !($out_of_gas@1059@01) | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 547 | $out_of_gas@1059@01]
(assert $out_of_gas@1059@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 548 | True | live]
; [else-branch: 548 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 548 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1132@01 $Snap)
(assert (= $t@1132@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1061@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1133@01 $Struct)
(assert (=
  self@1133@01
  ($struct_set<$Struct> self@1044@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1044@01 5))
    l$havoc$1@1061@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
; [then-branch: 549 | False | dead]
; [else-branch: 549 | True | live]
(set-option :timeout 0)
(push) ; 6
; [else-branch: 549 | True]
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 547 | !($out_of_gas@1059@01)]
(assert (not $out_of_gas@1059@01))
(pop) ; 5
; [eval] !$out_of_gas
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1059@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1059@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 550 | !($out_of_gas@1059@01) | live]
; [else-branch: 550 | $out_of_gas@1059@01 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 550 | !($out_of_gas@1059@01)]
(assert (not $out_of_gas@1059@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 551 | False | dead]
; [else-branch: 551 | True | live]
(push) ; 6
; [else-branch: 551 | True]
(pop) ; 6
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 552 | True | live]
; [else-branch: 552 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 552 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1134@01 $Snap)
(assert (= $t@1134@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1061@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1135@01 $Struct)
(assert (=
  self@1135@01
  ($struct_set<$Struct> self@1044@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1044@01 5))
    l$havoc$1@1061@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
(pop) ; 5
(set-option :timeout 0)
(push) ; 5
; [else-branch: 550 | $out_of_gas@1059@01]
(assert $out_of_gas@1059@01)
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 546 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1124@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1109@01)]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1124@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1109@01)))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 538 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1044@01, 1)), $unwrap[Int](l$i0$i@1108@01)), 1)) > 0]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1044@01 1)) ($unwrap<Int> l$i0$i@1108@01)) 1))
  0))
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$winnerName ----------
(declare-const $succ@1136@01 Bool)
(declare-const $res@1137@01 Seq<Int>)
(declare-const $succ@1138@01 Bool)
(declare-const $res@1139@01 Seq<Int>)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@1140@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@1141@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@1142@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@1143@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@1144@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@1145@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@1146@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@1147@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@1148@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@1149@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@1150@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@1151@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@1152@01 Bool)
; [exec]
; var i0$$res: Int
(declare-const i0$$res@1153@01 Int)
; [exec]
; var l$i0$winning_vote_count: Int
(declare-const l$i0$winning_vote_count@1154@01 Int)
; [exec]
; var l$i0$winning_proposal: Int
(declare-const l$i0$winning_proposal@1155@01 Int)
; [exec]
; var l$i0$i: $Int
(declare-const l$i0$i@1156@01 $Int)
; [exec]
; var l$i0$winning_vote_count$1: $Int
(declare-const l$i0$winning_vote_count$1@1157@01 $Int)
; [exec]
; var l$i0$winning_proposal$1: $Int
(declare-const l$i0$winning_proposal$1@1158@01 $Int)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@1159@01 Bool)
; [exec]
; var l$havoc: Seq[Int]
(declare-const l$havoc@1160@01 Seq<Int>)
; [exec]
; var l$havoc$1: Int
(declare-const l$havoc$1@1161@01 Int)
; [exec]
; var l$havoc$2: $Map[Int, $Struct]
(declare-const l$havoc$2@1162@01 $Map<Int~_$Struct>)
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 0)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@1163@01 $Snap)
(assert (= $t@1163@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@1164@01 Int)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 553 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 0)), $q0@1164@01), 0))) | live]
; [else-branch: 553 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 0)), $q0@1164@01), 0)) | live]
(push) ; 5
; [then-branch: 553 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 0)), $q0@1164@01), 0)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1164@01) 0)))))
(pop) ; 5
(push) ; 5
; [else-branch: 553 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 0)), $q0@1164@01), 0))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1164@01) 0))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1164@01) 0)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1164@01) 0))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@1164@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1164@01) 0)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1164@01) 0)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1164@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1984@11@1984@441-aux|)))
(assert (forall (($q0@1164@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1164@01) 0)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1164@01) 0))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1164@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1984@11@1984@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     0 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 2)): Int) <=
;     1461501637330902918203684832716283019655932542975)
(declare-const $t@1165@01 $Snap)
(assert (= $t@1165@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975)
(declare-const $q0@1166@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 554 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 0)), $q0@1166@01), 2))) | live]
; [else-branch: 554 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 0)), $q0@1166@01), 2)) | live]
(push) ; 5
; [then-branch: 554 | !(0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 0)), $q0@1166@01), 2)))]
(assert (not
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1166@01) 2)))))
(pop) ; 5
(push) ; 5
; [else-branch: 554 | 0 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 0)), $q0@1166@01), 2))]
(assert (<=
  0
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1166@01) 2))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 2)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1166@01) 2)))
  (not
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1166@01) 2))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@1166@01 Int)) (!
  (or
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1166@01) 2)))
    (not
      (<=
        0
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1166@01) 2)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1166@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1985@11@1985@412-aux|)))
(assert (forall (($q0@1166@01 Int)) (!
  (and
    (<=
      0
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1166@01) 2)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1166@01) 2))
      1461501637330902918203684832716283019655932542975))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1166@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1985@11@1985@412|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), 3)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@1167@01 $Snap)
(assert (= $t@1167@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q0@1168@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(push) ; 4
; [then-branch: 555 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 0)), $q0@1168@01), 3))) | live]
; [else-branch: 555 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 0)), $q0@1168@01), 3)) | live]
(push) ; 5
; [then-branch: 555 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 0)), $q0@1168@01), 3)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1168@01) 3)))))
(pop) ; 5
(push) ; 5
; [else-branch: 555 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 0)), $q0@1168@01), 3))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1168@01) 3))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1168@01) 3)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1168@01) 3))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@1168@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1168@01) 3)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1168@01) 3)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1168@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1986@11@1986@441-aux|)))
(assert (forall (($q0@1168@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1168@01) 3)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1168@01) 3))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1168@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1986@11@1986@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q0: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]),
;     $q0): $Struct), -1)): Int) ==
;     2335365049822495359383813376730482)
(declare-const $t@1169@01 $Snap)
(assert (= $t@1169@01 $Snap.unit))
; [eval] (forall $q0: Int :: { ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482)
(declare-const $q0@1170@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int) == 2335365049822495359383813376730482
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 0)): $Map[Int, $Struct]), $q0): $Struct)
; [eval] ($struct_get($struct_loc(self, 0)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 0)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q0@1170@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1170@01) (- 0 1)))
    2335365049822495359383813376730482)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 0)) $q0@1170@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1987@11@1987@272|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 0)): Seq[Int])| ==
;     32)
(declare-const $t@1171@01 $Snap)
(assert (= $t@1171@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32)
(declare-const $q1@1172@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@1172@01 Int)) (!
  (=
    (Seq_length
      ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) $q1@1172@01) 0)))
    32)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) $q1@1172@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1988@11@1988@246|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     -170141183460469231731687303715884105728 <=
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) &&
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), 1)): Int) <=
;     170141183460469231731687303715884105727)
(declare-const $t@1173@01 $Snap)
(assert (= $t@1173@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727)
(declare-const $q1@1174@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) && ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(push) ; 4
; [then-branch: 556 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $q1@1174@01), 1))) | live]
; [else-branch: 556 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $q1@1174@01), 1)) | live]
(push) ; 5
; [then-branch: 556 | !(-170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $q1@1174@01), 1)))]
(assert (not
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) $q1@1174@01) 1)))))
(pop) ; 5
(push) ; 5
; [else-branch: 556 | -170141183460469231731687303715884105728 <= $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $q1@1174@01), 1))]
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) $q1@1174@01) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    (- 0 170141183460469231731687303715884105728)
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) $q1@1174@01) 1)))
  (not
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) $q1@1174@01) 1))))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@1174@01 Int)) (!
  (or
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) $q1@1174@01) 1)))
    (not
      (<=
        (- 0 170141183460469231731687303715884105728)
        ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) $q1@1174@01) 1)))))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) $q1@1174@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1989@11@1989@441-aux|)))
(assert (forall (($q1@1174@01 Int)) (!
  (and
    (<=
      (- 0 170141183460469231731687303715884105728)
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) $q1@1174@01) 1)))
    (<=
      ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) $q1@1174@01) 1))
      170141183460469231731687303715884105727))
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) $q1@1174@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1989@11@1989@441|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q1: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) }
;     ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;     $q1): $Struct), -1)): Int) ==
;     39180923879722766303379432418507016593772)
(declare-const $t@1175@01 $Snap)
(assert (= $t@1175@01 $Snap.unit))
; [eval] (forall $q1: Int :: { ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct) } ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772)
(declare-const $q1@1176@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int) == 39180923879722766303379432418507016593772
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct), -1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $q1): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] -1
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q1@1176@01 Int)) (!
  (=
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) $q1@1176@01) (- 0 1)))
    39180923879722766303379432418507016593772)
  :pattern (($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) $q1@1176@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1990@11@1990@279|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@1177@01 $Snap)
(assert (= $t@1177@01 ($Snap.combine ($Snap.first $t@1177@01) ($Snap.second $t@1177@01))))
(assert (= ($Snap.first $t@1177@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@1144@01 2))))
(assert (= ($Snap.second $t@1177@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@1144@01 2))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 3)): Int) &&
;   ($struct_get($struct_loc(self, 3)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@1178@01 $Snap)
(assert (= $t@1178@01 ($Snap.combine ($Snap.first $t@1178@01) ($Snap.second $t@1178@01))))
(assert (= ($Snap.first $t@1178@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 3)): Int)
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@1144@01 3))))
(assert (= ($Snap.second $t@1178@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 3)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 3)): Int)
; [eval] $struct_loc(self, 3)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@1144@01 3))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 4)): Int) &&
;   ($struct_get($struct_loc(self, 4)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@1179@01 $Snap)
(assert (= $t@1179@01 ($Snap.combine ($Snap.first $t@1179@01) ($Snap.second $t@1179@01))))
(assert (= ($Snap.first $t@1179@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 4)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@1144@01 4))))
(assert (= ($Snap.second $t@1179@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 4)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 4)): Int)
; [eval] $struct_loc(self, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@1144@01 4))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1180@01 $Snap)
(assert (= $t@1180@01 ($Snap.combine ($Snap.first $t@1180@01) ($Snap.second $t@1180@01))))
(assert (= ($Snap.first $t@1180@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@1144@01 5))))
(assert (= ($Snap.second $t@1180@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@1144@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@1181@01 $Snap)
(assert (= $t@1181@01 ($Snap.combine ($Snap.first $t@1181@01) ($Snap.second $t@1181@01))))
(assert (= ($Snap.first $t@1181@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@1144@01 6))))
(assert (= ($Snap.second $t@1181@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@1144@01 6))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@1182@01 $Snap)
(assert (= $t@1182@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q3@1183@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) && ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(push) ; 4
; [then-branch: 557 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1144@01, 8)), $q3@1183@01)) | live]
; [else-branch: 557 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1144@01, 8)), $q3@1183@01) | live]
(push) ; 5
; [then-branch: 557 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1144@01, 8)), $q3@1183@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 8)) $q3@1183@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 557 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1144@01, 8)), $q3@1183@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 8)) $q3@1183@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 8)) $q3@1183@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 8)) $q3@1183@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@1183@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 8)) $q3@1183@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 8)) $q3@1183@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 8)) $q3@1183@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1996@11@1996@345-aux|)))
(assert (forall (($q3@1183@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 8)) $q3@1183@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 8)) $q3@1183@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 8)) $q3@1183@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1996@11@1996@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $t@1184@01 $Snap)
(assert (= $t@1184@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int))
(declare-const $q3@1185@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int) <= ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $q3): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_sum(($struct_get($struct_loc(self, 8)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@1185@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 8)) $q3@1185@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 8))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 8)) $q3@1185@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1997@11@1997@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@1186@01 $Snap)
(assert (= $t@1186@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@1187@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) && ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(push) ; 4
; [then-branch: 558 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1144@01, 9)), $q4@1187@01)) | live]
; [else-branch: 558 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1144@01, 9)), $q4@1187@01) | live]
(push) ; 5
; [then-branch: 558 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1144@01, 9)), $q4@1187@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 9)) $q4@1187@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 558 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1144@01, 9)), $q4@1187@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 9)) $q4@1187@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 9)) $q4@1187@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 9)) $q4@1187@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@1187@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 9)) $q4@1187@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 9)) $q4@1187@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 9)) $q4@1187@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1998@11@1998@345-aux|)))
(assert (forall (($q4@1187@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 9)) $q4@1187@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 9)) $q4@1187@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 9)) $q4@1187@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1998@11@1998@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q4: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) }
;     ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $t@1188@01 $Snap)
(assert (= $t@1188@01 $Snap.unit))
; [eval] (forall $q4: Int :: { ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) } ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int))
(declare-const $q4@1189@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int) <= ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 9)): $Map[Int, Int]), $q4): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
; [eval] ($map_sum(($struct_get($struct_loc(self, 9)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 9)): $Map[Int, Int])
; [eval] $struct_loc(self, 9)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@1189@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 9)) $q4@1189@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 9))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1144@01 9)) $q4@1189@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesvoting.vy.vpr@1999@11@1999@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@1190@01 $Snap)
(assert (= $t@1190@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1144@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@1191@01 $Snap)
(assert (= $t@1191@01 ($Snap.combine ($Snap.first $t@1191@01) ($Snap.second $t@1191@01))))
(assert (= ($Snap.first $t@1191@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@1191@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@1192@01 $Snap)
(assert (= $t@1192@01 ($Snap.combine ($Snap.first $t@1192@01) ($Snap.second $t@1192@01))))
(assert (= ($Snap.first $t@1192@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@1141@01 0))))
(assert (= ($Snap.second $t@1192@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@1141@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1193@01 $Snap)
(assert (= $t@1193@01 ($Snap.combine ($Snap.first $t@1193@01) ($Snap.second $t@1193@01))))
(assert (= ($Snap.first $t@1193@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@1141@01 1))))
(assert (= ($Snap.second $t@1193@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@1141@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1194@01 $Snap)
(assert (= $t@1194@01 ($Snap.combine ($Snap.first $t@1194@01) ($Snap.second $t@1194@01))))
(assert (= ($Snap.first $t@1194@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@1141@01 2))))
(assert (= ($Snap.second $t@1194@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@1141@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@1195@01 $Snap)
(assert (= $t@1195@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@1141@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1196@01 $Snap)
(assert (= $t@1196@01 ($Snap.combine ($Snap.first $t@1196@01) ($Snap.second $t@1196@01))))
(assert (= ($Snap.first $t@1196@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@1141@01 4))))
(assert (= ($Snap.second $t@1196@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@1141@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@1197@01 $Snap)
(assert (= $t@1197@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@1141@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@1198@01 $Snap)
(assert (= $t@1198@01 ($Snap.combine ($Snap.first $t@1198@01) ($Snap.second $t@1198@01))))
(assert (= ($Snap.first $t@1198@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@1140@01 0))))
(assert (= ($Snap.second $t@1198@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@1140@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1199@01 $Snap)
(assert (= $t@1199@01 ($Snap.combine ($Snap.first $t@1199@01) ($Snap.second $t@1199@01))))
(assert (= ($Snap.first $t@1199@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@1140@01 1))))
(assert (= ($Snap.second $t@1199@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@1140@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1200@01 $Snap)
(assert (= $t@1200@01 ($Snap.combine ($Snap.first $t@1200@01) ($Snap.second $t@1200@01))))
(assert (= ($Snap.first $t@1200@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@1140@01 2))))
(assert (= ($Snap.second $t@1200@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@1140@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@1201@01 $Snap)
(assert (= $t@1201@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@1140@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@1202@01 $Snap)
(assert (= $t@1202@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@1140@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $t@1203@01 $Snap)
(assert (= $t@1203@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int))
(declare-const $a@1204@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
; [eval] ($map_get(($struct_get($struct_loc(self, 8)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 8)): $Map[Int, Int])
; [eval] $struct_loc(self, 8)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@1205@01 $Snap)
(assert (= $t@1205@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@1140@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; l$i0$winning_vote_count := 0
; [exec]
; l$i0$winning_proposal := 0
; [exec]
; l$i0$winning_proposal$1 := $wrap(l$i0$winning_proposal)
; [eval] $wrap(l$i0$winning_proposal)
(declare-const l$i0$winning_proposal$1@1206@01 $Int)
(assert (= l$i0$winning_proposal$1@1206@01 ($wrap<$Int> 0)))
; [exec]
; l$i0$winning_vote_count$1 := $wrap(l$i0$winning_vote_count)
; [eval] $wrap(l$i0$winning_vote_count)
(declare-const l$i0$winning_vote_count$1@1207@01 $Int)
(assert (= l$i0$winning_vote_count$1@1207@01 ($wrap<$Int> 0)))
; [exec]
; l$i0$i := $wrap($range(0, 2)[0])
; [eval] $wrap($range(0, 2)[0])
; [eval] $range(0, 2)[0]
; [eval] $range(0, 2)
(set-option :timeout 0)
(push) ; 3
(assert (not (< 0 (Seq_length ($range<Seq<Int>> 0 2)))))
(check-sat)
; unsat
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(declare-const l$i0$i@1208@01 $Int)
(assert (= l$i0$i@1208@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 2) 0))))
; [exec]
; l$i0$winning_vote_count$1 := $wrap(l$i0$winning_vote_count)
; [eval] $wrap(l$i0$winning_vote_count)
(declare-const l$i0$winning_vote_count$1@1209@01 $Int)
(assert (= l$i0$winning_vote_count$1@1209@01 ($wrap<$Int> 0)))
; [exec]
; l$i0$winning_proposal$1 := $wrap(l$i0$winning_proposal)
; [eval] $wrap(l$i0$winning_proposal)
(declare-const l$i0$winning_proposal$1@1210@01 $Int)
(assert (= l$i0$winning_proposal$1@1210@01 ($wrap<$Int> 0)))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > l$i0$winning_vote_count
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1208@01)) 1))
    0))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1208@01)) 1))
  0)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 559 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1208@01)), 1)) > 0 | live]
; [else-branch: 559 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1208@01)), 1)) > 0) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 559 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1208@01)), 1)) > 0]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1208@01)) 1))
  0))
; [exec]
; l$i0$winning_vote_count$1 := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
(declare-const l$i0$winning_vote_count$1@1211@01 $Int)
(assert (=
  l$i0$winning_vote_count$1@1211@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1208@01)) 1)))))
; [exec]
; l$i0$winning_proposal$1 := l$i0$i
; [exec]
; label continue_0
; [exec]
; l$i0$i := $wrap($range(0, 2)[1])
; [eval] $wrap($range(0, 2)[1])
; [eval] $range(0, 2)[1]
; [eval] $range(0, 2)
(push) ; 4
(assert (not (< 1 (Seq_length ($range<Seq<Int>> 0 2)))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(declare-const l$i0$i@1212@01 $Int)
(assert (= l$i0$i@1212@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 2) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > $unwrap(l$i0$winning_vote_count$1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
; [eval] $unwrap(l$i0$winning_vote_count$1)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1212@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1211@01)))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1212@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1211@01))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 560 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1212@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1211@01) | live]
; [else-branch: 560 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1212@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1211@01)) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 560 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1212@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1211@01)]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1212@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1211@01)))
; [exec]
; l$i0$winning_vote_count$1 := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
(declare-const l$i0$winning_vote_count$1@1213@01 $Int)
(assert (=
  l$i0$winning_vote_count$1@1213@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1212@01)) 1)))))
; [exec]
; l$i0$winning_proposal$1 := l$i0$i
; [exec]
; label continue_1
; [exec]
; label break_0
; [exec]
; i0$$res := $unwrap(l$i0$winning_proposal$1)
; [eval] $unwrap(l$i0$winning_proposal$1)
(declare-const i0$$res@1214@01 Int)
(assert (= i0$$res@1214@01 ($unwrap<Int> l$i0$i@1212@01)))
; [exec]
; label i0$return
; [exec]
; $res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   i0$$res): $Struct), 0)): Seq[Int])
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), i0$$res): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), i0$$res): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), i0$$res): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(declare-const $res@1215@01 Seq<Int>)
(assert (=
  $res@1215@01
  ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) i0$$res@1214@01) 0))))
; [exec]
; label return
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1159@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1159@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 561 | $out_of_gas@1159@01 | live]
; [else-branch: 561 | !($out_of_gas@1159@01) | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 561 | $out_of_gas@1159@01]
(assert $out_of_gas@1159@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 562 | True | live]
; [else-branch: 562 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 562 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1216@01 $Snap)
(assert (= $t@1216@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1161@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1217@01 $Struct)
(assert (=
  self@1217@01
  ($struct_set<$Struct> self@1144@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1144@01 5))
    l$havoc$1@1161@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
; [then-branch: 563 | False | dead]
; [else-branch: 563 | True | live]
(set-option :timeout 0)
(push) ; 6
; [else-branch: 563 | True]
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 561 | !($out_of_gas@1159@01)]
(assert (not $out_of_gas@1159@01))
(pop) ; 5
; [eval] !$out_of_gas
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1159@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1159@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 564 | !($out_of_gas@1159@01) | live]
; [else-branch: 564 | $out_of_gas@1159@01 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 564 | !($out_of_gas@1159@01)]
(assert (not $out_of_gas@1159@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 565 | False | dead]
; [else-branch: 565 | True | live]
(push) ; 6
; [else-branch: 565 | True]
(pop) ; 6
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 566 | True | live]
; [else-branch: 566 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 566 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1218@01 $Snap)
(assert (= $t@1218@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1161@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1219@01 $Struct)
(assert (=
  self@1219@01
  ($struct_set<$Struct> self@1144@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1144@01 5))
    l$havoc$1@1161@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
(pop) ; 5
(set-option :timeout 0)
(push) ; 5
; [else-branch: 564 | $out_of_gas@1159@01]
(assert $out_of_gas@1159@01)
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 560 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1212@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1211@01))]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1212@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1211@01))))
(pop) ; 4
; [eval] !(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > $unwrap(l$i0$winning_vote_count$1))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > $unwrap(l$i0$winning_vote_count$1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
; [eval] $unwrap(l$i0$winning_vote_count$1)
(push) ; 4
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1212@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1211@01))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1212@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1211@01)))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 567 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1212@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1211@01)) | live]
; [else-branch: 567 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1212@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1211@01) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 567 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1212@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1211@01))]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1212@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1211@01))))
; [exec]
; label continue_1
; [exec]
; label break_0
; [exec]
; i0$$res := $unwrap(l$i0$winning_proposal$1)
; [eval] $unwrap(l$i0$winning_proposal$1)
(declare-const i0$$res@1220@01 Int)
(assert (= i0$$res@1220@01 ($unwrap<Int> l$i0$i@1208@01)))
; [exec]
; label i0$return
; [exec]
; $res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   i0$$res): $Struct), 0)): Seq[Int])
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), i0$$res): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), i0$$res): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), i0$$res): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(declare-const $res@1221@01 Seq<Int>)
(assert (=
  $res@1221@01
  ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) i0$$res@1220@01) 0))))
; [exec]
; label return
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1159@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1159@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 568 | $out_of_gas@1159@01 | live]
; [else-branch: 568 | !($out_of_gas@1159@01) | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 568 | $out_of_gas@1159@01]
(assert $out_of_gas@1159@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 569 | True | live]
; [else-branch: 569 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 569 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1222@01 $Snap)
(assert (= $t@1222@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1161@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1223@01 $Struct)
(assert (=
  self@1223@01
  ($struct_set<$Struct> self@1144@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1144@01 5))
    l$havoc$1@1161@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
; [then-branch: 570 | False | dead]
; [else-branch: 570 | True | live]
(set-option :timeout 0)
(push) ; 6
; [else-branch: 570 | True]
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 568 | !($out_of_gas@1159@01)]
(assert (not $out_of_gas@1159@01))
(pop) ; 5
; [eval] !$out_of_gas
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1159@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1159@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 571 | !($out_of_gas@1159@01) | live]
; [else-branch: 571 | $out_of_gas@1159@01 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 571 | !($out_of_gas@1159@01)]
(assert (not $out_of_gas@1159@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 572 | False | dead]
; [else-branch: 572 | True | live]
(push) ; 6
; [else-branch: 572 | True]
(pop) ; 6
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 573 | True | live]
; [else-branch: 573 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 573 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1224@01 $Snap)
(assert (= $t@1224@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1161@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1225@01 $Struct)
(assert (=
  self@1225@01
  ($struct_set<$Struct> self@1144@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1144@01 5))
    l$havoc$1@1161@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
(pop) ; 5
(set-option :timeout 0)
(push) ; 5
; [else-branch: 571 | $out_of_gas@1159@01]
(assert $out_of_gas@1159@01)
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 567 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1212@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1211@01)]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1212@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1211@01)))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 559 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1208@01)), 1)) > 0)]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1208@01)) 1))
    0)))
(pop) ; 3
; [eval] !(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > l$i0$winning_vote_count)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > l$i0$winning_vote_count
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
(push) ; 3
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1208@01)) 1))
  0)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1208@01)) 1))
    0))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 574 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1208@01)), 1)) > 0) | live]
; [else-branch: 574 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1208@01)), 1)) > 0 | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 574 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1208@01)), 1)) > 0)]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1208@01)) 1))
    0)))
; [exec]
; label continue_0
; [exec]
; l$i0$i := $wrap($range(0, 2)[1])
; [eval] $wrap($range(0, 2)[1])
; [eval] $range(0, 2)[1]
; [eval] $range(0, 2)
(push) ; 4
(assert (not (< 1 (Seq_length ($range<Seq<Int>> 0 2)))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(declare-const l$i0$i@1226@01 $Int)
(assert (= l$i0$i@1226@01 ($wrap<$Int> (Seq_index ($range<Seq<Int>> 0 2) 1))))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > $unwrap(l$i0$winning_vote_count$1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
; [eval] $unwrap(l$i0$winning_vote_count$1)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1226@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1209@01)))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1226@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1209@01))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 575 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1226@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1209@01) | live]
; [else-branch: 575 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1226@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1209@01)) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 575 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1226@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1209@01)]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1226@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1209@01)))
; [exec]
; l$i0$winning_vote_count$1 := $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self,
;   1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int))
; [eval] $wrap(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
(declare-const l$i0$winning_vote_count$1@1227@01 $Int)
(assert (=
  l$i0$winning_vote_count$1@1227@01
  ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1226@01)) 1)))))
; [exec]
; l$i0$winning_proposal$1 := l$i0$i
; [exec]
; label continue_1
; [exec]
; label break_0
; [exec]
; i0$$res := $unwrap(l$i0$winning_proposal$1)
; [eval] $unwrap(l$i0$winning_proposal$1)
(declare-const i0$$res@1228@01 Int)
(assert (= i0$$res@1228@01 ($unwrap<Int> l$i0$i@1226@01)))
; [exec]
; label i0$return
; [exec]
; $res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   i0$$res): $Struct), 0)): Seq[Int])
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), i0$$res): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), i0$$res): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), i0$$res): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(declare-const $res@1229@01 Seq<Int>)
(assert (=
  $res@1229@01
  ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) i0$$res@1228@01) 0))))
; [exec]
; label return
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1159@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1159@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 576 | $out_of_gas@1159@01 | live]
; [else-branch: 576 | !($out_of_gas@1159@01) | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 576 | $out_of_gas@1159@01]
(assert $out_of_gas@1159@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 577 | True | live]
; [else-branch: 577 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 577 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1230@01 $Snap)
(assert (= $t@1230@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1161@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1231@01 $Struct)
(assert (=
  self@1231@01
  ($struct_set<$Struct> self@1144@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1144@01 5))
    l$havoc$1@1161@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
; [then-branch: 578 | False | dead]
; [else-branch: 578 | True | live]
(set-option :timeout 0)
(push) ; 6
; [else-branch: 578 | True]
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 576 | !($out_of_gas@1159@01)]
(assert (not $out_of_gas@1159@01))
(pop) ; 5
; [eval] !$out_of_gas
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1159@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1159@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 579 | !($out_of_gas@1159@01) | live]
; [else-branch: 579 | $out_of_gas@1159@01 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 579 | !($out_of_gas@1159@01)]
(assert (not $out_of_gas@1159@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 580 | False | dead]
; [else-branch: 580 | True | live]
(push) ; 6
; [else-branch: 580 | True]
(pop) ; 6
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 581 | True | live]
; [else-branch: 581 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 581 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1232@01 $Snap)
(assert (= $t@1232@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1161@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1233@01 $Struct)
(assert (=
  self@1233@01
  ($struct_set<$Struct> self@1144@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1144@01 5))
    l$havoc$1@1161@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
(pop) ; 5
(set-option :timeout 0)
(push) ; 5
; [else-branch: 579 | $out_of_gas@1159@01]
(assert $out_of_gas@1159@01)
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 575 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1226@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1209@01))]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1226@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1209@01))))
(pop) ; 4
; [eval] !(($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > $unwrap(l$i0$winning_vote_count$1))
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int) > $unwrap(l$i0$winning_vote_count$1)
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)): Int)
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct), 1)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), $unwrap(l$i0$i)): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
; [eval] $unwrap(l$i0$i)
; [eval] $unwrap(l$i0$winning_vote_count$1)
(push) ; 4
(set-option :timeout 10)
(assert (not (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1226@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1209@01))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1226@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1209@01)))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 582 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1226@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1209@01)) | live]
; [else-branch: 582 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1226@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1209@01) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 582 | !($struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1226@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1209@01))]
(assert (not
  (>
    ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1226@01)) 1))
    ($unwrap<Int> l$i0$winning_vote_count$1@1209@01))))
; [exec]
; label continue_1
; [exec]
; label break_0
; [exec]
; i0$$res := $unwrap(l$i0$winning_proposal$1)
; [eval] $unwrap(l$i0$winning_proposal$1)
(declare-const i0$$res@1234@01 Int)
(assert (= i0$$res@1234@01 ($unwrap<Int> l$i0$winning_proposal$1@1210@01)))
; [exec]
; label i0$return
; [exec]
; $res := ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]),
;   i0$$res): $Struct), 0)): Seq[Int])
; [eval] ($struct_get($struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), i0$$res): $Struct), 0)): Seq[Int])
; [eval] $struct_loc(($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), i0$$res): $Struct), 0)
; [eval] ($map_get(($struct_get($struct_loc(self, 1)): $Map[Int, $Struct]), i0$$res): $Struct)
; [eval] ($struct_get($struct_loc(self, 1)): $Map[Int, $Struct])
; [eval] $struct_loc(self, 1)
(declare-const $res@1235@01 Seq<Int>)
(assert (=
  $res@1235@01
  ($struct_get<Seq<Int>> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) i0$$res@1234@01) 0))))
; [exec]
; label return
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1159@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1159@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 583 | $out_of_gas@1159@01 | live]
; [else-branch: 583 | !($out_of_gas@1159@01) | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 583 | $out_of_gas@1159@01]
(assert $out_of_gas@1159@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [eval] !$succ
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 584 | True | live]
; [else-branch: 584 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 584 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1236@01 $Snap)
(assert (= $t@1236@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1161@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1237@01 $Struct)
(assert (=
  self@1237@01
  ($struct_set<$Struct> self@1144@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1144@01 5))
    l$havoc$1@1161@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
; [then-branch: 585 | False | dead]
; [else-branch: 585 | True | live]
(set-option :timeout 0)
(push) ; 6
; [else-branch: 585 | True]
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 583 | !($out_of_gas@1159@01)]
(assert (not $out_of_gas@1159@01))
(pop) ; 5
; [eval] !$out_of_gas
(push) ; 5
(set-option :timeout 10)
(assert (not $out_of_gas@1159@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not $out_of_gas@1159@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 586 | !($out_of_gas@1159@01) | live]
; [else-branch: 586 | $out_of_gas@1159@01 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 586 | !($out_of_gas@1159@01)]
(assert (not $out_of_gas@1159@01))
; [exec]
; label end
; [eval] !$succ
; [then-branch: 587 | False | dead]
; [else-branch: 587 | True | live]
(push) ; 6
; [else-branch: 587 | True]
(pop) ; 6
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 588 | True | live]
; [else-branch: 588 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 588 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@1238@01 $Snap)
(assert (= $t@1238@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@1161@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 5, ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 5)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const self@1239@01 $Struct)
(assert (=
  self@1239@01
  ($struct_set<$Struct> self@1144@01 5 (+
    ($struct_get<Int> ($struct_loc<Int> self@1144@01 5))
    l$havoc$1@1161@01))))
; [exec]
; $contracts := l$havoc$2
(pop) ; 6
(pop) ; 5
(set-option :timeout 0)
(push) ; 5
; [else-branch: 586 | $out_of_gas@1159@01]
(assert $out_of_gas@1159@01)
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 582 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1226@01)), 1)) > $unwrap[Int](l$i0$winning_vote_count$1@1209@01)]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1226@01)) 1))
  ($unwrap<Int> l$i0$winning_vote_count$1@1209@01)))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 574 | $struct_get[Int]($struct_loc[Int]($map_get[$Struct]($struct_get[$Map[Int, $Struct]]($struct_loc[Int](self@1144@01, 1)), $unwrap[Int](l$i0$i@1208@01)), 1)) > 0]
(assert (>
  ($struct_get<Int> ($struct_loc<Int> ($map_get<$Struct> ($struct_get<$Map<Int~_$Struct>> ($struct_loc<Int> self@1144@01 1)) ($unwrap<Int> l$i0$i@1208@01)) 1))
  0))
(pop) ; 3
(pop) ; 2
(pop) ; 1
