(get-info :version)
; (:version "4.12.1")
; Started: 2025-01-26 22:57:57
; Silicon.version: 1.1-SNAPSHOT (457c6eca@(detached))
; Input file: <unknown>
; Verifier id: 00
; ------------------------------------------------------------
; Begin preamble
; ////////// Static preamble
; 
; ; /z3config.smt2
(set-option :print-success true) ; Boogie: false
(set-option :global-decls true) ; Necessary for push pop mode
(set-option :auto_config false)
(set-option :smt.case_split 3)
(set-option :smt.delay_units true)
(set-option :type_check true)
(set-option :smt.mbqi false)
(set-option :pp.bv_literals false)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.arith.solver 2)
(set-option :model.v2 true)
(set-option :smt.qi.max_multi_patterns 1000)
; 
; ; /preamble.smt2
(declare-datatypes (($Snap 0)) ((
    ($Snap.unit)
    ($Snap.combine ($Snap.first $Snap) ($Snap.second $Snap)))))
(declare-sort $Ref 0)
(declare-const $Ref.null $Ref)
(declare-sort $FPM 0)
(declare-sort $PPM 0)
(define-sort $Perm () Real)
(define-const $Perm.Write $Perm 1.0)
(define-const $Perm.No $Perm 0.0)
(define-fun $Perm.isValidVar ((p $Perm)) Bool
	(<= $Perm.No p))
(define-fun $Perm.isReadVar ((p $Perm)) Bool
    (and ($Perm.isValidVar p)
         (not (= p $Perm.No))))
(define-fun $Perm.min ((p1 $Perm) (p2 $Perm)) Real
    (ite (<= p1 p2) p1 p2))
(define-fun $Math.min ((a Int) (b Int)) Int
    (ite (<= a b) a b))
(define-fun $Math.clip ((a Int)) Int
    (ite (< a 0) 0 a))
; ////////// Sorts
(declare-sort Seq<Int> 0)
(declare-sort $StructOps<$Map<Int~_$Map<Int~_Int>>> 0)
(declare-sort s$struct$self 0)
(declare-sort $Struct 0)
(declare-sort s$resource$$creator 0)
(declare-sort $Contract 0)
(declare-sort $Blockchain 0)
(declare-sort $Convert 0)
(declare-sort $StructOps<Seq<Int>> 0)
(declare-sort $Range 0)
(declare-sort $Int 0)
(declare-sort $StructOps<$Map<Int~_Int>> 0)
(declare-sort $Math 0)
(declare-sort $StructOps<Int> 0)
(declare-sort $Map<Int~_$Struct> 0)
(declare-sort $StructOps<Bool> 0)
(declare-sort $MapInt<Int> 0)
(declare-sort $Map<Int~_Int> 0)
(declare-sort $Map<Int~_$Map<Int~_Int>> 0)
(declare-sort $StructOps<$Struct> 0)
; ////////// Sort wrappers
; Declaring additional sort wrappers
(declare-fun $SortWrappers.IntTo$Snap (Int) $Snap)
(declare-fun $SortWrappers.$SnapToInt ($Snap) Int)
(assert (forall ((x Int)) (!
    (= x ($SortWrappers.$SnapToInt($SortWrappers.IntTo$Snap x)))
    :pattern (($SortWrappers.IntTo$Snap x))
    :qid |$Snap.$SnapToIntTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.IntTo$Snap($SortWrappers.$SnapToInt x)))
    :pattern (($SortWrappers.$SnapToInt x))
    :qid |$Snap.IntTo$SnapToInt|
    )))
(declare-fun $SortWrappers.BoolTo$Snap (Bool) $Snap)
(declare-fun $SortWrappers.$SnapToBool ($Snap) Bool)
(assert (forall ((x Bool)) (!
    (= x ($SortWrappers.$SnapToBool($SortWrappers.BoolTo$Snap x)))
    :pattern (($SortWrappers.BoolTo$Snap x))
    :qid |$Snap.$SnapToBoolTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.BoolTo$Snap($SortWrappers.$SnapToBool x)))
    :pattern (($SortWrappers.$SnapToBool x))
    :qid |$Snap.BoolTo$SnapToBool|
    )))
(declare-fun $SortWrappers.$RefTo$Snap ($Ref) $Snap)
(declare-fun $SortWrappers.$SnapTo$Ref ($Snap) $Ref)
(assert (forall ((x $Ref)) (!
    (= x ($SortWrappers.$SnapTo$Ref($SortWrappers.$RefTo$Snap x)))
    :pattern (($SortWrappers.$RefTo$Snap x))
    :qid |$Snap.$SnapTo$RefTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$RefTo$Snap($SortWrappers.$SnapTo$Ref x)))
    :pattern (($SortWrappers.$SnapTo$Ref x))
    :qid |$Snap.$RefTo$SnapTo$Ref|
    )))
(declare-fun $SortWrappers.$PermTo$Snap ($Perm) $Snap)
(declare-fun $SortWrappers.$SnapTo$Perm ($Snap) $Perm)
(assert (forall ((x $Perm)) (!
    (= x ($SortWrappers.$SnapTo$Perm($SortWrappers.$PermTo$Snap x)))
    :pattern (($SortWrappers.$PermTo$Snap x))
    :qid |$Snap.$SnapTo$PermTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$PermTo$Snap($SortWrappers.$SnapTo$Perm x)))
    :pattern (($SortWrappers.$SnapTo$Perm x))
    :qid |$Snap.$PermTo$SnapTo$Perm|
    )))
; Declaring additional sort wrappers
(declare-fun $SortWrappers.Seq<Int>To$Snap (Seq<Int>) $Snap)
(declare-fun $SortWrappers.$SnapToSeq<Int> ($Snap) Seq<Int>)
(assert (forall ((x Seq<Int>)) (!
    (= x ($SortWrappers.$SnapToSeq<Int>($SortWrappers.Seq<Int>To$Snap x)))
    :pattern (($SortWrappers.Seq<Int>To$Snap x))
    :qid |$Snap.$SnapToSeq<Int>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.Seq<Int>To$Snap($SortWrappers.$SnapToSeq<Int> x)))
    :pattern (($SortWrappers.$SnapToSeq<Int> x))
    :qid |$Snap.Seq<Int>To$SnapToSeq<Int>|
    )))
; Declaring additional sort wrappers
(declare-fun $SortWrappers.$StructOps<$Map<Int~_$Map<Int~_Int>>>To$Snap ($StructOps<$Map<Int~_$Map<Int~_Int>>>) $Snap)
(declare-fun $SortWrappers.$SnapTo$StructOps<$Map<Int~_$Map<Int~_Int>>> ($Snap) $StructOps<$Map<Int~_$Map<Int~_Int>>>)
(assert (forall ((x $StructOps<$Map<Int~_$Map<Int~_Int>>>)) (!
    (= x ($SortWrappers.$SnapTo$StructOps<$Map<Int~_$Map<Int~_Int>>>($SortWrappers.$StructOps<$Map<Int~_$Map<Int~_Int>>>To$Snap x)))
    :pattern (($SortWrappers.$StructOps<$Map<Int~_$Map<Int~_Int>>>To$Snap x))
    :qid |$Snap.$SnapTo$StructOps<$Map<Int~_$Map<Int~_Int>>>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$StructOps<$Map<Int~_$Map<Int~_Int>>>To$Snap($SortWrappers.$SnapTo$StructOps<$Map<Int~_$Map<Int~_Int>>> x)))
    :pattern (($SortWrappers.$SnapTo$StructOps<$Map<Int~_$Map<Int~_Int>>> x))
    :qid |$Snap.$StructOps<$Map<Int~_$Map<Int~_Int>>>To$SnapTo$StructOps<$Map<Int~_$Map<Int~_Int>>>|
    )))
(declare-fun $SortWrappers.s$struct$selfTo$Snap (s$struct$self) $Snap)
(declare-fun $SortWrappers.$SnapTos$struct$self ($Snap) s$struct$self)
(assert (forall ((x s$struct$self)) (!
    (= x ($SortWrappers.$SnapTos$struct$self($SortWrappers.s$struct$selfTo$Snap x)))
    :pattern (($SortWrappers.s$struct$selfTo$Snap x))
    :qid |$Snap.$SnapTos$struct$selfTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.s$struct$selfTo$Snap($SortWrappers.$SnapTos$struct$self x)))
    :pattern (($SortWrappers.$SnapTos$struct$self x))
    :qid |$Snap.s$struct$selfTo$SnapTos$struct$self|
    )))
(declare-fun $SortWrappers.$StructTo$Snap ($Struct) $Snap)
(declare-fun $SortWrappers.$SnapTo$Struct ($Snap) $Struct)
(assert (forall ((x $Struct)) (!
    (= x ($SortWrappers.$SnapTo$Struct($SortWrappers.$StructTo$Snap x)))
    :pattern (($SortWrappers.$StructTo$Snap x))
    :qid |$Snap.$SnapTo$StructTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$StructTo$Snap($SortWrappers.$SnapTo$Struct x)))
    :pattern (($SortWrappers.$SnapTo$Struct x))
    :qid |$Snap.$StructTo$SnapTo$Struct|
    )))
(declare-fun $SortWrappers.s$resource$$creatorTo$Snap (s$resource$$creator) $Snap)
(declare-fun $SortWrappers.$SnapTos$resource$$creator ($Snap) s$resource$$creator)
(assert (forall ((x s$resource$$creator)) (!
    (= x ($SortWrappers.$SnapTos$resource$$creator($SortWrappers.s$resource$$creatorTo$Snap x)))
    :pattern (($SortWrappers.s$resource$$creatorTo$Snap x))
    :qid |$Snap.$SnapTos$resource$$creatorTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.s$resource$$creatorTo$Snap($SortWrappers.$SnapTos$resource$$creator x)))
    :pattern (($SortWrappers.$SnapTos$resource$$creator x))
    :qid |$Snap.s$resource$$creatorTo$SnapTos$resource$$creator|
    )))
(declare-fun $SortWrappers.$ContractTo$Snap ($Contract) $Snap)
(declare-fun $SortWrappers.$SnapTo$Contract ($Snap) $Contract)
(assert (forall ((x $Contract)) (!
    (= x ($SortWrappers.$SnapTo$Contract($SortWrappers.$ContractTo$Snap x)))
    :pattern (($SortWrappers.$ContractTo$Snap x))
    :qid |$Snap.$SnapTo$ContractTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$ContractTo$Snap($SortWrappers.$SnapTo$Contract x)))
    :pattern (($SortWrappers.$SnapTo$Contract x))
    :qid |$Snap.$ContractTo$SnapTo$Contract|
    )))
(declare-fun $SortWrappers.$BlockchainTo$Snap ($Blockchain) $Snap)
(declare-fun $SortWrappers.$SnapTo$Blockchain ($Snap) $Blockchain)
(assert (forall ((x $Blockchain)) (!
    (= x ($SortWrappers.$SnapTo$Blockchain($SortWrappers.$BlockchainTo$Snap x)))
    :pattern (($SortWrappers.$BlockchainTo$Snap x))
    :qid |$Snap.$SnapTo$BlockchainTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$BlockchainTo$Snap($SortWrappers.$SnapTo$Blockchain x)))
    :pattern (($SortWrappers.$SnapTo$Blockchain x))
    :qid |$Snap.$BlockchainTo$SnapTo$Blockchain|
    )))
(declare-fun $SortWrappers.$ConvertTo$Snap ($Convert) $Snap)
(declare-fun $SortWrappers.$SnapTo$Convert ($Snap) $Convert)
(assert (forall ((x $Convert)) (!
    (= x ($SortWrappers.$SnapTo$Convert($SortWrappers.$ConvertTo$Snap x)))
    :pattern (($SortWrappers.$ConvertTo$Snap x))
    :qid |$Snap.$SnapTo$ConvertTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$ConvertTo$Snap($SortWrappers.$SnapTo$Convert x)))
    :pattern (($SortWrappers.$SnapTo$Convert x))
    :qid |$Snap.$ConvertTo$SnapTo$Convert|
    )))
(declare-fun $SortWrappers.$StructOps<Seq<Int>>To$Snap ($StructOps<Seq<Int>>) $Snap)
(declare-fun $SortWrappers.$SnapTo$StructOps<Seq<Int>> ($Snap) $StructOps<Seq<Int>>)
(assert (forall ((x $StructOps<Seq<Int>>)) (!
    (= x ($SortWrappers.$SnapTo$StructOps<Seq<Int>>($SortWrappers.$StructOps<Seq<Int>>To$Snap x)))
    :pattern (($SortWrappers.$StructOps<Seq<Int>>To$Snap x))
    :qid |$Snap.$SnapTo$StructOps<Seq<Int>>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$StructOps<Seq<Int>>To$Snap($SortWrappers.$SnapTo$StructOps<Seq<Int>> x)))
    :pattern (($SortWrappers.$SnapTo$StructOps<Seq<Int>> x))
    :qid |$Snap.$StructOps<Seq<Int>>To$SnapTo$StructOps<Seq<Int>>|
    )))
(declare-fun $SortWrappers.$RangeTo$Snap ($Range) $Snap)
(declare-fun $SortWrappers.$SnapTo$Range ($Snap) $Range)
(assert (forall ((x $Range)) (!
    (= x ($SortWrappers.$SnapTo$Range($SortWrappers.$RangeTo$Snap x)))
    :pattern (($SortWrappers.$RangeTo$Snap x))
    :qid |$Snap.$SnapTo$RangeTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$RangeTo$Snap($SortWrappers.$SnapTo$Range x)))
    :pattern (($SortWrappers.$SnapTo$Range x))
    :qid |$Snap.$RangeTo$SnapTo$Range|
    )))
(declare-fun $SortWrappers.$IntTo$Snap ($Int) $Snap)
(declare-fun $SortWrappers.$SnapTo$Int ($Snap) $Int)
(assert (forall ((x $Int)) (!
    (= x ($SortWrappers.$SnapTo$Int($SortWrappers.$IntTo$Snap x)))
    :pattern (($SortWrappers.$IntTo$Snap x))
    :qid |$Snap.$SnapTo$IntTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$IntTo$Snap($SortWrappers.$SnapTo$Int x)))
    :pattern (($SortWrappers.$SnapTo$Int x))
    :qid |$Snap.$IntTo$SnapTo$Int|
    )))
(declare-fun $SortWrappers.$StructOps<$Map<Int~_Int>>To$Snap ($StructOps<$Map<Int~_Int>>) $Snap)
(declare-fun $SortWrappers.$SnapTo$StructOps<$Map<Int~_Int>> ($Snap) $StructOps<$Map<Int~_Int>>)
(assert (forall ((x $StructOps<$Map<Int~_Int>>)) (!
    (= x ($SortWrappers.$SnapTo$StructOps<$Map<Int~_Int>>($SortWrappers.$StructOps<$Map<Int~_Int>>To$Snap x)))
    :pattern (($SortWrappers.$StructOps<$Map<Int~_Int>>To$Snap x))
    :qid |$Snap.$SnapTo$StructOps<$Map<Int~_Int>>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$StructOps<$Map<Int~_Int>>To$Snap($SortWrappers.$SnapTo$StructOps<$Map<Int~_Int>> x)))
    :pattern (($SortWrappers.$SnapTo$StructOps<$Map<Int~_Int>> x))
    :qid |$Snap.$StructOps<$Map<Int~_Int>>To$SnapTo$StructOps<$Map<Int~_Int>>|
    )))
(declare-fun $SortWrappers.$MathTo$Snap ($Math) $Snap)
(declare-fun $SortWrappers.$SnapTo$Math ($Snap) $Math)
(assert (forall ((x $Math)) (!
    (= x ($SortWrappers.$SnapTo$Math($SortWrappers.$MathTo$Snap x)))
    :pattern (($SortWrappers.$MathTo$Snap x))
    :qid |$Snap.$SnapTo$MathTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$MathTo$Snap($SortWrappers.$SnapTo$Math x)))
    :pattern (($SortWrappers.$SnapTo$Math x))
    :qid |$Snap.$MathTo$SnapTo$Math|
    )))
(declare-fun $SortWrappers.$StructOps<Int>To$Snap ($StructOps<Int>) $Snap)
(declare-fun $SortWrappers.$SnapTo$StructOps<Int> ($Snap) $StructOps<Int>)
(assert (forall ((x $StructOps<Int>)) (!
    (= x ($SortWrappers.$SnapTo$StructOps<Int>($SortWrappers.$StructOps<Int>To$Snap x)))
    :pattern (($SortWrappers.$StructOps<Int>To$Snap x))
    :qid |$Snap.$SnapTo$StructOps<Int>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$StructOps<Int>To$Snap($SortWrappers.$SnapTo$StructOps<Int> x)))
    :pattern (($SortWrappers.$SnapTo$StructOps<Int> x))
    :qid |$Snap.$StructOps<Int>To$SnapTo$StructOps<Int>|
    )))
(declare-fun $SortWrappers.$Map<Int~_$Struct>To$Snap ($Map<Int~_$Struct>) $Snap)
(declare-fun $SortWrappers.$SnapTo$Map<Int~_$Struct> ($Snap) $Map<Int~_$Struct>)
(assert (forall ((x $Map<Int~_$Struct>)) (!
    (= x ($SortWrappers.$SnapTo$Map<Int~_$Struct>($SortWrappers.$Map<Int~_$Struct>To$Snap x)))
    :pattern (($SortWrappers.$Map<Int~_$Struct>To$Snap x))
    :qid |$Snap.$SnapTo$Map<Int~_$Struct>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$Map<Int~_$Struct>To$Snap($SortWrappers.$SnapTo$Map<Int~_$Struct> x)))
    :pattern (($SortWrappers.$SnapTo$Map<Int~_$Struct> x))
    :qid |$Snap.$Map<Int~_$Struct>To$SnapTo$Map<Int~_$Struct>|
    )))
(declare-fun $SortWrappers.$StructOps<Bool>To$Snap ($StructOps<Bool>) $Snap)
(declare-fun $SortWrappers.$SnapTo$StructOps<Bool> ($Snap) $StructOps<Bool>)
(assert (forall ((x $StructOps<Bool>)) (!
    (= x ($SortWrappers.$SnapTo$StructOps<Bool>($SortWrappers.$StructOps<Bool>To$Snap x)))
    :pattern (($SortWrappers.$StructOps<Bool>To$Snap x))
    :qid |$Snap.$SnapTo$StructOps<Bool>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$StructOps<Bool>To$Snap($SortWrappers.$SnapTo$StructOps<Bool> x)))
    :pattern (($SortWrappers.$SnapTo$StructOps<Bool> x))
    :qid |$Snap.$StructOps<Bool>To$SnapTo$StructOps<Bool>|
    )))
(declare-fun $SortWrappers.$MapInt<Int>To$Snap ($MapInt<Int>) $Snap)
(declare-fun $SortWrappers.$SnapTo$MapInt<Int> ($Snap) $MapInt<Int>)
(assert (forall ((x $MapInt<Int>)) (!
    (= x ($SortWrappers.$SnapTo$MapInt<Int>($SortWrappers.$MapInt<Int>To$Snap x)))
    :pattern (($SortWrappers.$MapInt<Int>To$Snap x))
    :qid |$Snap.$SnapTo$MapInt<Int>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$MapInt<Int>To$Snap($SortWrappers.$SnapTo$MapInt<Int> x)))
    :pattern (($SortWrappers.$SnapTo$MapInt<Int> x))
    :qid |$Snap.$MapInt<Int>To$SnapTo$MapInt<Int>|
    )))
(declare-fun $SortWrappers.$Map<Int~_Int>To$Snap ($Map<Int~_Int>) $Snap)
(declare-fun $SortWrappers.$SnapTo$Map<Int~_Int> ($Snap) $Map<Int~_Int>)
(assert (forall ((x $Map<Int~_Int>)) (!
    (= x ($SortWrappers.$SnapTo$Map<Int~_Int>($SortWrappers.$Map<Int~_Int>To$Snap x)))
    :pattern (($SortWrappers.$Map<Int~_Int>To$Snap x))
    :qid |$Snap.$SnapTo$Map<Int~_Int>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$Map<Int~_Int>To$Snap($SortWrappers.$SnapTo$Map<Int~_Int> x)))
    :pattern (($SortWrappers.$SnapTo$Map<Int~_Int> x))
    :qid |$Snap.$Map<Int~_Int>To$SnapTo$Map<Int~_Int>|
    )))
(declare-fun $SortWrappers.$Map<Int~_$Map<Int~_Int>>To$Snap ($Map<Int~_$Map<Int~_Int>>) $Snap)
(declare-fun $SortWrappers.$SnapTo$Map<Int~_$Map<Int~_Int>> ($Snap) $Map<Int~_$Map<Int~_Int>>)
(assert (forall ((x $Map<Int~_$Map<Int~_Int>>)) (!
    (= x ($SortWrappers.$SnapTo$Map<Int~_$Map<Int~_Int>>($SortWrappers.$Map<Int~_$Map<Int~_Int>>To$Snap x)))
    :pattern (($SortWrappers.$Map<Int~_$Map<Int~_Int>>To$Snap x))
    :qid |$Snap.$SnapTo$Map<Int~_$Map<Int~_Int>>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$Map<Int~_$Map<Int~_Int>>To$Snap($SortWrappers.$SnapTo$Map<Int~_$Map<Int~_Int>> x)))
    :pattern (($SortWrappers.$SnapTo$Map<Int~_$Map<Int~_Int>> x))
    :qid |$Snap.$Map<Int~_$Map<Int~_Int>>To$SnapTo$Map<Int~_$Map<Int~_Int>>|
    )))
(declare-fun $SortWrappers.$StructOps<$Struct>To$Snap ($StructOps<$Struct>) $Snap)
(declare-fun $SortWrappers.$SnapTo$StructOps<$Struct> ($Snap) $StructOps<$Struct>)
(assert (forall ((x $StructOps<$Struct>)) (!
    (= x ($SortWrappers.$SnapTo$StructOps<$Struct>($SortWrappers.$StructOps<$Struct>To$Snap x)))
    :pattern (($SortWrappers.$StructOps<$Struct>To$Snap x))
    :qid |$Snap.$SnapTo$StructOps<$Struct>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$StructOps<$Struct>To$Snap($SortWrappers.$SnapTo$StructOps<$Struct> x)))
    :pattern (($SortWrappers.$SnapTo$StructOps<$Struct> x))
    :qid |$Snap.$StructOps<$Struct>To$SnapTo$StructOps<$Struct>|
    )))
; ////////// Symbols
(declare-fun Seq_length (Seq<Int>) Int)
(declare-const Seq_empty Seq<Int>)
(declare-fun Seq_singleton (Int) Seq<Int>)
(declare-fun Seq_append (Seq<Int> Seq<Int>) Seq<Int>)
(declare-fun Seq_index (Seq<Int> Int) Int)
(declare-fun Seq_add (Int Int) Int)
(declare-fun Seq_sub (Int Int) Int)
(declare-fun Seq_update (Seq<Int> Int Int) Seq<Int>)
(declare-fun Seq_take (Seq<Int> Int) Seq<Int>)
(declare-fun Seq_drop (Seq<Int> Int) Seq<Int>)
(declare-fun Seq_contains (Seq<Int> Int) Bool)
(declare-fun Seq_contains_trigger (Seq<Int> Int) Bool)
(declare-fun Seq_skolem (Seq<Int> Int) Int)
(declare-fun Seq_equal (Seq<Int> Seq<Int>) Bool)
(declare-fun Seq_skolem_diff (Seq<Int> Seq<Int>) Int)
(declare-fun Seq_range (Int Int) Seq<Int>)
(declare-fun $map_init<$Map<Int~_$Struct>> ($Struct) $Map<Int~_$Struct>)
(declare-fun $map_eq<Bool> ($Map<Int~_$Struct> $Map<Int~_$Struct>) Bool)
(declare-fun $map_get<$Struct> ($Map<Int~_$Struct> Int) $Struct)
(declare-fun $map_set<$Map<Int~_$Struct>> ($Map<Int~_$Struct> Int $Struct) $Map<Int~_$Struct>)
(declare-fun $bytes32_to_signed_int<Int> (Seq<Int>) Int)
(declare-fun $bytes32_to_unsigned_int<Int> (Seq<Int>) Int)
(declare-fun $signed_int_to_bytes32<Seq<Int>> (Int) Seq<Int>)
(declare-fun $unsigned_int_to_bytes32<Seq<Int>> (Int) Seq<Int>)
(declare-fun $pad32<Seq<Int>> (Seq<Int>) Seq<Int>)
(declare-fun $struct_get<Int> (Int) Int)
(declare-fun $struct_set<$Struct> ($Struct Int Int) $Struct)
(declare-fun $struct_get<Bool> (Int) Bool)
(declare-fun $struct_set<$Struct> ($Struct Int Bool) $Struct)
(declare-fun $map_init<$Map<Int~_$Map<Int~_Int>>> ($Map<Int~_Int>) $Map<Int~_$Map<Int~_Int>>)
(declare-fun $map_eq<Bool> ($Map<Int~_$Map<Int~_Int>> $Map<Int~_$Map<Int~_Int>>) Bool)
(declare-fun $map_get<$Map<Int~_Int>> ($Map<Int~_$Map<Int~_Int>> Int) $Map<Int~_Int>)
(declare-fun $map_set<$Map<Int~_$Map<Int~_Int>>> ($Map<Int~_$Map<Int~_Int>> Int $Map<Int~_Int>) $Map<Int~_$Map<Int~_Int>>)
(declare-fun $blockhash<Seq<Int>> (Int) Seq<Int>)
(declare-fun $method_id<Seq<Int>> (Seq<Int> Int) Seq<Int>)
(declare-fun $keccak256<Seq<Int>> (Seq<Int>) Seq<Int>)
(declare-fun $sha256<Seq<Int>> (Seq<Int>) Seq<Int>)
(declare-fun $ecrecover<Int> (Seq<Int> Int Int Int) Int)
(declare-fun $ecadd<Seq<Int>> (Seq<Int> Seq<Int>) Seq<Int>)
(declare-fun $ecmul<Seq<Int>> (Seq<Int> Int) Seq<Int>)
(declare-fun $wrap<$Int> (Int) $Int)
(declare-fun $unwrap<Int> ($Int) Int)
(declare-fun $w_mul<$Int> ($Int $Int) $Int)
(declare-fun $w_mulI<$Int> ($Int $Int) $Int)
(declare-fun $w_mulL<$Int> ($Int $Int) $Int)
(declare-fun $w_abs<Int> ($Int) Int)
(declare-fun $w_mod<$Int> ($Int $Int) $Int)
(declare-fun $w_modL<$Int> ($Int $Int) $Int)
(declare-fun $w_div<$Int> ($Int $Int) $Int)
(declare-fun $w_div_down<$Int> ($Int $Int) $Int)
(declare-fun $w_div_nat<$Int> ($Int $Int) $Int)
(declare-fun $w_div_natL<$Int> ($Int $Int) $Int)
(declare-fun $struct_loc<Int> ($Struct Int) Int)
(declare-fun $map_init<$Map<Int~_Int>> (Int) $Map<Int~_Int>)
(declare-fun $map_eq<Bool> ($Map<Int~_Int> $Map<Int~_Int>) Bool)
(declare-fun $map_get<Int> ($Map<Int~_Int> Int) Int)
(declare-fun $map_set<$Map<Int~_Int>> ($Map<Int~_Int> Int Int) $Map<Int~_Int>)
(declare-const $self_address<Int> Int)
(declare-fun $implements<Bool> (Int Int) Bool)
(declare-fun $struct_get<$Map<Int~_$Map<Int~_Int>>> (Int) $Map<Int~_$Map<Int~_Int>>)
(declare-fun $struct_set<$Struct> ($Struct Int $Map<Int~_$Map<Int~_Int>>) $Struct)
(declare-fun $struct_get<$Struct> (Int) $Struct)
(declare-fun $struct_set<$Struct> ($Struct Int $Struct) $Struct)
(declare-fun $range<Seq<Int>> (Int Int) Seq<Int>)
(declare-fun $struct_get<$Map<Int~_Int>> (Int) $Map<Int~_Int>)
(declare-fun $struct_set<$Struct> ($Struct Int $Map<Int~_Int>) $Struct)
(declare-fun $struct_get<Seq<Int>> (Int) Seq<Int>)
(declare-fun $struct_set<$Struct> ($Struct Int Seq<Int>) $Struct)
(declare-fun s$resource$$creator$init<$Struct> ($Struct) $Struct)
(declare-fun s$resource$$creator$eq<Bool> ($Struct $Struct) Bool)
(declare-fun $map_sum<Int> ($Map<Int~_Int>) Int)
(declare-fun $sign<Int> (Int) Int)
(declare-fun $div<Int> (Int Int Int) Int)
(declare-fun $mod<Int> (Int Int Int) Int)
(declare-fun $pow<Int> (Int Int) Int)
(declare-fun $sqrt<Int> (Int) Int)
(declare-fun $floor<Int> (Int Int) Int)
(declare-fun $ceil<Int> (Int Int) Int)
(declare-fun $shift<Int> (Int Int) Int)
(declare-fun $bitwise_not<Int> (Int) Int)
(declare-fun $bitwise_and<Int> (Int Int) Int)
(declare-fun $bitwise_or<Int> (Int Int) Int)
(declare-fun $bitwise_xor<Int> (Int Int) Int)
(declare-fun s$struct$self$init<$Struct> (Seq<Int> Seq<Int> Int $Map<Int~_Int> $Map<Int~_$Map<Int~_Int>> Int Int Int Int Bool $Map<Int~_Int> $Map<Int~_Int> Bool) $Struct)
(declare-fun s$struct$self$eq<Bool> ($Struct $Struct) Bool)
; Declaring symbols related to program functions (from program analysis)
(declare-fun $pure$success_get ($Snap $Struct) Bool)
(declare-fun $pure$success_get%limited ($Snap $Struct) Bool)
(declare-fun $pure$success_get%stateless ($Struct) Bool)
(declare-fun $pure$success_get%precondition ($Snap $Struct) Bool)
(declare-fun $pure$return_get ($Snap $Struct) Int)
(declare-fun $pure$return_get%limited ($Snap $Struct) Int)
(declare-fun $pure$return_get%stateless ($Struct) Bool)
(declare-fun $pure$return_get%precondition ($Snap $Struct) Bool)
(declare-fun $range_sum ($Snap Int Int) Int)
(declare-fun $range_sum%limited ($Snap Int Int) Int)
(declare-fun $range_sum%stateless (Int Int) Bool)
(declare-fun $range_sum%precondition ($Snap Int Int) Bool)
; Snapshot variable to be used during function verification
(declare-fun s@$ () $Snap)
; Declaring predicate trigger functions
(declare-fun $failed%trigger ($Snap Int) Bool)
(declare-fun $failed_0%trigger ($Snap Int) Bool)
(declare-fun $allocation%trigger ($Snap $Struct Int) Bool)
(declare-fun $allocation_0%trigger ($Snap $Struct Int) Bool)
(declare-fun $offer%trigger ($Snap $Struct $Struct Int Int Int Int) Bool)
(declare-fun $offer_0%trigger ($Snap $Struct $Struct Int Int Int Int) Bool)
(declare-fun $trust%trigger ($Snap Int Int) Bool)
(declare-fun $trust_0%trigger ($Snap Int Int) Bool)
(declare-fun $performs$create%trigger ($Snap $Struct Int Int Int) Bool)
(declare-fun $performs$create_0%trigger ($Snap $Struct Int Int Int) Bool)
(declare-fun $performs$destroy%trigger ($Snap $Struct Int Int) Bool)
(declare-fun $performs$destroy_0%trigger ($Snap $Struct Int Int) Bool)
(declare-fun $performs$reallocate%trigger ($Snap $Struct Int Int Int) Bool)
(declare-fun $performs$reallocate_0%trigger ($Snap $Struct Int Int Int) Bool)
(declare-fun $performs$offer%trigger ($Snap $Struct $Struct Int Int Int Int Int) Bool)
(declare-fun $performs$offer_0%trigger ($Snap $Struct $Struct Int Int Int Int Int) Bool)
(declare-fun $performs$revoke%trigger ($Snap $Struct $Struct Int Int Int Int) Bool)
(declare-fun $performs$revoke_0%trigger ($Snap $Struct $Struct Int Int Int Int) Bool)
(declare-fun $performs$trust%trigger ($Snap Int Int Bool) Bool)
(declare-fun $performs$trust_0%trigger ($Snap Int Int Bool) Bool)
(declare-fun e$Transfer%trigger ($Snap Int Int Int) Bool)
(declare-fun e$Transfer_0%trigger ($Snap Int Int Int) Bool)
(declare-fun e$Approval%trigger ($Snap Int Int Int) Bool)
(declare-fun e$Approval_0%trigger ($Snap Int Int Int) Bool)
(declare-fun $accessible$__init__%trigger ($Snap Int Int Int Seq<Int> Seq<Int> Int Int) Bool)
(declare-fun $accessible$__init___0%trigger ($Snap Int Int Int Seq<Int> Seq<Int> Int Int) Bool)
(declare-fun $accessible$totalSupply%trigger ($Snap Int Int Int) Bool)
(declare-fun $accessible$totalSupply_0%trigger ($Snap Int Int Int) Bool)
(declare-fun $accessible$allowance%trigger ($Snap Int Int Int Int Int) Bool)
(declare-fun $accessible$allowance_0%trigger ($Snap Int Int Int Int Int) Bool)
(declare-fun $accessible$transfer%trigger ($Snap Int Int Int Int Int) Bool)
(declare-fun $accessible$transfer_0%trigger ($Snap Int Int Int Int Int) Bool)
(declare-fun $accessible$transferFrom%trigger ($Snap Int Int Int Int Int Int) Bool)
(declare-fun $accessible$transferFrom_0%trigger ($Snap Int Int Int Int Int Int) Bool)
(declare-fun $accessible$approve%trigger ($Snap Int Int Int Int Int) Bool)
(declare-fun $accessible$approve_0%trigger ($Snap Int Int Int Int Int) Bool)
(declare-fun $accessible$mint%trigger ($Snap Int Int Int Int Int) Bool)
(declare-fun $accessible$mint_0%trigger ($Snap Int Int Int Int Int) Bool)
(declare-fun $accessible$_burn%trigger ($Snap Int Int Int Int Int) Bool)
(declare-fun $accessible$_burn_0%trigger ($Snap Int Int Int Int Int) Bool)
(declare-fun $accessible$burn%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$burn_0%trigger ($Snap Int Int Int Int) Bool)
(declare-fun $accessible$burnFrom%trigger ($Snap Int Int Int Int Int) Bool)
(declare-fun $accessible$burnFrom_0%trigger ($Snap Int Int Int Int Int) Bool)
; ////////// Uniqueness assumptions from domains
; ////////// Axioms
(assert (forall ((s Seq<Int>)) (!
  (<= 0 (Seq_length s))
  :pattern ((Seq_length s))
  )))
(assert (= (Seq_length (as Seq_empty  Seq<Int>)) 0))
(assert (forall ((s Seq<Int>)) (!
  (=> (= (Seq_length s) 0) (= s (as Seq_empty  Seq<Int>)))
  :pattern ((Seq_length s))
  )))
(assert (forall ((e Int)) (!
  (= (Seq_length (Seq_singleton e)) 1)
  :pattern ((Seq_singleton e))
  )))
(assert (forall ((s0 Seq<Int>) (s1 Seq<Int>)) (!
  (=>
    (and
      (not (= s0 (as Seq_empty  Seq<Int>)))
      (not (= s1 (as Seq_empty  Seq<Int>))))
    (= (Seq_length (Seq_append s0 s1)) (+ (Seq_length s0) (Seq_length s1))))
  :pattern ((Seq_length (Seq_append s0 s1)))
  )))
(assert (forall ((s0 Seq<Int>) (s1 Seq<Int>)) (!
  (and
    (=> (= s0 (as Seq_empty  Seq<Int>)) (= (Seq_append s0 s1) s1))
    (=> (= s1 (as Seq_empty  Seq<Int>)) (= (Seq_append s0 s1) s0)))
  :pattern ((Seq_append s0 s1))
  )))
(assert (forall ((e Int)) (!
  (= (Seq_index (Seq_singleton e) 0) e)
  :pattern ((Seq_singleton e))
  )))
(assert (forall ((i Int) (j Int)) (!
  (= (Seq_add i j) (+ i j))
  :pattern ((Seq_add i j))
  )))
(assert (forall ((i Int) (j Int)) (!
  (= (Seq_sub i j) (- i j))
  :pattern ((Seq_sub i j))
  )))
(assert (forall ((s0 Seq<Int>) (s1 Seq<Int>) (n Int)) (!
  (=>
    (and
      (not (= s0 (as Seq_empty  Seq<Int>)))
      (and
        (not (= s1 (as Seq_empty  Seq<Int>)))
        (and (<= 0 n) (< n (Seq_length s0)))))
    (= (Seq_index (Seq_append s0 s1) n) (Seq_index s0 n)))
  :pattern ((Seq_index (Seq_append s0 s1) n))
  :pattern ((Seq_index s0 n) (Seq_append s0 s1))
  )))
(assert (forall ((s0 Seq<Int>) (s1 Seq<Int>) (n Int)) (!
  (=>
    (and
      (not (= s0 (as Seq_empty  Seq<Int>)))
      (and
        (not (= s1 (as Seq_empty  Seq<Int>)))
        (and (<= (Seq_length s0) n) (< n (Seq_length (Seq_append s0 s1))))))
    (and
      (= (Seq_add (Seq_sub n (Seq_length s0)) (Seq_length s0)) n)
      (=
        (Seq_index (Seq_append s0 s1) n)
        (Seq_index s1 (Seq_sub n (Seq_length s0))))))
  :pattern ((Seq_index (Seq_append s0 s1) n))
  )))
(assert (forall ((s0 Seq<Int>) (s1 Seq<Int>) (m Int)) (!
  (=>
    (and
      (not (= s0 (as Seq_empty  Seq<Int>)))
      (and
        (not (= s1 (as Seq_empty  Seq<Int>)))
        (and (<= 0 m) (< m (Seq_length s1)))))
    (and
      (= (Seq_sub (Seq_add m (Seq_length s0)) (Seq_length s0)) m)
      (=
        (Seq_index (Seq_append s0 s1) (Seq_add m (Seq_length s0)))
        (Seq_index s1 m))))
  :pattern ((Seq_index s1 m) (Seq_append s0 s1))
  )))
(assert (forall ((s Seq<Int>) (i Int) (v Int)) (!
  (=>
    (and (<= 0 i) (< i (Seq_length s)))
    (= (Seq_length (Seq_update s i v)) (Seq_length s)))
  :pattern ((Seq_length (Seq_update s i v)))
  :pattern ((Seq_length s) (Seq_update s i v))
  )))
(assert (forall ((s Seq<Int>) (i Int) (v Int) (n Int)) (!
  (=>
    (and (<= 0 n) (< n (Seq_length s)))
    (and
      (=> (= i n) (= (Seq_index (Seq_update s i v) n) v))
      (=> (not (= i n)) (= (Seq_index (Seq_update s i v) n) (Seq_index s n)))))
  :pattern ((Seq_index (Seq_update s i v) n))
  :pattern ((Seq_index s n) (Seq_update s i v))
  )))
(assert (forall ((s Seq<Int>) (n Int)) (!
  (and
    (=>
      (<= 0 n)
      (and
        (=> (<= n (Seq_length s)) (= (Seq_length (Seq_take s n)) n))
        (=> (< (Seq_length s) n) (= (Seq_length (Seq_take s n)) (Seq_length s)))))
    (=> (< n 0) (= (Seq_length (Seq_take s n)) 0)))
  :pattern ((Seq_length (Seq_take s n)))
  :pattern ((Seq_take s n) (Seq_length s))
  )))
(assert (forall ((s Seq<Int>) (n Int) (j Int)) (!
  (=>
    (and (<= 0 j) (and (< j n) (< j (Seq_length s))))
    (= (Seq_index (Seq_take s n) j) (Seq_index s j)))
  :pattern ((Seq_index (Seq_take s n) j))
  :pattern ((Seq_index s j) (Seq_take s n))
  )))
(assert (forall ((s Seq<Int>) (n Int)) (!
  (and
    (=>
      (<= 0 n)
      (and
        (=>
          (<= n (Seq_length s))
          (= (Seq_length (Seq_drop s n)) (- (Seq_length s) n)))
        (=> (< (Seq_length s) n) (= (Seq_length (Seq_drop s n)) 0))))
    (=> (< n 0) (= (Seq_length (Seq_drop s n)) (Seq_length s))))
  :pattern ((Seq_length (Seq_drop s n)))
  :pattern ((Seq_length s) (Seq_drop s n))
  )))
(assert (forall ((s Seq<Int>) (n Int) (j Int)) (!
  (=>
    (and (< 0 n) (and (<= 0 j) (< j (- (Seq_length s) n))))
    (and
      (= (Seq_sub (Seq_add j n) n) j)
      (= (Seq_index (Seq_drop s n) j) (Seq_index s (Seq_add j n)))))
  :pattern ((Seq_index (Seq_drop s n) j))
  )))
(assert (forall ((s Seq<Int>) (n Int) (i Int)) (!
  (=>
    (and (< 0 n) (and (<= n i) (< i (Seq_length s))))
    (and
      (= (Seq_add (Seq_sub i n) n) i)
      (= (Seq_index (Seq_drop s n) (Seq_sub i n)) (Seq_index s i))))
  :pattern ((Seq_drop s n) (Seq_index s i))
  )))
(assert (forall ((s Seq<Int>) (t Seq<Int>) (n Int)) (!
  (=>
    (and (< 0 n) (<= n (Seq_length s)))
    (= (Seq_take (Seq_append s t) n) (Seq_take s n)))
  :pattern ((Seq_take (Seq_append s t) n))
  )))
(assert (forall ((s Seq<Int>) (t Seq<Int>) (n Int)) (!
  (=>
    (and (> n 0) (and (> n (Seq_length s)) (< n (Seq_length (Seq_append s t)))))
    (and
      (= (Seq_add (Seq_sub n (Seq_length s)) (Seq_length s)) n)
      (=
        (Seq_take (Seq_append s t) n)
        (Seq_append s (Seq_take t (Seq_sub n (Seq_length s)))))))
  :pattern ((Seq_take (Seq_append s t) n))
  )))
(assert (forall ((s Seq<Int>) (t Seq<Int>) (n Int)) (!
  (=>
    (and (< 0 n) (<= n (Seq_length s)))
    (= (Seq_drop (Seq_append s t) n) (Seq_append (Seq_drop s n) t)))
  :pattern ((Seq_drop (Seq_append s t) n))
  )))
(assert (forall ((s Seq<Int>) (t Seq<Int>) (n Int)) (!
  (=>
    (and (> n 0) (> n (Seq_length s)))
    (and
      (= (Seq_add (Seq_sub n (Seq_length s)) (Seq_length s)) n)
      (= (Seq_drop (Seq_append s t) n) (Seq_drop t (Seq_sub n (Seq_length s))))))
  :pattern ((Seq_drop (Seq_append s t) n))
  )))
(assert (forall ((s Seq<Int>) (n Int)) (!
  (=> (<= n 0) (= (Seq_take s n) (as Seq_empty  Seq<Int>)))
  :pattern ((Seq_take s n))
  )))
(assert (forall ((s Seq<Int>) (n Int)) (!
  (=> (<= n 0) (= (Seq_drop s n) s))
  :pattern ((Seq_drop s n))
  )))
(assert (forall ((s Seq<Int>) (n Int)) (!
  (=> (>= n (Seq_length s)) (= (Seq_take s n) s))
  :pattern ((Seq_take s n))
  )))
(assert (forall ((s Seq<Int>) (n Int)) (!
  (=> (>= n (Seq_length s)) (= (Seq_drop s n) (as Seq_empty  Seq<Int>)))
  :pattern ((Seq_drop s n))
  )))
(assert (forall ((s Seq<Int>) (x Int)) (!
  (=>
    (Seq_contains s x)
    (and
      (<= 0 (Seq_skolem s x))
      (and
        (< (Seq_skolem s x) (Seq_length s))
        (= (Seq_index s (Seq_skolem s x)) x))))
  :pattern ((Seq_contains s x))
  )))
(assert (forall ((s Seq<Int>) (x Int) (i Int)) (!
  (=>
    (and (<= 0 i) (and (< i (Seq_length s)) (= (Seq_index s i) x)))
    (Seq_contains s x))
  :pattern ((Seq_contains s x) (Seq_index s i))
  )))
(assert (forall ((s Seq<Int>) (i Int)) (!
  (=>
    (and (<= 0 i) (< i (Seq_length s)))
    (Seq_contains_trigger s (Seq_index s i)))
  :pattern ((Seq_index s i))
  )))
(assert (forall ((s0 Seq<Int>) (s1 Seq<Int>)) (!
  (or
    (and (= s0 s1) (Seq_equal s0 s1))
    (or
      (and
        (not (= s0 s1))
        (and (not (Seq_equal s0 s1)) (not (= (Seq_length s0) (Seq_length s1)))))
      (and
        (not (= s0 s1))
        (and
          (not (Seq_equal s0 s1))
          (and
            (= (Seq_length s0) (Seq_length s1))
            (and
              (= (Seq_skolem_diff s0 s1) (Seq_skolem_diff s1 s0))
              (and
                (<= 0 (Seq_skolem_diff s0 s1))
                (and
                  (< (Seq_skolem_diff s0 s1) (Seq_length s0))
                  (not
                    (=
                      (Seq_index s0 (Seq_skolem_diff s0 s1))
                      (Seq_index s1 (Seq_skolem_diff s0 s1))))))))))))
  :pattern ((Seq_equal s0 s1))
  )))
(assert (forall ((a Seq<Int>) (b Seq<Int>)) (!
  (=> (Seq_equal a b) (= a b))
  :pattern ((Seq_equal a b))
  )))
(assert (forall ((x Int) (y Int)) (!
  (= (Seq_contains (Seq_singleton x) y) (= x y))
  :pattern ((Seq_contains (Seq_singleton x) y))
  )))
(assert (forall ((min_ Int) (max Int)) (!
  (and
    (=> (< min_ max) (= (Seq_length (Seq_range min_ max)) (- max min_)))
    (=> (<= max min_) (= (Seq_length (Seq_range min_ max)) 0)))
  :pattern ((Seq_length (Seq_range min_ max)))
  :qid |$Seq[Int]_prog.ranged_seq_length|)))
(assert (forall ((min_ Int) (max Int) (j Int)) (!
  (=>
    (and (<= 0 j) (< j (- max min_)))
    (= (Seq_index (Seq_range min_ max) j) (+ min_ j)))
  :pattern ((Seq_index (Seq_range min_ max) j))
  :qid |$Seq[Int]_prog.ranged_seq_index|)))
(assert (forall ((min_ Int) (max Int) (v Int)) (!
  (= (Seq_contains (Seq_range min_ max) v) (and (<= min_ v) (< v max)))
  :pattern ((Seq_contains (Seq_range min_ max) v))
  :qid |$Seq[Int]_prog.ranged_seq_contains|)))
(assert (forall (($v $Struct) ($k Int)) (!
  (= ($map_get<$Struct> ($map_init<$Map<Int~_$Struct>> $v) $k) $v)
  :pattern (($map_get<$Struct> ($map_init<$Map<Int~_$Struct>> $v) $k))
  :qid |prog.$map_init_ax|)))
(assert (forall (($m $Map<Int~_$Struct>) ($n $Map<Int~_$Struct>)) (!
  (and
    (= ($map_eq<Bool> $m $n) (= $m $n))
    (=
      ($map_eq<Bool> $m $n)
      (forall (($k Int)) (!
        (= ($map_get<$Struct> $m $k) ($map_get<$Struct> $n $k))
        :pattern (($map_get<$Struct> $m $k) ($map_get<$Struct> $n $k))
        ))))
  :pattern (($map_eq<Bool> $m $n))
  :qid |prog.$map_eq_ax|)))
(assert (forall (($m $Map<Int~_$Struct>) ($k Int) ($v $Struct) ($kk Int)) (!
  (=
    ($map_get<$Struct> ($map_set<$Map<Int~_$Struct>> $m $k $v) $kk)
    (ite (= $k $kk) $v ($map_get<$Struct> $m $kk)))
  :pattern (($map_get<$Struct> ($map_set<$Map<Int~_$Struct>> $m $k $v) $kk))
  :qid |prog.$map_set_ax|)))
(assert (forall (($bb Seq<Int>)) (!
  (=>
    (<= (Seq_length $bb) 32)
    (and
      (<=
        (- 0 57896044618658097711785492504343953926634992332820282019728792003956564819968)
        ($bytes32_to_signed_int<Int> $bb))
      (<=
        ($bytes32_to_signed_int<Int> $bb)
        57896044618658097711785492504343953926634992332820282019728792003956564819967)))
  :pattern (($bytes32_to_signed_int<Int> $bb))
  :qid |prog.$bytes32_to_signed_int_ax|)))
(assert (forall (($bb Seq<Int>)) (!
  (=>
    (<= (Seq_length $bb) 32)
    (and
      (<= 0 ($bytes32_to_unsigned_int<Int> $bb))
      (<=
        ($bytes32_to_unsigned_int<Int> $bb)
        115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  :pattern (($bytes32_to_unsigned_int<Int> $bb))
  :qid |prog.$bytes32_to_unsigned_int_ax|)))
(assert (forall (($i Int)) (!
  (=>
    (and
      (<=
        (- 0 57896044618658097711785492504343953926634992332820282019728792003956564819968)
        $i)
      (<=
        $i
        57896044618658097711785492504343953926634992332820282019728792003956564819967))
    (= (Seq_length ($signed_int_to_bytes32<Seq<Int>> $i)) 32))
  :pattern (($signed_int_to_bytes32<Seq<Int>> $i))
  :qid |prog.$signed_int_to_bytes32_ax|)))
(assert (forall (($i Int)) (!
  (=>
    (and
      (<=
        (- 0 57896044618658097711785492504343953926634992332820282019728792003956564819968)
        $i)
      (<=
        $i
        57896044618658097711785492504343953926634992332820282019728792003956564819967))
    (= (Seq_length ($unsigned_int_to_bytes32<Seq<Int>> $i)) 32))
  :pattern (($unsigned_int_to_bytes32<Seq<Int>> $i))
  :qid |prog.$unsigned_int_to_bytes32_ax|)))
(assert (forall (($bb Seq<Int>)) (!
  (= (Seq_length ($pad32<Seq<Int>> $bb)) 32)
  :pattern (($pad32<Seq<Int>> $bb))
  :qid |prog.$pad32_len_ax|)))
(assert (and
  (forall (($bb Seq<Int>) ($i Int)) (!
    (let ((diff (- 32 (Seq_length $bb)))) true)
    :pattern ((Seq_index ($pad32<Seq<Int>> $bb) $i))
    :qid |prog.$pad32_vals_ax|))
  (forall (($bb Seq<Int>) ($i Int)) (!
    (let ((diff (- 32 (Seq_length $bb)))) (=>
      (and (<= 0 $i) (< $i (Seq_length ($pad32<Seq<Int>> $bb))))
      (=
        (Seq_index ($pad32<Seq<Int>> $bb) $i)
        (ite (< $i diff) 0 (Seq_index $bb (- $i diff))))))
    :pattern ((Seq_index ($pad32<Seq<Int>> $bb) $i))
    :qid |prog.$pad32_vals_ax|))))
(assert (forall (($s $Struct) ($m Int) ($t Int)) (!
  (= ($struct_get<Int> ($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m)) $t)
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
  :qid |prog.$get_set_0_ax|)))
(assert (forall (($s $Struct) ($m Int) ($n Int) ($t Int)) (!
  (=>
    (not (= $m $n))
    (=
      ($struct_loc<Int> $s $m)
      ($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m)))
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m))
  :qid |prog.$get_set_1_ax|)))
(assert (forall (($s $Struct) ($m Int) ($t Bool)) (!
  (=
    ($struct_get<Bool> ($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
    $t)
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
  :qid |prog.$get_set_0_ax|)))
(assert (forall (($s $Struct) ($m Int) ($n Int) ($t Bool)) (!
  (=>
    (not (= $m $n))
    (=
      ($struct_loc<Int> $s $m)
      ($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m)))
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m))
  :qid |prog.$get_set_1_ax|)))
(assert (forall (($v $Map<Int~_Int>) ($k Int)) (!
  (= ($map_get<$Map<Int~_Int>> ($map_init<$Map<Int~_$Map<Int~_Int>>> $v) $k) $v)
  :pattern (($map_get<$Map<Int~_Int>> ($map_init<$Map<Int~_$Map<Int~_Int>>> $v) $k))
  :qid |prog.$map_init_ax|)))
(assert (forall (($m $Map<Int~_$Map<Int~_Int>>) ($n $Map<Int~_$Map<Int~_Int>>)) (!
  (and
    (= ($map_eq<Bool> $m $n) (= $m $n))
    (=
      ($map_eq<Bool> $m $n)
      (forall (($k Int)) (!
        (= ($map_get<$Map<Int~_Int>> $m $k) ($map_get<$Map<Int~_Int>> $n $k))
        :pattern (($map_get<$Map<Int~_Int>> $m $k) ($map_get<$Map<Int~_Int>> $n $k))
        ))))
  :pattern (($map_eq<Bool> $m $n))
  :qid |prog.$map_eq_ax|)))
(assert (forall (($m $Map<Int~_$Map<Int~_Int>>) ($k Int) ($v $Map<Int~_Int>) ($kk Int)) (!
  (=
    ($map_get<$Map<Int~_Int>> ($map_set<$Map<Int~_$Map<Int~_Int>>> $m $k $v) $kk)
    (ite (= $k $kk) $v ($map_get<$Map<Int~_Int>> $m $kk)))
  :pattern (($map_get<$Map<Int~_Int>> ($map_set<$Map<Int~_$Map<Int~_Int>>> $m $k $v) $kk))
  :qid |prog.$map_set_ax|)))
(assert (forall (($no Int)) (!
  (= (Seq_length ($blockhash<Seq<Int>> $no)) 32)
  :pattern (($blockhash<Seq<Int>> $no))
  :qid |prog.$blockhash_ax|)))
(assert (forall (($bb Seq<Int>) ($l Int)) (!
  (= (Seq_length ($method_id<Seq<Int>> $bb $l)) $l)
  :pattern (($method_id<Seq<Int>> $bb $l))
  :qid |prog.$method_id_ax|)))
(assert (forall (($s Seq<Int>)) (!
  (= (Seq_length ($keccak256<Seq<Int>> $s)) 32)
  :pattern (($keccak256<Seq<Int>> $s))
  :qid |prog.$keccak256_ax|)))
(assert (forall (($s Seq<Int>)) (!
  (= (Seq_length ($sha256<Seq<Int>> $s)) 32)
  :pattern (($sha256<Seq<Int>> $s))
  :qid |prog.$sha256_ax|)))
(assert (forall (($p Seq<Int>) ($q Seq<Int>)) (!
  (= (Seq_length ($ecadd<Seq<Int>> $p $q)) 2)
  :pattern (($ecadd<Seq<Int>> $p $q))
  :qid |prog.$ecadd_ax|)))
(assert (forall (($p Seq<Int>) ($s Int)) (!
  (= (Seq_length ($ecmul<Seq<Int>> $p $s)) 2)
  :pattern (($ecmul<Seq<Int>> $p $s))
  :qid |prog.$ecmul_ax|)))
(assert (forall ((i Int)) (!
  (= ($unwrap<Int> ($wrap<$Int> i)) i)
  :pattern (($wrap<$Int> i))
  :qid |prog.$wrap_ax|)))
(assert (forall ((i $Int)) (!
  (= ($wrap<$Int> ($unwrap<Int> i)) i)
  :pattern (($wrap<$Int> ($unwrap<Int> i)))
  :qid |prog.$unwrap_ax|)))
(assert (forall ((i $Int)) (!
  (=> (< ($unwrap<Int> i) 0) (= ($w_abs<Int> i) (- 0 ($unwrap<Int> i))))
  :pattern (($w_abs<Int> i))
  :qid |prog.$w_abs_ax_1|)))
(assert (forall ((i $Int)) (!
  (=> (>= ($unwrap<Int> i) 0) (= ($w_abs<Int> i) ($unwrap<Int> i)))
  :pattern (($w_abs<Int> i))
  :qid |prog.$w_abs_ax_2|)))
(assert (forall ((i $Int) (j $Int)) (!
  (= ($w_mul<$Int> i j) ($w_mulI<$Int> i j))
  :pattern (($w_mul<$Int> i j))
  :qid |prog.$w_mul_intermediate|)))
(assert (forall ((i $Int) (j $Int)) (!
  (= ($w_mul<$Int> i j) ($w_mulL<$Int> i j))
  :pattern (($w_mul<$Int> i j))
  :qid |prog.$w_mul_limited|)))
(assert (forall ((i $Int) (j $Int)) (!
  (= ($w_mulI<$Int> i j) ($w_mulL<$Int> i j))
  :pattern (($w_mulI<$Int> i j))
  :qid |prog.$w_mul_intermediate_to_limited|)))
(assert (forall ((i $Int) (j $Int)) (!
  (= ($w_mul<$Int> i j) ($w_mulI<$Int> j i))
  :pattern (($w_mul<$Int> i j))
  :qid |prog.$w_mul_commutative|)))
(assert (forall ((i $Int) (j $Int) (k $Int)) (!
  (= ($w_mulI<$Int> i ($w_mulI<$Int> j k)) ($w_mulL<$Int> ($w_mulL<$Int> i j) k))
  :pattern (($w_mulI<$Int> i ($w_mulI<$Int> j k)))
  :qid |prog.$w_mul_associative|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (= ($unwrap<Int> j) (+ ($unwrap<Int> k) ($unwrap<Int> l)))
    (=
      ($w_mulI<$Int> i j)
      ($wrap<$Int> (+
        ($unwrap<Int> ($w_mulL<$Int> i k))
        ($unwrap<Int> ($w_mulL<$Int> i l))))))
  :pattern (($w_mulI<$Int> i j) ($w_mulI<$Int> i k) ($w_mulI<$Int> i l))
  :qid |prog.$w_mul_distributive|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=
    ($w_mulI<$Int> i j)
    ($w_mulL<$Int> ($wrap<$Int> (- 0 ($unwrap<Int> i))) ($wrap<$Int> (-
      0
      ($unwrap<Int> j)))))
  :pattern (($w_mulI<$Int> i j))
  :qid |prog.$w_mul_basic_sign_1|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=
    ($w_mulI<$Int> i j)
    ($wrap<$Int> (-
      0
      ($unwrap<Int> ($w_mulL<$Int> ($wrap<$Int> (- 0 ($unwrap<Int> i))) j)))))
  :pattern (($w_mulI<$Int> i j))
  :qid |prog.$w_mul_basic_sign_2|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (or (= ($unwrap<Int> i) 0) (= ($unwrap<Int> j) 0))
    (= ($unwrap<Int> ($w_mulI<$Int> i j)) 0))
  :pattern (($w_mulI<$Int> i j))
  :qid |prog.$w_mul_basic_zero_1|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (or
      (and (> ($unwrap<Int> i) 0) (> ($unwrap<Int> j) 0))
      (and (< ($unwrap<Int> i) 0) (< ($unwrap<Int> j) 0)))
    (> ($unwrap<Int> ($w_mulI<$Int> i j)) 0))
  :pattern (($w_mulI<$Int> i j))
  :qid |prog.$w_mul_basic_zero_2|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (or (= ($unwrap<Int> i) 1) (= ($unwrap<Int> j) 0))
    (= ($w_mulI<$Int> i j) j))
  :pattern (($w_mulI<$Int> i j))
  :qid |prog.$w_mul_basic_neutral|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=
    (>= ($w_abs<Int> ($w_mulI<$Int> i j)) ($w_abs<Int> j))
    (or (>= ($w_abs<Int> i) 1) (= ($unwrap<Int> j) 0)))
  :pattern (($w_mulI<$Int> i j))
  :qid |prog.$w_mul_basic_proportional|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (> ($unwrap<Int> ($w_mulI<$Int> i j)) ($unwrap<Int> k))
      (> ($unwrap<Int> l) 0))
    (>
      ($unwrap<Int> ($w_mulL<$Int> i ($w_mulL<$Int> j l)))
      ($unwrap<Int> ($w_mulI<$Int> k l))))
  :pattern (($w_mulI<$Int> i ($w_mulI<$Int> j l)) ($w_mulI<$Int> k l))
  :qid |prog.$w_mul_order_1|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (>= ($unwrap<Int> ($w_mulI<$Int> i j)) ($unwrap<Int> k))
      (> ($unwrap<Int> l) 0))
    (>=
      ($unwrap<Int> ($w_mulL<$Int> i ($w_mulL<$Int> j l)))
      ($unwrap<Int> ($w_mulI<$Int> k l))))
  :pattern (($w_mulI<$Int> i ($w_mulI<$Int> j l)) ($w_mulI<$Int> k l))
  :qid |prog.$w_mul_order_2|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (> ($unwrap<Int> ($w_mulI<$Int> i j)) ($unwrap<Int> k))
      (< ($unwrap<Int> l) 0))
    (>
      ($unwrap<Int> ($w_mulI<$Int> k l))
      ($unwrap<Int> ($w_mulL<$Int> i ($w_mulL<$Int> j l)))))
  :pattern (($w_mulI<$Int> i ($w_mulI<$Int> j l)) ($w_mulI<$Int> k l))
  :qid |prog.$w_mul_order_3|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (>= ($unwrap<Int> ($w_mulI<$Int> i j)) ($unwrap<Int> k))
      (< ($unwrap<Int> l) 0))
    (>=
      ($unwrap<Int> ($w_mulI<$Int> k l))
      ($unwrap<Int> ($w_mulL<$Int> i ($w_mulL<$Int> j l)))))
  :pattern (($w_mulI<$Int> i ($w_mulI<$Int> j l)) ($w_mulI<$Int> k l))
  :qid |prog.$w_mul_order_4|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (<= ($w_abs<Int> i) ($w_abs<Int> j))
      (<= ($w_abs<Int> k) ($w_abs<Int> l)))
    (<= ($w_abs<Int> ($w_mulI<$Int> i k)) ($w_abs<Int> ($w_mulI<$Int> j l))))
  :pattern (($w_mulI<$Int> i k) ($w_mulI<$Int> j l))
  :qid |prog.$w_mul_monotonicity_1|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (< ($w_abs<Int> i) ($w_abs<Int> j))
      (and (<= ($w_abs<Int> k) ($w_abs<Int> l)) (not (= ($unwrap<Int> l) 0))))
    (< ($w_abs<Int> ($w_mulI<$Int> i k)) ($w_abs<Int> ($w_mulI<$Int> j l))))
  :pattern (($w_mulI<$Int> i k) ($w_mulI<$Int> j l))
  :qid |prog.$w_mul_monotonicity_2|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (<= ($w_abs<Int> i) ($w_abs<Int> j))
      (and (< ($w_abs<Int> k) ($w_abs<Int> l)) (not (= ($unwrap<Int> j) 0))))
    (< ($w_abs<Int> ($w_mulI<$Int> i k)) ($w_abs<Int> ($w_mulI<$Int> j l))))
  :pattern (($w_mulI<$Int> i k) ($w_mulI<$Int> j l))
  :qid |prog.$w_mul_monotonicity_3|)))
(assert (forall ((i $Int) (j $Int)) (!
  (= ($w_mod<$Int> i j) ($w_modL<$Int> i j))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_limited|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (and (not (= j ($wrap<$Int> 0))) (or (= i j) (= i ($wrap<$Int> 0))))
    (= ($w_mod<$Int> i j) ($wrap<$Int> 0)))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_identity|)))
(assert (forall ((i $Int) (j $Int) (l $Int)) (!
  (=>
    (and
      (not (= j ($wrap<$Int> 0)))
      (and
        (= ($unwrap<Int> i) (+ ($unwrap<Int> l) ($w_abs<Int> j)))
        (or (>= ($unwrap<Int> l) 0) (< ($unwrap<Int> i) 0))))
    (= ($w_mod<$Int> i j) ($w_modL<$Int> l j)))
  :pattern (($w_mod<$Int> i j) ($w_mod<$Int> l j))
  :qid |prog.$w_mod_basic_1|)))
(assert (forall ((i $Int) (j $Int) (l $Int)) (!
  (=>
    (and
      (not (= j ($wrap<$Int> 0)))
      (and
        (= ($unwrap<Int> i) (- ($unwrap<Int> l) ($w_abs<Int> j)))
        (or (<= ($unwrap<Int> l) 0) (> ($unwrap<Int> i) 0))))
    (= ($w_mod<$Int> i j) ($w_modL<$Int> l j)))
  :pattern (($w_mod<$Int> i j) ($w_mod<$Int> l j))
  :qid |prog.$w_mod_basic_2|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (and
      (not (= j ($wrap<$Int> 0)))
      (and (<= 0 ($w_abs<Int> i)) (< ($w_abs<Int> i) ($w_abs<Int> j))))
    (= ($w_mod<$Int> i j) i))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_basic_3|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (< ($w_abs<Int> ($w_mod<$Int> i j)) ($w_abs<Int> j)))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_basic_4|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (or
      (=
        ($sign<Int> ($unwrap<Int> ($w_mod<$Int> i j)))
        ($sign<Int> ($unwrap<Int> i)))
      (= ($sign<Int> ($unwrap<Int> ($w_mod<$Int> i j))) 0)))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_sign_1|)))
(assert (forall ((i $Int) (j $Int) (k $Int)) (!
  (=>
    (and (not (= j ($wrap<$Int> 0))) (= ($unwrap<Int> i) (- 0 ($unwrap<Int> k))))
    (= ($w_mod<$Int> i j) ($wrap<$Int> (- 0 ($unwrap<Int> ($w_modL<$Int> k j))))))
  :pattern (($w_mod<$Int> i j) ($w_mod<$Int> k j))
  :qid |prog.$w_mod_sign_2|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (= ($w_mod<$Int> i j) ($w_mod<$Int> i ($wrap<$Int> (- 0 ($unwrap<Int> j))))))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_sign_3|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (= ($w_mod<$Int> i j) ($w_modL<$Int> ($w_modL<$Int> i j) j)))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_mod|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (<= ($w_abs<Int> ($w_mod<$Int> i j)) ($w_abs<Int> i)))
  :pattern (($w_mod<$Int> i j))
  :qid |prog.$w_mod_decrease|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (not (= j ($wrap<$Int> 0)))
      (= ($unwrap<Int> i) (+ ($unwrap<Int> k) ($unwrap<Int> l))))
    (and
      (=>
        (or
          (and
            (>= ($unwrap<Int> i) 0)
            (>=
              (+
                ($unwrap<Int> ($w_modL<$Int> k j))
                ($unwrap<Int> ($w_modL<$Int> l j)))
              0))
          (and
            (<= ($unwrap<Int> i) 0)
            (<=
              (+
                ($unwrap<Int> ($w_modL<$Int> k j))
                ($unwrap<Int> ($w_modL<$Int> l j)))
              0)))
        (or
          (and
            (<=
              ($w_abs<Int> j)
              (+
                ($unwrap<Int> ($w_modL<$Int> k j))
                ($unwrap<Int> ($w_modL<$Int> l j))))
            (and
              (<
                (+
                  ($unwrap<Int> ($w_modL<$Int> k j))
                  ($unwrap<Int> ($w_modL<$Int> l j)))
                (* 2 ($w_abs<Int> j)))
              (=
                ($w_mod<$Int> i j)
                ($wrap<$Int> (-
                  (+
                    ($unwrap<Int> ($w_modL<$Int> k j))
                    ($unwrap<Int> ($w_modL<$Int> l j)))
                  ($w_abs<Int> j))))))
          (or
            (and
              (<
                (- 0 ($w_abs<Int> j))
                (+
                  ($unwrap<Int> ($w_modL<$Int> k j))
                  ($unwrap<Int> ($w_modL<$Int> l j))))
              (and
                (<
                  (+
                    ($unwrap<Int> ($w_modL<$Int> k j))
                    ($unwrap<Int> ($w_modL<$Int> l j)))
                  ($w_abs<Int> j))
                (=
                  ($w_mod<$Int> i j)
                  ($wrap<$Int> (+
                    ($unwrap<Int> ($w_modL<$Int> k j))
                    ($unwrap<Int> ($w_modL<$Int> l j)))))))
            (and
              (<
                (* (- 0 2) ($w_abs<Int> j))
                (+
                  ($unwrap<Int> ($w_modL<$Int> k j))
                  ($unwrap<Int> ($w_modL<$Int> l j))))
              (and
                (<=
                  (+
                    ($unwrap<Int> ($w_modL<$Int> k j))
                    ($unwrap<Int> ($w_modL<$Int> l j)))
                  (- 0 ($w_abs<Int> j)))
                (=
                  ($w_mod<$Int> i j)
                  ($wrap<$Int> (+
                    (+
                      ($unwrap<Int> ($w_modL<$Int> k j))
                      ($unwrap<Int> ($w_modL<$Int> l j)))
                    ($w_abs<Int> j)))))))))
      (=>
        (or
          (and
            (> ($unwrap<Int> i) 0)
            (<
              (+
                ($unwrap<Int> ($w_modL<$Int> k j))
                ($unwrap<Int> ($w_modL<$Int> l j)))
              0))
          (and
            (< ($unwrap<Int> i) 0)
            (>
              (+
                ($unwrap<Int> ($w_modL<$Int> k j))
                ($unwrap<Int> ($w_modL<$Int> l j)))
              0)))
        (or
          (and
            (<
              0
              (+
                ($unwrap<Int> ($w_modL<$Int> k j))
                ($unwrap<Int> ($w_modL<$Int> l j))))
            (and
              (<
                (+
                  ($unwrap<Int> ($w_modL<$Int> k j))
                  ($unwrap<Int> ($w_modL<$Int> l j)))
                ($w_abs<Int> j))
              (=
                ($w_mod<$Int> i j)
                ($wrap<$Int> (-
                  (+
                    ($unwrap<Int> ($w_modL<$Int> k j))
                    ($unwrap<Int> ($w_modL<$Int> l j)))
                  ($w_abs<Int> j))))))
          (and
            (<
              (- 0 ($w_abs<Int> j))
              (+
                ($unwrap<Int> ($w_modL<$Int> k j))
                ($unwrap<Int> ($w_modL<$Int> l j))))
            (and
              (<
                (+
                  ($unwrap<Int> ($w_modL<$Int> k j))
                  ($unwrap<Int> ($w_modL<$Int> l j)))
                0)
              (=
                ($w_mod<$Int> i j)
                ($wrap<$Int> (+
                  (+
                    ($unwrap<Int> ($w_modL<$Int> k j))
                    ($unwrap<Int> ($w_modL<$Int> l j)))
                  ($w_abs<Int> j))))))))))
  :pattern (($w_mod<$Int> i j) ($w_mod<$Int> k j) ($w_mod<$Int> l j))
  :qid |prog.$w_mod_add|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (= ($w_mod<$Int> ($w_mul<$Int> i j) j) ($wrap<$Int> 0)))
  :pattern (($w_mod<$Int> ($w_mul<$Int> i j) j))
  :qid |prog.$w_mod_mul_basic|)))
(assert (forall ((i $Int) (j $Int) (k $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (and
      (=
        ($w_mod<$Int> ($w_mulI<$Int> i k) j)
        ($w_modL<$Int> ($w_mulL<$Int> ($w_modL<$Int> i j) k) j))
      (and
        (=
          ($w_mod<$Int> ($w_mulI<$Int> i k) j)
          ($w_modL<$Int> ($w_mulL<$Int> i ($w_modL<$Int> k j)) j))
        (=
          ($w_mod<$Int> ($w_mulI<$Int> i k) j)
          ($w_modL<$Int> ($w_mulL<$Int> ($w_modL<$Int> i j) ($w_modL<$Int> k j)) j)))))
  :pattern (($w_mod<$Int> ($w_mulI<$Int> i k) j))
  :qid |prog.$w_mod_mul_mod_noop|)))
(assert (forall ((i $Int) (j $Int) (k $Int)) (!
  (=>
    (not (= j ($wrap<$Int> 0)))
    (=
      ($w_mod<$Int> i j)
      ($w_modL<$Int> ($wrap<$Int> (+
        ($unwrap<Int> ($w_mulL<$Int> k j))
        ($unwrap<Int> i))) j)))
  :pattern (($w_mod<$Int> i j) ($w_mulI<$Int> k j))
  :qid |prog.$w_mod_mul_vanish|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= ($unwrap<Int> j) 0))
    (=
      ($w_div<$Int> i j)
      (ite
        (>= ($unwrap<Int> i) 0)
        ($w_div_down<$Int> i j)
        ($wrap<$Int> (-
          0
          ($unwrap<Int> ($w_div_down<$Int> ($wrap<$Int> (- 0 ($unwrap<Int> i))) j)))))))
  :pattern (($w_div<$Int> i j))
  :qid |prog.$w_div_div_down|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=
    ($w_div_down<$Int> i j)
    (ite
      (>= ($unwrap<Int> j) 0)
      ($w_div_nat<$Int> i j)
      ($wrap<$Int> (-
        0
        ($unwrap<Int> ($w_div_nat<$Int> i ($wrap<$Int> (- 0 ($unwrap<Int> j)))))))))
  :pattern (($w_div_down<$Int> i j))
  :qid |prog.$w_div_down_div_nat|)))
(assert (forall ((i $Int) (j $Int)) (!
  (= ($w_div_nat<$Int> i j) ($w_div_natL<$Int> i j))
  :pattern (($w_div_nat<$Int> i j))
  :qid |prog.$w_div_nat_limited|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (or (= ($unwrap<Int> j) 1) (= ($unwrap<Int> i) 0))
    (= ($w_div_nat<$Int> i j) i))
  :pattern (($w_div_nat<$Int> i j))
  :qid |prog.$w_div_nat_neutral|)))
(assert (forall ((i $Int)) (!
  (=> (> ($unwrap<Int> i) 0) (= ($w_div_nat<$Int> i i) ($wrap<$Int> 1)))
  :pattern (($w_div_nat<$Int> i i))
  :qid |prog.$w_div_nat_self|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (and (>= ($unwrap<Int> i) 0) (> ($unwrap<Int> j) 0))
    (=
      (< ($unwrap<Int> i) ($unwrap<Int> j))
      (= ($w_div_nat<$Int> i j) ($wrap<$Int> 0))))
  :pattern (($w_div_nat<$Int> i j))
  :qid |prog.$w_div_nat_small|)))
(assert (forall ((i $Int) (j $Int) (k $Int) (l $Int)) (!
  (=>
    (and
      (and
        (>= ($unwrap<Int> i) 0)
        (and
          (> ($unwrap<Int> j) 0)
          (and (>= ($unwrap<Int> k) 0) (>= ($unwrap<Int> l) 0))))
      (= ($unwrap<Int> i) (+ ($unwrap<Int> k) ($unwrap<Int> l))))
    (or
      (and
        (<=
          0
          (+ ($unwrap<Int> ($w_mod<$Int> k j)) ($unwrap<Int> ($w_mod<$Int> l j))))
        (and
          (<
            (+
              ($unwrap<Int> ($w_mod<$Int> k j))
              ($unwrap<Int> ($w_mod<$Int> l j)))
            ($unwrap<Int> j))
          (=
            ($w_div_nat<$Int> i j)
            ($wrap<$Int> (+
              ($unwrap<Int> ($w_div_natL<$Int> k j))
              ($unwrap<Int> ($w_div_natL<$Int> l j)))))))
      (and
        (<=
          ($unwrap<Int> j)
          (+ ($unwrap<Int> ($w_mod<$Int> k j)) ($unwrap<Int> ($w_mod<$Int> l j))))
        (and
          (<
            (+
              ($unwrap<Int> ($w_mod<$Int> k j))
              ($unwrap<Int> ($w_mod<$Int> l j)))
            (* 2 ($unwrap<Int> j)))
          (=
            ($w_div_nat<$Int> i j)
            ($wrap<$Int> (+
              (+
                ($unwrap<Int> ($w_div_natL<$Int> k j))
                ($unwrap<Int> ($w_div_natL<$Int> l j)))
              1)))))))
  :pattern (($w_div_nat<$Int> i j) ($w_div_nat<$Int> k j) ($w_div_nat<$Int> l j))
  :qid |prog.$w_div_nat_dividend_add|)))
(assert (forall ((i $Int) (j $Int) (k $Int)) (!
  (=>
    (and
      (and
        (>= ($unwrap<Int> i) 0)
        (and (> ($unwrap<Int> j) 0) (>= ($unwrap<Int> k) 0)))
      (<= ($unwrap<Int> i) ($unwrap<Int> k)))
    (<=
      ($unwrap<Int> ($w_div_nat<$Int> i j))
      ($unwrap<Int> ($w_div_natL<$Int> k j))))
  :pattern (($w_div_nat<$Int> i j) ($w_div_nat<$Int> k j))
  :qid |prog.$w_div_nat_ordered_by_dividend|)))
(assert (forall ((i $Int) (j $Int) (k $Int)) (!
  (=>
    (and
      (and
        (>= ($unwrap<Int> i) 0)
        (and (> ($unwrap<Int> j) 0) (> ($unwrap<Int> k) 0)))
      (<= ($unwrap<Int> j) ($unwrap<Int> k)))
    (>=
      ($unwrap<Int> ($w_div_nat<$Int> i j))
      ($unwrap<Int> ($w_div_natL<$Int> i k))))
  :pattern (($w_div_nat<$Int> i j) ($w_div_nat<$Int> i k))
  :qid |prog.$w_div_nat_ordered_by_divisor|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (and (> ($unwrap<Int> i) 0) (> ($unwrap<Int> j) 1))
    (< ($unwrap<Int> ($w_div_nat<$Int> i j)) ($unwrap<Int> i)))
  :pattern (($w_div_nat<$Int> i j))
  :qid |prog.$w_div_nat_decrease|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (and (>= ($unwrap<Int> i) 0) (> ($unwrap<Int> j) 0))
    (<= ($unwrap<Int> ($w_div_nat<$Int> i j)) ($unwrap<Int> i)))
  :pattern (($w_div_nat<$Int> i j))
  :qid |prog.$w_div_nat_nonincrease|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=> (not (= ($unwrap<Int> j) 0)) (= ($w_div<$Int> ($w_mulI<$Int> i j) j) i))
  :pattern (($w_div<$Int> ($w_mulI<$Int> i j) j))
  :qid |prog.$w_div_mul|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= ($unwrap<Int> j) 0))
    (or
      (=
        ($sign<Int> ($unwrap<Int> ($w_div<$Int> i j)))
        (* ($sign<Int> ($unwrap<Int> i)) ($sign<Int> ($unwrap<Int> j))))
      (= ($sign<Int> ($unwrap<Int> ($w_div<$Int> i j))) 0)))
  :pattern (($w_div<$Int> i j))
  :qid |prog.$w_div_sign|)))
(assert (forall ((i $Int) (j $Int)) (!
  (=>
    (not (= ($unwrap<Int> j) 0))
    (=
      ($unwrap<Int> i)
      (+
        ($unwrap<Int> ($w_mulI<$Int> j ($w_div<$Int> i j)))
        ($unwrap<Int> ($w_mod<$Int> i j)))))
  :pattern (($w_div<$Int> i j) ($w_mod<$Int> i j))
  :qid |prog.$w_div_mod_mul|)))
(assert (forall (($v Int) ($k Int)) (!
  (= ($map_get<Int> ($map_init<$Map<Int~_Int>> $v) $k) $v)
  :pattern (($map_get<Int> ($map_init<$Map<Int~_Int>> $v) $k))
  :qid |prog.$map_init_ax|)))
(assert (forall (($m $Map<Int~_Int>) ($n $Map<Int~_Int>)) (!
  (and
    (= ($map_eq<Bool> $m $n) (= $m $n))
    (=
      ($map_eq<Bool> $m $n)
      (forall (($k Int)) (!
        (= ($map_get<Int> $m $k) ($map_get<Int> $n $k))
        :pattern (($map_get<Int> $m $k) ($map_get<Int> $n $k))
        ))))
  :pattern (($map_eq<Bool> $m $n))
  :qid |prog.$map_eq_ax|)))
(assert (forall (($m $Map<Int~_Int>) ($k Int) ($v Int) ($kk Int)) (!
  (=
    ($map_get<Int> ($map_set<$Map<Int~_Int>> $m $k $v) $kk)
    (ite (= $k $kk) $v ($map_get<Int> $m $kk)))
  :pattern (($map_get<Int> ($map_set<$Map<Int~_Int>> $m $k $v) $kk))
  :qid |prog.$map_set_ax|)))
(assert (not (= (as $self_address<Int>  Int) 0)))
(assert (forall (($s $Struct) ($m Int) ($t $Map<Int~_$Map<Int~_Int>>)) (!
  (=
    ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
    $t)
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
  :qid |prog.$get_set_0_ax|)))
(assert (forall (($s $Struct) ($m Int) ($n Int) ($t $Map<Int~_$Map<Int~_Int>>)) (!
  (=>
    (not (= $m $n))
    (=
      ($struct_loc<Int> $s $m)
      ($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m)))
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m))
  :qid |prog.$get_set_1_ax|)))
(assert (forall (($s $Struct) ($m Int) ($t $Struct)) (!
  (=
    ($struct_get<$Struct> ($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
    $t)
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
  :qid |prog.$get_set_0_ax|)))
(assert (forall (($s $Struct) ($m Int) ($n Int) ($t $Struct)) (!
  (=>
    (not (= $m $n))
    (=
      ($struct_loc<Int> $s $m)
      ($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m)))
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m))
  :qid |prog.$get_set_1_ax|)))
(assert (forall (($f Int) ($t Int)) (!
  (= (Seq_length ($range<Seq<Int>> $f $t)) (- $t $f))
  :pattern ((Seq_length ($range<Seq<Int>> $f $t)))
  :qid |prog.$range_len_ax|)))
(assert (forall (($f Int) ($t Int) ($i Int)) (!
  (=>
    (and (<= 0 $i) (< $i (Seq_length ($range<Seq<Int>> $f $t))))
    (= (Seq_index ($range<Seq<Int>> $f $t) $i) (+ $f $i)))
  :pattern ((Seq_index ($range<Seq<Int>> $f $t) $i))
  :qid |prog.$range_lookup_ax|)))
(assert (forall (($s $Struct) ($m Int) ($t $Map<Int~_Int>)) (!
  (=
    ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
    $t)
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
  :qid |prog.$get_set_0_ax|)))
(assert (forall (($s $Struct) ($m Int) ($n Int) ($t $Map<Int~_Int>)) (!
  (=>
    (not (= $m $n))
    (=
      ($struct_loc<Int> $s $m)
      ($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m)))
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m))
  :qid |prog.$get_set_1_ax|)))
(assert (forall (($s $Struct) ($m Int) ($t Seq<Int>)) (!
  (Seq_equal
    ($struct_get<Seq<Int>> ($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
    $t)
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $m $t) $m))
  :qid |prog.$get_set_0_ax|)))
(assert (forall (($s $Struct) ($m Int) ($n Int) ($t Seq<Int>)) (!
  (=>
    (not (= $m $n))
    (=
      ($struct_loc<Int> $s $m)
      ($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m)))
  :pattern (($struct_loc<Int> ($struct_set<$Struct> $s $n $t) $m))
  :qid |prog.$get_set_1_ax|)))
(assert (forall (($arg_0 $Struct)) (!
  (and
    (=
      ($struct_get<Int> ($struct_loc<Int> (s$resource$$creator$init<$Struct> $arg_0) (- 0 1)))
      2567760667165796382711201132846784524754120562)
    (=
      ($struct_get<$Struct> ($struct_loc<Int> (s$resource$$creator$init<$Struct> $arg_0) 0))
      $arg_0))
  :pattern ((s$resource$$creator$init<$Struct> $arg_0))
  :qid |prog.s$resource$$creator$init$ax|)))
(assert (forall (($l $Struct) ($r $Struct)) (!
  (and
    (= (s$resource$$creator$eq<Bool> $l $r) (= $l $r))
    (=
      (s$resource$$creator$eq<Bool> $l $r)
      (and
        (=
          ($struct_get<Int> ($struct_loc<Int> $l (- 0 1)))
          ($struct_get<Int> ($struct_loc<Int> $r (- 0 1))))
        (=
          ($struct_get<$Struct> ($struct_loc<Int> $l 0))
          ($struct_get<$Struct> ($struct_loc<Int> $r 0))))))
  :pattern ((s$resource$$creator$eq<Bool> $l $r))
  :qid |prog.s$resource$$creator$eq$ax|)))
(assert (= ($map_sum<Int> ($map_init<$Map<Int~_Int>> 0)) 0))
(assert (forall (($m $Map<Int~_Int>) ($k Int) ($v Int)) (!
  (=
    ($map_sum<Int> ($map_set<$Map<Int~_Int>> $m $k $v))
    (+ (- ($map_sum<Int> $m) ($map_get<Int> $m $k)) $v))
  :pattern (($map_sum<Int> ($map_set<$Map<Int~_Int>> $m $k $v)))
  :qid |prog.$map_sum_set_ax|)))
(assert (and
  (= ($sign<Int> 0) 0)
  (forall (($a Int)) (!
    (and
      (=> (> $a 0) (= ($sign<Int> $a) 1))
      (=> (< $a 0) (= ($sign<Int> $a) (- 0 1))))
    :pattern (($sign<Int> $a))
    ))))
(assert (forall (($a Int) ($b Int) ($r Int)) (!
  (=
    ($div<Int> $a $b $r)
    (+ (div $a $b) (ite (or (>= $a 0) (= (mod $a $b) 0)) 0 ($sign<Int> $b))))
  :pattern (($div<Int> $a $b $r))
  :qid |prog.$div_ax|)))
(assert (forall (($a Int) ($b Int) ($r Int)) (!
  (= ($mod<Int> $a $b $r) (- $a (* ($div<Int> $a $b $r) $b)))
  :pattern (($mod<Int> $a $b $r))
  :qid |prog.$mod_ax|)))
(assert (forall (($a Int)) (!
  (=> (not (= $a 0)) (= ($pow<Int> 0 $a) 0))
  :pattern (($pow<Int> 0 $a))
  :qid |prog.$pow0N_ax|)))
(assert (forall (($a Int)) (!
  (=> (not (= $a 0)) (= ($pow<Int> $a 0) 1))
  :pattern (($pow<Int> $a 0))
  :qid |prog.$powN0_ax|)))
(assert (forall (($a Int) ($b Int)) (!
  (=> (>= $a 0) (>= ($pow<Int> $a $b) 0))
  :pattern (($pow<Int> $a $b))
  :qid |prog.$pow_non_negative_ax|)))
(assert (forall (($a Int) ($b Int)) (!
  (=> (and (> $a 0) (>= $b 0)) (> ($pow<Int> $a $b) 0))
  :pattern (($pow<Int> $a $b))
  :qid |prog.$pow_non_negative_and_non_null_ax|)))
(assert (forall (($a Int) ($s Int)) (!
  (=>
    (> $s 0)
    (= ($floor<Int> $a $s) ($div<Int> (ite (< $a 0) (- $a (- $s 1)) $a) $s 0)))
  :pattern (($floor<Int> $a $s))
  :qid |prog.$floor_ax|)))
(assert (forall (($a Int) ($s Int)) (!
  (=>
    (> $s 0)
    (= ($ceil<Int> $a $s) ($div<Int> (ite (< $a 0) $a (- (+ $a $s) 1)) $s 0)))
  :pattern (($ceil<Int> $a $s))
  :qid |prog.$ceil_ax|)))
(assert (forall (($a Int) ($s Int)) (!
  (>= ($shift<Int> $a $s) 0)
  :pattern (($shift<Int> $a $s))
  :qid |prog.$shift_ax|)))
(assert (forall (($a Int)) (!
  (>= ($bitwise_not<Int> $a) 0)
  :pattern (($bitwise_not<Int> $a))
  :qid |prog.$bitwise_not_ax|)))
(assert (forall (($a Int) ($b Int)) (!
  (>= ($bitwise_and<Int> $a $b) 0)
  :pattern (($bitwise_and<Int> $a $b))
  :qid |prog.$bitwise_and_ax|)))
(assert (forall (($a Int) ($b Int)) (!
  (>= ($bitwise_or<Int> $a $b) 0)
  :pattern (($bitwise_or<Int> $a $b))
  :qid |prog.$bitwise_or_ax|)))
(assert (forall (($a Int) ($b Int)) (!
  (>= ($bitwise_xor<Int> $a $b) 0)
  :pattern (($bitwise_xor<Int> $a $b))
  :qid |prog.$bitwise_xor_ax|)))
(assert (forall (($arg_0 Seq<Int>) ($arg_1 Seq<Int>) ($arg_2 Int) ($arg_3 $Map<Int~_Int>) ($arg_4 $Map<Int~_$Map<Int~_Int>>) ($arg_5 Int) ($arg_6 Int) ($arg_7 Int) ($arg_8 Int) ($arg_9 Bool) ($arg_10 $Map<Int~_Int>) ($arg_11 $Map<Int~_Int>) ($arg_12 Bool)) (!
  (and
    (=
      ($struct_get<Int> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10 $arg_11 $arg_12) (- 0 1)))
      9122519725869122497593506884710)
    (and
      (Seq_equal
        ($struct_get<Seq<Int>> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10 $arg_11 $arg_12) 0))
        $arg_0)
      (and
        (Seq_equal
          ($struct_get<Seq<Int>> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10 $arg_11 $arg_12) 1))
          $arg_1)
        (and
          (=
            ($struct_get<Int> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10 $arg_11 $arg_12) 2))
            $arg_2)
          (and
            (=
              ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10 $arg_11 $arg_12) 3))
              $arg_3)
            (and
              (=
                ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10 $arg_11 $arg_12) 4))
                $arg_4)
              (and
                (=
                  ($struct_get<Int> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10 $arg_11 $arg_12) 5))
                  $arg_5)
                (and
                  (=
                    ($struct_get<Int> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10 $arg_11 $arg_12) 6))
                    $arg_6)
                  (and
                    (=
                      ($struct_get<Int> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10 $arg_11 $arg_12) 7))
                      $arg_7)
                    (and
                      (=
                        ($struct_get<Int> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10 $arg_11 $arg_12) 8))
                        $arg_8)
                      (and
                        (=
                          ($struct_get<Bool> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10 $arg_11 $arg_12) 9))
                          $arg_9)
                        (and
                          (=
                            ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10 $arg_11 $arg_12) 10))
                            $arg_10)
                          (and
                            (=
                              ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10 $arg_11 $arg_12) 11))
                              $arg_11)
                            (=
                              ($struct_get<Bool> ($struct_loc<Int> (s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10 $arg_11 $arg_12) 12))
                              $arg_12))))))))))))))
  :pattern ((s$struct$self$init<$Struct> $arg_0 $arg_1 $arg_2 $arg_3 $arg_4 $arg_5 $arg_6 $arg_7 $arg_8 $arg_9 $arg_10 $arg_11 $arg_12))
  :qid |prog.s$struct$self$init$ax|)))
(assert (forall (($l $Struct) ($r $Struct)) (!
  (and
    (= (s$struct$self$eq<Bool> $l $r) (= $l $r))
    (=
      (s$struct$self$eq<Bool> $l $r)
      (and
        (=
          ($struct_get<Int> ($struct_loc<Int> $l (- 0 1)))
          ($struct_get<Int> ($struct_loc<Int> $r (- 0 1))))
        (and
          (Seq_equal
            ($struct_get<Seq<Int>> ($struct_loc<Int> $l 0))
            ($struct_get<Seq<Int>> ($struct_loc<Int> $r 0)))
          (and
            (Seq_equal
              ($struct_get<Seq<Int>> ($struct_loc<Int> $l 1))
              ($struct_get<Seq<Int>> ($struct_loc<Int> $r 1)))
            (and
              (=
                ($struct_get<Int> ($struct_loc<Int> $l 2))
                ($struct_get<Int> ($struct_loc<Int> $r 2)))
              (and
                ($map_eq<Bool> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $l 3)) ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $r 3)))
                (and
                  ($map_eq<Bool> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $l 4)) ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $r 4)))
                  (and
                    (=
                      ($struct_get<Int> ($struct_loc<Int> $l 5))
                      ($struct_get<Int> ($struct_loc<Int> $r 5)))
                    (and
                      (=
                        ($struct_get<Int> ($struct_loc<Int> $l 6))
                        ($struct_get<Int> ($struct_loc<Int> $r 6)))
                      (and
                        (=
                          ($struct_get<Int> ($struct_loc<Int> $l 7))
                          ($struct_get<Int> ($struct_loc<Int> $r 7)))
                        (and
                          (=
                            ($struct_get<Int> ($struct_loc<Int> $l 8))
                            ($struct_get<Int> ($struct_loc<Int> $r 8)))
                          (and
                            (=
                              ($struct_get<Bool> ($struct_loc<Int> $l 9))
                              ($struct_get<Bool> ($struct_loc<Int> $r 9)))
                            (and
                              ($map_eq<Bool> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $l 10)) ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $r 10)))
                              (and
                                ($map_eq<Bool> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $l 11)) ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $r 11)))
                                (=
                                  ($struct_get<Bool> ($struct_loc<Int> $l 12))
                                  ($struct_get<Bool> ($struct_loc<Int> $r 12))))))))))))))))))
  :pattern ((s$struct$self$eq<Bool> $l $r))
  :qid |prog.s$struct$self$eq$ax|)))
; End preamble
; ------------------------------------------------------------
; State saturation: after preamble
(set-option :timeout 100)
(check-sat)
; unknown
; ------------------------------------------------------------
; Begin function- and predicate-related preamble
; Declaring symbols related to program functions (from verification)
(declare-fun letvar@7@00 ($Snap Int Int) Bool)
(declare-fun letvar@8@00 ($Snap Int Int) Bool)
(declare-fun letvar@9@00 ($Snap Int Int) Int)
(declare-fun letvar@10@00 ($Snap Int Int) Int)
(assert (forall ((s@$ $Snap) (x@0@00 $Struct)) (!
  (= ($pure$success_get%limited s@$ x@0@00) ($pure$success_get s@$ x@0@00))
  :pattern (($pure$success_get s@$ x@0@00))
  :qid |quant-u-2015|)))
(assert (forall ((s@$ $Snap) (x@0@00 $Struct)) (!
  ($pure$success_get%stateless x@0@00)
  :pattern (($pure$success_get%limited s@$ x@0@00))
  :qid |quant-u-2016|)))
(assert (forall ((s@$ $Snap) (x@0@00 $Struct)) (!
  (=>
    ($pure$success_get%precondition s@$ x@0@00)
    (=
      ($pure$success_get s@$ x@0@00)
      ($struct_get<Bool> ($struct_loc<Int> x@0@00 0))))
  :pattern (($pure$success_get s@$ x@0@00))
  :qid |quant-u-2021|)))
(assert (forall ((s@$ $Snap) (x@0@00 $Struct)) (!
  true
  :pattern (($pure$success_get s@$ x@0@00))
  :qid |quant-u-2022|)))
(assert (forall ((s@$ $Snap) (x@2@00 $Struct)) (!
  (= ($pure$return_get%limited s@$ x@2@00) ($pure$return_get s@$ x@2@00))
  :pattern (($pure$return_get s@$ x@2@00))
  :qid |quant-u-2017|)))
(assert (forall ((s@$ $Snap) (x@2@00 $Struct)) (!
  ($pure$return_get%stateless x@2@00)
  :pattern (($pure$return_get%limited s@$ x@2@00))
  :qid |quant-u-2018|)))
(assert (forall ((s@$ $Snap) (x@2@00 $Struct)) (!
  (=>
    ($pure$return_get%precondition s@$ x@2@00)
    (= ($pure$return_get s@$ x@2@00) ($struct_loc<Int> x@2@00 1)))
  :pattern (($pure$return_get s@$ x@2@00))
  :qid |quant-u-2023|)))
(assert (forall ((s@$ $Snap) (x@2@00 $Struct)) (!
  true
  :pattern (($pure$return_get s@$ x@2@00))
  :qid |quant-u-2024|)))
(assert (forall ((s@$ $Snap) ($x@4@00 Int) ($y@5@00 Int)) (!
  (= ($range_sum%limited s@$ $x@4@00 $y@5@00) ($range_sum s@$ $x@4@00 $y@5@00))
  :pattern (($range_sum s@$ $x@4@00 $y@5@00))
  :qid |quant-u-2019|)))
(assert (forall ((s@$ $Snap) ($x@4@00 Int) ($y@5@00 Int)) (!
  ($range_sum%stateless $x@4@00 $y@5@00)
  :pattern (($range_sum%limited s@$ $x@4@00 $y@5@00))
  :qid |quant-u-2020|)))
(assert (forall ((s@$ $Snap) ($x@4@00 Int) ($y@5@00 Int)) (!
  (=>
    ($range_sum%precondition s@$ $x@4@00 $y@5@00)
    (=
      ($range_sum s@$ $x@4@00 $y@5@00)
      (let (($x_ge_0 (>= $x@4@00 0))) (let (($y_ge_0 (>= $y@5@00 0))) (let (($x_exclusive (ite
        $x_ge_0
        (div (* (- $x@4@00 1) $x@4@00) 2)
        (div (* (- (- 0 $x@4@00) 1) (- 0 $x@4@00)) 2)))) (let (($y_exclusive (ite
        $y_ge_0
        (div (* (- $y@5@00 1) $y@5@00) 2)
        (div (* (- (- 0 $y@5@00) 1) (- 0 $y@5@00)) 2)))) (ite
        (and $x_ge_0 $y_ge_0)
        (- $y_exclusive $x_exclusive)
        (ite
          (and (not $x_ge_0) $y_ge_0)
          (+ (- $y_exclusive $x_exclusive) $x@4@00)
          (+ (- (- $y_exclusive $y@5@00) $x_exclusive) $x@4@00)))))))))
  :pattern (($range_sum s@$ $x@4@00 $y@5@00))
  :qid |quant-u-2025|)))
(assert (forall ((s@$ $Snap) ($x@4@00 Int) ($y@5@00 Int)) (!
  (=>
    ($range_sum%precondition s@$ $x@4@00 $y@5@00)
    (let (($x_ge_0 (>= $x@4@00 0))) (let (($y_ge_0 (>= $y@5@00 0))) (let (($x_exclusive (ite
      $x_ge_0
      (div (* (- $x@4@00 1) $x@4@00) 2)
      (div (* (- (- 0 $x@4@00) 1) (- 0 $x@4@00)) 2)))) (let (($y_exclusive (ite
      $y_ge_0
      (div (* (- $y@5@00 1) $y@5@00) 2)
      (div (* (- (- 0 $y@5@00) 1) (- 0 $y@5@00)) 2)))) true)))))
  :pattern (($range_sum s@$ $x@4@00 $y@5@00))
  :qid |quant-u-2026|)))
; End function- and predicate-related preamble
; ------------------------------------------------------------
; ---------- $transitivity_check ----------
(set-option :timeout 0)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var $self$0: $Struct
(declare-const $self$0@0@01 $Struct)
; [exec]
; var $$contracts$0: $Map[Int, $Struct]
(declare-const $$contracts$0@1@01 $Map<Int~_$Struct>)
; [exec]
; var $self$1: $Struct
(declare-const $self$1@2@01 $Struct)
; [exec]
; var $$contracts$1: $Map[Int, $Struct]
(declare-const $$contracts$1@3@01 $Map<Int~_$Struct>)
; [exec]
; var $self$2: $Struct
(declare-const $self$2@4@01 $Struct)
; [exec]
; var $$contracts$2: $Map[Int, $Struct]
(declare-const $$contracts$2@5@01 $Map<Int~_$Struct>)
; [exec]
; var block: $Struct
(declare-const block@6@01 $Struct)
; [exec]
; var $post: Bool
(declare-const $post@7@01 Bool)
; [exec]
; inhale |($struct_get($struct_loc($self$0, 0)): Seq[Int])| <= 64
(declare-const $t@8@01 $Snap)
(assert (= $t@8@01 $Snap.unit))
; [eval] |($struct_get($struct_loc($self$0, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc($self$0, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc($self$0, 0)): Seq[Int])
; [eval] $struct_loc($self$0, 0)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> $self$0@0@01 0))) 64))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc($self$0, 1)): Seq[Int])| <= 32
(declare-const $t@9@01 $Snap)
(assert (= $t@9@01 $Snap.unit))
; [eval] |($struct_get($struct_loc($self$0, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc($self$0, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc($self$0, 1)): Seq[Int])
; [eval] $struct_loc($self$0, 1)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> $self$0@0@01 1))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$0, 2)): Int) &&
;   ($struct_get($struct_loc($self$0, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@10@01 $Snap)
(assert (= $t@10@01 ($Snap.combine ($Snap.first $t@10@01) ($Snap.second $t@10@01))))
(assert (= ($Snap.first $t@10@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$0, 2)): Int)
; [eval] ($struct_get($struct_loc($self$0, 2)): Int)
; [eval] $struct_loc($self$0, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 2))))
(assert (= ($Snap.second $t@10@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$0, 2)): Int)
; [eval] $struct_loc($self$0, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@11@01 $Snap)
(assert (= $t@11@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@12@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 3)
(push) ; 4
; [then-branch: 0 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 3)), $q2@12@01)) | live]
; [else-branch: 0 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 3)), $q2@12@01) | live]
(push) ; 5
; [then-branch: 0 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 3)), $q2@12@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 3)) $q2@12@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 0 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 3)), $q2@12@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 3)) $q2@12@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 3)) $q2@12@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 3)) $q2@12@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@12@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 3)) $q2@12@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 3)) $q2@12@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 3)) $q2@12@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@645@11@645@354-aux|)))
(assert (forall (($q2@12@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 3)) $q2@12@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 3)) $q2@12@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 3)) $q2@12@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@645@11@645@354|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])): Int))
(declare-const $t@13@01 $Snap)
(assert (= $t@13@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])): Int))
(declare-const $q2@14@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 3)
; [eval] ($map_sum(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@14@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 3)) $q2@14@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 3)) $q2@14@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@646@11@646@262|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@15@01 $Snap)
(assert (= $t@15@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@16@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@17@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$0, 4)
(push) ; 5
; [then-branch: 1 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$0@0@01, 4)), $q3@16@01), $q4@17@01)) | live]
; [else-branch: 1 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$0@0@01, 4)), $q3@16@01), $q4@17@01) | live]
(push) ; 6
; [then-branch: 1 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$0@0@01, 4)), $q3@16@01), $q4@17@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@16@01) $q4@17@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 1 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$0@0@01, 4)), $q3@16@01), $q4@17@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@16@01) $q4@17@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$0, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@16@01) $q4@17@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@16@01) $q4@17@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@17@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@16@01) $q4@17@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@16@01) $q4@17@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@16@01) $q4@17@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@647@134@647@609-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@16@01 Int)) (!
  (forall (($q4@17@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@16@01) $q4@17@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@16@01) $q4@17@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@16@01) $q4@17@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@647@134@647@609-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@16@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@647@11@647@610-aux|)))
(assert (forall (($q3@16@01 Int)) (!
  (forall (($q4@17@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@16@01) $q4@17@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@16@01) $q4@17@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@16@01) $q4@17@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@647@134@647@609|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@16@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@647@11@647@610|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@18@01 $Snap)
(assert (= $t@18@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@19@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@20@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$0, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$0, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@19@01 Int)) (!
  (forall (($q4@20@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@19@01) $q4@20@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@19@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@19@01) $q4@20@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@648@134@648@517|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@0@01 4)) $q3@19@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@648@11@648@518|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$0, 5)): Int) &&
;   ($struct_get($struct_loc($self$0, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@21@01 $Snap)
(assert (= $t@21@01 ($Snap.combine ($Snap.first $t@21@01) ($Snap.second $t@21@01))))
(assert (= ($Snap.first $t@21@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$0, 5)): Int)
; [eval] ($struct_get($struct_loc($self$0, 5)): Int)
; [eval] $struct_loc($self$0, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 5))))
(assert (= ($Snap.second $t@21@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$0, 5)): Int)
; [eval] $struct_loc($self$0, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$0, 6)): Int) &&
;   ($struct_get($struct_loc($self$0, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@22@01 $Snap)
(assert (= $t@22@01 ($Snap.combine ($Snap.first $t@22@01) ($Snap.second $t@22@01))))
(assert (= ($Snap.first $t@22@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] $struct_loc($self$0, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 6))))
(assert (= ($Snap.second $t@22@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] $struct_loc($self$0, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$0, 7)): Int) &&
;   ($struct_get($struct_loc($self$0, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@23@01 $Snap)
(assert (= $t@23@01 ($Snap.combine ($Snap.first $t@23@01) ($Snap.second $t@23@01))))
(assert (= ($Snap.first $t@23@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$0, 7)): Int)
; [eval] ($struct_get($struct_loc($self$0, 7)): Int)
; [eval] $struct_loc($self$0, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 7))))
(assert (= ($Snap.second $t@23@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$0, 7)): Int)
; [eval] $struct_loc($self$0, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$0, 8)): Int) &&
;   ($struct_get($struct_loc($self$0, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@24@01 $Snap)
(assert (= $t@24@01 ($Snap.combine ($Snap.first $t@24@01) ($Snap.second $t@24@01))))
(assert (= ($Snap.first $t@24@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$0, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$0, 8)): Int)
; [eval] $struct_loc($self$0, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 8))))
(assert (= ($Snap.second $t@24@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$0, 8)): Int)
; [eval] $struct_loc($self$0, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@25@01 $Snap)
(assert (= $t@25@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@26@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 10)
(push) ; 4
; [then-branch: 2 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 10)), $q5@26@01)) | live]
; [else-branch: 2 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 10)), $q5@26@01) | live]
(push) ; 5
; [then-branch: 2 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 10)), $q5@26@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 10)) $q5@26@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 2 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 10)), $q5@26@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 10)) $q5@26@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 10)) $q5@26@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 10)) $q5@26@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@26@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 10)) $q5@26@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 10)) $q5@26@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 10)) $q5@26@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@653@11@653@357-aux|)))
(assert (forall (($q5@26@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 10)) $q5@26@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 10)) $q5@26@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 10)) $q5@26@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@653@11@653@357|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])): Int))
(declare-const $t@27@01 $Snap)
(assert (= $t@27@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])): Int))
(declare-const $q5@28@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 10)
; [eval] ($map_sum(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@28@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 10)) $q5@28@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 10)) $q5@28@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@654@11@654@265|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@29@01 $Snap)
(assert (= $t@29@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@30@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 11)
(push) ; 4
; [then-branch: 3 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 11)), $q6@30@01)) | live]
; [else-branch: 3 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 11)), $q6@30@01) | live]
(push) ; 5
; [then-branch: 3 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 11)), $q6@30@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 11)) $q6@30@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 3 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@0@01, 11)), $q6@30@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 11)) $q6@30@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 11)) $q6@30@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 11)) $q6@30@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@30@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 11)) $q6@30@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 11)) $q6@30@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 11)) $q6@30@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@655@11@655@357-aux|)))
(assert (forall (($q6@30@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 11)) $q6@30@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 11)) $q6@30@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 11)) $q6@30@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@655@11@655@357|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])): Int))
(declare-const $t@31@01 $Snap)
(assert (= $t@31@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])): Int))
(declare-const $q6@32@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 11)
; [eval] ($map_sum(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@32@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 11)) $q6@32@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 11)) $q6@32@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@656@11@656@265|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$0, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@33@01 $Snap)
(assert (= $t@33@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc($self$0, -1)): Int)
; [eval] $struct_loc($self$0, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc($self$1, 0)): Seq[Int])| <= 64
(declare-const $t@34@01 $Snap)
(assert (= $t@34@01 $Snap.unit))
; [eval] |($struct_get($struct_loc($self$1, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc($self$1, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc($self$1, 0)): Seq[Int])
; [eval] $struct_loc($self$1, 0)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> $self$1@2@01 0))) 64))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc($self$1, 1)): Seq[Int])| <= 32
(declare-const $t@35@01 $Snap)
(assert (= $t@35@01 $Snap.unit))
; [eval] |($struct_get($struct_loc($self$1, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc($self$1, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc($self$1, 1)): Seq[Int])
; [eval] $struct_loc($self$1, 1)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> $self$1@2@01 1))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$1, 2)): Int) &&
;   ($struct_get($struct_loc($self$1, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@36@01 $Snap)
(assert (= $t@36@01 ($Snap.combine ($Snap.first $t@36@01) ($Snap.second $t@36@01))))
(assert (= ($Snap.first $t@36@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$1, 2)): Int)
; [eval] ($struct_get($struct_loc($self$1, 2)): Int)
; [eval] $struct_loc($self$1, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 2))))
(assert (= ($Snap.second $t@36@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$1, 2)): Int)
; [eval] $struct_loc($self$1, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@37@01 $Snap)
(assert (= $t@37@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@38@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 3)
(push) ; 4
; [then-branch: 4 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 3)), $q2@38@01)) | live]
; [else-branch: 4 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 3)), $q2@38@01) | live]
(push) ; 5
; [then-branch: 4 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 3)), $q2@38@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 3)) $q2@38@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 4 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 3)), $q2@38@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 3)) $q2@38@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 3)) $q2@38@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 3)) $q2@38@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@38@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 3)) $q2@38@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 3)) $q2@38@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 3)) $q2@38@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@661@11@661@354-aux|)))
(assert (forall (($q2@38@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 3)) $q2@38@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 3)) $q2@38@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 3)) $q2@38@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@661@11@661@354|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int))
(declare-const $t@39@01 $Snap)
(assert (= $t@39@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int))
(declare-const $q2@40@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 3)
; [eval] ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@40@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 3)) $q2@40@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 3)) $q2@40@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@662@11@662@262|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@41@01 $Snap)
(assert (= $t@41@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@42@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@43@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$1, 4)
(push) ; 5
; [then-branch: 5 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$1@2@01, 4)), $q3@42@01), $q4@43@01)) | live]
; [else-branch: 5 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$1@2@01, 4)), $q3@42@01), $q4@43@01) | live]
(push) ; 6
; [then-branch: 5 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$1@2@01, 4)), $q3@42@01), $q4@43@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@42@01) $q4@43@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 5 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$1@2@01, 4)), $q3@42@01), $q4@43@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@42@01) $q4@43@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$1, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@42@01) $q4@43@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@42@01) $q4@43@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@43@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@42@01) $q4@43@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@42@01) $q4@43@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@42@01) $q4@43@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@663@134@663@609-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@42@01 Int)) (!
  (forall (($q4@43@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@42@01) $q4@43@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@42@01) $q4@43@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@42@01) $q4@43@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@663@134@663@609-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@42@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@663@11@663@610-aux|)))
(assert (forall (($q3@42@01 Int)) (!
  (forall (($q4@43@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@42@01) $q4@43@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@42@01) $q4@43@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@42@01) $q4@43@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@663@134@663@609|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@42@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@663@11@663@610|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@44@01 $Snap)
(assert (= $t@44@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@45@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@46@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$1, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$1, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@45@01 Int)) (!
  (forall (($q4@46@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@45@01) $q4@46@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@45@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@45@01) $q4@46@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@664@134@664@517|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@2@01 4)) $q3@45@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@664@11@664@518|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$1, 5)): Int) &&
;   ($struct_get($struct_loc($self$1, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@47@01 $Snap)
(assert (= $t@47@01 ($Snap.combine ($Snap.first $t@47@01) ($Snap.second $t@47@01))))
(assert (= ($Snap.first $t@47@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$1, 5)): Int)
; [eval] ($struct_get($struct_loc($self$1, 5)): Int)
; [eval] $struct_loc($self$1, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 5))))
(assert (= ($Snap.second $t@47@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$1, 5)): Int)
; [eval] $struct_loc($self$1, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$1, 6)): Int) &&
;   ($struct_get($struct_loc($self$1, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@48@01 $Snap)
(assert (= $t@48@01 ($Snap.combine ($Snap.first $t@48@01) ($Snap.second $t@48@01))))
(assert (= ($Snap.first $t@48@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] $struct_loc($self$1, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 6))))
(assert (= ($Snap.second $t@48@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] $struct_loc($self$1, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$1, 7)): Int) &&
;   ($struct_get($struct_loc($self$1, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@49@01 $Snap)
(assert (= $t@49@01 ($Snap.combine ($Snap.first $t@49@01) ($Snap.second $t@49@01))))
(assert (= ($Snap.first $t@49@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$1, 7)): Int)
; [eval] ($struct_get($struct_loc($self$1, 7)): Int)
; [eval] $struct_loc($self$1, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 7))))
(assert (= ($Snap.second $t@49@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$1, 7)): Int)
; [eval] $struct_loc($self$1, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$1, 8)): Int) &&
;   ($struct_get($struct_loc($self$1, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@50@01 $Snap)
(assert (= $t@50@01 ($Snap.combine ($Snap.first $t@50@01) ($Snap.second $t@50@01))))
(assert (= ($Snap.first $t@50@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$1, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$1, 8)): Int)
; [eval] $struct_loc($self$1, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 8))))
(assert (= ($Snap.second $t@50@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$1, 8)): Int)
; [eval] $struct_loc($self$1, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@51@01 $Snap)
(assert (= $t@51@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@52@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 10)
(push) ; 4
; [then-branch: 6 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 10)), $q5@52@01)) | live]
; [else-branch: 6 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 10)), $q5@52@01) | live]
(push) ; 5
; [then-branch: 6 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 10)), $q5@52@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10)) $q5@52@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 6 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 10)), $q5@52@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10)) $q5@52@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10)) $q5@52@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10)) $q5@52@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@52@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10)) $q5@52@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10)) $q5@52@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10)) $q5@52@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@669@11@669@357-aux|)))
(assert (forall (($q5@52@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10)) $q5@52@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10)) $q5@52@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10)) $q5@52@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@669@11@669@357|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])): Int))
(declare-const $t@53@01 $Snap)
(assert (= $t@53@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])): Int))
(declare-const $q5@54@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 10)
; [eval] ($map_sum(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@54@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10)) $q5@54@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10)) $q5@54@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@670@11@670@265|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@55@01 $Snap)
(assert (= $t@55@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@56@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 11)
(push) ; 4
; [then-branch: 7 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 11)), $q6@56@01)) | live]
; [else-branch: 7 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 11)), $q6@56@01) | live]
(push) ; 5
; [then-branch: 7 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 11)), $q6@56@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 11)) $q6@56@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 7 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@2@01, 11)), $q6@56@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 11)) $q6@56@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 11)) $q6@56@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 11)) $q6@56@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@56@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 11)) $q6@56@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 11)) $q6@56@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 11)) $q6@56@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@671@11@671@357-aux|)))
(assert (forall (($q6@56@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 11)) $q6@56@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 11)) $q6@56@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 11)) $q6@56@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@671@11@671@357|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])): Int))
(declare-const $t@57@01 $Snap)
(assert (= $t@57@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])): Int))
(declare-const $q6@58@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 11)
; [eval] ($map_sum(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@58@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 11)) $q6@58@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 11)) $q6@58@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@672@11@672@265|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$1, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@59@01 $Snap)
(assert (= $t@59@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc($self$1, -1)): Int)
; [eval] $struct_loc($self$1, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc($self$2, 0)): Seq[Int])| <= 64
(declare-const $t@60@01 $Snap)
(assert (= $t@60@01 $Snap.unit))
; [eval] |($struct_get($struct_loc($self$2, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc($self$2, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc($self$2, 0)): Seq[Int])
; [eval] $struct_loc($self$2, 0)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> $self$2@4@01 0))) 64))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc($self$2, 1)): Seq[Int])| <= 32
(declare-const $t@61@01 $Snap)
(assert (= $t@61@01 $Snap.unit))
; [eval] |($struct_get($struct_loc($self$2, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc($self$2, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc($self$2, 1)): Seq[Int])
; [eval] $struct_loc($self$2, 1)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> $self$2@4@01 1))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$2, 2)): Int) &&
;   ($struct_get($struct_loc($self$2, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@62@01 $Snap)
(assert (= $t@62@01 ($Snap.combine ($Snap.first $t@62@01) ($Snap.second $t@62@01))))
(assert (= ($Snap.first $t@62@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$2, 2)): Int)
; [eval] ($struct_get($struct_loc($self$2, 2)): Int)
; [eval] $struct_loc($self$2, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 2))))
(assert (= ($Snap.second $t@62@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$2, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$2, 2)): Int)
; [eval] $struct_loc($self$2, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@63@01 $Snap)
(assert (= $t@63@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@64@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 3)
(push) ; 4
; [then-branch: 8 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 3)), $q2@64@01)) | live]
; [else-branch: 8 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 3)), $q2@64@01) | live]
(push) ; 5
; [then-branch: 8 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 3)), $q2@64@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 3)) $q2@64@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 8 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 3)), $q2@64@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 3)) $q2@64@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 3)) $q2@64@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 3)) $q2@64@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@64@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 3)) $q2@64@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 3)) $q2@64@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 3)) $q2@64@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@677@11@677@354-aux|)))
(assert (forall (($q2@64@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 3)) $q2@64@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 3)) $q2@64@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 3)) $q2@64@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@677@11@677@354|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])): Int))
(declare-const $t@65@01 $Snap)
(assert (= $t@65@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])): Int))
(declare-const $q2@66@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 3)
; [eval] ($map_sum(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@66@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 3)) $q2@66@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 3)) $q2@66@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@678@11@678@262|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@67@01 $Snap)
(assert (= $t@67@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@68@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@69@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$2, 4)
(push) ; 5
; [then-branch: 9 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$2@4@01, 4)), $q3@68@01), $q4@69@01)) | live]
; [else-branch: 9 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$2@4@01, 4)), $q3@68@01), $q4@69@01) | live]
(push) ; 6
; [then-branch: 9 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$2@4@01, 4)), $q3@68@01), $q4@69@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@68@01) $q4@69@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 9 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$2@4@01, 4)), $q3@68@01), $q4@69@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@68@01) $q4@69@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$2, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@68@01) $q4@69@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@68@01) $q4@69@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@69@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@68@01) $q4@69@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@68@01) $q4@69@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@68@01) $q4@69@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@679@134@679@609-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@68@01 Int)) (!
  (forall (($q4@69@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@68@01) $q4@69@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@68@01) $q4@69@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@68@01) $q4@69@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@679@134@679@609-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@68@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@679@11@679@610-aux|)))
(assert (forall (($q3@68@01 Int)) (!
  (forall (($q4@69@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@68@01) $q4@69@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@68@01) $q4@69@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@68@01) $q4@69@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@679@134@679@609|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@68@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@679@11@679@610|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@70@01 $Snap)
(assert (= $t@70@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@71@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@72@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$2, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$2, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@71@01 Int)) (!
  (forall (($q4@72@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@71@01) $q4@72@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@71@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@71@01) $q4@72@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@680@134@680@517|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$2@4@01 4)) $q3@71@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@680@11@680@518|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$2, 5)): Int) &&
;   ($struct_get($struct_loc($self$2, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@73@01 $Snap)
(assert (= $t@73@01 ($Snap.combine ($Snap.first $t@73@01) ($Snap.second $t@73@01))))
(assert (= ($Snap.first $t@73@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$2, 5)): Int)
; [eval] ($struct_get($struct_loc($self$2, 5)): Int)
; [eval] $struct_loc($self$2, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 5))))
(assert (= ($Snap.second $t@73@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$2, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$2, 5)): Int)
; [eval] $struct_loc($self$2, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$2, 6)): Int) &&
;   ($struct_get($struct_loc($self$2, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@74@01 $Snap)
(assert (= $t@74@01 ($Snap.combine ($Snap.first $t@74@01) ($Snap.second $t@74@01))))
(assert (= ($Snap.first $t@74@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$2, 6)): Int)
; [eval] ($struct_get($struct_loc($self$2, 6)): Int)
; [eval] $struct_loc($self$2, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 6))))
(assert (= ($Snap.second $t@74@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$2, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc($self$2, 6)): Int)
; [eval] $struct_loc($self$2, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$2, 7)): Int) &&
;   ($struct_get($struct_loc($self$2, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@75@01 $Snap)
(assert (= $t@75@01 ($Snap.combine ($Snap.first $t@75@01) ($Snap.second $t@75@01))))
(assert (= ($Snap.first $t@75@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$2, 7)): Int)
; [eval] ($struct_get($struct_loc($self$2, 7)): Int)
; [eval] $struct_loc($self$2, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 7))))
(assert (= ($Snap.second $t@75@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$2, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$2, 7)): Int)
; [eval] $struct_loc($self$2, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$2, 8)): Int) &&
;   ($struct_get($struct_loc($self$2, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@76@01 $Snap)
(assert (= $t@76@01 ($Snap.combine ($Snap.first $t@76@01) ($Snap.second $t@76@01))))
(assert (= ($Snap.first $t@76@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$2, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$2, 8)): Int)
; [eval] $struct_loc($self$2, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 8))))
(assert (= ($Snap.second $t@76@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$2, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$2, 8)): Int)
; [eval] $struct_loc($self$2, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@77@01 $Snap)
(assert (= $t@77@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@78@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($self$2, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 10)
(push) ; 4
; [then-branch: 10 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 10)), $q5@78@01)) | live]
; [else-branch: 10 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 10)), $q5@78@01) | live]
(push) ; 5
; [then-branch: 10 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 10)), $q5@78@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 10)) $q5@78@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 10 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 10)), $q5@78@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 10)) $q5@78@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($self$2, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 10)) $q5@78@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 10)) $q5@78@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@78@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 10)) $q5@78@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 10)) $q5@78@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 10)) $q5@78@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@685@11@685@357-aux|)))
(assert (forall (($q5@78@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 10)) $q5@78@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 10)) $q5@78@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 10)) $q5@78@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@685@11@685@357|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int])): Int))
(declare-const $t@79@01 $Snap)
(assert (= $t@79@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int])): Int))
(declare-const $q5@80@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($self$2, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 10)
; [eval] ($map_sum(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$2, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@80@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 10)) $q5@80@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 10)) $q5@80@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@686@11@686@265|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@81@01 $Snap)
(assert (= $t@81@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@82@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($self$2, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 11)
(push) ; 4
; [then-branch: 11 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 11)), $q6@82@01)) | live]
; [else-branch: 11 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 11)), $q6@82@01) | live]
(push) ; 5
; [then-branch: 11 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 11)), $q6@82@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 11)) $q6@82@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 11 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$2@4@01, 11)), $q6@82@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 11)) $q6@82@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($self$2, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 11)) $q6@82@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 11)) $q6@82@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@82@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 11)) $q6@82@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 11)) $q6@82@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 11)) $q6@82@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@687@11@687@357-aux|)))
(assert (forall (($q6@82@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 11)) $q6@82@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 11)) $q6@82@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 11)) $q6@82@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@687@11@687@357|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int])): Int))
(declare-const $t@83@01 $Snap)
(assert (= $t@83@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int])): Int))
(declare-const $q6@84@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($self$2, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 11)
; [eval] ($map_sum(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$2, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@84@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 11)) $q6@84@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 11)) $q6@84@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@688@11@688@265|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$2, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@85@01 $Snap)
(assert (= $t@85@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$2, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc($self$2, -1)): Int)
; [eval] $struct_loc($self$2, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@86@01 $Snap)
(assert (= $t@86@01 ($Snap.combine ($Snap.first $t@86@01) ($Snap.second $t@86@01))))
(assert (= ($Snap.first $t@86@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@6@01 0))))
(assert (= ($Snap.second $t@86@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@6@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@87@01 $Snap)
(assert (= $t@87@01 ($Snap.combine ($Snap.first $t@87@01) ($Snap.second $t@87@01))))
(assert (= ($Snap.first $t@87@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@6@01 1))))
(assert (= ($Snap.second $t@87@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@6@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@88@01 $Snap)
(assert (= $t@88@01 ($Snap.combine ($Snap.first $t@88@01) ($Snap.second $t@88@01))))
(assert (= ($Snap.first $t@88@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@6@01 2))))
(assert (= ($Snap.second $t@88@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@6@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@89@01 $Snap)
(assert (= $t@89@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@6@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@90@01 $Snap)
(assert (= $t@90@01 ($Snap.combine ($Snap.first $t@90@01) ($Snap.second $t@90@01))))
(assert (= ($Snap.first $t@90@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@6@01 4))))
(assert (= ($Snap.second $t@90@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@6@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@91@01 $Snap)
(assert (= $t@91@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@6@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int))
(declare-const $t@92@01 $Snap)
(assert (= $t@92@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int))
(declare-const $a@93@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 10)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$0, 6)): Int) ==
;   ($struct_get($struct_loc($self$0, 6)): Int)
(declare-const $t@94@01 $Snap)
(assert (= $t@94@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 6)): Int) == ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] $struct_loc($self$0, 6)
; [eval] ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] $struct_loc($self$0, 6)
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$0, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])): Int)
(declare-const $t@95@01 $Snap)
(assert (= $t@95@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 5)): Int) == ($map_sum(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$0, 5)): Int)
; [eval] $struct_loc($self$0, 5)
; [eval] ($map_sum(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 3)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 3)))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int))
(declare-const $t@96@01 $Snap)
(assert (= $t@96@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int))
(declare-const $a@97@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 10)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($a@97@01 Int)) (!
  (>=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10)) $a@97@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@0@01 10)) $a@97@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10)) $a@97@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@699@11@699@266|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$1, 6)): Int) ==
;   ($struct_get($struct_loc($self$0, 6)): Int)
(declare-const $t@98@01 $Snap)
(assert (= $t@98@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 6)): Int) == ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] $struct_loc($self$1, 6)
; [eval] ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] $struct_loc($self$0, 6)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 6))
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 6))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$1, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
(declare-const $t@99@01 $Snap)
(assert (= $t@99@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 5)): Int) == ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 5)): Int)
; [eval] $struct_loc($self$1, 5)
; [eval] ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 3)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 3)))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int))
(declare-const $t@100@01 $Snap)
(assert (= $t@100@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int))
(declare-const $a@101@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$2, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 10)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($a@101@01 Int)) (!
  (>=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 10)) $a@101@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@2@01 10)) $a@101@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 10)) $a@101@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@702@11@702@266|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$2, 6)): Int) ==
;   ($struct_get($struct_loc($self$1, 6)): Int)
(declare-const $t@102@01 $Snap)
(assert (= $t@102@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$2, 6)): Int) == ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] ($struct_get($struct_loc($self$2, 6)): Int)
; [eval] $struct_loc($self$2, 6)
; [eval] ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] $struct_loc($self$1, 6)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 6))
  ($struct_get<Int> ($struct_loc<Int> $self$1@2@01 6))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$2, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])): Int)
(declare-const $t@103@01 $Snap)
(assert (= $t@103@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$2, 5)): Int) == ($map_sum(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$2, 5)): Int)
; [eval] $struct_loc($self$2, 5)
; [eval] ($map_sum(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 3)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$2@4@01 3)))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; assert ($struct_get($struct_loc($self$2, 6)): Int) ==
;   ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] ($struct_get($struct_loc($self$2, 6)): Int) == ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] ($struct_get($struct_loc($self$2, 6)): Int)
; [eval] $struct_loc($self$2, 6)
; [eval] ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] $struct_loc($self$0, 6)
(set-option :timeout 0)
(push) ; 3
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 6))
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 6)))))
(check-sat)
; unsat
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$2@4@01 6))
  ($struct_get<Int> ($struct_loc<Int> $self$0@0@01 6))))
; [exec]
; assert ($struct_get($struct_loc($self$2, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$2, 5)): Int) == ($map_sum(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$2, 5)): Int)
; [eval] $struct_loc($self$2, 5)
; [eval] ($map_sum(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$2, 3)
(pop) ; 2
(pop) ; 1
; ---------- $reflexivity_check ----------
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var $self$0: $Struct
(declare-const $self$0@104@01 $Struct)
; [exec]
; var $$contracts$0: $Map[Int, $Struct]
(declare-const $$contracts$0@105@01 $Map<Int~_$Struct>)
; [exec]
; var $self$1: $Struct
(declare-const $self$1@106@01 $Struct)
; [exec]
; var $$contracts$1: $Map[Int, $Struct]
(declare-const $$contracts$1@107@01 $Map<Int~_$Struct>)
; [exec]
; var block: $Struct
(declare-const block@108@01 $Struct)
; [exec]
; var $post: Bool
(declare-const $post@109@01 Bool)
; [exec]
; inhale |($struct_get($struct_loc($self$0, 0)): Seq[Int])| <= 64
(declare-const $t@110@01 $Snap)
(assert (= $t@110@01 $Snap.unit))
; [eval] |($struct_get($struct_loc($self$0, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc($self$0, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc($self$0, 0)): Seq[Int])
; [eval] $struct_loc($self$0, 0)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> $self$0@104@01 0))) 64))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc($self$0, 1)): Seq[Int])| <= 32
(declare-const $t@111@01 $Snap)
(assert (= $t@111@01 $Snap.unit))
; [eval] |($struct_get($struct_loc($self$0, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc($self$0, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc($self$0, 1)): Seq[Int])
; [eval] $struct_loc($self$0, 1)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> $self$0@104@01 1))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$0, 2)): Int) &&
;   ($struct_get($struct_loc($self$0, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@112@01 $Snap)
(assert (= $t@112@01 ($Snap.combine ($Snap.first $t@112@01) ($Snap.second $t@112@01))))
(assert (= ($Snap.first $t@112@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$0, 2)): Int)
; [eval] ($struct_get($struct_loc($self$0, 2)): Int)
; [eval] $struct_loc($self$0, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 2))))
(assert (= ($Snap.second $t@112@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$0, 2)): Int)
; [eval] $struct_loc($self$0, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@113@01 $Snap)
(assert (= $t@113@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@114@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 3)
(push) ; 4
; [then-branch: 12 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 3)), $q2@114@01)) | live]
; [else-branch: 12 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 3)), $q2@114@01) | live]
(push) ; 5
; [then-branch: 12 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 3)), $q2@114@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 3)) $q2@114@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 12 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 3)), $q2@114@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 3)) $q2@114@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 3)) $q2@114@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 3)) $q2@114@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@114@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 3)) $q2@114@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 3)) $q2@114@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 3)) $q2@114@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@720@11@720@354-aux|)))
(assert (forall (($q2@114@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 3)) $q2@114@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 3)) $q2@114@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 3)) $q2@114@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@720@11@720@354|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])): Int))
(declare-const $t@115@01 $Snap)
(assert (= $t@115@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])): Int))
(declare-const $q2@116@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 3)
; [eval] ($map_sum(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@116@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 3)) $q2@116@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 3)) $q2@116@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@721@11@721@262|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@117@01 $Snap)
(assert (= $t@117@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@118@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@119@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$0, 4)
(push) ; 5
; [then-branch: 13 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$0@104@01, 4)), $q3@118@01), $q4@119@01)) | live]
; [else-branch: 13 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$0@104@01, 4)), $q3@118@01), $q4@119@01) | live]
(push) ; 6
; [then-branch: 13 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$0@104@01, 4)), $q3@118@01), $q4@119@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@118@01) $q4@119@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 13 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$0@104@01, 4)), $q3@118@01), $q4@119@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@118@01) $q4@119@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$0, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@118@01) $q4@119@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@118@01) $q4@119@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@119@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@118@01) $q4@119@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@118@01) $q4@119@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@118@01) $q4@119@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@722@134@722@609-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@118@01 Int)) (!
  (forall (($q4@119@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@118@01) $q4@119@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@118@01) $q4@119@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@118@01) $q4@119@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@722@134@722@609-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@118@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@722@11@722@610-aux|)))
(assert (forall (($q3@118@01 Int)) (!
  (forall (($q4@119@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@118@01) $q4@119@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@118@01) $q4@119@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@118@01) $q4@119@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@722@134@722@609|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@118@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@722@11@722@610|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@120@01 $Snap)
(assert (= $t@120@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@121@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@122@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$0, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$0, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@121@01 Int)) (!
  (forall (($q4@122@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@121@01) $q4@122@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@121@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@121@01) $q4@122@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@723@134@723@517|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$0@104@01 4)) $q3@121@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@723@11@723@518|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$0, 5)): Int) &&
;   ($struct_get($struct_loc($self$0, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@123@01 $Snap)
(assert (= $t@123@01 ($Snap.combine ($Snap.first $t@123@01) ($Snap.second $t@123@01))))
(assert (= ($Snap.first $t@123@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$0, 5)): Int)
; [eval] ($struct_get($struct_loc($self$0, 5)): Int)
; [eval] $struct_loc($self$0, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 5))))
(assert (= ($Snap.second $t@123@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$0, 5)): Int)
; [eval] $struct_loc($self$0, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$0, 6)): Int) &&
;   ($struct_get($struct_loc($self$0, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@124@01 $Snap)
(assert (= $t@124@01 ($Snap.combine ($Snap.first $t@124@01) ($Snap.second $t@124@01))))
(assert (= ($Snap.first $t@124@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] $struct_loc($self$0, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 6))))
(assert (= ($Snap.second $t@124@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] $struct_loc($self$0, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$0, 7)): Int) &&
;   ($struct_get($struct_loc($self$0, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@125@01 $Snap)
(assert (= $t@125@01 ($Snap.combine ($Snap.first $t@125@01) ($Snap.second $t@125@01))))
(assert (= ($Snap.first $t@125@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$0, 7)): Int)
; [eval] ($struct_get($struct_loc($self$0, 7)): Int)
; [eval] $struct_loc($self$0, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 7))))
(assert (= ($Snap.second $t@125@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$0, 7)): Int)
; [eval] $struct_loc($self$0, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$0, 8)): Int) &&
;   ($struct_get($struct_loc($self$0, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@126@01 $Snap)
(assert (= $t@126@01 ($Snap.combine ($Snap.first $t@126@01) ($Snap.second $t@126@01))))
(assert (= ($Snap.first $t@126@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$0, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$0, 8)): Int)
; [eval] $struct_loc($self$0, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 8))))
(assert (= ($Snap.second $t@126@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$0, 8)): Int)
; [eval] $struct_loc($self$0, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@127@01 $Snap)
(assert (= $t@127@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@128@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 10)
(push) ; 4
; [then-branch: 14 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 10)), $q5@128@01)) | live]
; [else-branch: 14 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 10)), $q5@128@01) | live]
(push) ; 5
; [then-branch: 14 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 10)), $q5@128@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 10)) $q5@128@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 14 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 10)), $q5@128@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 10)) $q5@128@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 10)) $q5@128@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 10)) $q5@128@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@128@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 10)) $q5@128@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 10)) $q5@128@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 10)) $q5@128@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@728@11@728@357-aux|)))
(assert (forall (($q5@128@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 10)) $q5@128@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 10)) $q5@128@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 10)) $q5@128@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@728@11@728@357|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])): Int))
(declare-const $t@129@01 $Snap)
(assert (= $t@129@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])): Int))
(declare-const $q5@130@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 10)
; [eval] ($map_sum(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@130@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 10)) $q5@130@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 10)) $q5@130@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@729@11@729@265|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@131@01 $Snap)
(assert (= $t@131@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@132@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 11)
(push) ; 4
; [then-branch: 15 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 11)), $q6@132@01)) | live]
; [else-branch: 15 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 11)), $q6@132@01) | live]
(push) ; 5
; [then-branch: 15 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 11)), $q6@132@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 11)) $q6@132@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 15 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$0@104@01, 11)), $q6@132@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 11)) $q6@132@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 11)) $q6@132@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 11)) $q6@132@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@132@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 11)) $q6@132@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 11)) $q6@132@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 11)) $q6@132@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@730@11@730@357-aux|)))
(assert (forall (($q6@132@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 11)) $q6@132@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 11)) $q6@132@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 11)) $q6@132@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@730@11@730@357|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])): Int))
(declare-const $t@133@01 $Snap)
(assert (= $t@133@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])): Int))
(declare-const $q6@134@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 11)
; [eval] ($map_sum(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@134@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 11)) $q6@134@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 11)) $q6@134@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@731@11@731@265|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$0, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@135@01 $Snap)
(assert (= $t@135@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$0, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc($self$0, -1)): Int)
; [eval] $struct_loc($self$0, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc($self$1, 0)): Seq[Int])| <= 64
(declare-const $t@136@01 $Snap)
(assert (= $t@136@01 $Snap.unit))
; [eval] |($struct_get($struct_loc($self$1, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc($self$1, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc($self$1, 0)): Seq[Int])
; [eval] $struct_loc($self$1, 0)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> $self$1@106@01 0))) 64))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc($self$1, 1)): Seq[Int])| <= 32
(declare-const $t@137@01 $Snap)
(assert (= $t@137@01 $Snap.unit))
; [eval] |($struct_get($struct_loc($self$1, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc($self$1, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc($self$1, 1)): Seq[Int])
; [eval] $struct_loc($self$1, 1)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> $self$1@106@01 1))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$1, 2)): Int) &&
;   ($struct_get($struct_loc($self$1, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@138@01 $Snap)
(assert (= $t@138@01 ($Snap.combine ($Snap.first $t@138@01) ($Snap.second $t@138@01))))
(assert (= ($Snap.first $t@138@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$1, 2)): Int)
; [eval] ($struct_get($struct_loc($self$1, 2)): Int)
; [eval] $struct_loc($self$1, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 2))))
(assert (= ($Snap.second $t@138@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$1, 2)): Int)
; [eval] $struct_loc($self$1, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@139@01 $Snap)
(assert (= $t@139@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@140@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 3)
(push) ; 4
; [then-branch: 16 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 3)), $q2@140@01)) | live]
; [else-branch: 16 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 3)), $q2@140@01) | live]
(push) ; 5
; [then-branch: 16 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 3)), $q2@140@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 3)) $q2@140@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 16 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 3)), $q2@140@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 3)) $q2@140@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 3)) $q2@140@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 3)) $q2@140@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@140@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 3)) $q2@140@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 3)) $q2@140@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 3)) $q2@140@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@736@11@736@354-aux|)))
(assert (forall (($q2@140@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 3)) $q2@140@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 3)) $q2@140@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 3)) $q2@140@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@736@11@736@354|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int))
(declare-const $t@141@01 $Snap)
(assert (= $t@141@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int))
(declare-const $q2@142@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 3)
; [eval] ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@142@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 3)) $q2@142@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 3)) $q2@142@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@737@11@737@262|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@143@01 $Snap)
(assert (= $t@143@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@144@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@145@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$1, 4)
(push) ; 5
; [then-branch: 17 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$1@106@01, 4)), $q3@144@01), $q4@145@01)) | live]
; [else-branch: 17 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$1@106@01, 4)), $q3@144@01), $q4@145@01) | live]
(push) ; 6
; [then-branch: 17 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$1@106@01, 4)), $q3@144@01), $q4@145@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@144@01) $q4@145@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 17 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($self$1@106@01, 4)), $q3@144@01), $q4@145@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@144@01) $q4@145@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$1, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@144@01) $q4@145@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@144@01) $q4@145@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@145@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@144@01) $q4@145@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@144@01) $q4@145@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@144@01) $q4@145@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@738@134@738@609-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@144@01 Int)) (!
  (forall (($q4@145@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@144@01) $q4@145@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@144@01) $q4@145@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@144@01) $q4@145@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@738@134@738@609-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@144@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@738@11@738@610-aux|)))
(assert (forall (($q3@144@01 Int)) (!
  (forall (($q4@145@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@144@01) $q4@145@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@144@01) $q4@145@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@144@01) $q4@145@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@738@134@738@609|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@144@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@738@11@738@610|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@146@01 $Snap)
(assert (= $t@146@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@147@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@148@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$1, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($self$1, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@147@01 Int)) (!
  (forall (($q4@148@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@147@01) $q4@148@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@147@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@147@01) $q4@148@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@739@134@739@517|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $self$1@106@01 4)) $q3@147@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@739@11@739@518|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$1, 5)): Int) &&
;   ($struct_get($struct_loc($self$1, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@149@01 $Snap)
(assert (= $t@149@01 ($Snap.combine ($Snap.first $t@149@01) ($Snap.second $t@149@01))))
(assert (= ($Snap.first $t@149@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$1, 5)): Int)
; [eval] ($struct_get($struct_loc($self$1, 5)): Int)
; [eval] $struct_loc($self$1, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 5))))
(assert (= ($Snap.second $t@149@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$1, 5)): Int)
; [eval] $struct_loc($self$1, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$1, 6)): Int) &&
;   ($struct_get($struct_loc($self$1, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@150@01 $Snap)
(assert (= $t@150@01 ($Snap.combine ($Snap.first $t@150@01) ($Snap.second $t@150@01))))
(assert (= ($Snap.first $t@150@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] $struct_loc($self$1, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 6))))
(assert (= ($Snap.second $t@150@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] $struct_loc($self$1, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($self$1, 7)): Int) &&
;   ($struct_get($struct_loc($self$1, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@151@01 $Snap)
(assert (= $t@151@01 ($Snap.combine ($Snap.first $t@151@01) ($Snap.second $t@151@01))))
(assert (= ($Snap.first $t@151@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($self$1, 7)): Int)
; [eval] ($struct_get($struct_loc($self$1, 7)): Int)
; [eval] $struct_loc($self$1, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 7))))
(assert (= ($Snap.second $t@151@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($self$1, 7)): Int)
; [eval] $struct_loc($self$1, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($self$1, 8)): Int) &&
;   ($struct_get($struct_loc($self$1, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@152@01 $Snap)
(assert (= $t@152@01 ($Snap.combine ($Snap.first $t@152@01) ($Snap.second $t@152@01))))
(assert (= ($Snap.first $t@152@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$1, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($self$1, 8)): Int)
; [eval] $struct_loc($self$1, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 8))))
(assert (= ($Snap.second $t@152@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($self$1, 8)): Int)
; [eval] $struct_loc($self$1, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@153@01 $Snap)
(assert (= $t@153@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@154@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 10)
(push) ; 4
; [then-branch: 18 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 10)), $q5@154@01)) | live]
; [else-branch: 18 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 10)), $q5@154@01) | live]
(push) ; 5
; [then-branch: 18 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 10)), $q5@154@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 10)) $q5@154@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 18 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 10)), $q5@154@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 10)) $q5@154@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 10)) $q5@154@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 10)) $q5@154@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@154@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 10)) $q5@154@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 10)) $q5@154@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 10)) $q5@154@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@744@11@744@357-aux|)))
(assert (forall (($q5@154@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 10)) $q5@154@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 10)) $q5@154@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 10)) $q5@154@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@744@11@744@357|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])): Int))
(declare-const $t@155@01 $Snap)
(assert (= $t@155@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])): Int))
(declare-const $q5@156@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 10)
; [eval] ($map_sum(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@156@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 10)) $q5@156@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 10)) $q5@156@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@745@11@745@265|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@157@01 $Snap)
(assert (= $t@157@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@158@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 11)
(push) ; 4
; [then-branch: 19 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 11)), $q6@158@01)) | live]
; [else-branch: 19 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 11)), $q6@158@01) | live]
(push) ; 5
; [then-branch: 19 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 11)), $q6@158@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 11)) $q6@158@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 19 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($self$1@106@01, 11)), $q6@158@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 11)) $q6@158@01)))
; [eval] ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 11)) $q6@158@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 11)) $q6@158@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@158@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 11)) $q6@158@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 11)) $q6@158@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 11)) $q6@158@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@746@11@746@357-aux|)))
(assert (forall (($q6@158@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 11)) $q6@158@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 11)) $q6@158@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 11)) $q6@158@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@746@11@746@357|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])): Int))
(declare-const $t@159@01 $Snap)
(assert (= $t@159@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])): Int))
(declare-const $q6@160@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 11)
; [eval] ($map_sum(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@160@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 11)) $q6@160@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 11)) $q6@160@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@747@11@747@265|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$1, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@161@01 $Snap)
(assert (= $t@161@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc($self$1, -1)): Int)
; [eval] $struct_loc($self$1, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@162@01 $Snap)
(assert (= $t@162@01 ($Snap.combine ($Snap.first $t@162@01) ($Snap.second $t@162@01))))
(assert (= ($Snap.first $t@162@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@108@01 0))))
(assert (= ($Snap.second $t@162@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@108@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@163@01 $Snap)
(assert (= $t@163@01 ($Snap.combine ($Snap.first $t@163@01) ($Snap.second $t@163@01))))
(assert (= ($Snap.first $t@163@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@108@01 1))))
(assert (= ($Snap.second $t@163@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@108@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@164@01 $Snap)
(assert (= $t@164@01 ($Snap.combine ($Snap.first $t@164@01) ($Snap.second $t@164@01))))
(assert (= ($Snap.first $t@164@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@108@01 2))))
(assert (= ($Snap.second $t@164@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@108@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@165@01 $Snap)
(assert (= $t@165@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@108@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@166@01 $Snap)
(assert (= $t@166@01 ($Snap.combine ($Snap.first $t@166@01) ($Snap.second $t@166@01))))
(assert (= ($Snap.first $t@166@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@108@01 4))))
(assert (= ($Snap.second $t@166@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@108@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@167@01 $Snap)
(assert (= $t@167@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@108@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int))
(declare-const $t@168@01 $Snap)
(assert (= $t@168@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int))
(declare-const $a@169@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 10)
; [eval] ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])
; [eval] $struct_loc($self$0, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($a@169@01 Int)) (!
  (>=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 10)) $a@169@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$0@104@01 10)) $a@169@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 10)) $a@169@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@755@11@755@266|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$1, 6)): Int) ==
;   ($struct_get($struct_loc($self$0, 6)): Int)
(declare-const $t@170@01 $Snap)
(assert (= $t@170@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 6)): Int) == ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] $struct_loc($self$1, 6)
; [eval] ($struct_get($struct_loc($self$0, 6)): Int)
; [eval] $struct_loc($self$0, 6)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 6))
  ($struct_get<Int> ($struct_loc<Int> $self$0@104@01 6))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($self$1, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
(declare-const $t@171@01 $Snap)
(assert (= $t@171@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($self$1, 5)): Int) == ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 5)): Int)
; [eval] $struct_loc($self$1, 5)
; [eval] ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 3)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $self$1@106@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $self$1@106@01 3)))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; assert ($struct_get($struct_loc($self$1, 6)): Int) ==
;   ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] ($struct_get($struct_loc($self$1, 6)): Int) == ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] $struct_loc($self$1, 6)
; [eval] ($struct_get($struct_loc($self$1, 6)): Int)
; [eval] $struct_loc($self$1, 6)
; [exec]
; assert ($struct_get($struct_loc($self$1, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 5)): Int) == ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 5)): Int)
; [eval] $struct_loc($self$1, 5)
; [eval] ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])
; [eval] $struct_loc($self$1, 3)
(pop) ; 2
(pop) ; 1
; ---------- $forced_ether_check ----------
(set-option :timeout 0)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var self: $Struct
(declare-const self@172@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@173@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@174@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@175@01 $Map<Int~_$Struct>)
; [exec]
; var $post: Bool
(declare-const $post@176@01 Bool)
; [exec]
; var $havoc: Int
(declare-const $havoc@177@01 Int)
; [exec]
; var block: $Struct
(declare-const block@178@01 $Struct)
; [exec]
; inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
(declare-const $t@179@01 $Snap)
(assert (= $t@179@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 0)): Seq[Int])
; [eval] $struct_loc(self, 0)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@172@01 0))) 64))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
(declare-const $t@180@01 $Snap)
(assert (= $t@180@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 1)): Seq[Int])
; [eval] $struct_loc(self, 1)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@172@01 1))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@181@01 $Snap)
(assert (= $t@181@01 ($Snap.combine ($Snap.first $t@181@01) ($Snap.second $t@181@01))))
(assert (= ($Snap.first $t@181@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@172@01 2))))
(assert (= ($Snap.second $t@181@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@172@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@182@01 $Snap)
(assert (= $t@182@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@183@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 4
; [then-branch: 20 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@172@01, 3)), $q2@183@01)) | live]
; [else-branch: 20 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@172@01, 3)), $q2@183@01) | live]
(push) ; 5
; [then-branch: 20 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@172@01, 3)), $q2@183@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 3)) $q2@183@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 20 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@172@01, 3)), $q2@183@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 3)) $q2@183@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 3)) $q2@183@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 3)) $q2@183@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@183@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 3)) $q2@183@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 3)) $q2@183@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 3)) $q2@183@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@774@11@774@345-aux|)))
(assert (forall (($q2@183@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 3)) $q2@183@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 3)) $q2@183@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 3)) $q2@183@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@774@11@774@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $t@184@01 $Snap)
(assert (= $t@184@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $q2@185@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@185@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 3)) $q2@185@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 3)) $q2@185@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@775@11@775@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@186@01 $Snap)
(assert (= $t@186@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@187@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@188@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 5
; [then-branch: 21 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@172@01, 4)), $q3@187@01), $q4@188@01)) | live]
; [else-branch: 21 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@172@01, 4)), $q3@187@01), $q4@188@01) | live]
(push) ; 6
; [then-branch: 21 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@172@01, 4)), $q3@187@01), $q4@188@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@187@01) $q4@188@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 21 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@172@01, 4)), $q3@187@01), $q4@188@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@187@01) $q4@188@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@187@01) $q4@188@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@187@01) $q4@188@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@188@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@187@01) $q4@188@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@187@01) $q4@188@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@187@01) $q4@188@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@776@131@776@597-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@187@01 Int)) (!
  (forall (($q4@188@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@187@01) $q4@188@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@187@01) $q4@188@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@187@01) $q4@188@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@776@131@776@597-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@187@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@776@11@776@598-aux|)))
(assert (forall (($q3@187@01 Int)) (!
  (forall (($q4@188@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@187@01) $q4@188@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@187@01) $q4@188@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@187@01) $q4@188@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@776@131@776@597|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@187@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@776@11@776@598|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@189@01 $Snap)
(assert (= $t@189@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@190@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@191@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@190@01 Int)) (!
  (forall (($q4@191@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@190@01) $q4@191@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@190@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@190@01) $q4@191@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@777@131@777@505|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@172@01 4)) $q3@190@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@777@11@777@506|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@192@01 $Snap)
(assert (= $t@192@01 ($Snap.combine ($Snap.first $t@192@01) ($Snap.second $t@192@01))))
(assert (= ($Snap.first $t@192@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@172@01 5))))
(assert (= ($Snap.second $t@192@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@172@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@193@01 $Snap)
(assert (= $t@193@01 ($Snap.combine ($Snap.first $t@193@01) ($Snap.second $t@193@01))))
(assert (= ($Snap.first $t@193@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@172@01 6))))
(assert (= ($Snap.second $t@193@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@172@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) &&
;   ($struct_get($struct_loc(self, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@194@01 $Snap)
(assert (= $t@194@01 ($Snap.combine ($Snap.first $t@194@01) ($Snap.second $t@194@01))))
(assert (= ($Snap.first $t@194@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 7)): Int)
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@172@01 7))))
(assert (= ($Snap.second $t@194@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@172@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 8)): Int) &&
;   ($struct_get($struct_loc(self, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@195@01 $Snap)
(assert (= $t@195@01 ($Snap.combine ($Snap.first $t@195@01) ($Snap.second $t@195@01))))
(assert (= ($Snap.first $t@195@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@172@01 8))))
(assert (= ($Snap.second $t@195@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@172@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@196@01 $Snap)
(assert (= $t@196@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@197@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(push) ; 4
; [then-branch: 22 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@172@01, 10)), $q5@197@01)) | live]
; [else-branch: 22 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@172@01, 10)), $q5@197@01) | live]
(push) ; 5
; [then-branch: 22 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@172@01, 10)), $q5@197@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 10)) $q5@197@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 22 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@172@01, 10)), $q5@197@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 10)) $q5@197@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 10)) $q5@197@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 10)) $q5@197@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@197@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 10)) $q5@197@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 10)) $q5@197@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 10)) $q5@197@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@782@11@782@348-aux|)))
(assert (forall (($q5@197@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 10)) $q5@197@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 10)) $q5@197@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 10)) $q5@197@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@782@11@782@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $t@198@01 $Snap)
(assert (= $t@198@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $q5@199@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@199@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 10)) $q5@199@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 10)) $q5@199@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@783@11@783@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@200@01 $Snap)
(assert (= $t@200@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@201@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(push) ; 4
; [then-branch: 23 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@172@01, 11)), $q6@201@01)) | live]
; [else-branch: 23 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@172@01, 11)), $q6@201@01) | live]
(push) ; 5
; [then-branch: 23 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@172@01, 11)), $q6@201@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 11)) $q6@201@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 23 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@172@01, 11)), $q6@201@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 11)) $q6@201@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 11)) $q6@201@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 11)) $q6@201@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@201@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 11)) $q6@201@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 11)) $q6@201@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 11)) $q6@201@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@784@11@784@348-aux|)))
(assert (forall (($q6@201@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 11)) $q6@201@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 11)) $q6@201@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 11)) $q6@201@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@784@11@784@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $t@202@01 $Snap)
(assert (= $t@202@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $q6@203@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
; [eval] ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@203@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 11)) $q6@203@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 11)) $q6@203@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@785@11@785@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@204@01 $Snap)
(assert (= $t@204@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@172@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc($pre_self, 0)): Seq[Int])| <= 64
(declare-const $t@205@01 $Snap)
(assert (= $t@205@01 $Snap.unit))
; [eval] |($struct_get($struct_loc($pre_self, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc($pre_self, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc($pre_self, 0)): Seq[Int])
; [eval] $struct_loc($pre_self, 0)
(assert (<=
  (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> $pre_self@174@01 0)))
  64))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc($pre_self, 1)): Seq[Int])| <= 32
(declare-const $t@206@01 $Snap)
(assert (= $t@206@01 $Snap.unit))
; [eval] |($struct_get($struct_loc($pre_self, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc($pre_self, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc($pre_self, 1)): Seq[Int])
; [eval] $struct_loc($pre_self, 1)
(assert (<=
  (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> $pre_self@174@01 1)))
  32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($pre_self, 2)): Int) &&
;   ($struct_get($struct_loc($pre_self, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@207@01 $Snap)
(assert (= $t@207@01 ($Snap.combine ($Snap.first $t@207@01) ($Snap.second $t@207@01))))
(assert (= ($Snap.first $t@207@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($pre_self, 2)): Int)
; [eval] ($struct_get($struct_loc($pre_self, 2)): Int)
; [eval] $struct_loc($pre_self, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $pre_self@174@01 2))))
(assert (= ($Snap.second $t@207@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($pre_self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($pre_self, 2)): Int)
; [eval] $struct_loc($pre_self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $pre_self@174@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@208@01 $Snap)
(assert (= $t@208@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@209@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 3)
(push) ; 4
; [then-branch: 24 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@174@01, 3)), $q2@209@01)) | live]
; [else-branch: 24 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@174@01, 3)), $q2@209@01) | live]
(push) ; 5
; [then-branch: 24 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@174@01, 3)), $q2@209@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 3)) $q2@209@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 24 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@174@01, 3)), $q2@209@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 3)) $q2@209@01)))
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 3)) $q2@209@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 3)) $q2@209@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@209@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 3)) $q2@209@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 3)) $q2@209@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 3)) $q2@209@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@790@11@790@360-aux|)))
(assert (forall (($q2@209@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 3)) $q2@209@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 3)) $q2@209@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 3)) $q2@209@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@790@11@790@360|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int])): Int))
(declare-const $t@210@01 $Snap)
(assert (= $t@210@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int])): Int))
(declare-const $q2@211@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 3)
; [eval] ($map_sum(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@211@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 3)) $q2@211@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 3)) $q2@211@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@791@11@791@268|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@212@01 $Snap)
(assert (= $t@212@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@213@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@214@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($pre_self, 4)
(push) ; 5
; [then-branch: 25 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($pre_self@174@01, 4)), $q3@213@01), $q4@214@01)) | live]
; [else-branch: 25 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($pre_self@174@01, 4)), $q3@213@01), $q4@214@01) | live]
(push) ; 6
; [then-branch: 25 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($pre_self@174@01, 4)), $q3@213@01), $q4@214@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@213@01) $q4@214@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 25 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int]($pre_self@174@01, 4)), $q3@213@01), $q4@214@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@213@01) $q4@214@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($pre_self, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@213@01) $q4@214@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@213@01) $q4@214@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@214@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@213@01) $q4@214@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@213@01) $q4@214@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@213@01) $q4@214@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@792@136@792@617-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@213@01 Int)) (!
  (forall (($q4@214@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@213@01) $q4@214@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@213@01) $q4@214@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@213@01) $q4@214@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@792@136@792@617-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@213@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@792@11@792@618-aux|)))
(assert (forall (($q3@213@01 Int)) (!
  (forall (($q4@214@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@213@01) $q4@214@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@213@01) $q4@214@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@213@01) $q4@214@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@792@136@792@617|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@213@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@792@11@792@618|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@215@01 $Snap)
(assert (= $t@215@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@216@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@217@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($pre_self, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($pre_self, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@216@01 Int)) (!
  (forall (($q4@217@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@216@01) $q4@217@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@216@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@216@01) $q4@217@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@793@136@793@525|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> $pre_self@174@01 4)) $q3@216@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@793@11@793@526|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($pre_self, 5)): Int) &&
;   ($struct_get($struct_loc($pre_self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@218@01 $Snap)
(assert (= $t@218@01 ($Snap.combine ($Snap.first $t@218@01) ($Snap.second $t@218@01))))
(assert (= ($Snap.first $t@218@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($pre_self, 5)): Int)
; [eval] ($struct_get($struct_loc($pre_self, 5)): Int)
; [eval] $struct_loc($pre_self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $pre_self@174@01 5))))
(assert (= ($Snap.second $t@218@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($pre_self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($pre_self, 5)): Int)
; [eval] $struct_loc($pre_self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $pre_self@174@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($pre_self, 6)): Int) &&
;   ($struct_get($struct_loc($pre_self, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@219@01 $Snap)
(assert (= $t@219@01 ($Snap.combine ($Snap.first $t@219@01) ($Snap.second $t@219@01))))
(assert (= ($Snap.first $t@219@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($pre_self, 6)): Int)
; [eval] ($struct_get($struct_loc($pre_self, 6)): Int)
; [eval] $struct_loc($pre_self, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $pre_self@174@01 6))))
(assert (= ($Snap.second $t@219@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($pre_self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc($pre_self, 6)): Int)
; [eval] $struct_loc($pre_self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $pre_self@174@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc($pre_self, 7)): Int) &&
;   ($struct_get($struct_loc($pre_self, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@220@01 $Snap)
(assert (= $t@220@01 ($Snap.combine ($Snap.first $t@220@01) ($Snap.second $t@220@01))))
(assert (= ($Snap.first $t@220@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc($pre_self, 7)): Int)
; [eval] ($struct_get($struct_loc($pre_self, 7)): Int)
; [eval] $struct_loc($pre_self, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> $pre_self@174@01 7))))
(assert (= ($Snap.second $t@220@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($pre_self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc($pre_self, 7)): Int)
; [eval] $struct_loc($pre_self, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $pre_self@174@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc($pre_self, 8)): Int) &&
;   ($struct_get($struct_loc($pre_self, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@221@01 $Snap)
(assert (= $t@221@01 ($Snap.combine ($Snap.first $t@221@01) ($Snap.second $t@221@01))))
(assert (= ($Snap.first $t@221@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($pre_self, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc($pre_self, 8)): Int)
; [eval] $struct_loc($pre_self, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> $pre_self@174@01 8))))
(assert (= ($Snap.second $t@221@01) $Snap.unit))
; [eval] ($struct_get($struct_loc($pre_self, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc($pre_self, 8)): Int)
; [eval] $struct_loc($pre_self, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> $pre_self@174@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@222@01 $Snap)
(assert (= $t@222@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@223@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 10)
(push) ; 4
; [then-branch: 26 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@174@01, 10)), $q5@223@01)) | live]
; [else-branch: 26 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@174@01, 10)), $q5@223@01) | live]
(push) ; 5
; [then-branch: 26 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@174@01, 10)), $q5@223@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 10)) $q5@223@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 26 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@174@01, 10)), $q5@223@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 10)) $q5@223@01)))
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 10)) $q5@223@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 10)) $q5@223@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@223@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 10)) $q5@223@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 10)) $q5@223@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 10)) $q5@223@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@798@11@798@363-aux|)))
(assert (forall (($q5@223@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 10)) $q5@223@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 10)) $q5@223@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 10)) $q5@223@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@798@11@798@363|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int])): Int))
(declare-const $t@224@01 $Snap)
(assert (= $t@224@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int])): Int))
(declare-const $q5@225@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 10)
; [eval] ($map_sum(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@225@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 10)) $q5@225@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 10)) $q5@225@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@799@11@799@271|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@226@01 $Snap)
(assert (= $t@226@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@227@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 11)
(push) ; 4
; [then-branch: 27 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@174@01, 11)), $q6@227@01)) | live]
; [else-branch: 27 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@174@01, 11)), $q6@227@01) | live]
(push) ; 5
; [then-branch: 27 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@174@01, 11)), $q6@227@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 11)) $q6@227@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 27 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int]($pre_self@174@01, 11)), $q6@227@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 11)) $q6@227@01)))
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 11)) $q6@227@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 11)) $q6@227@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@227@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 11)) $q6@227@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 11)) $q6@227@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 11)) $q6@227@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@800@11@800@363-aux|)))
(assert (forall (($q6@227@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 11)) $q6@227@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 11)) $q6@227@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 11)) $q6@227@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@800@11@800@363|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int])): Int))
(declare-const $t@228@01 $Snap)
(assert (= $t@228@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int])): Int))
(declare-const $q6@229@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 11)
; [eval] ($map_sum(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@229@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 11)) $q6@229@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> $pre_self@174@01 11)) $q6@229@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@801@11@801@271|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc($pre_self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@230@01 $Snap)
(assert (= $t@230@01 $Snap.unit))
; [eval] ($struct_get($struct_loc($pre_self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc($pre_self, -1)): Int)
; [eval] $struct_loc($pre_self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> $pre_self@174@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@231@01 $Snap)
(assert (= $t@231@01 ($Snap.combine ($Snap.first $t@231@01) ($Snap.second $t@231@01))))
(assert (= ($Snap.first $t@231@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@178@01 0))))
(assert (= ($Snap.second $t@231@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@178@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@232@01 $Snap)
(assert (= $t@232@01 ($Snap.combine ($Snap.first $t@232@01) ($Snap.second $t@232@01))))
(assert (= ($Snap.first $t@232@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@178@01 1))))
(assert (= ($Snap.second $t@232@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@178@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@233@01 $Snap)
(assert (= $t@233@01 ($Snap.combine ($Snap.first $t@233@01) ($Snap.second $t@233@01))))
(assert (= ($Snap.first $t@233@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@178@01 2))))
(assert (= ($Snap.second $t@233@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@178@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@234@01 $Snap)
(assert (= $t@234@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@178@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@235@01 $Snap)
(assert (= $t@235@01 ($Snap.combine ($Snap.first $t@235@01) ($Snap.second $t@235@01))))
(assert (= ($Snap.first $t@235@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@178@01 4))))
(assert (= ($Snap.second $t@235@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@178@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@236@01 $Snap)
(assert (= $t@236@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@178@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale $havoc >= 0
(declare-const $t@237@01 $Snap)
(assert (= $t@237@01 $Snap.unit))
; [eval] $havoc >= 0
(assert (>= $havoc@177@01 0))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $t@238@01 $Snap)
(assert (= $t@238@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $a@239@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc(self, 6)): Int)
(declare-const $t@240@01 $Snap)
(assert (= $t@240@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
(declare-const $t@241@01 $Snap)
(assert (= $t@241@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@172@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@172@01 3)))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   $havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + $havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + $havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@242@01 $Struct)
(assert (=
  self@242@01
  ($struct_set<$Struct> self@172@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@172@01 7))
    $havoc@177@01))))
(pop) ; 2
(pop) ; 1
; ---------- f$__init__ ----------
(declare-const l$_name@243@01 Seq<Int>)
(declare-const l$_symbol@244@01 Seq<Int>)
(declare-const l$_decimals@245@01 $Int)
(declare-const l$_supply@246@01 $Int)
(declare-const $succ@247@01 Bool)
(declare-const l$_name@248@01 Seq<Int>)
(declare-const l$_symbol@249@01 Seq<Int>)
(declare-const l$_decimals@250@01 $Int)
(declare-const l$_supply@251@01 $Int)
(declare-const $succ@252@01 Bool)
(set-option :timeout 0)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@253@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@254@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@255@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@256@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@257@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@258@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@259@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@260@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@261@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@262@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@263@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@264@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@265@01 Bool)
; [exec]
; var $first_public_state: Bool
(declare-const $first_public_state@266@01 Bool)
; [exec]
; var l$havoc: Int
(declare-const l$havoc@267@01 Int)
; [exec]
; var l$init_supply: $Int
(declare-const l$init_supply@268@01 $Int)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@269@01 Bool)
; [exec]
; var l$havoc$1: Int
(declare-const l$havoc$1@270@01 Int)
; [exec]
; var l$havoc$2: $Map[Int, $Struct]
(declare-const l$havoc$2@271@01 $Map<Int~_$Struct>)
; [exec]
; inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
(declare-const $t@272@01 $Snap)
(assert (= $t@272@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 0)): Seq[Int])
; [eval] $struct_loc(self, 0)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@257@01 0))) 64))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
(declare-const $t@273@01 $Snap)
(assert (= $t@273@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 1)): Seq[Int])
; [eval] $struct_loc(self, 1)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@257@01 1))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@274@01 $Snap)
(assert (= $t@274@01 ($Snap.combine ($Snap.first $t@274@01) ($Snap.second $t@274@01))))
(assert (= ($Snap.first $t@274@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@257@01 2))))
(assert (= ($Snap.second $t@274@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@257@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@275@01 $Snap)
(assert (= $t@275@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@276@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 4
; [then-branch: 28 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 3)), $q2@276@01)) | live]
; [else-branch: 28 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 3)), $q2@276@01) | live]
(push) ; 5
; [then-branch: 28 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 3)), $q2@276@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 3)) $q2@276@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 28 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 3)), $q2@276@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 3)) $q2@276@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 3)) $q2@276@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 3)) $q2@276@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@276@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 3)) $q2@276@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 3)) $q2@276@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 3)) $q2@276@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@844@11@844@345-aux|)))
(assert (forall (($q2@276@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 3)) $q2@276@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 3)) $q2@276@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 3)) $q2@276@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@844@11@844@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $t@277@01 $Snap)
(assert (= $t@277@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $q2@278@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@278@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 3)) $q2@278@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 3)) $q2@278@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@845@11@845@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@279@01 $Snap)
(assert (= $t@279@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@280@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@281@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 5
; [then-branch: 29 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@257@01, 4)), $q3@280@01), $q4@281@01)) | live]
; [else-branch: 29 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@257@01, 4)), $q3@280@01), $q4@281@01) | live]
(push) ; 6
; [then-branch: 29 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@257@01, 4)), $q3@280@01), $q4@281@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@280@01) $q4@281@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 29 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@257@01, 4)), $q3@280@01), $q4@281@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@280@01) $q4@281@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@280@01) $q4@281@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@280@01) $q4@281@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@281@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@280@01) $q4@281@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@280@01) $q4@281@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@280@01) $q4@281@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@846@131@846@597-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@280@01 Int)) (!
  (forall (($q4@281@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@280@01) $q4@281@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@280@01) $q4@281@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@280@01) $q4@281@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@846@131@846@597-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@280@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@846@11@846@598-aux|)))
(assert (forall (($q3@280@01 Int)) (!
  (forall (($q4@281@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@280@01) $q4@281@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@280@01) $q4@281@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@280@01) $q4@281@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@846@131@846@597|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@280@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@846@11@846@598|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@282@01 $Snap)
(assert (= $t@282@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@283@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@284@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@283@01 Int)) (!
  (forall (($q4@284@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@283@01) $q4@284@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@283@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@283@01) $q4@284@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@847@131@847@505|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@257@01 4)) $q3@283@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@847@11@847@506|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@285@01 $Snap)
(assert (= $t@285@01 ($Snap.combine ($Snap.first $t@285@01) ($Snap.second $t@285@01))))
(assert (= ($Snap.first $t@285@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@257@01 5))))
(assert (= ($Snap.second $t@285@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@257@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@286@01 $Snap)
(assert (= $t@286@01 ($Snap.combine ($Snap.first $t@286@01) ($Snap.second $t@286@01))))
(assert (= ($Snap.first $t@286@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@257@01 6))))
(assert (= ($Snap.second $t@286@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@257@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) &&
;   ($struct_get($struct_loc(self, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@287@01 $Snap)
(assert (= $t@287@01 ($Snap.combine ($Snap.first $t@287@01) ($Snap.second $t@287@01))))
(assert (= ($Snap.first $t@287@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 7)): Int)
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@257@01 7))))
(assert (= ($Snap.second $t@287@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@257@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 8)): Int) &&
;   ($struct_get($struct_loc(self, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@288@01 $Snap)
(assert (= $t@288@01 ($Snap.combine ($Snap.first $t@288@01) ($Snap.second $t@288@01))))
(assert (= ($Snap.first $t@288@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@257@01 8))))
(assert (= ($Snap.second $t@288@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@257@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@289@01 $Snap)
(assert (= $t@289@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@290@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(push) ; 4
; [then-branch: 30 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 10)), $q5@290@01)) | live]
; [else-branch: 30 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 10)), $q5@290@01) | live]
(push) ; 5
; [then-branch: 30 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 10)), $q5@290@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 10)) $q5@290@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 30 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 10)), $q5@290@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 10)) $q5@290@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 10)) $q5@290@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 10)) $q5@290@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@290@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 10)) $q5@290@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 10)) $q5@290@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 10)) $q5@290@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@852@11@852@348-aux|)))
(assert (forall (($q5@290@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 10)) $q5@290@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 10)) $q5@290@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 10)) $q5@290@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@852@11@852@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $t@291@01 $Snap)
(assert (= $t@291@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $q5@292@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@292@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 10)) $q5@292@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 10)) $q5@292@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@853@11@853@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@293@01 $Snap)
(assert (= $t@293@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@294@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(push) ; 4
; [then-branch: 31 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 11)), $q6@294@01)) | live]
; [else-branch: 31 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 11)), $q6@294@01) | live]
(push) ; 5
; [then-branch: 31 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 11)), $q6@294@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 11)) $q6@294@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 31 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@257@01, 11)), $q6@294@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 11)) $q6@294@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 11)) $q6@294@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 11)) $q6@294@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@294@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 11)) $q6@294@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 11)) $q6@294@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 11)) $q6@294@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@854@11@854@348-aux|)))
(assert (forall (($q6@294@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 11)) $q6@294@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 11)) $q6@294@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 11)) $q6@294@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@854@11@854@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $t@295@01 $Snap)
(assert (= $t@295@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $q6@296@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
; [eval] ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@296@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 11)) $q6@296@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@257@01 11)) $q6@296@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@855@11@855@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@297@01 $Snap)
(assert (= $t@297@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@257@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@298@01 $Snap)
(assert (= $t@298@01 ($Snap.combine ($Snap.first $t@298@01) ($Snap.second $t@298@01))))
(assert (= ($Snap.first $t@298@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@298@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |l$_name| <= 64
(declare-const $t@299@01 $Snap)
(assert (= $t@299@01 $Snap.unit))
; [eval] |l$_name| <= 64
; [eval] |l$_name|
(assert (<= (Seq_length l$_name@248@01) 64))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |l$_symbol| <= 32
(declare-const $t@300@01 $Snap)
(assert (= $t@300@01 $Snap.unit))
; [eval] |l$_symbol| <= 32
; [eval] |l$_symbol|
(assert (<= (Seq_length l$_symbol@249@01) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $unwrap(l$_decimals) &&
;   $unwrap(l$_decimals) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@301@01 $Snap)
(assert (= $t@301@01 ($Snap.combine ($Snap.first $t@301@01) ($Snap.second $t@301@01))))
(assert (= ($Snap.first $t@301@01) $Snap.unit))
; [eval] 0 <= $unwrap(l$_decimals)
; [eval] $unwrap(l$_decimals)
(assert (<= 0 ($unwrap<Int> l$_decimals@250@01)))
(assert (= ($Snap.second $t@301@01) $Snap.unit))
; [eval] $unwrap(l$_decimals) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap(l$_decimals)
(assert (<=
  ($unwrap<Int> l$_decimals@250@01)
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $unwrap(l$_supply) &&
;   $unwrap(l$_supply) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@302@01 $Snap)
(assert (= $t@302@01 ($Snap.combine ($Snap.first $t@302@01) ($Snap.second $t@302@01))))
(assert (= ($Snap.first $t@302@01) $Snap.unit))
; [eval] 0 <= $unwrap(l$_supply)
; [eval] $unwrap(l$_supply)
(assert (<= 0 ($unwrap<Int> l$_supply@251@01)))
(assert (= ($Snap.second $t@302@01) $Snap.unit))
; [eval] $unwrap(l$_supply) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap(l$_supply)
(assert (<=
  ($unwrap<Int> l$_supply@251@01)
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@303@01 $Snap)
(assert (= $t@303@01 ($Snap.combine ($Snap.first $t@303@01) ($Snap.second $t@303@01))))
(assert (= ($Snap.first $t@303@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@254@01 0))))
(assert (= ($Snap.second $t@303@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@254@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@304@01 $Snap)
(assert (= $t@304@01 ($Snap.combine ($Snap.first $t@304@01) ($Snap.second $t@304@01))))
(assert (= ($Snap.first $t@304@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@254@01 1))))
(assert (= ($Snap.second $t@304@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@254@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@305@01 $Snap)
(assert (= $t@305@01 ($Snap.combine ($Snap.first $t@305@01) ($Snap.second $t@305@01))))
(assert (= ($Snap.first $t@305@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@254@01 2))))
(assert (= ($Snap.second $t@305@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@254@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@306@01 $Snap)
(assert (= $t@306@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@254@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@307@01 $Snap)
(assert (= $t@307@01 ($Snap.combine ($Snap.first $t@307@01) ($Snap.second $t@307@01))))
(assert (= ($Snap.first $t@307@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@254@01 4))))
(assert (= ($Snap.second $t@307@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@254@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@308@01 $Snap)
(assert (= $t@308@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@254@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@309@01 $Snap)
(assert (= $t@309@01 ($Snap.combine ($Snap.first $t@309@01) ($Snap.second $t@309@01))))
(assert (= ($Snap.first $t@309@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@253@01 0))))
(assert (= ($Snap.second $t@309@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@253@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@310@01 $Snap)
(assert (= $t@310@01 ($Snap.combine ($Snap.first $t@310@01) ($Snap.second $t@310@01))))
(assert (= ($Snap.first $t@310@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@253@01 1))))
(assert (= ($Snap.second $t@310@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@253@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@311@01 $Snap)
(assert (= $t@311@01 ($Snap.combine ($Snap.first $t@311@01) ($Snap.second $t@311@01))))
(assert (= ($Snap.first $t@311@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@253@01 2))))
(assert (= ($Snap.second $t@311@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@253@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@312@01 $Snap)
(assert (= $t@312@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@253@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@313@01 $Snap)
(assert (= $t@313@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@253@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; $first_public_state := true
; [exec]
; self := s$struct$self$init(Seq[Int](), Seq[Int](), 0, ($map_init(0): $Map[Int, Int]),
;   ($map_init(($map_init(0): $Map[Int, Int])): $Map[Int, $Map[Int, Int]]), 0,
;   0, 0, 0, false, ($map_init(0): $Map[Int, Int]), ($map_init(0): $Map[Int, Int]),
;   false)
; [eval] s$struct$self$init(Seq[Int](), Seq[Int](), 0, ($map_init(0): $Map[Int, Int]), ($map_init(($map_init(0): $Map[Int, Int])): $Map[Int, $Map[Int, Int]]), 0, 0, 0, 0, false, ($map_init(0): $Map[Int, Int]), ($map_init(0): $Map[Int, Int]), false)
; [eval] Seq[Int]()
; [eval] Seq[Int]()
; [eval] ($map_init(0): $Map[Int, Int])
; [eval] ($map_init(($map_init(0): $Map[Int, Int])): $Map[Int, $Map[Int, Int]])
; [eval] ($map_init(0): $Map[Int, Int])
; [eval] ($map_init(0): $Map[Int, Int])
; [eval] ($map_init(0): $Map[Int, Int])
(declare-const self@314@01 $Struct)
(assert (=
  self@314@01
  (s$struct$self$init<$Struct> (as Seq_empty  Seq<Int>) (as Seq_empty  Seq<Int>) 0 ($map_init<$Map<Int~_Int>> 0) ($map_init<$Map<Int~_$Map<Int~_Int>>> ($map_init<$Map<Int~_Int>> 0)) 0 0 0 0 false ($map_init<$Map<Int~_Int>> 0) ($map_init<$Map<Int~_Int>> 0) false)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@315@01 $Snap)
(assert (= $t@315@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@267@01 0))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@316@01 $Struct)
(assert (=
  self@316@01
  ($struct_set<$Struct> self@314@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@314@01 7))
    l$havoc@267@01))))
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@317@01 $Snap)
(assert (= $t@317@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@253@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [eval] $pow(10, $unwrap(l$_decimals)) < 0
; [eval] $pow(10, $unwrap(l$_decimals))
; [eval] $unwrap(l$_decimals)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not (< ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)) 0))))
(check-sat)
; unsat
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 32 | $pow[Int](10, $unwrap[Int](l$_decimals@250@01)) < 0 | dead]
; [else-branch: 32 | !($pow[Int](10, $unwrap[Int](l$_decimals@250@01)) < 0) | live]
(set-option :timeout 0)
(push) ; 3
; [else-branch: 32 | !($pow[Int](10, $unwrap[Int](l$_decimals@250@01)) < 0)]
(assert (not (< ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)) 0)))
(pop) ; 3
; [eval] !($pow(10, $unwrap(l$_decimals)) < 0)
; [eval] $pow(10, $unwrap(l$_decimals)) < 0
; [eval] $pow(10, $unwrap(l$_decimals))
; [eval] $unwrap(l$_decimals)
(push) ; 3
(set-option :timeout 10)
(assert (not (< ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)) 0)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not (< ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)) 0))))
(check-sat)
; unsat
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 33 | !($pow[Int](10, $unwrap[Int](l$_decimals@250@01)) < 0) | live]
; [else-branch: 33 | $pow[Int](10, $unwrap[Int](l$_decimals@250@01)) < 0 | dead]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 33 | !($pow[Int](10, $unwrap[Int](l$_decimals@250@01)) < 0)]
(assert (not (< ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)) 0)))
; [eval] $pow(10, $unwrap(l$_decimals)) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $pow(10, $unwrap(l$_decimals))
; [eval] $unwrap(l$_decimals)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (>
  ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 34 | $pow[Int](10, $unwrap[Int](l$_decimals@250@01)) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | live]
; [else-branch: 34 | !($pow[Int](10, $unwrap[Int](l$_decimals@250@01)) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 34 | $pow[Int](10, $unwrap[Int](l$_decimals@250@01)) > 115792089237316195423570985008687907853269984665640564039457584007913129639935]
(assert (>
  ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
(push) ; 5
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 35 | True | live]
; [else-branch: 35 | False | dead]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 35 | True]
; [exec]
; $old_self := self
; [then-branch: 36 | False | dead]
; [else-branch: 36 | True | live]
(push) ; 6
; [else-branch: 36 | True]
(pop) ; 6
; [eval] !$succ
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 37 | True | live]
; [else-branch: 37 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 37 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@318@01 $Snap)
(assert (= $t@318@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@270@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@319@01 $Struct)
(assert (=
  self@319@01
  ($struct_set<$Struct> self@257@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@257@01 7))
    l$havoc$1@270@01))))
; [exec]
; $contracts := l$havoc$2
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 38 | True | live]
; [else-branch: 38 | False | dead]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 38 | True]
; [exec]
; $old_self := self
; [exec]
; assert $succ ==>
;   ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $succ ==> ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
(push) ; 8
; [then-branch: 39 | False | dead]
; [else-branch: 39 | True | live]
(push) ; 9
; [else-branch: 39 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
; [exec]
; assert $succ ==>
;   ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] $succ ==> ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
(push) ; 8
; [then-branch: 40 | False | dead]
; [else-branch: 40 | True | live]
(push) ; 9
; [else-branch: 40 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
; [eval] !$first_public_state
; [then-branch: 41 | False | dead]
; [else-branch: 41 | True | live]
(push) ; 7
; [else-branch: 41 | True]
(pop) ; 7
(pop) ; 6
(pop) ; 5
; [eval] !$first_public_state
; [then-branch: 42 | False | dead]
; [else-branch: 42 | True | live]
(push) ; 5
; [else-branch: 42 | True]
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 34 | !($pow[Int](10, $unwrap[Int](l$_decimals@250@01)) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(pop) ; 4
; [eval] !($pow(10, $unwrap(l$_decimals)) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)
; [eval] $pow(10, $unwrap(l$_decimals)) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $pow(10, $unwrap(l$_decimals))
; [eval] $unwrap(l$_decimals)
(push) ; 4
(set-option :timeout 10)
(assert (not (>
  ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 43 | !($pow[Int](10, $unwrap[Int](l$_decimals@250@01)) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
; [else-branch: 43 | $pow[Int](10, $unwrap[Int](l$_decimals@250@01)) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 43 | !($pow[Int](10, $unwrap[Int](l$_decimals@250@01)) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
; [eval] $unwrap($w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals))))) < 0
; [eval] $unwrap($w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals)))))
; [eval] $w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals))))
; [eval] $wrap($pow(10, $unwrap(l$_decimals)))
; [eval] $pow(10, $unwrap(l$_decimals))
; [eval] $unwrap(l$_decimals)
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (<
    ($unwrap<Int> ($w_mul<$Int> l$_supply@251@01 ($wrap<$Int> ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)))))
    0))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 44 | $unwrap[Int]($w_mul[$Int](l$_supply@251@01, $wrap[$Int]($pow[Int](10, $unwrap[Int](l$_decimals@250@01))))) < 0 | dead]
; [else-branch: 44 | !($unwrap[Int]($w_mul[$Int](l$_supply@251@01, $wrap[$Int]($pow[Int](10, $unwrap[Int](l$_decimals@250@01))))) < 0) | live]
(set-option :timeout 0)
(push) ; 5
; [else-branch: 44 | !($unwrap[Int]($w_mul[$Int](l$_supply@251@01, $wrap[$Int]($pow[Int](10, $unwrap[Int](l$_decimals@250@01))))) < 0)]
(assert (not
  (<
    ($unwrap<Int> ($w_mul<$Int> l$_supply@251@01 ($wrap<$Int> ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)))))
    0)))
(pop) ; 5
; [eval] !($unwrap($w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals))))) < 0)
; [eval] $unwrap($w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals))))) < 0
; [eval] $unwrap($w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals)))))
; [eval] $w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals))))
; [eval] $wrap($pow(10, $unwrap(l$_decimals)))
; [eval] $pow(10, $unwrap(l$_decimals))
; [eval] $unwrap(l$_decimals)
(push) ; 5
(set-option :timeout 10)
(assert (not (<
  ($unwrap<Int> ($w_mul<$Int> l$_supply@251@01 ($wrap<$Int> ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)))))
  0)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (<
    ($unwrap<Int> ($w_mul<$Int> l$_supply@251@01 ($wrap<$Int> ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)))))
    0))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 45 | !($unwrap[Int]($w_mul[$Int](l$_supply@251@01, $wrap[$Int]($pow[Int](10, $unwrap[Int](l$_decimals@250@01))))) < 0) | live]
; [else-branch: 45 | $unwrap[Int]($w_mul[$Int](l$_supply@251@01, $wrap[$Int]($pow[Int](10, $unwrap[Int](l$_decimals@250@01))))) < 0 | dead]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 45 | !($unwrap[Int]($w_mul[$Int](l$_supply@251@01, $wrap[$Int]($pow[Int](10, $unwrap[Int](l$_decimals@250@01))))) < 0)]
(assert (not
  (<
    ($unwrap<Int> ($w_mul<$Int> l$_supply@251@01 ($wrap<$Int> ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)))))
    0)))
; [eval] $unwrap($w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals))))) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals)))))
; [eval] $w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals))))
; [eval] $wrap($pow(10, $unwrap(l$_decimals)))
; [eval] $pow(10, $unwrap(l$_decimals))
; [eval] $unwrap(l$_decimals)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (>
    ($unwrap<Int> ($w_mul<$Int> l$_supply@251@01 ($wrap<$Int> ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)))))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (>
  ($unwrap<Int> ($w_mul<$Int> l$_supply@251@01 ($wrap<$Int> ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)))))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 46 | $unwrap[Int]($w_mul[$Int](l$_supply@251@01, $wrap[$Int]($pow[Int](10, $unwrap[Int](l$_decimals@250@01))))) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | live]
; [else-branch: 46 | !($unwrap[Int]($w_mul[$Int](l$_supply@251@01, $wrap[$Int]($pow[Int](10, $unwrap[Int](l$_decimals@250@01))))) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 46 | $unwrap[Int]($w_mul[$Int](l$_supply@251@01, $wrap[$Int]($pow[Int](10, $unwrap[Int](l$_decimals@250@01))))) > 115792089237316195423570985008687907853269984665640564039457584007913129639935]
(assert (>
  ($unwrap<Int> ($w_mul<$Int> l$_supply@251@01 ($wrap<$Int> ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)))))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
(push) ; 7
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 47 | True | live]
; [else-branch: 47 | False | dead]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 47 | True]
; [exec]
; $old_self := self
; [then-branch: 48 | False | dead]
; [else-branch: 48 | True | live]
(push) ; 8
; [else-branch: 48 | True]
(pop) ; 8
; [eval] !$succ
(push) ; 8
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 49 | True | live]
; [else-branch: 49 | False | dead]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 49 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@320@01 $Snap)
(assert (= $t@320@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@270@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@321@01 $Struct)
(assert (=
  self@321@01
  ($struct_set<$Struct> self@257@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@257@01 7))
    l$havoc$1@270@01))))
; [exec]
; $contracts := l$havoc$2
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 50 | True | live]
; [else-branch: 50 | False | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 50 | True]
; [exec]
; $old_self := self
; [exec]
; assert $succ ==>
;   ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $succ ==> ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
(push) ; 10
; [then-branch: 51 | False | dead]
; [else-branch: 51 | True | live]
(push) ; 11
; [else-branch: 51 | True]
(pop) ; 11
(pop) ; 10
; Joined path conditions
; [exec]
; assert $succ ==>
;   ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] $succ ==> ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
(push) ; 10
; [then-branch: 52 | False | dead]
; [else-branch: 52 | True | live]
(push) ; 11
; [else-branch: 52 | True]
(pop) ; 11
(pop) ; 10
; Joined path conditions
(pop) ; 9
; [eval] !$first_public_state
; [then-branch: 53 | False | dead]
; [else-branch: 53 | True | live]
(push) ; 9
; [else-branch: 53 | True]
(pop) ; 9
(pop) ; 8
(pop) ; 7
; [eval] !$first_public_state
; [then-branch: 54 | False | dead]
; [else-branch: 54 | True | live]
(push) ; 7
; [else-branch: 54 | True]
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 46 | !($unwrap[Int]($w_mul[$Int](l$_supply@251@01, $wrap[$Int]($pow[Int](10, $unwrap[Int](l$_decimals@250@01))))) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    ($unwrap<Int> ($w_mul<$Int> l$_supply@251@01 ($wrap<$Int> ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)))))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(pop) ; 6
; [eval] !($unwrap($w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals))))) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)
; [eval] $unwrap($w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals))))) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals)))))
; [eval] $w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals))))
; [eval] $wrap($pow(10, $unwrap(l$_decimals)))
; [eval] $pow(10, $unwrap(l$_decimals))
; [eval] $unwrap(l$_decimals)
(push) ; 6
(set-option :timeout 10)
(assert (not (>
  ($unwrap<Int> ($w_mul<$Int> l$_supply@251@01 ($wrap<$Int> ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)))))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (>
    ($unwrap<Int> ($w_mul<$Int> l$_supply@251@01 ($wrap<$Int> ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)))))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 55 | !($unwrap[Int]($w_mul[$Int](l$_supply@251@01, $wrap[$Int]($pow[Int](10, $unwrap[Int](l$_decimals@250@01))))) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
; [else-branch: 55 | $unwrap[Int]($w_mul[$Int](l$_supply@251@01, $wrap[$Int]($pow[Int](10, $unwrap[Int](l$_decimals@250@01))))) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 55 | !($unwrap[Int]($w_mul[$Int](l$_supply@251@01, $wrap[$Int]($pow[Int](10, $unwrap[Int](l$_decimals@250@01))))) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    ($unwrap<Int> ($w_mul<$Int> l$_supply@251@01 ($wrap<$Int> ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)))))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
; [exec]
; l$init_supply := $w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals))))
; [eval] $w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals))))
; [eval] $wrap($pow(10, $unwrap(l$_decimals)))
; [eval] $pow(10, $unwrap(l$_decimals))
; [eval] $unwrap(l$_decimals)
(declare-const l$init_supply@322@01 $Int)
(assert (=
  l$init_supply@322@01
  ($w_mul<$Int> l$_supply@251@01 ($wrap<$Int> ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01))))))
; [exec]
; self := ($struct_set(self, 0, l$_name): $Struct)
; [eval] ($struct_set(self, 0, l$_name): $Struct)
(declare-const self@323@01 $Struct)
(assert (= self@323@01 ($struct_set<$Struct> self@316@01 0 l$_name@248@01)))
; [exec]
; self := ($struct_set(self, 1, l$_symbol): $Struct)
; [eval] ($struct_set(self, 1, l$_symbol): $Struct)
(declare-const self@324@01 $Struct)
(assert (= self@324@01 ($struct_set<$Struct> self@323@01 1 l$_symbol@249@01)))
; [exec]
; self := ($struct_set(self, 2, $unwrap(l$_decimals)): $Struct)
; [eval] ($struct_set(self, 2, $unwrap(l$_decimals)): $Struct)
; [eval] $unwrap(l$_decimals)
(declare-const self@325@01 $Struct)
(assert (=
  self@325@01
  ($struct_set<$Struct> self@324@01 2 ($unwrap<Int> l$_decimals@250@01))))
; [exec]
; self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;   ($struct_get($struct_loc(msg, 0)): Int), $unwrap(l$init_supply)): $Map[Int, Int])): $Struct)
; [eval] ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap(l$init_supply)): $Map[Int, Int])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap(l$init_supply)): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$init_supply)
(declare-const self@326@01 $Struct)
(assert (=
  self@326@01
  ($struct_set<$Struct> self@325@01 3 ($map_set<$Map<Int~_Int>> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@325@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@253@01 0)) ($unwrap<Int> l$init_supply@322@01)))))
; [exec]
; self := ($struct_set(self, 5, $unwrap(l$init_supply)): $Struct)
; [eval] ($struct_set(self, 5, $unwrap(l$init_supply)): $Struct)
; [eval] $unwrap(l$init_supply)
(declare-const self@327@01 $Struct)
(assert (=
  self@327@01
  ($struct_set<$Struct> self@326@01 5 ($unwrap<Int> l$init_supply@322@01))))
; [exec]
; self := ($struct_set(self, 6, ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_set(self, 6, ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(declare-const self@328@01 $Struct)
(assert (=
  self@328@01
  ($struct_set<$Struct> self@327@01 6 ($struct_get<Int> ($struct_loc<Int> msg@253@01 0)))))
; [exec]
; inhale acc(e$Transfer(0, ($struct_get($struct_loc(msg, 0)): Int), $unwrap(l$init_supply)), write)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$init_supply)
(declare-const $t@329@01 $Snap)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label return
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not $out_of_gas@269@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not $out_of_gas@269@01))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 56 | $out_of_gas@269@01 | live]
; [else-branch: 56 | !($out_of_gas@269@01) | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 56 | $out_of_gas@269@01]
(assert $out_of_gas@269@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
(push) ; 8
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 57 | True | live]
; [else-branch: 57 | False | dead]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 57 | True]
; [exec]
; $old_self := self
; [then-branch: 58 | False | dead]
; [else-branch: 58 | True | live]
(push) ; 9
; [else-branch: 58 | True]
(pop) ; 9
; [eval] !$succ
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 59 | True | live]
; [else-branch: 59 | False | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 59 | True]
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@330@01 $Snap)
(assert (= $t@330@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@270@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@331@01 $Struct)
(assert (=
  self@331@01
  ($struct_set<$Struct> self@257@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@257@01 7))
    l$havoc$1@270@01))))
; [exec]
; $contracts := l$havoc$2
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 60 | True | live]
; [else-branch: 60 | False | dead]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 60 | True]
; [exec]
; $old_self := self
; [exec]
; assert $succ ==>
;   ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $succ ==> ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
(push) ; 11
; [then-branch: 61 | False | dead]
; [else-branch: 61 | True | live]
(push) ; 12
; [else-branch: 61 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
; [exec]
; assert $succ ==>
;   ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] $succ ==> ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
(push) ; 11
; [then-branch: 62 | False | dead]
; [else-branch: 62 | True | live]
(push) ; 12
; [else-branch: 62 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
; [eval] !$first_public_state
; [then-branch: 63 | False | dead]
; [else-branch: 63 | True | live]
(push) ; 10
; [else-branch: 63 | True]
(pop) ; 10
(pop) ; 9
(pop) ; 8
; [eval] !$first_public_state
; [then-branch: 64 | False | dead]
; [else-branch: 64 | True | live]
(push) ; 8
; [else-branch: 64 | True]
(pop) ; 8
(pop) ; 7
(push) ; 7
; [else-branch: 56 | !($out_of_gas@269@01)]
(assert (not $out_of_gas@269@01))
(pop) ; 7
; [eval] !$out_of_gas
(push) ; 7
(set-option :timeout 10)
(assert (not $out_of_gas@269@01))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not $out_of_gas@269@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 65 | !($out_of_gas@269@01) | live]
; [else-branch: 65 | $out_of_gas@269@01 | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 65 | !($out_of_gas@269@01)]
(assert (not $out_of_gas@269@01))
; [exec]
; label end
(push) ; 8
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 66 | True | live]
; [else-branch: 66 | False | dead]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 66 | True]
; [exec]
; $old_self := self
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 67 | True | live]
; [else-branch: 67 | False | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 67 | True]
; [exec]
; assert ($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 10
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@253@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@328@01 6)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 68 | $struct_get[Int]($struct_loc[Int](msg@253@01, 0)) != $struct_get[Int]($struct_loc[Int](self@328@01, 6)) | dead]
; [else-branch: 68 | $struct_get[Int]($struct_loc[Int](msg@253@01, 0)) == $struct_get[Int]($struct_loc[Int](self@328@01, 6)) | live]
(set-option :timeout 0)
(push) ; 11
; [else-branch: 68 | $struct_get[Int]($struct_loc[Int](msg@253@01, 0)) == $struct_get[Int]($struct_loc[Int](self@328@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@253@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@328@01 6))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@253@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@328@01 6))))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@332@01 Int)
(declare-const q$b@333@01 Int)
(push) ; 10
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 69 | !(0 <= q$a@332@01) | live]
; [else-branch: 69 | 0 <= q$a@332@01 | live]
(push) ; 12
; [then-branch: 69 | !(0 <= q$a@332@01)]
(assert (not (<= 0 q$a@332@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 69 | 0 <= q$a@332@01]
(assert (<= 0 q$a@332@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 13
; [then-branch: 70 | !(q$a@332@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 70 | q$a@332@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 14
; [then-branch: 70 | !(q$a@332@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@332@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 14
(push) ; 14
; [else-branch: 70 | q$a@332@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@332@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 15
; [then-branch: 71 | !(0 <= q$b@333@01) | live]
; [else-branch: 71 | 0 <= q$b@333@01 | live]
(push) ; 16
; [then-branch: 71 | !(0 <= q$b@333@01)]
(assert (not (<= 0 q$b@333@01)))
(pop) ; 16
(push) ; 16
; [else-branch: 71 | 0 <= q$b@333@01]
(assert (<= 0 q$b@333@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@333@01) (not (<= 0 q$b@333@01))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@333@01) (not (<= 0 q$b@333@01))))))
(assert (or
  (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@332@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@332@01)
  (and
    (<= 0 q$a@332@01)
    (=>
      (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@333@01) (not (<= 0 q$b@333@01)))))
    (or
      (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@332@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@332@01) (not (<= 0 q$a@332@01))))
(push) ; 11
; [then-branch: 72 | 0 <= q$a@332@01 && q$a@332@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@333@01 && q$b@333@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 72 | !(0 <= q$a@332@01 && q$a@332@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@333@01 && q$b@333@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 72 | 0 <= q$a@332@01 && q$a@332@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@333@01 && q$b@333@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@332@01)
  (and
    (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@333@01)
      (<= q$b@333@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 13
; [then-branch: 73 | False | dead]
; [else-branch: 73 | True | live]
(push) ; 14
; [else-branch: 73 | True]
(pop) ; 14
(pop) ; 13
; Joined path conditions
(pop) ; 12
(push) ; 12
; [else-branch: 72 | !(0 <= q$a@332@01 && q$a@332@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@333@01 && q$b@333@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@332@01)
    (and
      (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@333@01)
        (<= q$b@333@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@332@01)
    (and
      (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@333@01)
        (<= q$b@333@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@332@01)
    (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@333@01)
    (<= q$b@333@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@332@01)
      (and
        (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@333@01)
          (<= q$b@333@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@332@01)
    (and
      (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@333@01)
        (<= q$b@333@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@332@01 Int) (q$b@333@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@332@01)
      (and
        (<= 0 q$a@332@01)
        (=>
          (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@333@01) (not (<= 0 q$b@333@01)))))
        (or
          (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@332@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@332@01) (not (<= 0 q$a@332@01)))
    (=>
      (and
        (<= 0 q$a@332@01)
        (and
          (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@333@01)
            (<= q$b@333@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@332@01)
        (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@333@01)
        (<= q$b@333@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@332@01)
          (and
            (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@333@01)
              (<= q$b@333@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@332@01)
        (and
          (<= q$a@332@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@333@01)
            (<= q$b@333@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@328@01 3)) q$a@332@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@328@01 3)) q$b@333@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@935@13@935@853-aux|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@334@01 Int)
(push) ; 10
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 74 | !(0 <= q$a@334@01) | live]
; [else-branch: 74 | 0 <= q$a@334@01 | live]
(push) ; 12
; [then-branch: 74 | !(0 <= q$a@334@01)]
(assert (not (<= 0 q$a@334@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 74 | 0 <= q$a@334@01]
(assert (<= 0 q$a@334@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@334@01) (not (<= 0 q$a@334@01))))
(push) ; 11
; [then-branch: 75 | 0 <= q$a@334@01 && q$a@334@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 75 | !(0 <= q$a@334@01 && q$a@334@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 75 | 0 <= q$a@334@01 && q$a@334@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@334@01)
  (<= q$a@334@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 13
; [then-branch: 76 | False | dead]
; [else-branch: 76 | True | live]
(push) ; 14
; [else-branch: 76 | True]
(pop) ; 14
(pop) ; 13
; Joined path conditions
(pop) ; 12
(push) ; 12
; [else-branch: 75 | !(0 <= q$a@334@01 && q$a@334@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@334@01)
    (<= q$a@334@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@334@01)
      (<= q$a@334@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@334@01)
    (<= q$a@334@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@334@01 Int)) (!
  (and
    (or (<= 0 q$a@334@01) (not (<= 0 q$a@334@01)))
    (or
      (not
        (and
          (<= 0 q$a@334@01)
          (<= q$a@334@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@334@01)
        (<= q$a@334@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@328@01 3)) q$a@334@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@936@13@936@1047-aux|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@335@01 Int)
(push) ; 10
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 77 | !(0 <= q$a@335@01) | live]
; [else-branch: 77 | 0 <= q$a@335@01 | live]
(push) ; 12
; [then-branch: 77 | !(0 <= q$a@335@01)]
(assert (not (<= 0 q$a@335@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 77 | 0 <= q$a@335@01]
(assert (<= 0 q$a@335@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@335@01) (not (<= 0 q$a@335@01))))
(push) ; 11
; [then-branch: 78 | 0 <= q$a@335@01 && q$a@335@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 78 | !(0 <= q$a@335@01 && q$a@335@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 78 | 0 <= q$a@335@01 && q$a@335@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@335@01)
  (<= q$a@335@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 13
; [then-branch: 79 | False | dead]
; [else-branch: 79 | True | live]
(push) ; 14
; [else-branch: 79 | True]
(pop) ; 14
(pop) ; 13
; Joined path conditions
(pop) ; 12
(push) ; 12
; [else-branch: 78 | !(0 <= q$a@335@01 && q$a@335@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@335@01)
    (<= q$a@335@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@335@01)
      (<= q$a@335@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@335@01)
    (<= q$a@335@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@335@01 Int)) (!
  (and
    (or (<= 0 q$a@335@01) (not (<= 0 q$a@335@01)))
    (or
      (not
        (and
          (<= 0 q$a@335@01)
          (<= q$a@335@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@335@01)
        (<= q$a@335@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@328@01 3)) q$a@335@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@937@13@937@1047-aux|)))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@336@01 Int)
(declare-const q$b@337@01 Int)
(push) ; 10
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 80 | !(0 <= q$a@336@01) | live]
; [else-branch: 80 | 0 <= q$a@336@01 | live]
(push) ; 12
; [then-branch: 80 | !(0 <= q$a@336@01)]
(assert (not (<= 0 q$a@336@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 80 | 0 <= q$a@336@01]
(assert (<= 0 q$a@336@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 13
; [then-branch: 81 | !(q$a@336@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 81 | q$a@336@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 14
; [then-branch: 81 | !(q$a@336@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@336@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 14
(push) ; 14
; [else-branch: 81 | q$a@336@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@336@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 15
; [then-branch: 82 | !(0 <= q$b@337@01) | live]
; [else-branch: 82 | 0 <= q$b@337@01 | live]
(push) ; 16
; [then-branch: 82 | !(0 <= q$b@337@01)]
(assert (not (<= 0 q$b@337@01)))
(pop) ; 16
(push) ; 16
; [else-branch: 82 | 0 <= q$b@337@01]
(assert (<= 0 q$b@337@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@337@01) (not (<= 0 q$b@337@01))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@337@01) (not (<= 0 q$b@337@01))))))
(assert (or
  (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@336@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@336@01)
  (and
    (<= 0 q$a@336@01)
    (=>
      (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@337@01) (not (<= 0 q$b@337@01)))))
    (or
      (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@336@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@336@01) (not (<= 0 q$a@336@01))))
(push) ; 11
; [then-branch: 83 | 0 <= q$a@336@01 && q$a@336@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@337@01 && q$b@337@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 83 | !(0 <= q$a@336@01 && q$a@336@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@337@01 && q$b@337@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 83 | 0 <= q$a@336@01 && q$a@336@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@337@01 && q$b@337@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@336@01)
  (and
    (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@337@01)
      (<= q$b@337@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 13
; [then-branch: 84 | False | dead]
; [else-branch: 84 | True | live]
(push) ; 14
; [else-branch: 84 | True]
(pop) ; 14
(pop) ; 13
; Joined path conditions
(pop) ; 12
(push) ; 12
; [else-branch: 83 | !(0 <= q$a@336@01 && q$a@336@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@337@01 && q$b@337@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@336@01)
    (and
      (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@337@01)
        (<= q$b@337@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@336@01)
    (and
      (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@337@01)
        (<= q$b@337@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@336@01)
    (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@337@01)
    (<= q$b@337@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@336@01)
      (and
        (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@337@01)
          (<= q$b@337@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@336@01)
    (and
      (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@337@01)
        (<= q$b@337@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@336@01 Int) (q$b@337@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@336@01)
      (and
        (<= 0 q$a@336@01)
        (=>
          (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@337@01) (not (<= 0 q$b@337@01)))))
        (or
          (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@336@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@336@01) (not (<= 0 q$a@336@01)))
    (=>
      (and
        (<= 0 q$a@336@01)
        (and
          (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@337@01)
            (<= q$b@337@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@336@01)
        (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@337@01)
        (<= q$b@337@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@336@01)
          (and
            (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@337@01)
              (<= q$b@337@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@336@01)
        (and
          (<= q$a@336@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@337@01)
            (<= q$b@337@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@328@01 4)) q$a@336@01) q$b@337@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@938@13@938@843-aux|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@338@01 $Snap)
(assert (= $t@338@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@270@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@339@01 $Struct)
(assert (=
  self@339@01
  ($struct_set<$Struct> self@328@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@328@01 7))
    l$havoc$1@270@01))))
; [exec]
; $contracts := l$havoc$2
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 85 | True | live]
; [else-branch: 85 | False | dead]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 85 | True]
; [exec]
; $old_self := self
; [exec]
; assert $succ ==>
;   ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $succ ==> ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
(push) ; 11
(push) ; 12
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 86 | True | live]
; [else-branch: 86 | False | dead]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 86 | True]
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(pop) ; 12
(pop) ; 11
; Joined path conditions
; [exec]
; assert $succ ==>
;   ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] $succ ==> ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
(push) ; 11
(push) ; 12
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 87 | True | live]
; [else-branch: 87 | False | dead]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 87 | True]
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 12
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@339@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@339@01 3))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@339@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@339@01 3)))))
(pop) ; 10
; [eval] !$first_public_state
; [then-branch: 88 | False | dead]
; [else-branch: 88 | True | live]
(push) ; 10
; [else-branch: 88 | True]
(pop) ; 10
(pop) ; 9
; [eval] !$succ
; [then-branch: 89 | False | dead]
; [else-branch: 89 | True | live]
(push) ; 9
; [else-branch: 89 | True]
(pop) ; 9
(pop) ; 8
; [eval] !$first_public_state
; [then-branch: 90 | False | dead]
; [else-branch: 90 | True | live]
(push) ; 8
; [else-branch: 90 | True]
(pop) ; 8
(pop) ; 7
(push) ; 7
; [else-branch: 65 | $out_of_gas@269@01]
(assert $out_of_gas@269@01)
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 55 | $unwrap[Int]($w_mul[$Int](l$_supply@251@01, $wrap[$Int]($pow[Int](10, $unwrap[Int](l$_decimals@250@01))))) > 115792089237316195423570985008687907853269984665640564039457584007913129639935]
(assert (>
  ($unwrap<Int> ($w_mul<$Int> l$_supply@251@01 ($wrap<$Int> ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01)))))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
(pop) ; 6
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 43 | $pow[Int](10, $unwrap[Int](l$_decimals@250@01)) > 115792089237316195423570985008687907853269984665640564039457584007913129639935]
(assert (>
  ($pow<Int> 10 ($unwrap<Int> l$_decimals@250@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
(pop) ; 4
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$totalSupply ----------
(declare-const $succ@340@01 Bool)
(declare-const $res@341@01 Int)
(declare-const $succ@342@01 Bool)
(declare-const $res@343@01 Int)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@344@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@345@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@346@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@347@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@348@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@349@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@350@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@351@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@352@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@353@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@354@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@355@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@356@01 Bool)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@357@01 Bool)
; [exec]
; var l$havoc: Int
(declare-const l$havoc@358@01 Int)
; [exec]
; var l$havoc$1: Int
(declare-const l$havoc$1@359@01 Int)
; [exec]
; var l$havoc$2: $Map[Int, $Struct]
(declare-const l$havoc$2@360@01 $Map<Int~_$Struct>)
; [exec]
; inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
(declare-const $t@361@01 $Snap)
(assert (= $t@361@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 0)): Seq[Int])
; [eval] $struct_loc(self, 0)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@348@01 0))) 64))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
(declare-const $t@362@01 $Snap)
(assert (= $t@362@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 1)): Seq[Int])
; [eval] $struct_loc(self, 1)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@348@01 1))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@363@01 $Snap)
(assert (= $t@363@01 ($Snap.combine ($Snap.first $t@363@01) ($Snap.second $t@363@01))))
(assert (= ($Snap.first $t@363@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@348@01 2))))
(assert (= ($Snap.second $t@363@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@348@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@364@01 $Snap)
(assert (= $t@364@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@365@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 4
; [then-branch: 91 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@348@01, 3)), $q2@365@01)) | live]
; [else-branch: 91 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@348@01, 3)), $q2@365@01) | live]
(push) ; 5
; [then-branch: 91 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@348@01, 3)), $q2@365@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) $q2@365@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 91 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@348@01, 3)), $q2@365@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) $q2@365@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) $q2@365@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) $q2@365@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@365@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) $q2@365@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) $q2@365@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) $q2@365@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@975@11@975@345-aux|)))
(assert (forall (($q2@365@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) $q2@365@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) $q2@365@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) $q2@365@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@975@11@975@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $t@366@01 $Snap)
(assert (= $t@366@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $q2@367@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@367@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) $q2@367@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) $q2@367@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@976@11@976@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@368@01 $Snap)
(assert (= $t@368@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@369@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@370@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 5
; [then-branch: 92 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@348@01, 4)), $q3@369@01), $q4@370@01)) | live]
; [else-branch: 92 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@348@01, 4)), $q3@369@01), $q4@370@01) | live]
(push) ; 6
; [then-branch: 92 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@348@01, 4)), $q3@369@01), $q4@370@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@369@01) $q4@370@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 92 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@348@01, 4)), $q3@369@01), $q4@370@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@369@01) $q4@370@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@369@01) $q4@370@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@369@01) $q4@370@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@370@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@369@01) $q4@370@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@369@01) $q4@370@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@369@01) $q4@370@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@977@131@977@597-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@369@01 Int)) (!
  (forall (($q4@370@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@369@01) $q4@370@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@369@01) $q4@370@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@369@01) $q4@370@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@977@131@977@597-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@369@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@977@11@977@598-aux|)))
(assert (forall (($q3@369@01 Int)) (!
  (forall (($q4@370@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@369@01) $q4@370@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@369@01) $q4@370@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@369@01) $q4@370@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@977@131@977@597|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@369@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@977@11@977@598|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@371@01 $Snap)
(assert (= $t@371@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@372@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@373@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@372@01 Int)) (!
  (forall (($q4@373@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@372@01) $q4@373@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@372@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@372@01) $q4@373@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@978@131@978@505|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) $q3@372@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@978@11@978@506|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@374@01 $Snap)
(assert (= $t@374@01 ($Snap.combine ($Snap.first $t@374@01) ($Snap.second $t@374@01))))
(assert (= ($Snap.first $t@374@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@348@01 5))))
(assert (= ($Snap.second $t@374@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@348@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@375@01 $Snap)
(assert (= $t@375@01 ($Snap.combine ($Snap.first $t@375@01) ($Snap.second $t@375@01))))
(assert (= ($Snap.first $t@375@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@348@01 6))))
(assert (= ($Snap.second $t@375@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@348@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) &&
;   ($struct_get($struct_loc(self, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@376@01 $Snap)
(assert (= $t@376@01 ($Snap.combine ($Snap.first $t@376@01) ($Snap.second $t@376@01))))
(assert (= ($Snap.first $t@376@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 7)): Int)
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@348@01 7))))
(assert (= ($Snap.second $t@376@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@348@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 8)): Int) &&
;   ($struct_get($struct_loc(self, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@377@01 $Snap)
(assert (= $t@377@01 ($Snap.combine ($Snap.first $t@377@01) ($Snap.second $t@377@01))))
(assert (= ($Snap.first $t@377@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@348@01 8))))
(assert (= ($Snap.second $t@377@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@348@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@378@01 $Snap)
(assert (= $t@378@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@379@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(push) ; 4
; [then-branch: 93 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@348@01, 10)), $q5@379@01)) | live]
; [else-branch: 93 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@348@01, 10)), $q5@379@01) | live]
(push) ; 5
; [then-branch: 93 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@348@01, 10)), $q5@379@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 10)) $q5@379@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 93 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@348@01, 10)), $q5@379@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 10)) $q5@379@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 10)) $q5@379@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 10)) $q5@379@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@379@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 10)) $q5@379@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 10)) $q5@379@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 10)) $q5@379@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@983@11@983@348-aux|)))
(assert (forall (($q5@379@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 10)) $q5@379@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 10)) $q5@379@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 10)) $q5@379@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@983@11@983@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $t@380@01 $Snap)
(assert (= $t@380@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $q5@381@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@381@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 10)) $q5@381@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 10)) $q5@381@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@984@11@984@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@382@01 $Snap)
(assert (= $t@382@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@383@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(push) ; 4
; [then-branch: 94 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@348@01, 11)), $q6@383@01)) | live]
; [else-branch: 94 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@348@01, 11)), $q6@383@01) | live]
(push) ; 5
; [then-branch: 94 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@348@01, 11)), $q6@383@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 11)) $q6@383@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 94 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@348@01, 11)), $q6@383@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 11)) $q6@383@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 11)) $q6@383@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 11)) $q6@383@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@383@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 11)) $q6@383@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 11)) $q6@383@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 11)) $q6@383@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@985@11@985@348-aux|)))
(assert (forall (($q6@383@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 11)) $q6@383@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 11)) $q6@383@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 11)) $q6@383@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@985@11@985@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $t@384@01 $Snap)
(assert (= $t@384@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $q6@385@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
; [eval] ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@385@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 11)) $q6@385@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 11)) $q6@385@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@986@11@986@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@386@01 $Snap)
(assert (= $t@386@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@348@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@387@01 $Snap)
(assert (= $t@387@01 ($Snap.combine ($Snap.first $t@387@01) ($Snap.second $t@387@01))))
(assert (= ($Snap.first $t@387@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@387@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@388@01 $Snap)
(assert (= $t@388@01 ($Snap.combine ($Snap.first $t@388@01) ($Snap.second $t@388@01))))
(assert (= ($Snap.first $t@388@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@345@01 0))))
(assert (= ($Snap.second $t@388@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@345@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@389@01 $Snap)
(assert (= $t@389@01 ($Snap.combine ($Snap.first $t@389@01) ($Snap.second $t@389@01))))
(assert (= ($Snap.first $t@389@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@345@01 1))))
(assert (= ($Snap.second $t@389@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@345@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@390@01 $Snap)
(assert (= $t@390@01 ($Snap.combine ($Snap.first $t@390@01) ($Snap.second $t@390@01))))
(assert (= ($Snap.first $t@390@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@345@01 2))))
(assert (= ($Snap.second $t@390@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@345@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@391@01 $Snap)
(assert (= $t@391@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@345@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@392@01 $Snap)
(assert (= $t@392@01 ($Snap.combine ($Snap.first $t@392@01) ($Snap.second $t@392@01))))
(assert (= ($Snap.first $t@392@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@345@01 4))))
(assert (= ($Snap.second $t@392@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@345@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@393@01 $Snap)
(assert (= $t@393@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@345@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@394@01 $Snap)
(assert (= $t@394@01 ($Snap.combine ($Snap.first $t@394@01) ($Snap.second $t@394@01))))
(assert (= ($Snap.first $t@394@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@344@01 0))))
(assert (= ($Snap.second $t@394@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@344@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@395@01 $Snap)
(assert (= $t@395@01 ($Snap.combine ($Snap.first $t@395@01) ($Snap.second $t@395@01))))
(assert (= ($Snap.first $t@395@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@344@01 1))))
(assert (= ($Snap.second $t@395@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@344@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@396@01 $Snap)
(assert (= $t@396@01 ($Snap.combine ($Snap.first $t@396@01) ($Snap.second $t@396@01))))
(assert (= ($Snap.first $t@396@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@344@01 2))))
(assert (= ($Snap.second $t@396@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@344@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@397@01 $Snap)
(assert (= $t@397@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@344@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@398@01 $Snap)
(assert (= $t@398@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@344@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $t@399@01 $Snap)
(assert (= $t@399@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $a@400@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc(self, 6)): Int)
(declare-const $t@401@01 $Snap)
(assert (= $t@401@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
(declare-const $t@402@01 $Snap)
(assert (= $t@402@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@348@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@403@01 $Snap)
(assert (= $t@403@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@344@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; $res := $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(declare-const $res@404@01 Int)
(assert (=
  $res@404@01
  ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@348@01 5))))))
; [exec]
; label return
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not $out_of_gas@357@01)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not $out_of_gas@357@01))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 95 | $out_of_gas@357@01 | live]
; [else-branch: 95 | !($out_of_gas@357@01) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 95 | $out_of_gas@357@01]
(assert $out_of_gas@357@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [exec]
; exhale $succ ==>
;   $res ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] $succ ==> $res == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
(push) ; 4
; [then-branch: 96 | False | dead]
; [else-branch: 96 | True | live]
(push) ; 5
; [else-branch: 96 | True]
(pop) ; 5
(pop) ; 4
; Joined path conditions
; [then-branch: 97 | False | dead]
; [else-branch: 97 | True | live]
(push) ; 4
; [else-branch: 97 | True]
(pop) ; 4
; [eval] !$succ
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 98 | True | live]
; [else-branch: 98 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 98 | True]
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 5
(push) ; 6
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@344@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@348@01 6)))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@344@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@348@01 6))))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 99 | $struct_get[Int]($struct_loc[Int](msg@344@01, 0)) != $struct_get[Int]($struct_loc[Int](self@348@01, 6)) | live]
; [else-branch: 99 | $struct_get[Int]($struct_loc[Int](msg@344@01, 0)) == $struct_get[Int]($struct_loc[Int](self@348@01, 6)) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 99 | $struct_get[Int]($struct_loc[Int](msg@344@01, 0)) != $struct_get[Int]($struct_loc[Int](self@348@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@344@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@348@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 6
(push) ; 6
; [else-branch: 99 | $struct_get[Int]($struct_loc[Int](msg@344@01, 0)) == $struct_get[Int]($struct_loc[Int](self@348@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@344@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@348@01 6))))
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@344@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@348@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@344@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@348@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@405@01 Int)
(declare-const q$b@406@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 100 | !(0 <= q$a@405@01) | live]
; [else-branch: 100 | 0 <= q$a@405@01 | live]
(push) ; 7
; [then-branch: 100 | !(0 <= q$a@405@01)]
(assert (not (<= 0 q$a@405@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 100 | 0 <= q$a@405@01]
(assert (<= 0 q$a@405@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 101 | !(q$a@405@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 101 | q$a@405@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 101 | !(q$a@405@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@405@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 101 | q$a@405@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@405@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 102 | !(0 <= q$b@406@01) | live]
; [else-branch: 102 | 0 <= q$b@406@01 | live]
(push) ; 11
; [then-branch: 102 | !(0 <= q$b@406@01)]
(assert (not (<= 0 q$b@406@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 102 | 0 <= q$b@406@01]
(assert (<= 0 q$b@406@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@406@01) (not (<= 0 q$b@406@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@406@01) (not (<= 0 q$b@406@01))))))
(assert (or
  (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@405@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@405@01)
  (and
    (<= 0 q$a@405@01)
    (=>
      (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@406@01) (not (<= 0 q$b@406@01)))))
    (or
      (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@405@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@405@01) (not (<= 0 q$a@405@01))))
(push) ; 6
; [then-branch: 103 | 0 <= q$a@405@01 && q$a@405@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@406@01 && q$b@406@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 103 | !(0 <= q$a@405@01 && q$a@405@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@406@01 && q$b@406@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 103 | 0 <= q$a@405@01 && q$a@405@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@406@01 && q$b@406@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@405@01)
  (and
    (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@406@01)
      (<= q$b@406@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 8
; [then-branch: 104 | False | dead]
; [else-branch: 104 | True | live]
(push) ; 9
; [else-branch: 104 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 103 | !(0 <= q$a@405@01 && q$a@405@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@406@01 && q$b@406@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@405@01)
    (and
      (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@406@01)
        (<= q$b@406@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@405@01)
    (and
      (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@406@01)
        (<= q$b@406@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@405@01)
    (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@406@01)
    (<= q$b@406@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@405@01)
      (and
        (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@406@01)
          (<= q$b@406@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@405@01)
    (and
      (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@406@01)
        (<= q$b@406@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@405@01 Int) (q$b@406@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@405@01)
      (and
        (<= 0 q$a@405@01)
        (=>
          (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@406@01) (not (<= 0 q$b@406@01)))))
        (or
          (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@405@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@405@01) (not (<= 0 q$a@405@01)))
    (=>
      (and
        (<= 0 q$a@405@01)
        (and
          (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@406@01)
            (<= q$b@406@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@405@01)
        (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@406@01)
        (<= q$b@406@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@405@01)
          (and
            (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@406@01)
              (<= q$b@406@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@405@01)
        (and
          (<= q$a@405@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@406@01)
            (<= q$b@406@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) q$a@405@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) q$b@406@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1046@17@1046@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@407@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 105 | !(0 <= q$a@407@01) | live]
; [else-branch: 105 | 0 <= q$a@407@01 | live]
(push) ; 7
; [then-branch: 105 | !(0 <= q$a@407@01)]
(assert (not (<= 0 q$a@407@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 105 | 0 <= q$a@407@01]
(assert (<= 0 q$a@407@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@407@01) (not (<= 0 q$a@407@01))))
(push) ; 6
; [then-branch: 106 | 0 <= q$a@407@01 && q$a@407@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 106 | !(0 <= q$a@407@01 && q$a@407@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 106 | 0 <= q$a@407@01 && q$a@407@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@407@01)
  (<= q$a@407@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 107 | False | dead]
; [else-branch: 107 | True | live]
(push) ; 9
; [else-branch: 107 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 106 | !(0 <= q$a@407@01 && q$a@407@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@407@01)
    (<= q$a@407@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@407@01)
      (<= q$a@407@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@407@01)
    (<= q$a@407@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@407@01 Int)) (!
  (and
    (or (<= 0 q$a@407@01) (not (<= 0 q$a@407@01)))
    (or
      (not
        (and
          (<= 0 q$a@407@01)
          (<= q$a@407@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@407@01)
        (<= q$a@407@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) q$a@407@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1047@17@1047@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@408@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 108 | !(0 <= q$a@408@01) | live]
; [else-branch: 108 | 0 <= q$a@408@01 | live]
(push) ; 7
; [then-branch: 108 | !(0 <= q$a@408@01)]
(assert (not (<= 0 q$a@408@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 108 | 0 <= q$a@408@01]
(assert (<= 0 q$a@408@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@408@01) (not (<= 0 q$a@408@01))))
(push) ; 6
; [then-branch: 109 | 0 <= q$a@408@01 && q$a@408@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 109 | !(0 <= q$a@408@01 && q$a@408@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 109 | 0 <= q$a@408@01 && q$a@408@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@408@01)
  (<= q$a@408@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 110 | False | dead]
; [else-branch: 110 | True | live]
(push) ; 9
; [else-branch: 110 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 109 | !(0 <= q$a@408@01 && q$a@408@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@408@01)
    (<= q$a@408@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@408@01)
      (<= q$a@408@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@408@01)
    (<= q$a@408@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@408@01 Int)) (!
  (and
    (or (<= 0 q$a@408@01) (not (<= 0 q$a@408@01)))
    (or
      (not
        (and
          (<= 0 q$a@408@01)
          (<= q$a@408@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@408@01)
        (<= q$a@408@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) q$a@408@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1048@17@1048@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@409@01 Int)
(declare-const q$b@410@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 111 | !(0 <= q$a@409@01) | live]
; [else-branch: 111 | 0 <= q$a@409@01 | live]
(push) ; 7
; [then-branch: 111 | !(0 <= q$a@409@01)]
(assert (not (<= 0 q$a@409@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 111 | 0 <= q$a@409@01]
(assert (<= 0 q$a@409@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 112 | !(q$a@409@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 112 | q$a@409@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 112 | !(q$a@409@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@409@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 112 | q$a@409@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@409@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 113 | !(0 <= q$b@410@01) | live]
; [else-branch: 113 | 0 <= q$b@410@01 | live]
(push) ; 11
; [then-branch: 113 | !(0 <= q$b@410@01)]
(assert (not (<= 0 q$b@410@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 113 | 0 <= q$b@410@01]
(assert (<= 0 q$b@410@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@410@01) (not (<= 0 q$b@410@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@410@01) (not (<= 0 q$b@410@01))))))
(assert (or
  (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@409@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@409@01)
  (and
    (<= 0 q$a@409@01)
    (=>
      (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@410@01) (not (<= 0 q$b@410@01)))))
    (or
      (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@409@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@409@01) (not (<= 0 q$a@409@01))))
(push) ; 6
; [then-branch: 114 | 0 <= q$a@409@01 && q$a@409@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@410@01 && q$b@410@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 114 | !(0 <= q$a@409@01 && q$a@409@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@410@01 && q$b@410@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 114 | 0 <= q$a@409@01 && q$a@409@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@410@01 && q$b@410@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@409@01)
  (and
    (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@410@01)
      (<= q$b@410@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 8
; [then-branch: 115 | False | dead]
; [else-branch: 115 | True | live]
(push) ; 9
; [else-branch: 115 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 114 | !(0 <= q$a@409@01 && q$a@409@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@410@01 && q$b@410@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@409@01)
    (and
      (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@410@01)
        (<= q$b@410@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@409@01)
    (and
      (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@410@01)
        (<= q$b@410@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@409@01)
    (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@410@01)
    (<= q$b@410@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@409@01)
      (and
        (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@410@01)
          (<= q$b@410@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@409@01)
    (and
      (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@410@01)
        (<= q$b@410@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@409@01 Int) (q$b@410@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@409@01)
      (and
        (<= 0 q$a@409@01)
        (=>
          (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@410@01) (not (<= 0 q$b@410@01)))))
        (or
          (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@409@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@409@01) (not (<= 0 q$a@409@01)))
    (=>
      (and
        (<= 0 q$a@409@01)
        (and
          (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@410@01)
            (<= q$b@410@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@409@01)
        (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@410@01)
        (<= q$b@410@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@409@01)
          (and
            (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@410@01)
              (<= q$b@410@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@409@01)
        (and
          (<= q$a@409@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@410@01)
            (<= q$b@410@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) q$a@409@01) q$b@410@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1049@17@1049@847-aux|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@411@01 $Snap)
(assert (= $t@411@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@359@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@412@01 $Struct)
(assert (=
  self@412@01
  ($struct_set<$Struct> self@348@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@348@01 7))
    l$havoc$1@359@01))))
; [exec]
; $contracts := l$havoc$2
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@412@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@348@01 6)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@412@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@348@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@412@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@412@01 3))))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@412@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@412@01 3)))))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 95 | !($out_of_gas@357@01)]
(assert (not $out_of_gas@357@01))
(pop) ; 3
; [eval] !$out_of_gas
(push) ; 3
(set-option :timeout 10)
(assert (not $out_of_gas@357@01))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not $out_of_gas@357@01)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 116 | !($out_of_gas@357@01) | live]
; [else-branch: 116 | $out_of_gas@357@01 | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 116 | !($out_of_gas@357@01)]
(assert (not $out_of_gas@357@01))
; [exec]
; label end
; [exec]
; exhale $succ ==>
;   $res ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] $succ ==> $res == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
(push) ; 4
(push) ; 5
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 117 | True | live]
; [else-branch: 117 | False | dead]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 117 | True]
; [eval] $res == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
(push) ; 4
(assert (not (=
  $res@404@01
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3))))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(assert (=
  $res@404@01
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)))))
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 118 | True | live]
; [else-branch: 118 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 118 | True]
; [exec]
; assert ($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 5
(push) ; 6
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@344@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@348@01 6)))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@344@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@348@01 6))))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 119 | $struct_get[Int]($struct_loc[Int](msg@344@01, 0)) != $struct_get[Int]($struct_loc[Int](self@348@01, 6)) | live]
; [else-branch: 119 | $struct_get[Int]($struct_loc[Int](msg@344@01, 0)) == $struct_get[Int]($struct_loc[Int](self@348@01, 6)) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 119 | $struct_get[Int]($struct_loc[Int](msg@344@01, 0)) != $struct_get[Int]($struct_loc[Int](self@348@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@344@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@348@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 6
(push) ; 6
; [else-branch: 119 | $struct_get[Int]($struct_loc[Int](msg@344@01, 0)) == $struct_get[Int]($struct_loc[Int](self@348@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@344@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@348@01 6))))
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@344@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@348@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@344@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@348@01 6))))))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@413@01 Int)
(declare-const q$b@414@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 120 | !(0 <= q$a@413@01) | live]
; [else-branch: 120 | 0 <= q$a@413@01 | live]
(push) ; 7
; [then-branch: 120 | !(0 <= q$a@413@01)]
(assert (not (<= 0 q$a@413@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 120 | 0 <= q$a@413@01]
(assert (<= 0 q$a@413@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 121 | !(q$a@413@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 121 | q$a@413@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 121 | !(q$a@413@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@413@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 121 | q$a@413@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@413@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 122 | !(0 <= q$b@414@01) | live]
; [else-branch: 122 | 0 <= q$b@414@01 | live]
(push) ; 11
; [then-branch: 122 | !(0 <= q$b@414@01)]
(assert (not (<= 0 q$b@414@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 122 | 0 <= q$b@414@01]
(assert (<= 0 q$b@414@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@414@01) (not (<= 0 q$b@414@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@414@01) (not (<= 0 q$b@414@01))))))
(assert (or
  (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@413@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@413@01)
  (and
    (<= 0 q$a@413@01)
    (=>
      (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@414@01) (not (<= 0 q$b@414@01)))))
    (or
      (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@413@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@413@01) (not (<= 0 q$a@413@01))))
(push) ; 6
; [then-branch: 123 | 0 <= q$a@413@01 && q$a@413@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@414@01 && q$b@414@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 123 | !(0 <= q$a@413@01 && q$a@413@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@414@01 && q$b@414@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 123 | 0 <= q$a@413@01 && q$a@413@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@414@01 && q$b@414@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@413@01)
  (and
    (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@414@01)
      (<= q$b@414@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 8
; [then-branch: 124 | False | dead]
; [else-branch: 124 | True | live]
(push) ; 9
; [else-branch: 124 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 123 | !(0 <= q$a@413@01 && q$a@413@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@414@01 && q$b@414@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@413@01)
    (and
      (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@414@01)
        (<= q$b@414@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@413@01)
    (and
      (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@414@01)
        (<= q$b@414@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@413@01)
    (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@414@01)
    (<= q$b@414@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@413@01)
      (and
        (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@414@01)
          (<= q$b@414@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@413@01)
    (and
      (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@414@01)
        (<= q$b@414@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@413@01 Int) (q$b@414@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@413@01)
      (and
        (<= 0 q$a@413@01)
        (=>
          (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@414@01) (not (<= 0 q$b@414@01)))))
        (or
          (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@413@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@413@01) (not (<= 0 q$a@413@01)))
    (=>
      (and
        (<= 0 q$a@413@01)
        (and
          (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@414@01)
            (<= q$b@414@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@413@01)
        (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@414@01)
        (<= q$b@414@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@413@01)
          (and
            (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@414@01)
              (<= q$b@414@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@413@01)
        (and
          (<= q$a@413@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@414@01)
            (<= q$b@414@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) q$a@413@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) q$b@414@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1040@13@1040@853-aux|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@415@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 125 | !(0 <= q$a@415@01) | live]
; [else-branch: 125 | 0 <= q$a@415@01 | live]
(push) ; 7
; [then-branch: 125 | !(0 <= q$a@415@01)]
(assert (not (<= 0 q$a@415@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 125 | 0 <= q$a@415@01]
(assert (<= 0 q$a@415@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@415@01) (not (<= 0 q$a@415@01))))
(push) ; 6
; [then-branch: 126 | 0 <= q$a@415@01 && q$a@415@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 126 | !(0 <= q$a@415@01 && q$a@415@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 126 | 0 <= q$a@415@01 && q$a@415@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@415@01)
  (<= q$a@415@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 127 | False | dead]
; [else-branch: 127 | True | live]
(push) ; 9
; [else-branch: 127 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 126 | !(0 <= q$a@415@01 && q$a@415@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@415@01)
    (<= q$a@415@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@415@01)
      (<= q$a@415@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@415@01)
    (<= q$a@415@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@415@01 Int)) (!
  (and
    (or (<= 0 q$a@415@01) (not (<= 0 q$a@415@01)))
    (or
      (not
        (and
          (<= 0 q$a@415@01)
          (<= q$a@415@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@415@01)
        (<= q$a@415@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) q$a@415@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1041@13@1041@1047-aux|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@416@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 128 | !(0 <= q$a@416@01) | live]
; [else-branch: 128 | 0 <= q$a@416@01 | live]
(push) ; 7
; [then-branch: 128 | !(0 <= q$a@416@01)]
(assert (not (<= 0 q$a@416@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 128 | 0 <= q$a@416@01]
(assert (<= 0 q$a@416@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@416@01) (not (<= 0 q$a@416@01))))
(push) ; 6
; [then-branch: 129 | 0 <= q$a@416@01 && q$a@416@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 129 | !(0 <= q$a@416@01 && q$a@416@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 129 | 0 <= q$a@416@01 && q$a@416@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@416@01)
  (<= q$a@416@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 130 | False | dead]
; [else-branch: 130 | True | live]
(push) ; 9
; [else-branch: 130 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 129 | !(0 <= q$a@416@01 && q$a@416@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@416@01)
    (<= q$a@416@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@416@01)
      (<= q$a@416@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@416@01)
    (<= q$a@416@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@416@01 Int)) (!
  (and
    (or (<= 0 q$a@416@01) (not (<= 0 q$a@416@01)))
    (or
      (not
        (and
          (<= 0 q$a@416@01)
          (<= q$a@416@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@416@01)
        (<= q$a@416@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@348@01 3)) q$a@416@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1042@13@1042@1047-aux|)))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@417@01 Int)
(declare-const q$b@418@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 131 | !(0 <= q$a@417@01) | live]
; [else-branch: 131 | 0 <= q$a@417@01 | live]
(push) ; 7
; [then-branch: 131 | !(0 <= q$a@417@01)]
(assert (not (<= 0 q$a@417@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 131 | 0 <= q$a@417@01]
(assert (<= 0 q$a@417@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 132 | !(q$a@417@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 132 | q$a@417@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 132 | !(q$a@417@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@417@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 132 | q$a@417@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@417@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 133 | !(0 <= q$b@418@01) | live]
; [else-branch: 133 | 0 <= q$b@418@01 | live]
(push) ; 11
; [then-branch: 133 | !(0 <= q$b@418@01)]
(assert (not (<= 0 q$b@418@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 133 | 0 <= q$b@418@01]
(assert (<= 0 q$b@418@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@418@01) (not (<= 0 q$b@418@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@418@01) (not (<= 0 q$b@418@01))))))
(assert (or
  (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@417@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@417@01)
  (and
    (<= 0 q$a@417@01)
    (=>
      (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@418@01) (not (<= 0 q$b@418@01)))))
    (or
      (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@417@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@417@01) (not (<= 0 q$a@417@01))))
(push) ; 6
; [then-branch: 134 | 0 <= q$a@417@01 && q$a@417@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@418@01 && q$b@418@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 134 | !(0 <= q$a@417@01 && q$a@417@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@418@01 && q$b@418@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 134 | 0 <= q$a@417@01 && q$a@417@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@418@01 && q$b@418@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@417@01)
  (and
    (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@418@01)
      (<= q$b@418@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 8
; [then-branch: 135 | False | dead]
; [else-branch: 135 | True | live]
(push) ; 9
; [else-branch: 135 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 134 | !(0 <= q$a@417@01 && q$a@417@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@418@01 && q$b@418@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@417@01)
    (and
      (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@418@01)
        (<= q$b@418@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@417@01)
    (and
      (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@418@01)
        (<= q$b@418@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@417@01)
    (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@418@01)
    (<= q$b@418@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@417@01)
      (and
        (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@418@01)
          (<= q$b@418@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@417@01)
    (and
      (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@418@01)
        (<= q$b@418@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@417@01 Int) (q$b@418@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@417@01)
      (and
        (<= 0 q$a@417@01)
        (=>
          (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@418@01) (not (<= 0 q$b@418@01)))))
        (or
          (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@417@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@417@01) (not (<= 0 q$a@417@01)))
    (=>
      (and
        (<= 0 q$a@417@01)
        (and
          (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@418@01)
            (<= q$b@418@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@417@01)
        (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@418@01)
        (<= q$b@418@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@417@01)
          (and
            (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@418@01)
              (<= q$b@418@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@417@01)
        (and
          (<= q$a@417@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@418@01)
            (<= q$b@418@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@348@01 4)) q$a@417@01) q$b@418@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1043@13@1043@843-aux|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@419@01 $Snap)
(assert (= $t@419@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@359@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@420@01 $Struct)
(assert (=
  self@420@01
  ($struct_set<$Struct> self@348@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@348@01 7))
    l$havoc$1@359@01))))
; [exec]
; $contracts := l$havoc$2
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@420@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@348@01 6)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@420@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@348@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@420@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@420@01 3))))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@420@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@420@01 3)))))
(pop) ; 4
; [eval] !$succ
; [then-branch: 136 | False | dead]
; [else-branch: 136 | True | live]
(push) ; 4
; [else-branch: 136 | True]
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 116 | $out_of_gas@357@01]
(assert $out_of_gas@357@01)
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$allowance ----------
(declare-const l$_owner@421@01 Int)
(declare-const l$_spender@422@01 Int)
(declare-const $succ@423@01 Bool)
(declare-const $res@424@01 Int)
(declare-const l$_owner@425@01 Int)
(declare-const l$_spender@426@01 Int)
(declare-const $succ@427@01 Bool)
(declare-const $res@428@01 Int)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@429@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@430@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@431@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@432@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@433@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@434@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@435@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@436@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@437@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@438@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@439@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@440@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@441@01 Bool)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@442@01 Bool)
; [exec]
; var l$havoc: Int
(declare-const l$havoc@443@01 Int)
; [exec]
; var l$havoc$1: Int
(declare-const l$havoc$1@444@01 Int)
; [exec]
; var l$havoc$2: $Map[Int, $Struct]
(declare-const l$havoc$2@445@01 $Map<Int~_$Struct>)
; [exec]
; inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
(declare-const $t@446@01 $Snap)
(assert (= $t@446@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 0)): Seq[Int])
; [eval] $struct_loc(self, 0)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@433@01 0))) 64))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
(declare-const $t@447@01 $Snap)
(assert (= $t@447@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 1)): Seq[Int])
; [eval] $struct_loc(self, 1)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@433@01 1))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@448@01 $Snap)
(assert (= $t@448@01 ($Snap.combine ($Snap.first $t@448@01) ($Snap.second $t@448@01))))
(assert (= ($Snap.first $t@448@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@433@01 2))))
(assert (= ($Snap.second $t@448@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@433@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@449@01 $Snap)
(assert (= $t@449@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@450@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 4
; [then-branch: 137 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@433@01, 3)), $q2@450@01)) | live]
; [else-branch: 137 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@433@01, 3)), $q2@450@01) | live]
(push) ; 5
; [then-branch: 137 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@433@01, 3)), $q2@450@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) $q2@450@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 137 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@433@01, 3)), $q2@450@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) $q2@450@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) $q2@450@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) $q2@450@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@450@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) $q2@450@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) $q2@450@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) $q2@450@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1083@11@1083@345-aux|)))
(assert (forall (($q2@450@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) $q2@450@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) $q2@450@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) $q2@450@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1083@11@1083@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $t@451@01 $Snap)
(assert (= $t@451@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $q2@452@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@452@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) $q2@452@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) $q2@452@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1084@11@1084@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@453@01 $Snap)
(assert (= $t@453@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@454@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@455@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 5
; [then-branch: 138 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@433@01, 4)), $q3@454@01), $q4@455@01)) | live]
; [else-branch: 138 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@433@01, 4)), $q3@454@01), $q4@455@01) | live]
(push) ; 6
; [then-branch: 138 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@433@01, 4)), $q3@454@01), $q4@455@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@454@01) $q4@455@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 138 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@433@01, 4)), $q3@454@01), $q4@455@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@454@01) $q4@455@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@454@01) $q4@455@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@454@01) $q4@455@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@455@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@454@01) $q4@455@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@454@01) $q4@455@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@454@01) $q4@455@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1085@131@1085@597-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@454@01 Int)) (!
  (forall (($q4@455@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@454@01) $q4@455@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@454@01) $q4@455@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@454@01) $q4@455@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1085@131@1085@597-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@454@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1085@11@1085@598-aux|)))
(assert (forall (($q3@454@01 Int)) (!
  (forall (($q4@455@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@454@01) $q4@455@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@454@01) $q4@455@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@454@01) $q4@455@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1085@131@1085@597|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@454@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1085@11@1085@598|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@456@01 $Snap)
(assert (= $t@456@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@457@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@458@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@457@01 Int)) (!
  (forall (($q4@458@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@457@01) $q4@458@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@457@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@457@01) $q4@458@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1086@131@1086@505|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) $q3@457@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1086@11@1086@506|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@459@01 $Snap)
(assert (= $t@459@01 ($Snap.combine ($Snap.first $t@459@01) ($Snap.second $t@459@01))))
(assert (= ($Snap.first $t@459@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@433@01 5))))
(assert (= ($Snap.second $t@459@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@433@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@460@01 $Snap)
(assert (= $t@460@01 ($Snap.combine ($Snap.first $t@460@01) ($Snap.second $t@460@01))))
(assert (= ($Snap.first $t@460@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@433@01 6))))
(assert (= ($Snap.second $t@460@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@433@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) &&
;   ($struct_get($struct_loc(self, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@461@01 $Snap)
(assert (= $t@461@01 ($Snap.combine ($Snap.first $t@461@01) ($Snap.second $t@461@01))))
(assert (= ($Snap.first $t@461@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 7)): Int)
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@433@01 7))))
(assert (= ($Snap.second $t@461@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@433@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 8)): Int) &&
;   ($struct_get($struct_loc(self, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@462@01 $Snap)
(assert (= $t@462@01 ($Snap.combine ($Snap.first $t@462@01) ($Snap.second $t@462@01))))
(assert (= ($Snap.first $t@462@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@433@01 8))))
(assert (= ($Snap.second $t@462@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@433@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@463@01 $Snap)
(assert (= $t@463@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@464@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(push) ; 4
; [then-branch: 139 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@433@01, 10)), $q5@464@01)) | live]
; [else-branch: 139 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@433@01, 10)), $q5@464@01) | live]
(push) ; 5
; [then-branch: 139 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@433@01, 10)), $q5@464@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 10)) $q5@464@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 139 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@433@01, 10)), $q5@464@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 10)) $q5@464@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 10)) $q5@464@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 10)) $q5@464@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@464@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 10)) $q5@464@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 10)) $q5@464@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 10)) $q5@464@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1091@11@1091@348-aux|)))
(assert (forall (($q5@464@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 10)) $q5@464@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 10)) $q5@464@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 10)) $q5@464@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1091@11@1091@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $t@465@01 $Snap)
(assert (= $t@465@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $q5@466@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@466@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 10)) $q5@466@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 10)) $q5@466@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1092@11@1092@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@467@01 $Snap)
(assert (= $t@467@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@468@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(push) ; 4
; [then-branch: 140 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@433@01, 11)), $q6@468@01)) | live]
; [else-branch: 140 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@433@01, 11)), $q6@468@01) | live]
(push) ; 5
; [then-branch: 140 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@433@01, 11)), $q6@468@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 11)) $q6@468@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 140 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@433@01, 11)), $q6@468@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 11)) $q6@468@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 11)) $q6@468@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 11)) $q6@468@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@468@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 11)) $q6@468@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 11)) $q6@468@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 11)) $q6@468@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1093@11@1093@348-aux|)))
(assert (forall (($q6@468@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 11)) $q6@468@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 11)) $q6@468@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 11)) $q6@468@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1093@11@1093@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $t@469@01 $Snap)
(assert (= $t@469@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $q6@470@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
; [eval] ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@470@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 11)) $q6@470@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 11)) $q6@470@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1094@11@1094@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@471@01 $Snap)
(assert (= $t@471@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@433@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@472@01 $Snap)
(assert (= $t@472@01 ($Snap.combine ($Snap.first $t@472@01) ($Snap.second $t@472@01))))
(assert (= ($Snap.first $t@472@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@472@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= l$_owner &&
;   l$_owner <= 1461501637330902918203684832716283019655932542975
(declare-const $t@473@01 $Snap)
(assert (= $t@473@01 ($Snap.combine ($Snap.first $t@473@01) ($Snap.second $t@473@01))))
(assert (= ($Snap.first $t@473@01) $Snap.unit))
; [eval] 0 <= l$_owner
(assert (<= 0 l$_owner@425@01))
(assert (= ($Snap.second $t@473@01) $Snap.unit))
; [eval] l$_owner <= 1461501637330902918203684832716283019655932542975
(assert (<= l$_owner@425@01 1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= l$_spender &&
;   l$_spender <= 1461501637330902918203684832716283019655932542975
(declare-const $t@474@01 $Snap)
(assert (= $t@474@01 ($Snap.combine ($Snap.first $t@474@01) ($Snap.second $t@474@01))))
(assert (= ($Snap.first $t@474@01) $Snap.unit))
; [eval] 0 <= l$_spender
(assert (<= 0 l$_spender@426@01))
(assert (= ($Snap.second $t@474@01) $Snap.unit))
; [eval] l$_spender <= 1461501637330902918203684832716283019655932542975
(assert (<= l$_spender@426@01 1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@475@01 $Snap)
(assert (= $t@475@01 ($Snap.combine ($Snap.first $t@475@01) ($Snap.second $t@475@01))))
(assert (= ($Snap.first $t@475@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@430@01 0))))
(assert (= ($Snap.second $t@475@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@430@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@476@01 $Snap)
(assert (= $t@476@01 ($Snap.combine ($Snap.first $t@476@01) ($Snap.second $t@476@01))))
(assert (= ($Snap.first $t@476@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@430@01 1))))
(assert (= ($Snap.second $t@476@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@430@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@477@01 $Snap)
(assert (= $t@477@01 ($Snap.combine ($Snap.first $t@477@01) ($Snap.second $t@477@01))))
(assert (= ($Snap.first $t@477@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@430@01 2))))
(assert (= ($Snap.second $t@477@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@430@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@478@01 $Snap)
(assert (= $t@478@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@430@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@479@01 $Snap)
(assert (= $t@479@01 ($Snap.combine ($Snap.first $t@479@01) ($Snap.second $t@479@01))))
(assert (= ($Snap.first $t@479@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@430@01 4))))
(assert (= ($Snap.second $t@479@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@430@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@480@01 $Snap)
(assert (= $t@480@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@430@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@481@01 $Snap)
(assert (= $t@481@01 ($Snap.combine ($Snap.first $t@481@01) ($Snap.second $t@481@01))))
(assert (= ($Snap.first $t@481@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@429@01 0))))
(assert (= ($Snap.second $t@481@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@429@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@482@01 $Snap)
(assert (= $t@482@01 ($Snap.combine ($Snap.first $t@482@01) ($Snap.second $t@482@01))))
(assert (= ($Snap.first $t@482@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@429@01 1))))
(assert (= ($Snap.second $t@482@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@429@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@483@01 $Snap)
(assert (= $t@483@01 ($Snap.combine ($Snap.first $t@483@01) ($Snap.second $t@483@01))))
(assert (= ($Snap.first $t@483@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@429@01 2))))
(assert (= ($Snap.second $t@483@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@429@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@484@01 $Snap)
(assert (= $t@484@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@429@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@485@01 $Snap)
(assert (= $t@485@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@429@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $t@486@01 $Snap)
(assert (= $t@486@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $a@487@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc(self, 6)): Int)
(declare-const $t@488@01 $Snap)
(assert (= $t@488@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
(declare-const $t@489@01 $Snap)
(assert (= $t@489@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@433@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@490@01 $Snap)
(assert (= $t@490@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@429@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; $res := $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;   l$_owner): $Map[Int, Int]), l$_spender): Int)))
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_owner): $Map[Int, Int]), l$_spender): Int)))
; [eval] $wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_owner): $Map[Int, Int]), l$_spender): Int))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_owner): $Map[Int, Int]), l$_spender): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_owner): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(declare-const $res@491@01 Int)
(assert (=
  $res@491@01
  ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) l$_owner@425@01) l$_spender@426@01)))))
; [exec]
; label return
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not $out_of_gas@442@01)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not $out_of_gas@442@01))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 141 | $out_of_gas@442@01 | live]
; [else-branch: 141 | !($out_of_gas@442@01) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 141 | $out_of_gas@442@01]
(assert $out_of_gas@442@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [then-branch: 142 | False | dead]
; [else-branch: 142 | True | live]
(push) ; 4
; [else-branch: 142 | True]
(pop) ; 4
; [eval] !$succ
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 143 | True | live]
; [else-branch: 143 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 143 | True]
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 5
(push) ; 6
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@429@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@433@01 6)))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@429@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@433@01 6))))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 144 | $struct_get[Int]($struct_loc[Int](msg@429@01, 0)) != $struct_get[Int]($struct_loc[Int](self@433@01, 6)) | live]
; [else-branch: 144 | $struct_get[Int]($struct_loc[Int](msg@429@01, 0)) == $struct_get[Int]($struct_loc[Int](self@433@01, 6)) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 144 | $struct_get[Int]($struct_loc[Int](msg@429@01, 0)) != $struct_get[Int]($struct_loc[Int](self@433@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@429@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@433@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 6
(push) ; 6
; [else-branch: 144 | $struct_get[Int]($struct_loc[Int](msg@429@01, 0)) == $struct_get[Int]($struct_loc[Int](self@433@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@429@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@433@01 6))))
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@429@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@433@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@429@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@433@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@492@01 Int)
(declare-const q$b@493@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 145 | !(0 <= q$a@492@01) | live]
; [else-branch: 145 | 0 <= q$a@492@01 | live]
(push) ; 7
; [then-branch: 145 | !(0 <= q$a@492@01)]
(assert (not (<= 0 q$a@492@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 145 | 0 <= q$a@492@01]
(assert (<= 0 q$a@492@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 146 | !(q$a@492@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 146 | q$a@492@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 146 | !(q$a@492@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@492@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 146 | q$a@492@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@492@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 147 | !(0 <= q$b@493@01) | live]
; [else-branch: 147 | 0 <= q$b@493@01 | live]
(push) ; 11
; [then-branch: 147 | !(0 <= q$b@493@01)]
(assert (not (<= 0 q$b@493@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 147 | 0 <= q$b@493@01]
(assert (<= 0 q$b@493@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@493@01) (not (<= 0 q$b@493@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@493@01) (not (<= 0 q$b@493@01))))))
(assert (or
  (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@492@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@492@01)
  (and
    (<= 0 q$a@492@01)
    (=>
      (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@493@01) (not (<= 0 q$b@493@01)))))
    (or
      (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@492@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@492@01) (not (<= 0 q$a@492@01))))
(push) ; 6
; [then-branch: 148 | 0 <= q$a@492@01 && q$a@492@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@493@01 && q$b@493@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 148 | !(0 <= q$a@492@01 && q$a@492@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@493@01 && q$b@493@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 148 | 0 <= q$a@492@01 && q$a@492@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@493@01 && q$b@493@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@492@01)
  (and
    (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@493@01)
      (<= q$b@493@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 8
; [then-branch: 149 | False | dead]
; [else-branch: 149 | True | live]
(push) ; 9
; [else-branch: 149 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 148 | !(0 <= q$a@492@01 && q$a@492@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@493@01 && q$b@493@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@492@01)
    (and
      (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@493@01)
        (<= q$b@493@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@492@01)
    (and
      (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@493@01)
        (<= q$b@493@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@492@01)
    (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@493@01)
    (<= q$b@493@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@492@01)
      (and
        (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@493@01)
          (<= q$b@493@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@492@01)
    (and
      (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@493@01)
        (<= q$b@493@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@492@01 Int) (q$b@493@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@492@01)
      (and
        (<= 0 q$a@492@01)
        (=>
          (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@493@01) (not (<= 0 q$b@493@01)))))
        (or
          (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@492@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@492@01) (not (<= 0 q$a@492@01)))
    (=>
      (and
        (<= 0 q$a@492@01)
        (and
          (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@493@01)
            (<= q$b@493@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@492@01)
        (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@493@01)
        (<= q$b@493@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@492@01)
          (and
            (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@493@01)
              (<= q$b@493@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@492@01)
        (and
          (<= q$a@492@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@493@01)
            (<= q$b@493@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) q$a@492@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) q$b@493@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1155@17@1155@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@494@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 150 | !(0 <= q$a@494@01) | live]
; [else-branch: 150 | 0 <= q$a@494@01 | live]
(push) ; 7
; [then-branch: 150 | !(0 <= q$a@494@01)]
(assert (not (<= 0 q$a@494@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 150 | 0 <= q$a@494@01]
(assert (<= 0 q$a@494@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@494@01) (not (<= 0 q$a@494@01))))
(push) ; 6
; [then-branch: 151 | 0 <= q$a@494@01 && q$a@494@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 151 | !(0 <= q$a@494@01 && q$a@494@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 151 | 0 <= q$a@494@01 && q$a@494@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@494@01)
  (<= q$a@494@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 152 | False | dead]
; [else-branch: 152 | True | live]
(push) ; 9
; [else-branch: 152 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 151 | !(0 <= q$a@494@01 && q$a@494@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@494@01)
    (<= q$a@494@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@494@01)
      (<= q$a@494@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@494@01)
    (<= q$a@494@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@494@01 Int)) (!
  (and
    (or (<= 0 q$a@494@01) (not (<= 0 q$a@494@01)))
    (or
      (not
        (and
          (<= 0 q$a@494@01)
          (<= q$a@494@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@494@01)
        (<= q$a@494@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) q$a@494@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1156@17@1156@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@495@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 153 | !(0 <= q$a@495@01) | live]
; [else-branch: 153 | 0 <= q$a@495@01 | live]
(push) ; 7
; [then-branch: 153 | !(0 <= q$a@495@01)]
(assert (not (<= 0 q$a@495@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 153 | 0 <= q$a@495@01]
(assert (<= 0 q$a@495@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@495@01) (not (<= 0 q$a@495@01))))
(push) ; 6
; [then-branch: 154 | 0 <= q$a@495@01 && q$a@495@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 154 | !(0 <= q$a@495@01 && q$a@495@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 154 | 0 <= q$a@495@01 && q$a@495@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@495@01)
  (<= q$a@495@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 155 | False | dead]
; [else-branch: 155 | True | live]
(push) ; 9
; [else-branch: 155 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 154 | !(0 <= q$a@495@01 && q$a@495@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@495@01)
    (<= q$a@495@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@495@01)
      (<= q$a@495@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@495@01)
    (<= q$a@495@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@495@01 Int)) (!
  (and
    (or (<= 0 q$a@495@01) (not (<= 0 q$a@495@01)))
    (or
      (not
        (and
          (<= 0 q$a@495@01)
          (<= q$a@495@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@495@01)
        (<= q$a@495@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) q$a@495@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1157@17@1157@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@496@01 Int)
(declare-const q$b@497@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 156 | !(0 <= q$a@496@01) | live]
; [else-branch: 156 | 0 <= q$a@496@01 | live]
(push) ; 7
; [then-branch: 156 | !(0 <= q$a@496@01)]
(assert (not (<= 0 q$a@496@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 156 | 0 <= q$a@496@01]
(assert (<= 0 q$a@496@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 157 | !(q$a@496@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 157 | q$a@496@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 157 | !(q$a@496@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@496@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 157 | q$a@496@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@496@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 158 | !(0 <= q$b@497@01) | live]
; [else-branch: 158 | 0 <= q$b@497@01 | live]
(push) ; 11
; [then-branch: 158 | !(0 <= q$b@497@01)]
(assert (not (<= 0 q$b@497@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 158 | 0 <= q$b@497@01]
(assert (<= 0 q$b@497@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@497@01) (not (<= 0 q$b@497@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@497@01) (not (<= 0 q$b@497@01))))))
(assert (or
  (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@496@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@496@01)
  (and
    (<= 0 q$a@496@01)
    (=>
      (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@497@01) (not (<= 0 q$b@497@01)))))
    (or
      (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@496@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@496@01) (not (<= 0 q$a@496@01))))
(push) ; 6
; [then-branch: 159 | 0 <= q$a@496@01 && q$a@496@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@497@01 && q$b@497@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 159 | !(0 <= q$a@496@01 && q$a@496@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@497@01 && q$b@497@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 159 | 0 <= q$a@496@01 && q$a@496@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@497@01 && q$b@497@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@496@01)
  (and
    (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@497@01)
      (<= q$b@497@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 8
; [then-branch: 160 | False | dead]
; [else-branch: 160 | True | live]
(push) ; 9
; [else-branch: 160 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 159 | !(0 <= q$a@496@01 && q$a@496@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@497@01 && q$b@497@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@496@01)
    (and
      (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@497@01)
        (<= q$b@497@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@496@01)
    (and
      (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@497@01)
        (<= q$b@497@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@496@01)
    (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@497@01)
    (<= q$b@497@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@496@01)
      (and
        (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@497@01)
          (<= q$b@497@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@496@01)
    (and
      (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@497@01)
        (<= q$b@497@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@496@01 Int) (q$b@497@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@496@01)
      (and
        (<= 0 q$a@496@01)
        (=>
          (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@497@01) (not (<= 0 q$b@497@01)))))
        (or
          (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@496@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@496@01) (not (<= 0 q$a@496@01)))
    (=>
      (and
        (<= 0 q$a@496@01)
        (and
          (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@497@01)
            (<= q$b@497@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@496@01)
        (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@497@01)
        (<= q$b@497@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@496@01)
          (and
            (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@497@01)
              (<= q$b@497@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@496@01)
        (and
          (<= q$a@496@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@497@01)
            (<= q$b@497@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) q$a@496@01) q$b@497@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1158@17@1158@847-aux|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@498@01 $Snap)
(assert (= $t@498@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@444@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@499@01 $Struct)
(assert (=
  self@499@01
  ($struct_set<$Struct> self@433@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@433@01 7))
    l$havoc$1@444@01))))
; [exec]
; $contracts := l$havoc$2
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@499@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@433@01 6)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@499@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@433@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@499@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@499@01 3))))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@499@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@499@01 3)))))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 141 | !($out_of_gas@442@01)]
(assert (not $out_of_gas@442@01))
(pop) ; 3
; [eval] !$out_of_gas
(push) ; 3
(set-option :timeout 10)
(assert (not $out_of_gas@442@01))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not $out_of_gas@442@01)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 161 | !($out_of_gas@442@01) | live]
; [else-branch: 161 | $out_of_gas@442@01 | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 161 | !($out_of_gas@442@01)]
(assert (not $out_of_gas@442@01))
; [exec]
; label end
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 162 | True | live]
; [else-branch: 162 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 162 | True]
; [exec]
; assert ($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 5
(push) ; 6
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@429@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@433@01 6)))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@429@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@433@01 6))))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 163 | $struct_get[Int]($struct_loc[Int](msg@429@01, 0)) != $struct_get[Int]($struct_loc[Int](self@433@01, 6)) | live]
; [else-branch: 163 | $struct_get[Int]($struct_loc[Int](msg@429@01, 0)) == $struct_get[Int]($struct_loc[Int](self@433@01, 6)) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 163 | $struct_get[Int]($struct_loc[Int](msg@429@01, 0)) != $struct_get[Int]($struct_loc[Int](self@433@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@429@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@433@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 6
(push) ; 6
; [else-branch: 163 | $struct_get[Int]($struct_loc[Int](msg@429@01, 0)) == $struct_get[Int]($struct_loc[Int](self@433@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@429@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@433@01 6))))
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@429@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@433@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@429@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@433@01 6))))))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@500@01 Int)
(declare-const q$b@501@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 164 | !(0 <= q$a@500@01) | live]
; [else-branch: 164 | 0 <= q$a@500@01 | live]
(push) ; 7
; [then-branch: 164 | !(0 <= q$a@500@01)]
(assert (not (<= 0 q$a@500@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 164 | 0 <= q$a@500@01]
(assert (<= 0 q$a@500@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 165 | !(q$a@500@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 165 | q$a@500@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 165 | !(q$a@500@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@500@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 165 | q$a@500@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@500@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 166 | !(0 <= q$b@501@01) | live]
; [else-branch: 166 | 0 <= q$b@501@01 | live]
(push) ; 11
; [then-branch: 166 | !(0 <= q$b@501@01)]
(assert (not (<= 0 q$b@501@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 166 | 0 <= q$b@501@01]
(assert (<= 0 q$b@501@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@501@01) (not (<= 0 q$b@501@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@501@01) (not (<= 0 q$b@501@01))))))
(assert (or
  (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@500@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@500@01)
  (and
    (<= 0 q$a@500@01)
    (=>
      (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@501@01) (not (<= 0 q$b@501@01)))))
    (or
      (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@500@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@500@01) (not (<= 0 q$a@500@01))))
(push) ; 6
; [then-branch: 167 | 0 <= q$a@500@01 && q$a@500@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@501@01 && q$b@501@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 167 | !(0 <= q$a@500@01 && q$a@500@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@501@01 && q$b@501@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 167 | 0 <= q$a@500@01 && q$a@500@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@501@01 && q$b@501@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@500@01)
  (and
    (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@501@01)
      (<= q$b@501@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 8
; [then-branch: 168 | False | dead]
; [else-branch: 168 | True | live]
(push) ; 9
; [else-branch: 168 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 167 | !(0 <= q$a@500@01 && q$a@500@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@501@01 && q$b@501@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@500@01)
    (and
      (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@501@01)
        (<= q$b@501@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@500@01)
    (and
      (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@501@01)
        (<= q$b@501@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@500@01)
    (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@501@01)
    (<= q$b@501@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@500@01)
      (and
        (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@501@01)
          (<= q$b@501@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@500@01)
    (and
      (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@501@01)
        (<= q$b@501@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@500@01 Int) (q$b@501@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@500@01)
      (and
        (<= 0 q$a@500@01)
        (=>
          (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@501@01) (not (<= 0 q$b@501@01)))))
        (or
          (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@500@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@500@01) (not (<= 0 q$a@500@01)))
    (=>
      (and
        (<= 0 q$a@500@01)
        (and
          (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@501@01)
            (<= q$b@501@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@500@01)
        (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@501@01)
        (<= q$b@501@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@500@01)
          (and
            (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@501@01)
              (<= q$b@501@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@500@01)
        (and
          (<= q$a@500@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@501@01)
            (<= q$b@501@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) q$a@500@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) q$b@501@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1149@13@1149@853-aux|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@502@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 169 | !(0 <= q$a@502@01) | live]
; [else-branch: 169 | 0 <= q$a@502@01 | live]
(push) ; 7
; [then-branch: 169 | !(0 <= q$a@502@01)]
(assert (not (<= 0 q$a@502@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 169 | 0 <= q$a@502@01]
(assert (<= 0 q$a@502@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@502@01) (not (<= 0 q$a@502@01))))
(push) ; 6
; [then-branch: 170 | 0 <= q$a@502@01 && q$a@502@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 170 | !(0 <= q$a@502@01 && q$a@502@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 170 | 0 <= q$a@502@01 && q$a@502@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@502@01)
  (<= q$a@502@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 171 | False | dead]
; [else-branch: 171 | True | live]
(push) ; 9
; [else-branch: 171 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 170 | !(0 <= q$a@502@01 && q$a@502@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@502@01)
    (<= q$a@502@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@502@01)
      (<= q$a@502@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@502@01)
    (<= q$a@502@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@502@01 Int)) (!
  (and
    (or (<= 0 q$a@502@01) (not (<= 0 q$a@502@01)))
    (or
      (not
        (and
          (<= 0 q$a@502@01)
          (<= q$a@502@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@502@01)
        (<= q$a@502@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) q$a@502@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1150@13@1150@1047-aux|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@503@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 172 | !(0 <= q$a@503@01) | live]
; [else-branch: 172 | 0 <= q$a@503@01 | live]
(push) ; 7
; [then-branch: 172 | !(0 <= q$a@503@01)]
(assert (not (<= 0 q$a@503@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 172 | 0 <= q$a@503@01]
(assert (<= 0 q$a@503@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@503@01) (not (<= 0 q$a@503@01))))
(push) ; 6
; [then-branch: 173 | 0 <= q$a@503@01 && q$a@503@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 173 | !(0 <= q$a@503@01 && q$a@503@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 173 | 0 <= q$a@503@01 && q$a@503@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@503@01)
  (<= q$a@503@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 174 | False | dead]
; [else-branch: 174 | True | live]
(push) ; 9
; [else-branch: 174 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 173 | !(0 <= q$a@503@01 && q$a@503@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@503@01)
    (<= q$a@503@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@503@01)
      (<= q$a@503@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@503@01)
    (<= q$a@503@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@503@01 Int)) (!
  (and
    (or (<= 0 q$a@503@01) (not (<= 0 q$a@503@01)))
    (or
      (not
        (and
          (<= 0 q$a@503@01)
          (<= q$a@503@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@503@01)
        (<= q$a@503@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@433@01 3)) q$a@503@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1151@13@1151@1047-aux|)))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@504@01 Int)
(declare-const q$b@505@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 175 | !(0 <= q$a@504@01) | live]
; [else-branch: 175 | 0 <= q$a@504@01 | live]
(push) ; 7
; [then-branch: 175 | !(0 <= q$a@504@01)]
(assert (not (<= 0 q$a@504@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 175 | 0 <= q$a@504@01]
(assert (<= 0 q$a@504@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 176 | !(q$a@504@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 176 | q$a@504@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 176 | !(q$a@504@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@504@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 176 | q$a@504@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@504@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 177 | !(0 <= q$b@505@01) | live]
; [else-branch: 177 | 0 <= q$b@505@01 | live]
(push) ; 11
; [then-branch: 177 | !(0 <= q$b@505@01)]
(assert (not (<= 0 q$b@505@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 177 | 0 <= q$b@505@01]
(assert (<= 0 q$b@505@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@505@01) (not (<= 0 q$b@505@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@505@01) (not (<= 0 q$b@505@01))))))
(assert (or
  (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@504@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@504@01)
  (and
    (<= 0 q$a@504@01)
    (=>
      (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@505@01) (not (<= 0 q$b@505@01)))))
    (or
      (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@504@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@504@01) (not (<= 0 q$a@504@01))))
(push) ; 6
; [then-branch: 178 | 0 <= q$a@504@01 && q$a@504@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@505@01 && q$b@505@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 178 | !(0 <= q$a@504@01 && q$a@504@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@505@01 && q$b@505@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 178 | 0 <= q$a@504@01 && q$a@504@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@505@01 && q$b@505@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@504@01)
  (and
    (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@505@01)
      (<= q$b@505@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 8
; [then-branch: 179 | False | dead]
; [else-branch: 179 | True | live]
(push) ; 9
; [else-branch: 179 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 178 | !(0 <= q$a@504@01 && q$a@504@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@505@01 && q$b@505@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@504@01)
    (and
      (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@505@01)
        (<= q$b@505@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@504@01)
    (and
      (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@505@01)
        (<= q$b@505@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@504@01)
    (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@505@01)
    (<= q$b@505@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@504@01)
      (and
        (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@505@01)
          (<= q$b@505@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@504@01)
    (and
      (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@505@01)
        (<= q$b@505@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@504@01 Int) (q$b@505@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@504@01)
      (and
        (<= 0 q$a@504@01)
        (=>
          (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@505@01) (not (<= 0 q$b@505@01)))))
        (or
          (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@504@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@504@01) (not (<= 0 q$a@504@01)))
    (=>
      (and
        (<= 0 q$a@504@01)
        (and
          (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@505@01)
            (<= q$b@505@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@504@01)
        (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@505@01)
        (<= q$b@505@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@504@01)
          (and
            (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@505@01)
              (<= q$b@505@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@504@01)
        (and
          (<= q$a@504@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@505@01)
            (<= q$b@505@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@433@01 4)) q$a@504@01) q$b@505@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1152@13@1152@843-aux|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@506@01 $Snap)
(assert (= $t@506@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@444@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@507@01 $Struct)
(assert (=
  self@507@01
  ($struct_set<$Struct> self@433@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@433@01 7))
    l$havoc$1@444@01))))
; [exec]
; $contracts := l$havoc$2
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@507@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@433@01 6)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@507@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@433@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@507@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@507@01 3))))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@507@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@507@01 3)))))
(pop) ; 4
; [eval] !$succ
; [then-branch: 180 | False | dead]
; [else-branch: 180 | True | live]
(push) ; 4
; [else-branch: 180 | True]
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 161 | $out_of_gas@442@01]
(assert $out_of_gas@442@01)
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$transfer ----------
(declare-const l$_to@508@01 Int)
(declare-const l$_value@509@01 $Int)
(declare-const $succ@510@01 Bool)
(declare-const $res@511@01 Bool)
(declare-const l$_to@512@01 Int)
(declare-const l$_value@513@01 $Int)
(declare-const $succ@514@01 Bool)
(declare-const $res@515@01 Bool)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@516@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@517@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@518@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@519@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@520@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@521@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@522@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@523@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@524@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@525@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@526@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@527@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@528@01 Bool)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@529@01 Bool)
; [exec]
; var l$havoc: Bool
(declare-const l$havoc@530@01 Bool)
; [exec]
; var l$havoc$1: Int
(declare-const l$havoc$1@531@01 Int)
; [exec]
; var l$havoc$2: $Map[Int, $Struct]
(declare-const l$havoc$2@532@01 $Map<Int~_$Struct>)
; [exec]
; inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
(declare-const $t@533@01 $Snap)
(assert (= $t@533@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 0)): Seq[Int])
; [eval] $struct_loc(self, 0)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@520@01 0))) 64))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
(declare-const $t@534@01 $Snap)
(assert (= $t@534@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 1)): Seq[Int])
; [eval] $struct_loc(self, 1)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@520@01 1))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@535@01 $Snap)
(assert (= $t@535@01 ($Snap.combine ($Snap.first $t@535@01) ($Snap.second $t@535@01))))
(assert (= ($Snap.first $t@535@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@520@01 2))))
(assert (= ($Snap.second $t@535@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@520@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@536@01 $Snap)
(assert (= $t@536@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@537@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 4
; [then-branch: 181 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $q2@537@01)) | live]
; [else-branch: 181 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $q2@537@01) | live]
(push) ; 5
; [then-branch: 181 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $q2@537@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) $q2@537@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 181 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $q2@537@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) $q2@537@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) $q2@537@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) $q2@537@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@537@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) $q2@537@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) $q2@537@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) $q2@537@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1192@11@1192@345-aux|)))
(assert (forall (($q2@537@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) $q2@537@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) $q2@537@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) $q2@537@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1192@11@1192@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $t@538@01 $Snap)
(assert (= $t@538@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $q2@539@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@539@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) $q2@539@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) $q2@539@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1193@11@1193@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@540@01 $Snap)
(assert (= $t@540@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@541@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@542@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 5
; [then-branch: 182 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@520@01, 4)), $q3@541@01), $q4@542@01)) | live]
; [else-branch: 182 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@520@01, 4)), $q3@541@01), $q4@542@01) | live]
(push) ; 6
; [then-branch: 182 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@520@01, 4)), $q3@541@01), $q4@542@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@541@01) $q4@542@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 182 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@520@01, 4)), $q3@541@01), $q4@542@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@541@01) $q4@542@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@541@01) $q4@542@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@541@01) $q4@542@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@542@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@541@01) $q4@542@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@541@01) $q4@542@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@541@01) $q4@542@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1194@131@1194@597-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@541@01 Int)) (!
  (forall (($q4@542@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@541@01) $q4@542@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@541@01) $q4@542@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@541@01) $q4@542@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1194@131@1194@597-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@541@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1194@11@1194@598-aux|)))
(assert (forall (($q3@541@01 Int)) (!
  (forall (($q4@542@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@541@01) $q4@542@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@541@01) $q4@542@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@541@01) $q4@542@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1194@131@1194@597|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@541@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1194@11@1194@598|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@543@01 $Snap)
(assert (= $t@543@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@544@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@545@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@544@01 Int)) (!
  (forall (($q4@545@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@544@01) $q4@545@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@544@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@544@01) $q4@545@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1195@131@1195@505|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) $q3@544@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1195@11@1195@506|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@546@01 $Snap)
(assert (= $t@546@01 ($Snap.combine ($Snap.first $t@546@01) ($Snap.second $t@546@01))))
(assert (= ($Snap.first $t@546@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@520@01 5))))
(assert (= ($Snap.second $t@546@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@520@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@547@01 $Snap)
(assert (= $t@547@01 ($Snap.combine ($Snap.first $t@547@01) ($Snap.second $t@547@01))))
(assert (= ($Snap.first $t@547@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@520@01 6))))
(assert (= ($Snap.second $t@547@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@520@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) &&
;   ($struct_get($struct_loc(self, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@548@01 $Snap)
(assert (= $t@548@01 ($Snap.combine ($Snap.first $t@548@01) ($Snap.second $t@548@01))))
(assert (= ($Snap.first $t@548@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 7)): Int)
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@520@01 7))))
(assert (= ($Snap.second $t@548@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@520@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 8)): Int) &&
;   ($struct_get($struct_loc(self, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@549@01 $Snap)
(assert (= $t@549@01 ($Snap.combine ($Snap.first $t@549@01) ($Snap.second $t@549@01))))
(assert (= ($Snap.first $t@549@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@520@01 8))))
(assert (= ($Snap.second $t@549@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@520@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@550@01 $Snap)
(assert (= $t@550@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@551@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(push) ; 4
; [then-branch: 183 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 10)), $q5@551@01)) | live]
; [else-branch: 183 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 10)), $q5@551@01) | live]
(push) ; 5
; [then-branch: 183 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 10)), $q5@551@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 10)) $q5@551@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 183 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 10)), $q5@551@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 10)) $q5@551@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 10)) $q5@551@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 10)) $q5@551@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@551@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 10)) $q5@551@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 10)) $q5@551@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 10)) $q5@551@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1200@11@1200@348-aux|)))
(assert (forall (($q5@551@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 10)) $q5@551@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 10)) $q5@551@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 10)) $q5@551@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1200@11@1200@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $t@552@01 $Snap)
(assert (= $t@552@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $q5@553@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@553@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 10)) $q5@553@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 10)) $q5@553@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1201@11@1201@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@554@01 $Snap)
(assert (= $t@554@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@555@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(push) ; 4
; [then-branch: 184 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 11)), $q6@555@01)) | live]
; [else-branch: 184 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 11)), $q6@555@01) | live]
(push) ; 5
; [then-branch: 184 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 11)), $q6@555@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 11)) $q6@555@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 184 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 11)), $q6@555@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 11)) $q6@555@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 11)) $q6@555@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 11)) $q6@555@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@555@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 11)) $q6@555@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 11)) $q6@555@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 11)) $q6@555@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1202@11@1202@348-aux|)))
(assert (forall (($q6@555@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 11)) $q6@555@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 11)) $q6@555@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 11)) $q6@555@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1202@11@1202@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $t@556@01 $Snap)
(assert (= $t@556@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $q6@557@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
; [eval] ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@557@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 11)) $q6@557@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 11)) $q6@557@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1203@11@1203@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@558@01 $Snap)
(assert (= $t@558@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@520@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@559@01 $Snap)
(assert (= $t@559@01 ($Snap.combine ($Snap.first $t@559@01) ($Snap.second $t@559@01))))
(assert (= ($Snap.first $t@559@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@559@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= l$_to &&
;   l$_to <= 1461501637330902918203684832716283019655932542975
(declare-const $t@560@01 $Snap)
(assert (= $t@560@01 ($Snap.combine ($Snap.first $t@560@01) ($Snap.second $t@560@01))))
(assert (= ($Snap.first $t@560@01) $Snap.unit))
; [eval] 0 <= l$_to
(assert (<= 0 l$_to@512@01))
(assert (= ($Snap.second $t@560@01) $Snap.unit))
; [eval] l$_to <= 1461501637330902918203684832716283019655932542975
(assert (<= l$_to@512@01 1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $unwrap(l$_value) &&
;   $unwrap(l$_value) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@561@01 $Snap)
(assert (= $t@561@01 ($Snap.combine ($Snap.first $t@561@01) ($Snap.second $t@561@01))))
(assert (= ($Snap.first $t@561@01) $Snap.unit))
; [eval] 0 <= $unwrap(l$_value)
; [eval] $unwrap(l$_value)
(assert (<= 0 ($unwrap<Int> l$_value@513@01)))
(assert (= ($Snap.second $t@561@01) $Snap.unit))
; [eval] $unwrap(l$_value) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap(l$_value)
(assert (<=
  ($unwrap<Int> l$_value@513@01)
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@562@01 $Snap)
(assert (= $t@562@01 ($Snap.combine ($Snap.first $t@562@01) ($Snap.second $t@562@01))))
(assert (= ($Snap.first $t@562@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@517@01 0))))
(assert (= ($Snap.second $t@562@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@517@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@563@01 $Snap)
(assert (= $t@563@01 ($Snap.combine ($Snap.first $t@563@01) ($Snap.second $t@563@01))))
(assert (= ($Snap.first $t@563@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@517@01 1))))
(assert (= ($Snap.second $t@563@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@517@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@564@01 $Snap)
(assert (= $t@564@01 ($Snap.combine ($Snap.first $t@564@01) ($Snap.second $t@564@01))))
(assert (= ($Snap.first $t@564@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@517@01 2))))
(assert (= ($Snap.second $t@564@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@517@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@565@01 $Snap)
(assert (= $t@565@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@517@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@566@01 $Snap)
(assert (= $t@566@01 ($Snap.combine ($Snap.first $t@566@01) ($Snap.second $t@566@01))))
(assert (= ($Snap.first $t@566@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@517@01 4))))
(assert (= ($Snap.second $t@566@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@517@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@567@01 $Snap)
(assert (= $t@567@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@517@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@568@01 $Snap)
(assert (= $t@568@01 ($Snap.combine ($Snap.first $t@568@01) ($Snap.second $t@568@01))))
(assert (= ($Snap.first $t@568@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))))
(assert (= ($Snap.second $t@568@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@569@01 $Snap)
(assert (= $t@569@01 ($Snap.combine ($Snap.first $t@569@01) ($Snap.second $t@569@01))))
(assert (= ($Snap.first $t@569@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@516@01 1))))
(assert (= ($Snap.second $t@569@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@516@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@570@01 $Snap)
(assert (= $t@570@01 ($Snap.combine ($Snap.first $t@570@01) ($Snap.second $t@570@01))))
(assert (= ($Snap.first $t@570@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@516@01 2))))
(assert (= ($Snap.second $t@570@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@516@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@571@01 $Snap)
(assert (= $t@571@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@516@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@572@01 $Snap)
(assert (= $t@572@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $t@573@01 $Snap)
(assert (= $t@573@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $a@574@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc(self, 6)): Int)
(declare-const $t@575@01 $Snap)
(assert (= $t@575@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
(declare-const $t@576@01 $Snap)
(assert (= $t@576@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@520@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@577@01 $Snap)
(assert (= $t@577@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@516@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
      ($unwrap<Int> l$_value@513@01))
    0))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
    ($unwrap<Int> l$_value@513@01))
  0)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 185 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))) - $unwrap[Int](l$_value@513@01) < 0 | live]
; [else-branch: 185 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))) - $unwrap[Int](l$_value@513@01) < 0) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 185 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))) - $unwrap[Int](l$_value@513@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
    ($unwrap<Int> l$_value@513@01))
  0))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [exec]
; exhale $unwrap(l$_value) >
;   ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg,
;   0)): Int)): Int) ==>
;   !$succ
; [eval] $unwrap(l$_value) > ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==> !$succ
; [eval] $unwrap(l$_value) > ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] $unwrap(l$_value)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 3)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(push) ; 4
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (>
    ($unwrap<Int> l$_value@513@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (>
  ($unwrap<Int> l$_value@513@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 186 | $unwrap[Int](l$_value@513@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))) | live]
; [else-branch: 186 | !($unwrap[Int](l$_value@513@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0)))) | dead]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 186 | $unwrap[Int](l$_value@513@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0)))]
(assert (>
  ($unwrap<Int> l$_value@513@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
; [eval] !$succ
(pop) ; 5
(pop) ; 4
; Joined path conditions
(assert (>
  ($unwrap<Int> l$_value@513@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
; [then-branch: 187 | False | dead]
; [else-branch: 187 | True | live]
(push) ; 4
; [else-branch: 187 | True]
(pop) ; 4
; [eval] !$succ
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 188 | True | live]
; [else-branch: 188 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 188 | True]
; [exec]
; assert old($succ ==>
;   perm(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value))) ==
;   1 * write)
; [eval] old($succ ==> perm(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value))) == 1 * write)
; [eval] $succ ==> perm(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value))) == 1 * write
(push) ; 5
; [then-branch: 189 | False | dead]
; [else-branch: 189 | True | live]
(push) ; 6
; [else-branch: 189 | True]
(pop) ; 6
(pop) ; 5
; Joined path conditions
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 5
(push) ; 6
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@520@01 6)))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@520@01 6))))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 190 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) != $struct_get[Int]($struct_loc[Int](self@520@01, 6)) | live]
; [else-branch: 190 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) == $struct_get[Int]($struct_loc[Int](self@520@01, 6)) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 190 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) != $struct_get[Int]($struct_loc[Int](self@520@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@520@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 6
(push) ; 6
; [else-branch: 190 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) == $struct_get[Int]($struct_loc[Int](self@520@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@520@01 6))))
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@520@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@520@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@578@01 Int)
(declare-const q$b@579@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 191 | !(0 <= q$a@578@01) | live]
; [else-branch: 191 | 0 <= q$a@578@01 | live]
(push) ; 7
; [then-branch: 191 | !(0 <= q$a@578@01)]
(assert (not (<= 0 q$a@578@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 191 | 0 <= q$a@578@01]
(assert (<= 0 q$a@578@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 192 | !(q$a@578@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 192 | q$a@578@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 192 | !(q$a@578@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@578@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 192 | q$a@578@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@578@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 193 | !(0 <= q$b@579@01) | live]
; [else-branch: 193 | 0 <= q$b@579@01 | live]
(push) ; 11
; [then-branch: 193 | !(0 <= q$b@579@01)]
(assert (not (<= 0 q$b@579@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 193 | 0 <= q$b@579@01]
(assert (<= 0 q$b@579@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@579@01) (not (<= 0 q$b@579@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@579@01) (not (<= 0 q$b@579@01))))))
(assert (or
  (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@578@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@578@01)
  (and
    (<= 0 q$a@578@01)
    (=>
      (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@579@01) (not (<= 0 q$b@579@01)))))
    (or
      (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@578@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@578@01) (not (<= 0 q$a@578@01))))
(push) ; 6
; [then-branch: 194 | 0 <= q$a@578@01 && q$a@578@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@579@01 && q$b@579@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 194 | !(0 <= q$a@578@01 && q$a@578@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@579@01 && q$b@579@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 194 | 0 <= q$a@578@01 && q$a@578@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@579@01 && q$b@579@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@578@01)
  (and
    (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@579@01)
      (<= q$b@579@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 8
; [then-branch: 195 | False | dead]
; [else-branch: 195 | True | live]
(push) ; 9
; [else-branch: 195 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 194 | !(0 <= q$a@578@01 && q$a@578@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@579@01 && q$b@579@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@578@01)
    (and
      (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@579@01)
        (<= q$b@579@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@578@01)
    (and
      (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@579@01)
        (<= q$b@579@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@578@01)
    (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@579@01)
    (<= q$b@579@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@578@01)
      (and
        (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@579@01)
          (<= q$b@579@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@578@01)
    (and
      (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@579@01)
        (<= q$b@579@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@578@01 Int) (q$b@579@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@578@01)
      (and
        (<= 0 q$a@578@01)
        (=>
          (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@579@01) (not (<= 0 q$b@579@01)))))
        (or
          (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@578@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@578@01) (not (<= 0 q$a@578@01)))
    (=>
      (and
        (<= 0 q$a@578@01)
        (and
          (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@579@01)
            (<= q$b@579@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@578@01)
        (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@579@01)
        (<= q$b@579@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@578@01)
          (and
            (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@579@01)
              (<= q$b@579@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@578@01)
        (and
          (<= q$a@578@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@579@01)
            (<= q$b@579@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@578@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@579@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1286@17@1286@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@580@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 196 | !(0 <= q$a@580@01) | live]
; [else-branch: 196 | 0 <= q$a@580@01 | live]
(push) ; 7
; [then-branch: 196 | !(0 <= q$a@580@01)]
(assert (not (<= 0 q$a@580@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 196 | 0 <= q$a@580@01]
(assert (<= 0 q$a@580@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@580@01) (not (<= 0 q$a@580@01))))
(push) ; 6
; [then-branch: 197 | 0 <= q$a@580@01 && q$a@580@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 197 | !(0 <= q$a@580@01 && q$a@580@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 197 | 0 <= q$a@580@01 && q$a@580@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@580@01)
  (<= q$a@580@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 198 | False | dead]
; [else-branch: 198 | True | live]
(push) ; 9
; [else-branch: 198 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 197 | !(0 <= q$a@580@01 && q$a@580@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@580@01)
    (<= q$a@580@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@580@01)
      (<= q$a@580@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@580@01)
    (<= q$a@580@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@580@01 Int)) (!
  (and
    (or (<= 0 q$a@580@01) (not (<= 0 q$a@580@01)))
    (or
      (not
        (and
          (<= 0 q$a@580@01)
          (<= q$a@580@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@580@01)
        (<= q$a@580@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@580@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1287@17@1287@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@581@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 199 | !(0 <= q$a@581@01) | live]
; [else-branch: 199 | 0 <= q$a@581@01 | live]
(push) ; 7
; [then-branch: 199 | !(0 <= q$a@581@01)]
(assert (not (<= 0 q$a@581@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 199 | 0 <= q$a@581@01]
(assert (<= 0 q$a@581@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@581@01) (not (<= 0 q$a@581@01))))
(push) ; 6
; [then-branch: 200 | 0 <= q$a@581@01 && q$a@581@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 200 | !(0 <= q$a@581@01 && q$a@581@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 200 | 0 <= q$a@581@01 && q$a@581@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@581@01)
  (<= q$a@581@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 201 | False | dead]
; [else-branch: 201 | True | live]
(push) ; 9
; [else-branch: 201 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 200 | !(0 <= q$a@581@01 && q$a@581@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@581@01)
    (<= q$a@581@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@581@01)
      (<= q$a@581@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@581@01)
    (<= q$a@581@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@581@01 Int)) (!
  (and
    (or (<= 0 q$a@581@01) (not (<= 0 q$a@581@01)))
    (or
      (not
        (and
          (<= 0 q$a@581@01)
          (<= q$a@581@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@581@01)
        (<= q$a@581@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@581@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1288@17@1288@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@582@01 Int)
(declare-const q$b@583@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 202 | !(0 <= q$a@582@01) | live]
; [else-branch: 202 | 0 <= q$a@582@01 | live]
(push) ; 7
; [then-branch: 202 | !(0 <= q$a@582@01)]
(assert (not (<= 0 q$a@582@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 202 | 0 <= q$a@582@01]
(assert (<= 0 q$a@582@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 203 | !(q$a@582@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 203 | q$a@582@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 203 | !(q$a@582@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@582@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 203 | q$a@582@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@582@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 204 | !(0 <= q$b@583@01) | live]
; [else-branch: 204 | 0 <= q$b@583@01 | live]
(push) ; 11
; [then-branch: 204 | !(0 <= q$b@583@01)]
(assert (not (<= 0 q$b@583@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 204 | 0 <= q$b@583@01]
(assert (<= 0 q$b@583@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@583@01) (not (<= 0 q$b@583@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@583@01) (not (<= 0 q$b@583@01))))))
(assert (or
  (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@582@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@582@01)
  (and
    (<= 0 q$a@582@01)
    (=>
      (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@583@01) (not (<= 0 q$b@583@01)))))
    (or
      (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@582@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@582@01) (not (<= 0 q$a@582@01))))
(push) ; 6
; [then-branch: 205 | 0 <= q$a@582@01 && q$a@582@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@583@01 && q$b@583@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 205 | !(0 <= q$a@582@01 && q$a@582@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@583@01 && q$b@583@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 205 | 0 <= q$a@582@01 && q$a@582@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@583@01 && q$b@583@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@582@01)
  (and
    (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@583@01)
      (<= q$b@583@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 8
; [then-branch: 206 | False | dead]
; [else-branch: 206 | True | live]
(push) ; 9
; [else-branch: 206 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 205 | !(0 <= q$a@582@01 && q$a@582@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@583@01 && q$b@583@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@582@01)
    (and
      (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@583@01)
        (<= q$b@583@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@582@01)
    (and
      (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@583@01)
        (<= q$b@583@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@582@01)
    (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@583@01)
    (<= q$b@583@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@582@01)
      (and
        (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@583@01)
          (<= q$b@583@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@582@01)
    (and
      (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@583@01)
        (<= q$b@583@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@582@01 Int) (q$b@583@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@582@01)
      (and
        (<= 0 q$a@582@01)
        (=>
          (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@583@01) (not (<= 0 q$b@583@01)))))
        (or
          (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@582@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@582@01) (not (<= 0 q$a@582@01)))
    (=>
      (and
        (<= 0 q$a@582@01)
        (and
          (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@583@01)
            (<= q$b@583@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@582@01)
        (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@583@01)
        (<= q$b@583@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@582@01)
          (and
            (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@583@01)
              (<= q$b@583@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@582@01)
        (and
          (<= q$a@582@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@583@01)
            (<= q$b@583@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@582@01) q$b@583@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1289@17@1289@847-aux|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@584@01 $Snap)
(assert (= $t@584@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@531@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@585@01 $Struct)
(assert (=
  self@585@01
  ($struct_set<$Struct> self@520@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@520@01 7))
    l$havoc$1@531@01))))
; [exec]
; $contracts := l$havoc$2
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@585@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@520@01 6)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@585@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@520@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@585@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@585@01 3))))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@585@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@585@01 3)))))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 185 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))) - $unwrap[Int](l$_value@513@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
      ($unwrap<Int> l$_value@513@01))
    0)))
(pop) ; 3
; [eval] !($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) < 0)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(push) ; 3
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
    ($unwrap<Int> l$_value@513@01))
  0)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
      ($unwrap<Int> l$_value@513@01))
    0))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 207 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))) - $unwrap[Int](l$_value@513@01) < 0) | live]
; [else-branch: 207 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))) - $unwrap[Int](l$_value@513@01) < 0 | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 207 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))) - $unwrap[Int](l$_value@513@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
      ($unwrap<Int> l$_value@513@01))
    0)))
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
      ($unwrap<Int> l$_value@513@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 208 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))) - $unwrap[Int](l$_value@513@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
; [else-branch: 208 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))) - $unwrap[Int](l$_value@513@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
(set-option :timeout 0)
(push) ; 4
; [else-branch: 208 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))) - $unwrap[Int](l$_value@513@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
      ($unwrap<Int> l$_value@513@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(pop) ; 4
; [eval] !($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(push) ; 4
(set-option :timeout 10)
(assert (not (>
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
    ($unwrap<Int> l$_value@513@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
      ($unwrap<Int> l$_value@513@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 209 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))) - $unwrap[Int](l$_value@513@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
; [else-branch: 209 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))) - $unwrap[Int](l$_value@513@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 209 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))) - $unwrap[Int](l$_value@513@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
      ($unwrap<Int> l$_value@513@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
; [exec]
; self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;   ($struct_get($struct_loc(msg, 0)): Int), $unwrap($wrap(($map_get(($struct_get($struct_loc(self,
;   3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) -
;   $unwrap(l$_value)): $Map[Int, Int])): $Struct)
; [eval] ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)): $Map[Int, Int])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(declare-const self@586@01 $Struct)
(assert (=
  self@586@01
  ($struct_set<$Struct> self@520@01 3 ($map_set<$Map<Int~_Int>> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)) (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
    ($unwrap<Int> l$_value@513@01))))))
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@586@01 3)) l$_to@512@01)))
      ($unwrap<Int> l$_value@513@01))
    0))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 210 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@586@01, 3)), l$_to@512@01))) + $unwrap[Int](l$_value@513@01) < 0 | dead]
; [else-branch: 210 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@586@01, 3)), l$_to@512@01))) + $unwrap[Int](l$_value@513@01) < 0) | live]
(set-option :timeout 0)
(push) ; 5
; [else-branch: 210 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@586@01, 3)), l$_to@512@01))) + $unwrap[Int](l$_value@513@01) < 0)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@586@01 3)) l$_to@512@01)))
      ($unwrap<Int> l$_value@513@01))
    0)))
(pop) ; 5
; [eval] !($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) < 0)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(push) ; 5
(set-option :timeout 10)
(assert (not (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@586@01 3)) l$_to@512@01)))
    ($unwrap<Int> l$_value@513@01))
  0)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@586@01 3)) l$_to@512@01)))
      ($unwrap<Int> l$_value@513@01))
    0))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 211 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@586@01, 3)), l$_to@512@01))) + $unwrap[Int](l$_value@513@01) < 0) | live]
; [else-branch: 211 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@586@01, 3)), l$_to@512@01))) + $unwrap[Int](l$_value@513@01) < 0 | dead]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 211 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@586@01, 3)), l$_to@512@01))) + $unwrap[Int](l$_value@513@01) < 0)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@586@01 3)) l$_to@512@01)))
      ($unwrap<Int> l$_value@513@01))
    0)))
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@586@01 3)) l$_to@512@01)))
      ($unwrap<Int> l$_value@513@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (>
  (+
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@586@01 3)) l$_to@512@01)))
    ($unwrap<Int> l$_value@513@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 212 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@586@01, 3)), l$_to@512@01))) + $unwrap[Int](l$_value@513@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | live]
; [else-branch: 212 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@586@01, 3)), l$_to@512@01))) + $unwrap[Int](l$_value@513@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 212 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@586@01, 3)), l$_to@512@01))) + $unwrap[Int](l$_value@513@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935]
(assert (>
  (+
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@586@01 3)) l$_to@512@01)))
    ($unwrap<Int> l$_value@513@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [exec]
; exhale $unwrap(l$_value) >
;   ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg,
;   0)): Int)): Int) ==>
;   !$succ
; [eval] $unwrap(l$_value) > ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==> !$succ
; [eval] $unwrap(l$_value) > ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] $unwrap(l$_value)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 3)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(push) ; 7
(push) ; 8
(set-option :timeout 10)
(assert (not (not
  (>
    ($unwrap<Int> l$_value@513@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 213 | $unwrap[Int](l$_value@513@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))) | dead]
; [else-branch: 213 | !($unwrap[Int](l$_value@513@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0)))) | live]
(set-option :timeout 0)
(push) ; 8
; [else-branch: 213 | !($unwrap[Int](l$_value@513@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))]
(assert (not
  (>
    ($unwrap<Int> l$_value@513@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
(assert (not
  (>
    ($unwrap<Int> l$_value@513@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))))))
; [then-branch: 214 | False | dead]
; [else-branch: 214 | True | live]
(push) ; 7
; [else-branch: 214 | True]
(pop) ; 7
; [eval] !$succ
(push) ; 7
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 215 | True | live]
; [else-branch: 215 | False | dead]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 215 | True]
; [exec]
; assert old($succ ==>
;   perm(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value))) ==
;   1 * write)
; [eval] old($succ ==> perm(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value))) == 1 * write)
; [eval] $succ ==> perm(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value))) == 1 * write
(push) ; 8
; [then-branch: 216 | False | dead]
; [else-branch: 216 | True | live]
(push) ; 9
; [else-branch: 216 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 8
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@520@01 6)))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@520@01 6))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 217 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) != $struct_get[Int]($struct_loc[Int](self@520@01, 6)) | live]
; [else-branch: 217 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) == $struct_get[Int]($struct_loc[Int](self@520@01, 6)) | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 217 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) != $struct_get[Int]($struct_loc[Int](self@520@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@520@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 9
(push) ; 9
; [else-branch: 217 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) == $struct_get[Int]($struct_loc[Int](self@520@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@520@01 6))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@520@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@520@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@587@01 Int)
(declare-const q$b@588@01 Int)
(push) ; 8
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 218 | !(0 <= q$a@587@01) | live]
; [else-branch: 218 | 0 <= q$a@587@01 | live]
(push) ; 10
; [then-branch: 218 | !(0 <= q$a@587@01)]
(assert (not (<= 0 q$a@587@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 218 | 0 <= q$a@587@01]
(assert (<= 0 q$a@587@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 11
; [then-branch: 219 | !(q$a@587@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 219 | q$a@587@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 12
; [then-branch: 219 | !(q$a@587@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@587@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 12
(push) ; 12
; [else-branch: 219 | q$a@587@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@587@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 13
; [then-branch: 220 | !(0 <= q$b@588@01) | live]
; [else-branch: 220 | 0 <= q$b@588@01 | live]
(push) ; 14
; [then-branch: 220 | !(0 <= q$b@588@01)]
(assert (not (<= 0 q$b@588@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 220 | 0 <= q$b@588@01]
(assert (<= 0 q$b@588@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@588@01) (not (<= 0 q$b@588@01))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@588@01) (not (<= 0 q$b@588@01))))))
(assert (or
  (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@587@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@587@01)
  (and
    (<= 0 q$a@587@01)
    (=>
      (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@588@01) (not (<= 0 q$b@588@01)))))
    (or
      (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@587@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@587@01) (not (<= 0 q$a@587@01))))
(push) ; 9
; [then-branch: 221 | 0 <= q$a@587@01 && q$a@587@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@588@01 && q$b@588@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 221 | !(0 <= q$a@587@01 && q$a@587@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@588@01 && q$b@588@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 221 | 0 <= q$a@587@01 && q$a@587@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@588@01 && q$b@588@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@587@01)
  (and
    (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@588@01)
      (<= q$b@588@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 11
; [then-branch: 222 | False | dead]
; [else-branch: 222 | True | live]
(push) ; 12
; [else-branch: 222 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 221 | !(0 <= q$a@587@01 && q$a@587@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@588@01 && q$b@588@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@587@01)
    (and
      (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@588@01)
        (<= q$b@588@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@587@01)
    (and
      (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@588@01)
        (<= q$b@588@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@587@01)
    (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@588@01)
    (<= q$b@588@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@587@01)
      (and
        (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@588@01)
          (<= q$b@588@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@587@01)
    (and
      (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@588@01)
        (<= q$b@588@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@587@01 Int) (q$b@588@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@587@01)
      (and
        (<= 0 q$a@587@01)
        (=>
          (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@588@01) (not (<= 0 q$b@588@01)))))
        (or
          (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@587@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@587@01) (not (<= 0 q$a@587@01)))
    (=>
      (and
        (<= 0 q$a@587@01)
        (and
          (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@588@01)
            (<= q$b@588@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@587@01)
        (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@588@01)
        (<= q$b@588@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@587@01)
          (and
            (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@588@01)
              (<= q$b@588@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@587@01)
        (and
          (<= q$a@587@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@588@01)
            (<= q$b@588@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@587@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@588@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1286@17@1286@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@589@01 Int)
(push) ; 8
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 223 | !(0 <= q$a@589@01) | live]
; [else-branch: 223 | 0 <= q$a@589@01 | live]
(push) ; 10
; [then-branch: 223 | !(0 <= q$a@589@01)]
(assert (not (<= 0 q$a@589@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 223 | 0 <= q$a@589@01]
(assert (<= 0 q$a@589@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@589@01) (not (<= 0 q$a@589@01))))
(push) ; 9
; [then-branch: 224 | 0 <= q$a@589@01 && q$a@589@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 224 | !(0 <= q$a@589@01 && q$a@589@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 224 | 0 <= q$a@589@01 && q$a@589@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@589@01)
  (<= q$a@589@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 11
; [then-branch: 225 | False | dead]
; [else-branch: 225 | True | live]
(push) ; 12
; [else-branch: 225 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 224 | !(0 <= q$a@589@01 && q$a@589@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@589@01)
    (<= q$a@589@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@589@01)
      (<= q$a@589@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@589@01)
    (<= q$a@589@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@589@01 Int)) (!
  (and
    (or (<= 0 q$a@589@01) (not (<= 0 q$a@589@01)))
    (or
      (not
        (and
          (<= 0 q$a@589@01)
          (<= q$a@589@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@589@01)
        (<= q$a@589@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@589@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1287@17@1287@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@590@01 Int)
(push) ; 8
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 226 | !(0 <= q$a@590@01) | live]
; [else-branch: 226 | 0 <= q$a@590@01 | live]
(push) ; 10
; [then-branch: 226 | !(0 <= q$a@590@01)]
(assert (not (<= 0 q$a@590@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 226 | 0 <= q$a@590@01]
(assert (<= 0 q$a@590@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@590@01) (not (<= 0 q$a@590@01))))
(push) ; 9
; [then-branch: 227 | 0 <= q$a@590@01 && q$a@590@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 227 | !(0 <= q$a@590@01 && q$a@590@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 227 | 0 <= q$a@590@01 && q$a@590@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@590@01)
  (<= q$a@590@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 11
; [then-branch: 228 | False | dead]
; [else-branch: 228 | True | live]
(push) ; 12
; [else-branch: 228 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 227 | !(0 <= q$a@590@01 && q$a@590@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@590@01)
    (<= q$a@590@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@590@01)
      (<= q$a@590@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@590@01)
    (<= q$a@590@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@590@01 Int)) (!
  (and
    (or (<= 0 q$a@590@01) (not (<= 0 q$a@590@01)))
    (or
      (not
        (and
          (<= 0 q$a@590@01)
          (<= q$a@590@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@590@01)
        (<= q$a@590@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@590@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1288@17@1288@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@591@01 Int)
(declare-const q$b@592@01 Int)
(push) ; 8
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 229 | !(0 <= q$a@591@01) | live]
; [else-branch: 229 | 0 <= q$a@591@01 | live]
(push) ; 10
; [then-branch: 229 | !(0 <= q$a@591@01)]
(assert (not (<= 0 q$a@591@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 229 | 0 <= q$a@591@01]
(assert (<= 0 q$a@591@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 11
; [then-branch: 230 | !(q$a@591@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 230 | q$a@591@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 12
; [then-branch: 230 | !(q$a@591@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@591@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 12
(push) ; 12
; [else-branch: 230 | q$a@591@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@591@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 13
; [then-branch: 231 | !(0 <= q$b@592@01) | live]
; [else-branch: 231 | 0 <= q$b@592@01 | live]
(push) ; 14
; [then-branch: 231 | !(0 <= q$b@592@01)]
(assert (not (<= 0 q$b@592@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 231 | 0 <= q$b@592@01]
(assert (<= 0 q$b@592@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@592@01) (not (<= 0 q$b@592@01))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@592@01) (not (<= 0 q$b@592@01))))))
(assert (or
  (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@591@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@591@01)
  (and
    (<= 0 q$a@591@01)
    (=>
      (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@592@01) (not (<= 0 q$b@592@01)))))
    (or
      (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@591@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@591@01) (not (<= 0 q$a@591@01))))
(push) ; 9
; [then-branch: 232 | 0 <= q$a@591@01 && q$a@591@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@592@01 && q$b@592@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 232 | !(0 <= q$a@591@01 && q$a@591@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@592@01 && q$b@592@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 232 | 0 <= q$a@591@01 && q$a@591@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@592@01 && q$b@592@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@591@01)
  (and
    (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@592@01)
      (<= q$b@592@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 11
; [then-branch: 233 | False | dead]
; [else-branch: 233 | True | live]
(push) ; 12
; [else-branch: 233 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 232 | !(0 <= q$a@591@01 && q$a@591@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@592@01 && q$b@592@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@591@01)
    (and
      (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@592@01)
        (<= q$b@592@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@591@01)
    (and
      (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@592@01)
        (<= q$b@592@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@591@01)
    (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@592@01)
    (<= q$b@592@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@591@01)
      (and
        (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@592@01)
          (<= q$b@592@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@591@01)
    (and
      (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@592@01)
        (<= q$b@592@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@591@01 Int) (q$b@592@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@591@01)
      (and
        (<= 0 q$a@591@01)
        (=>
          (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@592@01) (not (<= 0 q$b@592@01)))))
        (or
          (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@591@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@591@01) (not (<= 0 q$a@591@01)))
    (=>
      (and
        (<= 0 q$a@591@01)
        (and
          (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@592@01)
            (<= q$b@592@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@591@01)
        (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@592@01)
        (<= q$b@592@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@591@01)
          (and
            (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@592@01)
              (<= q$b@592@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@591@01)
        (and
          (<= q$a@591@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@592@01)
            (<= q$b@592@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@591@01) q$b@592@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1289@17@1289@847-aux|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@593@01 $Snap)
(assert (= $t@593@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@531@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@594@01 $Struct)
(assert (=
  self@594@01
  ($struct_set<$Struct> self@520@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@520@01 7))
    l$havoc$1@531@01))))
; [exec]
; $contracts := l$havoc$2
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 8
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@594@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@520@01 6)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@594@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@520@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@594@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@594@01 3))))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@594@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@594@01 3)))))
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 212 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@586@01, 3)), l$_to@512@01))) + $unwrap[Int](l$_value@513@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@586@01 3)) l$_to@512@01)))
      ($unwrap<Int> l$_value@513@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(pop) ; 6
; [eval] !($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(push) ; 6
(set-option :timeout 10)
(assert (not (>
  (+
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@586@01 3)) l$_to@512@01)))
    ($unwrap<Int> l$_value@513@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@586@01 3)) l$_to@512@01)))
      ($unwrap<Int> l$_value@513@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 234 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@586@01, 3)), l$_to@512@01))) + $unwrap[Int](l$_value@513@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
; [else-branch: 234 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@586@01, 3)), l$_to@512@01))) + $unwrap[Int](l$_value@513@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 234 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@586@01, 3)), l$_to@512@01))) + $unwrap[Int](l$_value@513@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@586@01 3)) l$_to@512@01)))
      ($unwrap<Int> l$_value@513@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
; [exec]
; self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;   l$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;   l$_to): Int))) +
;   $unwrap(l$_value)): $Map[Int, Int])): $Struct)
; [eval] ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)): $Map[Int, Int])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(declare-const self@595@01 $Struct)
(assert (=
  self@595@01
  ($struct_set<$Struct> self@586@01 3 ($map_set<$Map<Int~_Int>> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@586@01 3)) l$_to@512@01 (+
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@586@01 3)) l$_to@512@01)))
    ($unwrap<Int> l$_value@513@01))))))
; [exec]
; inhale acc(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value)), write)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(declare-const $t@596@01 $Snap)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; $res := true
; [exec]
; label return
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not $out_of_gas@529@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not $out_of_gas@529@01))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 235 | $out_of_gas@529@01 | live]
; [else-branch: 235 | !($out_of_gas@529@01) | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 235 | $out_of_gas@529@01]
(assert $out_of_gas@529@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [exec]
; exhale $unwrap(l$_value) >
;   ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg,
;   0)): Int)): Int) ==>
;   !$succ
; [eval] $unwrap(l$_value) > ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==> !$succ
; [eval] $unwrap(l$_value) > ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] $unwrap(l$_value)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 3)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(push) ; 8
(push) ; 9
(set-option :timeout 10)
(assert (not (not
  (>
    ($unwrap<Int> l$_value@513@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 236 | $unwrap[Int](l$_value@513@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))) | dead]
; [else-branch: 236 | !($unwrap[Int](l$_value@513@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0)))) | live]
(set-option :timeout 0)
(push) ; 9
; [else-branch: 236 | !($unwrap[Int](l$_value@513@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))]
(assert (not
  (>
    ($unwrap<Int> l$_value@513@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
(assert (not
  (>
    ($unwrap<Int> l$_value@513@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))))))
; [then-branch: 237 | False | dead]
; [else-branch: 237 | True | live]
(push) ; 8
; [else-branch: 237 | True]
(pop) ; 8
; [eval] !$succ
(push) ; 8
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 238 | True | live]
; [else-branch: 238 | False | dead]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 238 | True]
; [exec]
; assert old($succ ==>
;   perm(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value))) ==
;   1 * write)
; [eval] old($succ ==> perm(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value))) == 1 * write)
; [eval] $succ ==> perm(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value))) == 1 * write
(push) ; 9
; [then-branch: 239 | False | dead]
; [else-branch: 239 | True | live]
(push) ; 10
; [else-branch: 239 | True]
(pop) ; 10
(pop) ; 9
; Joined path conditions
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 9
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@520@01 6)))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@520@01 6))))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 240 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) != $struct_get[Int]($struct_loc[Int](self@520@01, 6)) | live]
; [else-branch: 240 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) == $struct_get[Int]($struct_loc[Int](self@520@01, 6)) | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 240 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) != $struct_get[Int]($struct_loc[Int](self@520@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@520@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 10
(push) ; 10
; [else-branch: 240 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) == $struct_get[Int]($struct_loc[Int](self@520@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@520@01 6))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@520@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@520@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@597@01 Int)
(declare-const q$b@598@01 Int)
(push) ; 9
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 10
; [then-branch: 241 | !(0 <= q$a@597@01) | live]
; [else-branch: 241 | 0 <= q$a@597@01 | live]
(push) ; 11
; [then-branch: 241 | !(0 <= q$a@597@01)]
(assert (not (<= 0 q$a@597@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 241 | 0 <= q$a@597@01]
(assert (<= 0 q$a@597@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 12
; [then-branch: 242 | !(q$a@597@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 242 | q$a@597@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 13
; [then-branch: 242 | !(q$a@597@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@597@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 13
(push) ; 13
; [else-branch: 242 | q$a@597@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@597@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 14
; [then-branch: 243 | !(0 <= q$b@598@01) | live]
; [else-branch: 243 | 0 <= q$b@598@01 | live]
(push) ; 15
; [then-branch: 243 | !(0 <= q$b@598@01)]
(assert (not (<= 0 q$b@598@01)))
(pop) ; 15
(push) ; 15
; [else-branch: 243 | 0 <= q$b@598@01]
(assert (<= 0 q$b@598@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@598@01) (not (<= 0 q$b@598@01))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@598@01) (not (<= 0 q$b@598@01))))))
(assert (or
  (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@597@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@597@01)
  (and
    (<= 0 q$a@597@01)
    (=>
      (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@598@01) (not (<= 0 q$b@598@01)))))
    (or
      (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@597@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@597@01) (not (<= 0 q$a@597@01))))
(push) ; 10
; [then-branch: 244 | 0 <= q$a@597@01 && q$a@597@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@598@01 && q$b@598@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 244 | !(0 <= q$a@597@01 && q$a@597@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@598@01 && q$b@598@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 11
; [then-branch: 244 | 0 <= q$a@597@01 && q$a@597@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@598@01 && q$b@598@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@597@01)
  (and
    (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@598@01)
      (<= q$b@598@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 12
; [then-branch: 245 | False | dead]
; [else-branch: 245 | True | live]
(push) ; 13
; [else-branch: 245 | True]
(pop) ; 13
(pop) ; 12
; Joined path conditions
(pop) ; 11
(push) ; 11
; [else-branch: 244 | !(0 <= q$a@597@01 && q$a@597@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@598@01 && q$b@598@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@597@01)
    (and
      (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@598@01)
        (<= q$b@598@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@597@01)
    (and
      (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@598@01)
        (<= q$b@598@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@597@01)
    (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@598@01)
    (<= q$b@598@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@597@01)
      (and
        (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@598@01)
          (<= q$b@598@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@597@01)
    (and
      (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@598@01)
        (<= q$b@598@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 9
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@597@01 Int) (q$b@598@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@597@01)
      (and
        (<= 0 q$a@597@01)
        (=>
          (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@598@01) (not (<= 0 q$b@598@01)))))
        (or
          (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@597@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@597@01) (not (<= 0 q$a@597@01)))
    (=>
      (and
        (<= 0 q$a@597@01)
        (and
          (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@598@01)
            (<= q$b@598@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@597@01)
        (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@598@01)
        (<= q$b@598@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@597@01)
          (and
            (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@598@01)
              (<= q$b@598@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@597@01)
        (and
          (<= q$a@597@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@598@01)
            (<= q$b@598@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@597@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@598@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1286@17@1286@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@599@01 Int)
(push) ; 9
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 10
; [then-branch: 246 | !(0 <= q$a@599@01) | live]
; [else-branch: 246 | 0 <= q$a@599@01 | live]
(push) ; 11
; [then-branch: 246 | !(0 <= q$a@599@01)]
(assert (not (<= 0 q$a@599@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 246 | 0 <= q$a@599@01]
(assert (<= 0 q$a@599@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@599@01) (not (<= 0 q$a@599@01))))
(push) ; 10
; [then-branch: 247 | 0 <= q$a@599@01 && q$a@599@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 247 | !(0 <= q$a@599@01 && q$a@599@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 11
; [then-branch: 247 | 0 <= q$a@599@01 && q$a@599@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@599@01)
  (<= q$a@599@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 12
; [then-branch: 248 | False | dead]
; [else-branch: 248 | True | live]
(push) ; 13
; [else-branch: 248 | True]
(pop) ; 13
(pop) ; 12
; Joined path conditions
(pop) ; 11
(push) ; 11
; [else-branch: 247 | !(0 <= q$a@599@01 && q$a@599@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@599@01)
    (<= q$a@599@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@599@01)
      (<= q$a@599@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@599@01)
    (<= q$a@599@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 9
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@599@01 Int)) (!
  (and
    (or (<= 0 q$a@599@01) (not (<= 0 q$a@599@01)))
    (or
      (not
        (and
          (<= 0 q$a@599@01)
          (<= q$a@599@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@599@01)
        (<= q$a@599@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@599@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1287@17@1287@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@600@01 Int)
(push) ; 9
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 10
; [then-branch: 249 | !(0 <= q$a@600@01) | live]
; [else-branch: 249 | 0 <= q$a@600@01 | live]
(push) ; 11
; [then-branch: 249 | !(0 <= q$a@600@01)]
(assert (not (<= 0 q$a@600@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 249 | 0 <= q$a@600@01]
(assert (<= 0 q$a@600@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@600@01) (not (<= 0 q$a@600@01))))
(push) ; 10
; [then-branch: 250 | 0 <= q$a@600@01 && q$a@600@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 250 | !(0 <= q$a@600@01 && q$a@600@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 11
; [then-branch: 250 | 0 <= q$a@600@01 && q$a@600@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@600@01)
  (<= q$a@600@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 12
; [then-branch: 251 | False | dead]
; [else-branch: 251 | True | live]
(push) ; 13
; [else-branch: 251 | True]
(pop) ; 13
(pop) ; 12
; Joined path conditions
(pop) ; 11
(push) ; 11
; [else-branch: 250 | !(0 <= q$a@600@01 && q$a@600@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@600@01)
    (<= q$a@600@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@600@01)
      (<= q$a@600@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@600@01)
    (<= q$a@600@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 9
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@600@01 Int)) (!
  (and
    (or (<= 0 q$a@600@01) (not (<= 0 q$a@600@01)))
    (or
      (not
        (and
          (<= 0 q$a@600@01)
          (<= q$a@600@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@600@01)
        (<= q$a@600@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@600@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1288@17@1288@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@601@01 Int)
(declare-const q$b@602@01 Int)
(push) ; 9
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 10
; [then-branch: 252 | !(0 <= q$a@601@01) | live]
; [else-branch: 252 | 0 <= q$a@601@01 | live]
(push) ; 11
; [then-branch: 252 | !(0 <= q$a@601@01)]
(assert (not (<= 0 q$a@601@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 252 | 0 <= q$a@601@01]
(assert (<= 0 q$a@601@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 12
; [then-branch: 253 | !(q$a@601@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 253 | q$a@601@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 13
; [then-branch: 253 | !(q$a@601@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@601@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 13
(push) ; 13
; [else-branch: 253 | q$a@601@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@601@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 14
; [then-branch: 254 | !(0 <= q$b@602@01) | live]
; [else-branch: 254 | 0 <= q$b@602@01 | live]
(push) ; 15
; [then-branch: 254 | !(0 <= q$b@602@01)]
(assert (not (<= 0 q$b@602@01)))
(pop) ; 15
(push) ; 15
; [else-branch: 254 | 0 <= q$b@602@01]
(assert (<= 0 q$b@602@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@602@01) (not (<= 0 q$b@602@01))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@602@01) (not (<= 0 q$b@602@01))))))
(assert (or
  (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@601@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@601@01)
  (and
    (<= 0 q$a@601@01)
    (=>
      (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@602@01) (not (<= 0 q$b@602@01)))))
    (or
      (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@601@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@601@01) (not (<= 0 q$a@601@01))))
(push) ; 10
; [then-branch: 255 | 0 <= q$a@601@01 && q$a@601@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@602@01 && q$b@602@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 255 | !(0 <= q$a@601@01 && q$a@601@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@602@01 && q$b@602@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 11
; [then-branch: 255 | 0 <= q$a@601@01 && q$a@601@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@602@01 && q$b@602@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@601@01)
  (and
    (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@602@01)
      (<= q$b@602@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 12
; [then-branch: 256 | False | dead]
; [else-branch: 256 | True | live]
(push) ; 13
; [else-branch: 256 | True]
(pop) ; 13
(pop) ; 12
; Joined path conditions
(pop) ; 11
(push) ; 11
; [else-branch: 255 | !(0 <= q$a@601@01 && q$a@601@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@602@01 && q$b@602@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@601@01)
    (and
      (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@602@01)
        (<= q$b@602@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@601@01)
    (and
      (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@602@01)
        (<= q$b@602@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@601@01)
    (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@602@01)
    (<= q$b@602@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@601@01)
      (and
        (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@602@01)
          (<= q$b@602@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@601@01)
    (and
      (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@602@01)
        (<= q$b@602@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 9
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@601@01 Int) (q$b@602@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@601@01)
      (and
        (<= 0 q$a@601@01)
        (=>
          (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@602@01) (not (<= 0 q$b@602@01)))))
        (or
          (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@601@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@601@01) (not (<= 0 q$a@601@01)))
    (=>
      (and
        (<= 0 q$a@601@01)
        (and
          (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@602@01)
            (<= q$b@602@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@601@01)
        (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@602@01)
        (<= q$b@602@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@601@01)
          (and
            (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@602@01)
              (<= q$b@602@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@601@01)
        (and
          (<= q$a@601@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@602@01)
            (<= q$b@602@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@601@01) q$b@602@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1289@17@1289@847-aux|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@603@01 $Snap)
(assert (= $t@603@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@531@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@604@01 $Struct)
(assert (=
  self@604@01
  ($struct_set<$Struct> self@520@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@520@01 7))
    l$havoc$1@531@01))))
; [exec]
; $contracts := l$havoc$2
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 9
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@604@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@520@01 6)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@604@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@520@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 9
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@604@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@604@01 3))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@604@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@604@01 3)))))
(pop) ; 8
(pop) ; 7
(push) ; 7
; [else-branch: 235 | !($out_of_gas@529@01)]
(assert (not $out_of_gas@529@01))
(pop) ; 7
; [eval] !$out_of_gas
(push) ; 7
(set-option :timeout 10)
(assert (not $out_of_gas@529@01))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not $out_of_gas@529@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 257 | !($out_of_gas@529@01) | live]
; [else-branch: 257 | $out_of_gas@529@01 | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 257 | !($out_of_gas@529@01)]
(assert (not $out_of_gas@529@01))
; [exec]
; label end
; [exec]
; exhale $unwrap(l$_value) >
;   ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg,
;   0)): Int)): Int) ==>
;   !$succ
; [eval] $unwrap(l$_value) > ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==> !$succ
; [eval] $unwrap(l$_value) > ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] $unwrap(l$_value)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($pre_self, 3)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(push) ; 8
(push) ; 9
(set-option :timeout 10)
(assert (not (not
  (>
    ($unwrap<Int> l$_value@513@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 258 | $unwrap[Int](l$_value@513@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))) | dead]
; [else-branch: 258 | !($unwrap[Int](l$_value@513@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0)))) | live]
(set-option :timeout 0)
(push) ; 9
; [else-branch: 258 | !($unwrap[Int](l$_value@513@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))]
(assert (not
  (>
    ($unwrap<Int> l$_value@513@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
(assert (not
  (>
    ($unwrap<Int> l$_value@513@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))))))
(push) ; 8
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 259 | True | live]
; [else-branch: 259 | False | dead]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 259 | True]
; [exec]
; assert $succ ==>
;   perm(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value))) ==
;   1 * write
; [eval] $succ ==> perm(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value))) == 1 * write
(push) ; 9
(push) ; 10
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 260 | True | live]
; [else-branch: 260 | False | dead]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 260 | True]
; [eval] perm(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value))) == 1 * write
; [eval] perm(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value)))
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
; [eval] 1 * write
(pop) ; 10
(pop) ; 9
; Joined path conditions
; [exec]
; assert ($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 9
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@595@01 6)))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@595@01 6))))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 261 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) != $struct_get[Int]($struct_loc[Int](self@595@01, 6)) | live]
; [else-branch: 261 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) == $struct_get[Int]($struct_loc[Int](self@595@01, 6)) | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 261 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) != $struct_get[Int]($struct_loc[Int](self@595@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@595@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 10
(push) ; 10
; [else-branch: 261 | $struct_get[Int]($struct_loc[Int](msg@516@01, 0)) == $struct_get[Int]($struct_loc[Int](self@595@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@595@01 6))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@595@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@595@01 6))))))
(push) ; 9
(assert (not (=>
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@595@01 6))))
  (>=
    ($struct_get<Int> ($struct_loc<Int> self@520@01 5))
    ($struct_get<Int> ($struct_loc<Int> self@595@01 5))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (=>
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@516@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@595@01 6))))
  (>=
    ($struct_get<Int> ($struct_loc<Int> self@520@01 5))
    ($struct_get<Int> ($struct_loc<Int> self@595@01 5)))))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@605@01 Int)
(declare-const q$b@606@01 Int)
(push) ; 9
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 10
; [then-branch: 262 | !(0 <= q$a@605@01) | live]
; [else-branch: 262 | 0 <= q$a@605@01 | live]
(push) ; 11
; [then-branch: 262 | !(0 <= q$a@605@01)]
(assert (not (<= 0 q$a@605@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 262 | 0 <= q$a@605@01]
(assert (<= 0 q$a@605@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 12
; [then-branch: 263 | !(q$a@605@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 263 | q$a@605@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 13
; [then-branch: 263 | !(q$a@605@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@605@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 13
(push) ; 13
; [else-branch: 263 | q$a@605@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@605@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 14
; [then-branch: 264 | !(0 <= q$b@606@01) | live]
; [else-branch: 264 | 0 <= q$b@606@01 | live]
(push) ; 15
; [then-branch: 264 | !(0 <= q$b@606@01)]
(assert (not (<= 0 q$b@606@01)))
(pop) ; 15
(push) ; 15
; [else-branch: 264 | 0 <= q$b@606@01]
(assert (<= 0 q$b@606@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@606@01) (not (<= 0 q$b@606@01))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@606@01) (not (<= 0 q$b@606@01))))))
(assert (or
  (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@605@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@605@01)
  (and
    (<= 0 q$a@605@01)
    (=>
      (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@606@01) (not (<= 0 q$b@606@01)))))
    (or
      (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@605@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@605@01) (not (<= 0 q$a@605@01))))
(push) ; 10
; [then-branch: 265 | 0 <= q$a@605@01 && q$a@605@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@606@01 && q$b@606@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 265 | !(0 <= q$a@605@01 && q$a@605@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@606@01 && q$b@606@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 11
; [then-branch: 265 | 0 <= q$a@605@01 && q$a@605@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@606@01 && q$b@606@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@605@01)
  (and
    (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@606@01)
      (<= q$b@606@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 12
; [then-branch: 266 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@605@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@605@01)) | live]
; [else-branch: 266 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@605@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@605@01) | live]
(push) ; 13
; [then-branch: 266 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@605@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@605@01))]
(assert (not
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))))
(pop) ; 13
(push) ; 13
; [else-branch: 266 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@605@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@605@01)]
(assert (>
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))
  (not
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01)))))
(push) ; 12
; [then-branch: 267 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@605@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@605@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$b@606@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$b@606@01) | live]
; [else-branch: 267 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@605@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@605@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$b@606@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$b@606@01)) | live]
(push) ; 13
; [then-branch: 267 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@605@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@605@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$b@606@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$b@606@01)]
(assert (and
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@606@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@606@01))))
; [eval] perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] 1 * write
(pop) ; 13
(push) ; 13
; [else-branch: 267 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@605@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@605@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$b@606@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$b@606@01))]
(assert (not
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@606@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@606@01)))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@606@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@606@01))))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@606@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@606@01)))))
(pop) ; 11
(push) ; 11
; [else-branch: 265 | !(0 <= q$a@605@01 && q$a@605@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@606@01 && q$b@606@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@605@01)
    (and
      (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@606@01)
        (<= q$b@606@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@605@01)
    (and
      (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@606@01)
        (<= q$b@606@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@605@01)
    (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@606@01)
    (<= q$b@606@01 1461501637330902918203684832716283019655932542975)
    (or
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))
      (not
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))))
    (or
      (not
        (and
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@606@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@606@01))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@606@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@606@01)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@605@01)
      (and
        (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@606@01)
          (<= q$b@606@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@605@01)
    (and
      (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@606@01)
        (<= q$b@606@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 9
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@605@01 Int) (q$b@606@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@605@01)
      (and
        (<= 0 q$a@605@01)
        (=>
          (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@606@01) (not (<= 0 q$b@606@01)))))
        (or
          (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@605@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@605@01) (not (<= 0 q$a@605@01)))
    (=>
      (and
        (<= 0 q$a@605@01)
        (and
          (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@606@01)
            (<= q$b@606@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@605@01)
        (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@606@01)
        (<= q$b@606@01 1461501637330902918203684832716283019655932542975)
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@606@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@606@01))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@606@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@606@01))))))
    (or
      (not
        (and
          (<= 0 q$a@605@01)
          (and
            (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@606@01)
              (<= q$b@606@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@605@01)
        (and
          (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@606@01)
            (<= q$b@606@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@606@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1279@13@1279@853-aux|)))
(push) ; 9
(assert (not (forall ((q$a@605@01 Int) (q$b@606@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@605@01)
        (and
          (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@606@01)
            (<= q$b@606@01 1461501637330902918203684832716283019655932542975))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@606@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@606@01))))
    (=
      (ite
        (and
          (= q$b@606@01 ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))
          (= q$a@605@01 l$_to@512@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))
            ($unwrap<Int> l$_value@513@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@606@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1279@13@1279@853|))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@605@01 Int) (q$b@606@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@605@01)
        (and
          (<= q$a@605@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@606@01)
            (<= q$b@606@01 1461501637330902918203684832716283019655932542975))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@606@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@606@01))))
    (=
      (ite
        (and
          (= q$b@606@01 ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))
          (= q$a@605@01 l$_to@512@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@605@01))
            ($unwrap<Int> l$_value@513@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@605@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@606@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1279@13@1279@853|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@607@01 Int)
(push) ; 9
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 10
; [then-branch: 268 | !(0 <= q$a@607@01) | live]
; [else-branch: 268 | 0 <= q$a@607@01 | live]
(push) ; 11
; [then-branch: 268 | !(0 <= q$a@607@01)]
(assert (not (<= 0 q$a@607@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 268 | 0 <= q$a@607@01]
(assert (<= 0 q$a@607@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@607@01) (not (<= 0 q$a@607@01))))
(push) ; 10
; [then-branch: 269 | 0 <= q$a@607@01 && q$a@607@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 269 | !(0 <= q$a@607@01 && q$a@607@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 11
; [then-branch: 269 | 0 <= q$a@607@01 && q$a@607@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@607@01)
  (<= q$a@607@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 12
; [then-branch: 270 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@607@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@607@01)) | live]
; [else-branch: 270 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@607@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@607@01) | live]
(push) ; 13
; [then-branch: 270 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@607@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@607@01))]
(assert (not
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))))
(pop) ; 13
(push) ; 13
; [else-branch: 270 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@607@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@607@01)]
(assert (>
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01)))
; [eval] (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
(declare-const q$b@608@01 Int)
(push) ; 14
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$b
(push) ; 15
; [then-branch: 271 | !(0 <= q$b@608@01) | live]
; [else-branch: 271 | 0 <= q$b@608@01 | live]
(push) ; 16
; [then-branch: 271 | !(0 <= q$b@608@01)]
(assert (not (<= 0 q$b@608@01)))
(pop) ; 16
(push) ; 16
; [else-branch: 271 | 0 <= q$b@608@01]
(assert (<= 0 q$b@608@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@608@01) (not (<= 0 q$b@608@01))))
(push) ; 15
; [then-branch: 272 | 0 <= q$b@608@01 && q$b@608@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 272 | !(0 <= q$b@608@01 && q$b@608@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 16
; [then-branch: 272 | 0 <= q$b@608@01 && q$b@608@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$b@608@01)
  (<= q$b@608@01 1461501637330902918203684832716283019655932542975)))
; [eval] q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] q$b != q$a
(push) ; 17
; [then-branch: 273 | q$b@608@01 != q$a@607@01 | live]
; [else-branch: 273 | q$b@608@01 == q$a@607@01 | live]
(push) ; 18
; [then-branch: 273 | q$b@608@01 != q$a@607@01]
(assert (not (= q$b@608@01 q$a@607@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 18
(push) ; 18
; [else-branch: 273 | q$b@608@01 == q$a@607@01]
(assert (= q$b@608@01 q$a@607@01))
(pop) ; 18
(pop) ; 17
; Joined path conditions
; Joined path conditions
(assert (or (= q$b@608@01 q$a@607@01) (not (= q$b@608@01 q$a@607@01))))
(pop) ; 16
(push) ; 16
; [else-branch: 272 | !(0 <= q$b@608@01 && q$b@608@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$b@608@01)
    (<= q$b@608@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 16
(pop) ; 15
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$b@608@01)
    (<= q$b@608@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$b@608@01)
    (<= q$b@608@01 1461501637330902918203684832716283019655932542975)
    (or (= q$b@608@01 q$a@607@01) (not (= q$b@608@01 q$a@607@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$b@608@01)
      (<= q$b@608@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$b@608@01)
    (<= q$b@608@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 14
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$b@608@01 Int)) (!
  (and
    (or (<= 0 q$b@608@01) (not (<= 0 q$b@608@01)))
    (=>
      (and
        (<= 0 q$b@608@01)
        (<= q$b@608@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@608@01)
        (<= q$b@608@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@608@01 q$a@607@01) (not (= q$b@608@01 q$a@607@01)))))
    (or
      (not
        (and
          (<= 0 q$b@608@01)
          (<= q$b@608@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@608@01)
        (<= q$b@608@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848-aux|)))
(assert (forall ((q$b@608@01 Int)) (!
  (and
    (or (<= 0 q$b@608@01) (not (<= 0 q$b@608@01)))
    (=>
      (and
        (<= 0 q$b@608@01)
        (<= q$b@608@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@608@01)
        (<= q$b@608@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@608@01 q$a@607@01) (not (= q$b@608@01 q$a@607@01)))))
    (or
      (not
        (and
          (<= 0 q$b@608@01)
          (<= q$b@608@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@608@01)
        (<= q$b@608@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848-aux|)))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
    (forall ((q$b@608@01 Int)) (!
      (and
        (or (<= 0 q$b@608@01) (not (<= 0 q$b@608@01)))
        (=>
          (and
            (<= 0 q$b@608@01)
            (<= q$b@608@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@608@01)
            (<= q$b@608@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@608@01 q$a@607@01) (not (= q$b@608@01 q$a@607@01)))))
        (or
          (not
            (and
              (<= 0 q$b@608@01)
              (<= q$b@608@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@608@01)
            (<= q$b@608@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848-aux|))
    (forall ((q$b@608@01 Int)) (!
      (and
        (or (<= 0 q$b@608@01) (not (<= 0 q$b@608@01)))
        (=>
          (and
            (<= 0 q$b@608@01)
            (<= q$b@608@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@608@01)
            (<= q$b@608@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@608@01 q$a@607@01) (not (= q$b@608@01 q$a@607@01)))))
        (or
          (not
            (and
              (<= 0 q$b@608@01)
              (<= q$b@608@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@608@01)
            (<= q$b@608@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848-aux|)))))
(assert (or
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
  (not
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01)))))
(push) ; 12
; [then-branch: 274 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@607@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@607@01) && QA q$b@608@01 :: 0 <= q$b@608@01 && q$b@608@01 <= 1461501637330902918203684832716283019655932542975 && q$b@608@01 != q$a@607@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$b@608@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$b@608@01) | live]
; [else-branch: 274 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@607@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@607@01) && QA q$b@608@01 :: 0 <= q$b@608@01 && q$b@608@01 <= 1461501637330902918203684832716283019655932542975 && q$b@608@01 != q$a@607@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$b@608@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$b@608@01)) | live]
(push) ; 13
; [then-branch: 274 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@607@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@607@01) && QA q$b@608@01 :: 0 <= q$b@608@01 && q$b@608@01 <= 1461501637330902918203684832716283019655932542975 && q$b@608@01 != q$a@607@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$b@608@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$b@608@01)]
(assert (and
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
  (forall ((q$b@608@01 Int)) (!
    (=>
      (and
        (and
          (<= 0 q$b@608@01)
          (<= q$b@608@01 1461501637330902918203684832716283019655932542975))
        (not (= q$b@608@01 q$a@607@01)))
      (=
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01)))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848|))))
; [eval] perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] 1 * write
(pop) ; 13
(push) ; 13
; [else-branch: 274 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@607@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@607@01) && QA q$b@608@01 :: 0 <= q$b@608@01 && q$b@608@01 <= 1461501637330902918203684832716283019655932542975 && q$b@608@01 != q$a@607@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$b@608@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$b@608@01))]
(assert (not
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
    (forall ((q$b@608@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@608@01)
            (<= q$b@608@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@608@01 q$a@607@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848|)))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
      (forall ((q$b@608@01 Int)) (!
        (=>
          (and
            (and
              (<= 0 q$b@608@01)
              (<= q$b@608@01 1461501637330902918203684832716283019655932542975))
            (not (= q$b@608@01 q$a@607@01)))
          (=
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01)))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848|))))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
    (forall ((q$b@608@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@608@01)
            (<= q$b@608@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@608@01 q$a@607@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848|)))))
(pop) ; 11
(push) ; 11
; [else-branch: 269 | !(0 <= q$a@607@01 && q$a@607@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@607@01)
    (<= q$a@607@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@607@01)
    (<= q$a@607@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$a@607@01)
    (<= q$a@607@01 1461501637330902918203684832716283019655932542975)
    (=>
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
        (forall ((q$b@608@01 Int)) (!
          (and
            (or (<= 0 q$b@608@01) (not (<= 0 q$b@608@01)))
            (=>
              (and
                (<= 0 q$b@608@01)
                (<= q$b@608@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@608@01)
                (<= q$b@608@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@608@01 q$a@607@01) (not (= q$b@608@01 q$a@607@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@608@01)
                  (<=
                    q$b@608@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@608@01)
                (<= q$b@608@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848-aux|))
        (forall ((q$b@608@01 Int)) (!
          (and
            (or (<= 0 q$b@608@01) (not (<= 0 q$b@608@01)))
            (=>
              (and
                (<= 0 q$b@608@01)
                (<= q$b@608@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@608@01)
                (<= q$b@608@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@608@01 q$a@607@01) (not (= q$b@608@01 q$a@607@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@608@01)
                  (<=
                    q$b@608@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@608@01)
                (<= q$b@608@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848-aux|))))
    (or
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
      (not
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))))
    (or
      (not
        (and
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
          (forall ((q$b@608@01 Int)) (!
            (=>
              (and
                (and
                  (<= 0 q$b@608@01)
                  (<=
                    q$b@608@01
                    1461501637330902918203684832716283019655932542975))
                (not (= q$b@608@01 q$a@607@01)))
              (=
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01)))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848|))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
        (forall ((q$b@608@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@608@01)
                (<= q$b@608@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@608@01 q$a@607@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848|)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@607@01)
      (<= q$a@607@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@607@01)
    (<= q$a@607@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 9
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@607@01 Int)) (!
  (and
    (or (<= 0 q$a@607@01) (not (<= 0 q$a@607@01)))
    (=>
      (and
        (<= 0 q$a@607@01)
        (<= q$a@607@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@607@01)
        (<= q$a@607@01 1461501637330902918203684832716283019655932542975)
        (=>
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
            (forall ((q$b@608@01 Int)) (!
              (and
                (or (<= 0 q$b@608@01) (not (<= 0 q$b@608@01)))
                (=>
                  (and
                    (<= 0 q$b@608@01)
                    (<=
                      q$b@608@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@608@01)
                    (<=
                      q$b@608@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@608@01 q$a@607@01)
                      (not (= q$b@608@01 q$a@607@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@608@01)
                      (<=
                        q$b@608@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@608@01)
                    (<=
                      q$b@608@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848-aux|))
            (forall ((q$b@608@01 Int)) (!
              (and
                (or (<= 0 q$b@608@01) (not (<= 0 q$b@608@01)))
                (=>
                  (and
                    (<= 0 q$b@608@01)
                    (<=
                      q$b@608@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@608@01)
                    (<=
                      q$b@608@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@608@01 q$a@607@01)
                      (not (= q$b@608@01 q$a@607@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@608@01)
                      (<=
                        q$b@608@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@608@01)
                    (<=
                      q$b@608@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848-aux|))))
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
              (forall ((q$b@608@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@608@01)
                      (<=
                        q$b@608@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@608@01 q$a@607@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848|))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
            (forall ((q$b@608@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@608@01)
                    (<=
                      q$b@608@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@608@01 q$a@607@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@607@01)
          (<= q$a@607@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@607@01)
        (<= q$a@607@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@13@1280@1047-aux|)))
(assert (forall ((q$a@607@01 Int)) (!
  (and
    (or (<= 0 q$a@607@01) (not (<= 0 q$a@607@01)))
    (=>
      (and
        (<= 0 q$a@607@01)
        (<= q$a@607@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@607@01)
        (<= q$a@607@01 1461501637330902918203684832716283019655932542975)
        (=>
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
            (forall ((q$b@608@01 Int)) (!
              (and
                (or (<= 0 q$b@608@01) (not (<= 0 q$b@608@01)))
                (=>
                  (and
                    (<= 0 q$b@608@01)
                    (<=
                      q$b@608@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@608@01)
                    (<=
                      q$b@608@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@608@01 q$a@607@01)
                      (not (= q$b@608@01 q$a@607@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@608@01)
                      (<=
                        q$b@608@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@608@01)
                    (<=
                      q$b@608@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848-aux|))
            (forall ((q$b@608@01 Int)) (!
              (and
                (or (<= 0 q$b@608@01) (not (<= 0 q$b@608@01)))
                (=>
                  (and
                    (<= 0 q$b@608@01)
                    (<=
                      q$b@608@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@608@01)
                    (<=
                      q$b@608@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@608@01 q$a@607@01)
                      (not (= q$b@608@01 q$a@607@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@608@01)
                      (<=
                        q$b@608@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@608@01)
                    (<=
                      q$b@608@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848-aux|))))
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
              (forall ((q$b@608@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@608@01)
                      (<=
                        q$b@608@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@608@01 q$a@607@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848|))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
            (forall ((q$b@608@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@608@01)
                    (<=
                      q$b@608@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@608@01 q$a@607@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@607@01)
          (<= q$a@607@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@607@01)
        (<= q$a@607@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@13@1280@1047-aux|)))
(push) ; 9
(assert (not (forall ((q$a@607@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@607@01)
        (<= q$a@607@01 1461501637330902918203684832716283019655932542975))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
        (forall ((q$b@608@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@608@01)
                (<= q$b@608@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@608@01 q$a@607@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848|))))
    (=
      (ite
        (and
          (= q$a@607@01 ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))
          (= 0 l$_to@512@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
            ($unwrap<Int> l$_value@513@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@13@1280@1047|))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@607@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@607@01)
        (<= q$a@607@01 1461501637330902918203684832716283019655932542975))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
        (forall ((q$b@608@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@608@01)
                (<= q$b@608@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@608@01 q$a@607@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@608@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@608@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@425@1280@848|))))
    (=
      (ite
        (and
          (= q$a@607@01 ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))
          (= 0 l$_to@512@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
            ($unwrap<Int> l$_value@513@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@607@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@607@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1280@13@1280@1047|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@609@01 Int)
(push) ; 9
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 10
; [then-branch: 275 | !(0 <= q$a@609@01) | live]
; [else-branch: 275 | 0 <= q$a@609@01 | live]
(push) ; 11
; [then-branch: 275 | !(0 <= q$a@609@01)]
(assert (not (<= 0 q$a@609@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 275 | 0 <= q$a@609@01]
(assert (<= 0 q$a@609@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@609@01) (not (<= 0 q$a@609@01))))
(push) ; 10
; [then-branch: 276 | 0 <= q$a@609@01 && q$a@609@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 276 | !(0 <= q$a@609@01 && q$a@609@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 11
; [then-branch: 276 | 0 <= q$a@609@01 && q$a@609@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@609@01)
  (<= q$a@609@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 12
; [then-branch: 277 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@609@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@609@01)) | live]
; [else-branch: 277 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@609@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@609@01) | live]
(push) ; 13
; [then-branch: 277 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@609@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@609@01))]
(assert (not
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))))
(pop) ; 13
(push) ; 13
; [else-branch: 277 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@609@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@609@01)]
(assert (<
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01)))
; [eval] (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
(declare-const q$b@610@01 Int)
(push) ; 14
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$b
(push) ; 15
; [then-branch: 278 | !(0 <= q$b@610@01) | live]
; [else-branch: 278 | 0 <= q$b@610@01 | live]
(push) ; 16
; [then-branch: 278 | !(0 <= q$b@610@01)]
(assert (not (<= 0 q$b@610@01)))
(pop) ; 16
(push) ; 16
; [else-branch: 278 | 0 <= q$b@610@01]
(assert (<= 0 q$b@610@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@610@01) (not (<= 0 q$b@610@01))))
(push) ; 15
; [then-branch: 279 | 0 <= q$b@610@01 && q$b@610@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 279 | !(0 <= q$b@610@01 && q$b@610@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 16
; [then-branch: 279 | 0 <= q$b@610@01 && q$b@610@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$b@610@01)
  (<= q$b@610@01 1461501637330902918203684832716283019655932542975)))
; [eval] q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] q$b != q$a
(push) ; 17
; [then-branch: 280 | q$b@610@01 != q$a@609@01 | live]
; [else-branch: 280 | q$b@610@01 == q$a@609@01 | live]
(push) ; 18
; [then-branch: 280 | q$b@610@01 != q$a@609@01]
(assert (not (= q$b@610@01 q$a@609@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 18
(push) ; 18
; [else-branch: 280 | q$b@610@01 == q$a@609@01]
(assert (= q$b@610@01 q$a@609@01))
(pop) ; 18
(pop) ; 17
; Joined path conditions
; Joined path conditions
(assert (or (= q$b@610@01 q$a@609@01) (not (= q$b@610@01 q$a@609@01))))
(pop) ; 16
(push) ; 16
; [else-branch: 279 | !(0 <= q$b@610@01 && q$b@610@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$b@610@01)
    (<= q$b@610@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 16
(pop) ; 15
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$b@610@01)
    (<= q$b@610@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$b@610@01)
    (<= q$b@610@01 1461501637330902918203684832716283019655932542975)
    (or (= q$b@610@01 q$a@609@01) (not (= q$b@610@01 q$a@609@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$b@610@01)
      (<= q$b@610@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$b@610@01)
    (<= q$b@610@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 14
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$b@610@01 Int)) (!
  (and
    (or (<= 0 q$b@610@01) (not (<= 0 q$b@610@01)))
    (=>
      (and
        (<= 0 q$b@610@01)
        (<= q$b@610@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@610@01)
        (<= q$b@610@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@610@01 q$a@609@01) (not (= q$b@610@01 q$a@609@01)))))
    (or
      (not
        (and
          (<= 0 q$b@610@01)
          (<= q$b@610@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@610@01)
        (<= q$b@610@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848-aux|)))
(assert (forall ((q$b@610@01 Int)) (!
  (and
    (or (<= 0 q$b@610@01) (not (<= 0 q$b@610@01)))
    (=>
      (and
        (<= 0 q$b@610@01)
        (<= q$b@610@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@610@01)
        (<= q$b@610@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@610@01 q$a@609@01) (not (= q$b@610@01 q$a@609@01)))))
    (or
      (not
        (and
          (<= 0 q$b@610@01)
          (<= q$b@610@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@610@01)
        (<= q$b@610@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848-aux|)))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
    (forall ((q$b@610@01 Int)) (!
      (and
        (or (<= 0 q$b@610@01) (not (<= 0 q$b@610@01)))
        (=>
          (and
            (<= 0 q$b@610@01)
            (<= q$b@610@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@610@01)
            (<= q$b@610@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@610@01 q$a@609@01) (not (= q$b@610@01 q$a@609@01)))))
        (or
          (not
            (and
              (<= 0 q$b@610@01)
              (<= q$b@610@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@610@01)
            (<= q$b@610@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848-aux|))
    (forall ((q$b@610@01 Int)) (!
      (and
        (or (<= 0 q$b@610@01) (not (<= 0 q$b@610@01)))
        (=>
          (and
            (<= 0 q$b@610@01)
            (<= q$b@610@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@610@01)
            (<= q$b@610@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@610@01 q$a@609@01) (not (= q$b@610@01 q$a@609@01)))))
        (or
          (not
            (and
              (<= 0 q$b@610@01)
              (<= q$b@610@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@610@01)
            (<= q$b@610@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848-aux|)))))
(assert (or
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
  (not
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01)))))
(push) ; 12
; [then-branch: 281 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@609@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@609@01) && QA q$b@610@01 :: 0 <= q$b@610@01 && q$b@610@01 <= 1461501637330902918203684832716283019655932542975 && q$b@610@01 != q$a@609@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$b@610@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$b@610@01) | live]
; [else-branch: 281 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@609@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@609@01) && QA q$b@610@01 :: 0 <= q$b@610@01 && q$b@610@01 <= 1461501637330902918203684832716283019655932542975 && q$b@610@01 != q$a@609@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$b@610@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$b@610@01)) | live]
(push) ; 13
; [then-branch: 281 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@609@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@609@01) && QA q$b@610@01 :: 0 <= q$b@610@01 && q$b@610@01 <= 1461501637330902918203684832716283019655932542975 && q$b@610@01 != q$a@609@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$b@610@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$b@610@01)]
(assert (and
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
  (forall ((q$b@610@01 Int)) (!
    (=>
      (and
        (and
          (<= 0 q$b@610@01)
          (<= q$b@610@01 1461501637330902918203684832716283019655932542975))
        (not (= q$b@610@01 q$a@609@01)))
      (=
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01)))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848|))))
; [eval] perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] 1 * write
(pop) ; 13
(push) ; 13
; [else-branch: 281 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$a@609@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$a@609@01) && QA q$b@610@01 :: 0 <= q$b@610@01 && q$b@610@01 <= 1461501637330902918203684832716283019655932542975 && q$b@610@01 != q$a@609@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@595@01, 3)), q$b@610@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), q$b@610@01))]
(assert (not
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
    (forall ((q$b@610@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@610@01)
            (<= q$b@610@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@610@01 q$a@609@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848|)))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
      (forall ((q$b@610@01 Int)) (!
        (=>
          (and
            (and
              (<= 0 q$b@610@01)
              (<= q$b@610@01 1461501637330902918203684832716283019655932542975))
            (not (= q$b@610@01 q$a@609@01)))
          (=
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01)))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848|))))
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
    (forall ((q$b@610@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@610@01)
            (<= q$b@610@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@610@01 q$a@609@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848|)))))
(pop) ; 11
(push) ; 11
; [else-branch: 276 | !(0 <= q$a@609@01 && q$a@609@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@609@01)
    (<= q$a@609@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@609@01)
    (<= q$a@609@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$a@609@01)
    (<= q$a@609@01 1461501637330902918203684832716283019655932542975)
    (=>
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
        (forall ((q$b@610@01 Int)) (!
          (and
            (or (<= 0 q$b@610@01) (not (<= 0 q$b@610@01)))
            (=>
              (and
                (<= 0 q$b@610@01)
                (<= q$b@610@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@610@01)
                (<= q$b@610@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@610@01 q$a@609@01) (not (= q$b@610@01 q$a@609@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@610@01)
                  (<=
                    q$b@610@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@610@01)
                (<= q$b@610@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848-aux|))
        (forall ((q$b@610@01 Int)) (!
          (and
            (or (<= 0 q$b@610@01) (not (<= 0 q$b@610@01)))
            (=>
              (and
                (<= 0 q$b@610@01)
                (<= q$b@610@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@610@01)
                (<= q$b@610@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@610@01 q$a@609@01) (not (= q$b@610@01 q$a@609@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@610@01)
                  (<=
                    q$b@610@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@610@01)
                (<= q$b@610@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848-aux|))))
    (or
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
      (not
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))))
    (or
      (not
        (and
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
          (forall ((q$b@610@01 Int)) (!
            (=>
              (and
                (and
                  (<= 0 q$b@610@01)
                  (<=
                    q$b@610@01
                    1461501637330902918203684832716283019655932542975))
                (not (= q$b@610@01 q$a@609@01)))
              (=
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01)))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848|))))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
        (forall ((q$b@610@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@610@01)
                (<= q$b@610@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@610@01 q$a@609@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848|)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@609@01)
      (<= q$a@609@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@609@01)
    (<= q$a@609@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 9
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@609@01 Int)) (!
  (and
    (or (<= 0 q$a@609@01) (not (<= 0 q$a@609@01)))
    (=>
      (and
        (<= 0 q$a@609@01)
        (<= q$a@609@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@609@01)
        (<= q$a@609@01 1461501637330902918203684832716283019655932542975)
        (=>
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
            (forall ((q$b@610@01 Int)) (!
              (and
                (or (<= 0 q$b@610@01) (not (<= 0 q$b@610@01)))
                (=>
                  (and
                    (<= 0 q$b@610@01)
                    (<=
                      q$b@610@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@610@01)
                    (<=
                      q$b@610@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@610@01 q$a@609@01)
                      (not (= q$b@610@01 q$a@609@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@610@01)
                      (<=
                        q$b@610@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@610@01)
                    (<=
                      q$b@610@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848-aux|))
            (forall ((q$b@610@01 Int)) (!
              (and
                (or (<= 0 q$b@610@01) (not (<= 0 q$b@610@01)))
                (=>
                  (and
                    (<= 0 q$b@610@01)
                    (<=
                      q$b@610@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@610@01)
                    (<=
                      q$b@610@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@610@01 q$a@609@01)
                      (not (= q$b@610@01 q$a@609@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@610@01)
                      (<=
                        q$b@610@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@610@01)
                    (<=
                      q$b@610@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848-aux|))))
        (or
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
          (not
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))))
        (or
          (not
            (and
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
              (forall ((q$b@610@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@610@01)
                      (<=
                        q$b@610@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@610@01 q$a@609@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848|))))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
            (forall ((q$b@610@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@610@01)
                    (<=
                      q$b@610@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@610@01 q$a@609@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@609@01)
          (<= q$a@609@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@609@01)
        (<= q$a@609@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@13@1281@1047-aux|)))
(assert (forall ((q$a@609@01 Int)) (!
  (and
    (or (<= 0 q$a@609@01) (not (<= 0 q$a@609@01)))
    (=>
      (and
        (<= 0 q$a@609@01)
        (<= q$a@609@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@609@01)
        (<= q$a@609@01 1461501637330902918203684832716283019655932542975)
        (=>
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
            (forall ((q$b@610@01 Int)) (!
              (and
                (or (<= 0 q$b@610@01) (not (<= 0 q$b@610@01)))
                (=>
                  (and
                    (<= 0 q$b@610@01)
                    (<=
                      q$b@610@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@610@01)
                    (<=
                      q$b@610@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@610@01 q$a@609@01)
                      (not (= q$b@610@01 q$a@609@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@610@01)
                      (<=
                        q$b@610@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@610@01)
                    (<=
                      q$b@610@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848-aux|))
            (forall ((q$b@610@01 Int)) (!
              (and
                (or (<= 0 q$b@610@01) (not (<= 0 q$b@610@01)))
                (=>
                  (and
                    (<= 0 q$b@610@01)
                    (<=
                      q$b@610@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@610@01)
                    (<=
                      q$b@610@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@610@01 q$a@609@01)
                      (not (= q$b@610@01 q$a@609@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@610@01)
                      (<=
                        q$b@610@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@610@01)
                    (<=
                      q$b@610@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848-aux|))))
        (or
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
          (not
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))))
        (or
          (not
            (and
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
              (forall ((q$b@610@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@610@01)
                      (<=
                        q$b@610@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@610@01 q$a@609@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848|))))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
            (forall ((q$b@610@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@610@01)
                    (<=
                      q$b@610@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@610@01 q$a@609@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@609@01)
          (<= q$a@609@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@609@01)
        (<= q$a@609@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@13@1281@1047-aux|)))
(push) ; 9
(assert (not (forall ((q$a@609@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@609@01)
        (<= q$a@609@01 1461501637330902918203684832716283019655932542975))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
        (forall ((q$b@610@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@610@01)
                (<= q$b@610@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@610@01 q$a@609@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848|))))
    (=
      (ite
        (and
          (= 0 ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))
          (= q$a@609@01 l$_to@512@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01))
            ($unwrap<Int> l$_value@513@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@13@1281@1047|))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@609@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@609@01)
        (<= q$a@609@01 1461501637330902918203684832716283019655932542975))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
        (forall ((q$b@610@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@610@01)
                (<= q$b@610@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@610@01 q$a@609@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$b@610@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$b@610@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@425@1281@848|))))
    (=
      (ite
        (and
          (= 0 ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))
          (= q$a@609@01 l$_to@512@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01))
            ($unwrap<Int> l$_value@513@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@595@01 3)) q$a@609@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) q$a@609@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1281@13@1281@1047|)))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@611@01 Int)
(declare-const q$b@612@01 Int)
(push) ; 9
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 10
; [then-branch: 282 | !(0 <= q$a@611@01) | live]
; [else-branch: 282 | 0 <= q$a@611@01 | live]
(push) ; 11
; [then-branch: 282 | !(0 <= q$a@611@01)]
(assert (not (<= 0 q$a@611@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 282 | 0 <= q$a@611@01]
(assert (<= 0 q$a@611@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 12
; [then-branch: 283 | !(q$a@611@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 283 | q$a@611@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 13
; [then-branch: 283 | !(q$a@611@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@611@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 13
(push) ; 13
; [else-branch: 283 | q$a@611@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@611@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 14
; [then-branch: 284 | !(0 <= q$b@612@01) | live]
; [else-branch: 284 | 0 <= q$b@612@01 | live]
(push) ; 15
; [then-branch: 284 | !(0 <= q$b@612@01)]
(assert (not (<= 0 q$b@612@01)))
(pop) ; 15
(push) ; 15
; [else-branch: 284 | 0 <= q$b@612@01]
(assert (<= 0 q$b@612@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@612@01) (not (<= 0 q$b@612@01))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@612@01) (not (<= 0 q$b@612@01))))))
(assert (or
  (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@611@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@611@01)
  (and
    (<= 0 q$a@611@01)
    (=>
      (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@612@01) (not (<= 0 q$b@612@01)))))
    (or
      (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@611@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@611@01) (not (<= 0 q$a@611@01))))
(push) ; 10
; [then-branch: 285 | 0 <= q$a@611@01 && q$a@611@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@612@01 && q$b@612@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 285 | !(0 <= q$a@611@01 && q$a@611@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@612@01 && q$b@612@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 11
; [then-branch: 285 | 0 <= q$a@611@01 && q$a@611@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@612@01 && q$b@612@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@611@01)
  (and
    (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@612@01)
      (<= q$b@612@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 12
; [then-branch: 286 | $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@520@01, 4)), q$a@611@01), q$b@612@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@595@01, 4)), q$a@611@01), q$b@612@01) | live]
; [else-branch: 286 | !($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@520@01, 4)), q$a@611@01), q$b@612@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@595@01, 4)), q$a@611@01), q$b@612@01)) | live]
(push) ; 13
; [then-branch: 286 | $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@520@01, 4)), q$a@611@01), q$b@612@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@595@01, 4)), q$a@611@01), q$b@612@01)]
(assert (<
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@611@01) q$b@612@01)
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@595@01 4)) q$a@611@01) q$b@612@01)))
; [eval] perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] 1 * write
(pop) ; 13
(push) ; 13
; [else-branch: 286 | !($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@520@01, 4)), q$a@611@01), q$b@612@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@595@01, 4)), q$a@611@01), q$b@612@01))]
(assert (not
  (<
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@611@01) q$b@612@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@595@01 4)) q$a@611@01) q$b@612@01))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@611@01) q$b@612@01)
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@595@01 4)) q$a@611@01) q$b@612@01)))
  (<
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@611@01) q$b@612@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@595@01 4)) q$a@611@01) q$b@612@01))))
(pop) ; 11
(push) ; 11
; [else-branch: 285 | !(0 <= q$a@611@01 && q$a@611@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@612@01 && q$b@612@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@611@01)
    (and
      (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@612@01)
        (<= q$b@612@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@611@01)
    (and
      (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@612@01)
        (<= q$b@612@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@611@01)
    (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@612@01)
    (<= q$b@612@01 1461501637330902918203684832716283019655932542975)
    (or
      (not
        (<
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@611@01) q$b@612@01)
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@595@01 4)) q$a@611@01) q$b@612@01)))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@611@01) q$b@612@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@595@01 4)) q$a@611@01) q$b@612@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@611@01)
      (and
        (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@612@01)
          (<= q$b@612@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@611@01)
    (and
      (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@612@01)
        (<= q$b@612@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 9
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@611@01 Int) (q$b@612@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@611@01)
      (and
        (<= 0 q$a@611@01)
        (=>
          (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@612@01) (not (<= 0 q$b@612@01)))))
        (or
          (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@611@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@611@01) (not (<= 0 q$a@611@01)))
    (=>
      (and
        (<= 0 q$a@611@01)
        (and
          (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@612@01)
            (<= q$b@612@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@611@01)
        (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@612@01)
        (<= q$b@612@01 1461501637330902918203684832716283019655932542975)
        (or
          (not
            (<
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@611@01) q$b@612@01)
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@595@01 4)) q$a@611@01) q$b@612@01)))
          (<
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@611@01) q$b@612@01)
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@595@01 4)) q$a@611@01) q$b@612@01)))))
    (or
      (not
        (and
          (<= 0 q$a@611@01)
          (and
            (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@612@01)
              (<= q$b@612@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@611@01)
        (and
          (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@612@01)
            (<= q$b@612@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@595@01 4)) q$a@611@01) q$b@612@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1282@13@1282@843-aux|)))
(assert (forall ((q$a@611@01 Int) (q$b@612@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@611@01)
      (and
        (<= 0 q$a@611@01)
        (=>
          (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@612@01) (not (<= 0 q$b@612@01)))))
        (or
          (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@611@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@611@01) (not (<= 0 q$a@611@01)))
    (=>
      (and
        (<= 0 q$a@611@01)
        (and
          (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@612@01)
            (<= q$b@612@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@611@01)
        (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@612@01)
        (<= q$b@612@01 1461501637330902918203684832716283019655932542975)
        (or
          (not
            (<
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@611@01) q$b@612@01)
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@595@01 4)) q$a@611@01) q$b@612@01)))
          (<
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@611@01) q$b@612@01)
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@595@01 4)) q$a@611@01) q$b@612@01)))))
    (or
      (not
        (and
          (<= 0 q$a@611@01)
          (and
            (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@612@01)
              (<= q$b@612@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@611@01)
        (and
          (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@612@01)
            (<= q$b@612@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@611@01) q$b@612@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1282@13@1282@843-aux|)))
(push) ; 9
(assert (not (forall ((q$a@611@01 Int) (q$b@612@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@611@01)
        (and
          (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@612@01)
            (<= q$b@612@01 1461501637330902918203684832716283019655932542975))))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@611@01) q$b@612@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@595@01 4)) q$a@611@01) q$b@612@01)))
    false)
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@595@01 4)) q$a@611@01) q$b@612@01))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@611@01) q$b@612@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1282@13@1282@843|))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@611@01 Int) (q$b@612@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@611@01)
        (and
          (<= q$a@611@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@612@01)
            (<= q$b@612@01 1461501637330902918203684832716283019655932542975))))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@611@01) q$b@612@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@595@01 4)) q$a@611@01) q$b@612@01)))
    false)
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@595@01 4)) q$a@611@01) q$b@612@01))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@520@01 4)) q$a@611@01) q$b@612@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1282@13@1282@843|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@613@01 $Snap)
(assert (= $t@613@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@531@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@614@01 $Struct)
(assert (=
  self@614@01
  ($struct_set<$Struct> self@595@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@595@01 7))
    l$havoc$1@531@01))))
; [exec]
; $contracts := l$havoc$2
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 9
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@614@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@520@01 6)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@614@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@520@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 9
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@614@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@614@01 3))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@614@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@614@01 3)))))
(pop) ; 8
; [eval] !$succ
; [then-branch: 287 | False | dead]
; [else-branch: 287 | True | live]
(push) ; 8
; [else-branch: 287 | True]
(pop) ; 8
(pop) ; 7
(push) ; 7
; [else-branch: 257 | $out_of_gas@529@01]
(assert $out_of_gas@529@01)
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 234 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@586@01, 3)), l$_to@512@01))) + $unwrap[Int](l$_value@513@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935]
(assert (>
  (+
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@586@01 3)) l$_to@512@01)))
    ($unwrap<Int> l$_value@513@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
(pop) ; 6
(pop) ; 5
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 207 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@520@01, 3)), $struct_get[Int]($struct_loc[Int](msg@516@01, 0))))) - $unwrap[Int](l$_value@513@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@520@01 3)) ($struct_get<Int> ($struct_loc<Int> msg@516@01 0)))))
    ($unwrap<Int> l$_value@513@01))
  0))
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$transferFrom ----------
(declare-const l$_from@615@01 Int)
(declare-const l$_to@616@01 Int)
(declare-const l$_value@617@01 $Int)
(declare-const $succ@618@01 Bool)
(declare-const $res@619@01 Bool)
(declare-const l$_from@620@01 Int)
(declare-const l$_to@621@01 Int)
(declare-const l$_value@622@01 $Int)
(declare-const $succ@623@01 Bool)
(declare-const $res@624@01 Bool)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@625@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@626@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@627@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@628@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@629@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@630@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@631@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@632@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@633@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@634@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@635@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@636@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@637@01 Bool)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@638@01 Bool)
; [exec]
; var l$havoc: Bool
(declare-const l$havoc@639@01 Bool)
; [exec]
; var l$havoc$1: Int
(declare-const l$havoc$1@640@01 Int)
; [exec]
; var l$havoc$2: $Map[Int, $Struct]
(declare-const l$havoc$2@641@01 $Map<Int~_$Struct>)
; [exec]
; inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
(declare-const $t@642@01 $Snap)
(assert (= $t@642@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 0)): Seq[Int])
; [eval] $struct_loc(self, 0)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@629@01 0))) 64))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
(declare-const $t@643@01 $Snap)
(assert (= $t@643@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 1)): Seq[Int])
; [eval] $struct_loc(self, 1)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@629@01 1))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@644@01 $Snap)
(assert (= $t@644@01 ($Snap.combine ($Snap.first $t@644@01) ($Snap.second $t@644@01))))
(assert (= ($Snap.first $t@644@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@629@01 2))))
(assert (= ($Snap.second $t@644@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@629@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@645@01 $Snap)
(assert (= $t@645@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@646@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 4
; [then-branch: 288 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), $q2@646@01)) | live]
; [else-branch: 288 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), $q2@646@01) | live]
(push) ; 5
; [then-branch: 288 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), $q2@646@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) $q2@646@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 288 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), $q2@646@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) $q2@646@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) $q2@646@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) $q2@646@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@646@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) $q2@646@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) $q2@646@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) $q2@646@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1323@11@1323@345-aux|)))
(assert (forall (($q2@646@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) $q2@646@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) $q2@646@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) $q2@646@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1323@11@1323@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $t@647@01 $Snap)
(assert (= $t@647@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $q2@648@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@648@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) $q2@648@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) $q2@648@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1324@11@1324@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@649@01 $Snap)
(assert (= $t@649@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@650@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@651@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 5
; [then-branch: 289 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), $q3@650@01), $q4@651@01)) | live]
; [else-branch: 289 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), $q3@650@01), $q4@651@01) | live]
(push) ; 6
; [then-branch: 289 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), $q3@650@01), $q4@651@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@650@01) $q4@651@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 289 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), $q3@650@01), $q4@651@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@650@01) $q4@651@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@650@01) $q4@651@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@650@01) $q4@651@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@651@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@650@01) $q4@651@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@650@01) $q4@651@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@650@01) $q4@651@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1325@131@1325@597-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@650@01 Int)) (!
  (forall (($q4@651@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@650@01) $q4@651@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@650@01) $q4@651@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@650@01) $q4@651@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1325@131@1325@597-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@650@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1325@11@1325@598-aux|)))
(assert (forall (($q3@650@01 Int)) (!
  (forall (($q4@651@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@650@01) $q4@651@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@650@01) $q4@651@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@650@01) $q4@651@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1325@131@1325@597|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@650@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1325@11@1325@598|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@652@01 $Snap)
(assert (= $t@652@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@653@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@654@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@653@01 Int)) (!
  (forall (($q4@654@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@653@01) $q4@654@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@653@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@653@01) $q4@654@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1326@131@1326@505|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) $q3@653@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1326@11@1326@506|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@655@01 $Snap)
(assert (= $t@655@01 ($Snap.combine ($Snap.first $t@655@01) ($Snap.second $t@655@01))))
(assert (= ($Snap.first $t@655@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@629@01 5))))
(assert (= ($Snap.second $t@655@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@629@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@656@01 $Snap)
(assert (= $t@656@01 ($Snap.combine ($Snap.first $t@656@01) ($Snap.second $t@656@01))))
(assert (= ($Snap.first $t@656@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))
(assert (= ($Snap.second $t@656@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) &&
;   ($struct_get($struct_loc(self, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@657@01 $Snap)
(assert (= $t@657@01 ($Snap.combine ($Snap.first $t@657@01) ($Snap.second $t@657@01))))
(assert (= ($Snap.first $t@657@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 7)): Int)
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@629@01 7))))
(assert (= ($Snap.second $t@657@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@629@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 8)): Int) &&
;   ($struct_get($struct_loc(self, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@658@01 $Snap)
(assert (= $t@658@01 ($Snap.combine ($Snap.first $t@658@01) ($Snap.second $t@658@01))))
(assert (= ($Snap.first $t@658@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@629@01 8))))
(assert (= ($Snap.second $t@658@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@629@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@659@01 $Snap)
(assert (= $t@659@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@660@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(push) ; 4
; [then-branch: 290 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 10)), $q5@660@01)) | live]
; [else-branch: 290 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 10)), $q5@660@01) | live]
(push) ; 5
; [then-branch: 290 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 10)), $q5@660@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 10)) $q5@660@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 290 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 10)), $q5@660@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 10)) $q5@660@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 10)) $q5@660@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 10)) $q5@660@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@660@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 10)) $q5@660@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 10)) $q5@660@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 10)) $q5@660@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1331@11@1331@348-aux|)))
(assert (forall (($q5@660@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 10)) $q5@660@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 10)) $q5@660@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 10)) $q5@660@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1331@11@1331@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $t@661@01 $Snap)
(assert (= $t@661@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $q5@662@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@662@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 10)) $q5@662@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 10)) $q5@662@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1332@11@1332@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@663@01 $Snap)
(assert (= $t@663@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@664@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(push) ; 4
; [then-branch: 291 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 11)), $q6@664@01)) | live]
; [else-branch: 291 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 11)), $q6@664@01) | live]
(push) ; 5
; [then-branch: 291 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 11)), $q6@664@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 11)) $q6@664@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 291 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 11)), $q6@664@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 11)) $q6@664@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 11)) $q6@664@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 11)) $q6@664@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@664@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 11)) $q6@664@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 11)) $q6@664@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 11)) $q6@664@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1333@11@1333@348-aux|)))
(assert (forall (($q6@664@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 11)) $q6@664@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 11)) $q6@664@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 11)) $q6@664@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1333@11@1333@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $t@665@01 $Snap)
(assert (= $t@665@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $q6@666@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
; [eval] ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@666@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 11)) $q6@666@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 11)) $q6@666@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1334@11@1334@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@667@01 $Snap)
(assert (= $t@667@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@629@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@668@01 $Snap)
(assert (= $t@668@01 ($Snap.combine ($Snap.first $t@668@01) ($Snap.second $t@668@01))))
(assert (= ($Snap.first $t@668@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@668@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= l$_from &&
;   l$_from <= 1461501637330902918203684832716283019655932542975
(declare-const $t@669@01 $Snap)
(assert (= $t@669@01 ($Snap.combine ($Snap.first $t@669@01) ($Snap.second $t@669@01))))
(assert (= ($Snap.first $t@669@01) $Snap.unit))
; [eval] 0 <= l$_from
(assert (<= 0 l$_from@620@01))
(assert (= ($Snap.second $t@669@01) $Snap.unit))
; [eval] l$_from <= 1461501637330902918203684832716283019655932542975
(assert (<= l$_from@620@01 1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= l$_to &&
;   l$_to <= 1461501637330902918203684832716283019655932542975
(declare-const $t@670@01 $Snap)
(assert (= $t@670@01 ($Snap.combine ($Snap.first $t@670@01) ($Snap.second $t@670@01))))
(assert (= ($Snap.first $t@670@01) $Snap.unit))
; [eval] 0 <= l$_to
(assert (<= 0 l$_to@621@01))
(assert (= ($Snap.second $t@670@01) $Snap.unit))
; [eval] l$_to <= 1461501637330902918203684832716283019655932542975
(assert (<= l$_to@621@01 1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $unwrap(l$_value) &&
;   $unwrap(l$_value) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@671@01 $Snap)
(assert (= $t@671@01 ($Snap.combine ($Snap.first $t@671@01) ($Snap.second $t@671@01))))
(assert (= ($Snap.first $t@671@01) $Snap.unit))
; [eval] 0 <= $unwrap(l$_value)
; [eval] $unwrap(l$_value)
(assert (<= 0 ($unwrap<Int> l$_value@622@01)))
(assert (= ($Snap.second $t@671@01) $Snap.unit))
; [eval] $unwrap(l$_value) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap(l$_value)
(assert (<=
  ($unwrap<Int> l$_value@622@01)
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@672@01 $Snap)
(assert (= $t@672@01 ($Snap.combine ($Snap.first $t@672@01) ($Snap.second $t@672@01))))
(assert (= ($Snap.first $t@672@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@626@01 0))))
(assert (= ($Snap.second $t@672@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@626@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@673@01 $Snap)
(assert (= $t@673@01 ($Snap.combine ($Snap.first $t@673@01) ($Snap.second $t@673@01))))
(assert (= ($Snap.first $t@673@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@626@01 1))))
(assert (= ($Snap.second $t@673@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@626@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@674@01 $Snap)
(assert (= $t@674@01 ($Snap.combine ($Snap.first $t@674@01) ($Snap.second $t@674@01))))
(assert (= ($Snap.first $t@674@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@626@01 2))))
(assert (= ($Snap.second $t@674@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@626@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@675@01 $Snap)
(assert (= $t@675@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@626@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@676@01 $Snap)
(assert (= $t@676@01 ($Snap.combine ($Snap.first $t@676@01) ($Snap.second $t@676@01))))
(assert (= ($Snap.first $t@676@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@626@01 4))))
(assert (= ($Snap.second $t@676@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@626@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@677@01 $Snap)
(assert (= $t@677@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@626@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@678@01 $Snap)
(assert (= $t@678@01 ($Snap.combine ($Snap.first $t@678@01) ($Snap.second $t@678@01))))
(assert (= ($Snap.first $t@678@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))))
(assert (= ($Snap.second $t@678@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@679@01 $Snap)
(assert (= $t@679@01 ($Snap.combine ($Snap.first $t@679@01) ($Snap.second $t@679@01))))
(assert (= ($Snap.first $t@679@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@625@01 1))))
(assert (= ($Snap.second $t@679@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@625@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@680@01 $Snap)
(assert (= $t@680@01 ($Snap.combine ($Snap.first $t@680@01) ($Snap.second $t@680@01))))
(assert (= ($Snap.first $t@680@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@625@01 2))))
(assert (= ($Snap.second $t@680@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@625@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@681@01 $Snap)
(assert (= $t@681@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@625@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@682@01 $Snap)
(assert (= $t@682@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $t@683@01 $Snap)
(assert (= $t@683@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $a@684@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc(self, 6)): Int)
(declare-const $t@685@01 $Snap)
(assert (= $t@685@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
(declare-const $t@686@01 $Snap)
(assert (= $t@686@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@629@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@687@01 $Snap)
(assert (= $t@687@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@625@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) l$_from@620@01)))
      ($unwrap<Int> l$_value@622@01))
    0))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) l$_from@620@01)))
    ($unwrap<Int> l$_value@622@01))
  0)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 292 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), l$_from@620@01))) - $unwrap[Int](l$_value@622@01) < 0 | live]
; [else-branch: 292 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), l$_from@620@01))) - $unwrap[Int](l$_value@622@01) < 0) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 292 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), l$_from@620@01))) - $unwrap[Int](l$_value@622@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) l$_from@620@01)))
    ($unwrap<Int> l$_value@622@01))
  0))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [exec]
; exhale $unwrap(l$_value) >
;   ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]),
;   l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==>
;   !$succ
; [eval] $unwrap(l$_value) > ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==> !$succ
; [eval] $unwrap(l$_value) > ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] $unwrap(l$_value)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($pre_self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(push) ; 4
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (>
    ($unwrap<Int> l$_value@622@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (>
  ($unwrap<Int> l$_value@622@01)
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))))))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 293 | $unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))) | live]
; [else-branch: 293 | !($unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0)))) | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 293 | $unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0)))]
(assert (>
  ($unwrap<Int> l$_value@622@01)
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
; [eval] !$succ
(pop) ; 5
(push) ; 5
; [else-branch: 293 | !($unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))]
(assert (not
  (>
    ($unwrap<Int> l$_value@622@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))))))
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (>
      ($unwrap<Int> l$_value@622@01)
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
  (>
    ($unwrap<Int> l$_value@622@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))))))
; [then-branch: 294 | False | dead]
; [else-branch: 294 | True | live]
(push) ; 4
; [else-branch: 294 | True]
(pop) ; 4
; [eval] !$succ
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 295 | True | live]
; [else-branch: 295 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 295 | True]
; [exec]
; assert old($succ ==>
;   perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write)
; [eval] old($succ ==> perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write)
; [eval] $succ ==> perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write
(push) ; 5
; [then-branch: 296 | False | dead]
; [else-branch: 296 | True | live]
(push) ; 6
; [else-branch: 296 | True]
(pop) ; 6
(pop) ; 5
; Joined path conditions
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 5
(push) ; 6
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 297 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) != $struct_get[Int]($struct_loc[Int](self@629@01, 6)) | live]
; [else-branch: 297 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) == $struct_get[Int]($struct_loc[Int](self@629@01, 6)) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 297 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) != $struct_get[Int]($struct_loc[Int](self@629@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 6
(push) ; 6
; [else-branch: 297 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) == $struct_get[Int]($struct_loc[Int](self@629@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@688@01 Int)
(declare-const q$b@689@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 298 | !(0 <= q$a@688@01) | live]
; [else-branch: 298 | 0 <= q$a@688@01 | live]
(push) ; 7
; [then-branch: 298 | !(0 <= q$a@688@01)]
(assert (not (<= 0 q$a@688@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 298 | 0 <= q$a@688@01]
(assert (<= 0 q$a@688@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 299 | !(q$a@688@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 299 | q$a@688@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 299 | !(q$a@688@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@688@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 299 | q$a@688@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@688@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 300 | !(0 <= q$b@689@01) | live]
; [else-branch: 300 | 0 <= q$b@689@01 | live]
(push) ; 11
; [then-branch: 300 | !(0 <= q$b@689@01)]
(assert (not (<= 0 q$b@689@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 300 | 0 <= q$b@689@01]
(assert (<= 0 q$b@689@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@689@01) (not (<= 0 q$b@689@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@689@01) (not (<= 0 q$b@689@01))))))
(assert (or
  (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@688@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@688@01)
  (and
    (<= 0 q$a@688@01)
    (=>
      (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@689@01) (not (<= 0 q$b@689@01)))))
    (or
      (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@688@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@688@01) (not (<= 0 q$a@688@01))))
(push) ; 6
; [then-branch: 301 | 0 <= q$a@688@01 && q$a@688@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@689@01 && q$b@689@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 301 | !(0 <= q$a@688@01 && q$a@688@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@689@01 && q$b@689@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 301 | 0 <= q$a@688@01 && q$a@688@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@689@01 && q$b@689@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@688@01)
  (and
    (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@689@01)
      (<= q$b@689@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 8
; [then-branch: 302 | False | dead]
; [else-branch: 302 | True | live]
(push) ; 9
; [else-branch: 302 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 301 | !(0 <= q$a@688@01 && q$a@688@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@689@01 && q$b@689@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@688@01)
    (and
      (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@689@01)
        (<= q$b@689@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@688@01)
    (and
      (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@689@01)
        (<= q$b@689@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@688@01)
    (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@689@01)
    (<= q$b@689@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@688@01)
      (and
        (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@689@01)
          (<= q$b@689@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@688@01)
    (and
      (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@689@01)
        (<= q$b@689@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@688@01 Int) (q$b@689@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@688@01)
      (and
        (<= 0 q$a@688@01)
        (=>
          (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@689@01) (not (<= 0 q$b@689@01)))))
        (or
          (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@688@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@688@01) (not (<= 0 q$a@688@01)))
    (=>
      (and
        (<= 0 q$a@688@01)
        (and
          (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@689@01)
            (<= q$b@689@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@688@01)
        (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@689@01)
        (<= q$b@689@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@688@01)
          (and
            (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@689@01)
              (<= q$b@689@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@688@01)
        (and
          (<= q$a@688@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@689@01)
            (<= q$b@689@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@688@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@689@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1426@17@1426@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@690@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 303 | !(0 <= q$a@690@01) | live]
; [else-branch: 303 | 0 <= q$a@690@01 | live]
(push) ; 7
; [then-branch: 303 | !(0 <= q$a@690@01)]
(assert (not (<= 0 q$a@690@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 303 | 0 <= q$a@690@01]
(assert (<= 0 q$a@690@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@690@01) (not (<= 0 q$a@690@01))))
(push) ; 6
; [then-branch: 304 | 0 <= q$a@690@01 && q$a@690@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 304 | !(0 <= q$a@690@01 && q$a@690@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 304 | 0 <= q$a@690@01 && q$a@690@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@690@01)
  (<= q$a@690@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 305 | False | dead]
; [else-branch: 305 | True | live]
(push) ; 9
; [else-branch: 305 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 304 | !(0 <= q$a@690@01 && q$a@690@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@690@01)
    (<= q$a@690@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@690@01)
      (<= q$a@690@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@690@01)
    (<= q$a@690@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@690@01 Int)) (!
  (and
    (or (<= 0 q$a@690@01) (not (<= 0 q$a@690@01)))
    (or
      (not
        (and
          (<= 0 q$a@690@01)
          (<= q$a@690@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@690@01)
        (<= q$a@690@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@690@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1427@17@1427@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@691@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 306 | !(0 <= q$a@691@01) | live]
; [else-branch: 306 | 0 <= q$a@691@01 | live]
(push) ; 7
; [then-branch: 306 | !(0 <= q$a@691@01)]
(assert (not (<= 0 q$a@691@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 306 | 0 <= q$a@691@01]
(assert (<= 0 q$a@691@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@691@01) (not (<= 0 q$a@691@01))))
(push) ; 6
; [then-branch: 307 | 0 <= q$a@691@01 && q$a@691@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 307 | !(0 <= q$a@691@01 && q$a@691@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 307 | 0 <= q$a@691@01 && q$a@691@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@691@01)
  (<= q$a@691@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 308 | False | dead]
; [else-branch: 308 | True | live]
(push) ; 9
; [else-branch: 308 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 307 | !(0 <= q$a@691@01 && q$a@691@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@691@01)
    (<= q$a@691@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@691@01)
      (<= q$a@691@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@691@01)
    (<= q$a@691@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@691@01 Int)) (!
  (and
    (or (<= 0 q$a@691@01) (not (<= 0 q$a@691@01)))
    (or
      (not
        (and
          (<= 0 q$a@691@01)
          (<= q$a@691@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@691@01)
        (<= q$a@691@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@691@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1428@17@1428@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@692@01 Int)
(declare-const q$b@693@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 309 | !(0 <= q$a@692@01) | live]
; [else-branch: 309 | 0 <= q$a@692@01 | live]
(push) ; 7
; [then-branch: 309 | !(0 <= q$a@692@01)]
(assert (not (<= 0 q$a@692@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 309 | 0 <= q$a@692@01]
(assert (<= 0 q$a@692@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 310 | !(q$a@692@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 310 | q$a@692@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 310 | !(q$a@692@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@692@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 310 | q$a@692@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@692@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 311 | !(0 <= q$b@693@01) | live]
; [else-branch: 311 | 0 <= q$b@693@01 | live]
(push) ; 11
; [then-branch: 311 | !(0 <= q$b@693@01)]
(assert (not (<= 0 q$b@693@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 311 | 0 <= q$b@693@01]
(assert (<= 0 q$b@693@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@693@01) (not (<= 0 q$b@693@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@693@01) (not (<= 0 q$b@693@01))))))
(assert (or
  (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@692@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@692@01)
  (and
    (<= 0 q$a@692@01)
    (=>
      (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@693@01) (not (<= 0 q$b@693@01)))))
    (or
      (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@692@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@692@01) (not (<= 0 q$a@692@01))))
(push) ; 6
; [then-branch: 312 | 0 <= q$a@692@01 && q$a@692@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@693@01 && q$b@693@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 312 | !(0 <= q$a@692@01 && q$a@692@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@693@01 && q$b@693@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 312 | 0 <= q$a@692@01 && q$a@692@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@693@01 && q$b@693@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@692@01)
  (and
    (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@693@01)
      (<= q$b@693@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 8
; [then-branch: 313 | False | dead]
; [else-branch: 313 | True | live]
(push) ; 9
; [else-branch: 313 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 312 | !(0 <= q$a@692@01 && q$a@692@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@693@01 && q$b@693@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@692@01)
    (and
      (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@693@01)
        (<= q$b@693@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@692@01)
    (and
      (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@693@01)
        (<= q$b@693@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@692@01)
    (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@693@01)
    (<= q$b@693@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@692@01)
      (and
        (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@693@01)
          (<= q$b@693@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@692@01)
    (and
      (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@693@01)
        (<= q$b@693@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@692@01 Int) (q$b@693@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@692@01)
      (and
        (<= 0 q$a@692@01)
        (=>
          (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@693@01) (not (<= 0 q$b@693@01)))))
        (or
          (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@692@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@692@01) (not (<= 0 q$a@692@01)))
    (=>
      (and
        (<= 0 q$a@692@01)
        (and
          (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@693@01)
            (<= q$b@693@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@692@01)
        (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@693@01)
        (<= q$b@693@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@692@01)
          (and
            (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@693@01)
              (<= q$b@693@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@692@01)
        (and
          (<= q$a@692@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@693@01)
            (<= q$b@693@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@692@01) q$b@693@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1429@17@1429@847-aux|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@694@01 $Snap)
(assert (= $t@694@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@640@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@695@01 $Struct)
(assert (=
  self@695@01
  ($struct_set<$Struct> self@629@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@629@01 7))
    l$havoc$1@640@01))))
; [exec]
; $contracts := l$havoc$2
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@695@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@695@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@695@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@695@01 3))))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@695@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@695@01 3)))))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 292 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), l$_from@620@01))) - $unwrap[Int](l$_value@622@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) l$_from@620@01)))
      ($unwrap<Int> l$_value@622@01))
    0)))
(pop) ; 3
; [eval] !($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value) < 0)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(push) ; 3
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) l$_from@620@01)))
    ($unwrap<Int> l$_value@622@01))
  0)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) l$_from@620@01)))
      ($unwrap<Int> l$_value@622@01))
    0))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 314 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), l$_from@620@01))) - $unwrap[Int](l$_value@622@01) < 0) | live]
; [else-branch: 314 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), l$_from@620@01))) - $unwrap[Int](l$_value@622@01) < 0 | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 314 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), l$_from@620@01))) - $unwrap[Int](l$_value@622@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) l$_from@620@01)))
      ($unwrap<Int> l$_value@622@01))
    0)))
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) l$_from@620@01)))
      ($unwrap<Int> l$_value@622@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 315 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), l$_from@620@01))) - $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
; [else-branch: 315 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), l$_from@620@01))) - $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
(set-option :timeout 0)
(push) ; 4
; [else-branch: 315 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), l$_from@620@01))) - $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) l$_from@620@01)))
      ($unwrap<Int> l$_value@622@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(pop) ; 4
; [eval] !($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(push) ; 4
(set-option :timeout 10)
(assert (not (>
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) l$_from@620@01)))
    ($unwrap<Int> l$_value@622@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) l$_from@620@01)))
      ($unwrap<Int> l$_value@622@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 316 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), l$_from@620@01))) - $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
; [else-branch: 316 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), l$_from@620@01))) - $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 316 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), l$_from@620@01))) - $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) l$_from@620@01)))
      ($unwrap<Int> l$_value@622@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
; [exec]
; self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;   l$_from, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;   l$_from): Int))) -
;   $unwrap(l$_value)): $Map[Int, Int])): $Struct)
; [eval] ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value)): $Map[Int, Int])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value)): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(declare-const self@696@01 $Struct)
(assert (=
  self@696@01
  ($struct_set<$Struct> self@629@01 3 ($map_set<$Map<Int~_Int>> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) l$_from@620@01 (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) l$_from@620@01)))
    ($unwrap<Int> l$_value@622@01))))))
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@696@01 3)) l$_to@621@01)))
      ($unwrap<Int> l$_value@622@01))
    0))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 317 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@696@01, 3)), l$_to@621@01))) + $unwrap[Int](l$_value@622@01) < 0 | dead]
; [else-branch: 317 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@696@01, 3)), l$_to@621@01))) + $unwrap[Int](l$_value@622@01) < 0) | live]
(set-option :timeout 0)
(push) ; 5
; [else-branch: 317 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@696@01, 3)), l$_to@621@01))) + $unwrap[Int](l$_value@622@01) < 0)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@696@01 3)) l$_to@621@01)))
      ($unwrap<Int> l$_value@622@01))
    0)))
(pop) ; 5
; [eval] !($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) < 0)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(push) ; 5
(set-option :timeout 10)
(assert (not (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@696@01 3)) l$_to@621@01)))
    ($unwrap<Int> l$_value@622@01))
  0)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@696@01 3)) l$_to@621@01)))
      ($unwrap<Int> l$_value@622@01))
    0))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 318 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@696@01, 3)), l$_to@621@01))) + $unwrap[Int](l$_value@622@01) < 0) | live]
; [else-branch: 318 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@696@01, 3)), l$_to@621@01))) + $unwrap[Int](l$_value@622@01) < 0 | dead]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 318 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@696@01, 3)), l$_to@621@01))) + $unwrap[Int](l$_value@622@01) < 0)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@696@01 3)) l$_to@621@01)))
      ($unwrap<Int> l$_value@622@01))
    0)))
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@696@01 3)) l$_to@621@01)))
      ($unwrap<Int> l$_value@622@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (>
  (+
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@696@01 3)) l$_to@621@01)))
    ($unwrap<Int> l$_value@622@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 319 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@696@01, 3)), l$_to@621@01))) + $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | live]
; [else-branch: 319 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@696@01, 3)), l$_to@621@01))) + $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 319 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@696@01, 3)), l$_to@621@01))) + $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935]
(assert (>
  (+
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@696@01 3)) l$_to@621@01)))
    ($unwrap<Int> l$_value@622@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [exec]
; exhale $unwrap(l$_value) >
;   ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]),
;   l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==>
;   !$succ
; [eval] $unwrap(l$_value) > ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==> !$succ
; [eval] $unwrap(l$_value) > ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] $unwrap(l$_value)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($pre_self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(push) ; 7
(push) ; 8
(set-option :timeout 10)
(assert (not (not
  (>
    ($unwrap<Int> l$_value@622@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (>
  ($unwrap<Int> l$_value@622@01)
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 320 | $unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))) | live]
; [else-branch: 320 | !($unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0)))) | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 320 | $unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0)))]
(assert (>
  ($unwrap<Int> l$_value@622@01)
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
; [eval] !$succ
(pop) ; 8
(push) ; 8
; [else-branch: 320 | !($unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))]
(assert (not
  (>
    ($unwrap<Int> l$_value@622@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (>
      ($unwrap<Int> l$_value@622@01)
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
  (>
    ($unwrap<Int> l$_value@622@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))))))
; [then-branch: 321 | False | dead]
; [else-branch: 321 | True | live]
(push) ; 7
; [else-branch: 321 | True]
(pop) ; 7
; [eval] !$succ
(push) ; 7
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 322 | True | live]
; [else-branch: 322 | False | dead]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 322 | True]
; [exec]
; assert old($succ ==>
;   perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write)
; [eval] old($succ ==> perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write)
; [eval] $succ ==> perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write
(push) ; 8
; [then-branch: 323 | False | dead]
; [else-branch: 323 | True | live]
(push) ; 9
; [else-branch: 323 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 8
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 324 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) != $struct_get[Int]($struct_loc[Int](self@629@01, 6)) | live]
; [else-branch: 324 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) == $struct_get[Int]($struct_loc[Int](self@629@01, 6)) | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 324 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) != $struct_get[Int]($struct_loc[Int](self@629@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 9
(push) ; 9
; [else-branch: 324 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) == $struct_get[Int]($struct_loc[Int](self@629@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@697@01 Int)
(declare-const q$b@698@01 Int)
(push) ; 8
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 325 | !(0 <= q$a@697@01) | live]
; [else-branch: 325 | 0 <= q$a@697@01 | live]
(push) ; 10
; [then-branch: 325 | !(0 <= q$a@697@01)]
(assert (not (<= 0 q$a@697@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 325 | 0 <= q$a@697@01]
(assert (<= 0 q$a@697@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 11
; [then-branch: 326 | !(q$a@697@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 326 | q$a@697@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 12
; [then-branch: 326 | !(q$a@697@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@697@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 12
(push) ; 12
; [else-branch: 326 | q$a@697@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@697@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 13
; [then-branch: 327 | !(0 <= q$b@698@01) | live]
; [else-branch: 327 | 0 <= q$b@698@01 | live]
(push) ; 14
; [then-branch: 327 | !(0 <= q$b@698@01)]
(assert (not (<= 0 q$b@698@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 327 | 0 <= q$b@698@01]
(assert (<= 0 q$b@698@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@698@01) (not (<= 0 q$b@698@01))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@698@01) (not (<= 0 q$b@698@01))))))
(assert (or
  (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@697@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@697@01)
  (and
    (<= 0 q$a@697@01)
    (=>
      (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@698@01) (not (<= 0 q$b@698@01)))))
    (or
      (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@697@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@697@01) (not (<= 0 q$a@697@01))))
(push) ; 9
; [then-branch: 328 | 0 <= q$a@697@01 && q$a@697@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@698@01 && q$b@698@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 328 | !(0 <= q$a@697@01 && q$a@697@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@698@01 && q$b@698@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 328 | 0 <= q$a@697@01 && q$a@697@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@698@01 && q$b@698@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@697@01)
  (and
    (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@698@01)
      (<= q$b@698@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 11
; [then-branch: 329 | False | dead]
; [else-branch: 329 | True | live]
(push) ; 12
; [else-branch: 329 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 328 | !(0 <= q$a@697@01 && q$a@697@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@698@01 && q$b@698@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@697@01)
    (and
      (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@698@01)
        (<= q$b@698@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@697@01)
    (and
      (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@698@01)
        (<= q$b@698@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@697@01)
    (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@698@01)
    (<= q$b@698@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@697@01)
      (and
        (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@698@01)
          (<= q$b@698@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@697@01)
    (and
      (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@698@01)
        (<= q$b@698@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@697@01 Int) (q$b@698@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@697@01)
      (and
        (<= 0 q$a@697@01)
        (=>
          (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@698@01) (not (<= 0 q$b@698@01)))))
        (or
          (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@697@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@697@01) (not (<= 0 q$a@697@01)))
    (=>
      (and
        (<= 0 q$a@697@01)
        (and
          (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@698@01)
            (<= q$b@698@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@697@01)
        (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@698@01)
        (<= q$b@698@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@697@01)
          (and
            (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@698@01)
              (<= q$b@698@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@697@01)
        (and
          (<= q$a@697@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@698@01)
            (<= q$b@698@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@697@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@698@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1426@17@1426@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@699@01 Int)
(push) ; 8
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 330 | !(0 <= q$a@699@01) | live]
; [else-branch: 330 | 0 <= q$a@699@01 | live]
(push) ; 10
; [then-branch: 330 | !(0 <= q$a@699@01)]
(assert (not (<= 0 q$a@699@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 330 | 0 <= q$a@699@01]
(assert (<= 0 q$a@699@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@699@01) (not (<= 0 q$a@699@01))))
(push) ; 9
; [then-branch: 331 | 0 <= q$a@699@01 && q$a@699@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 331 | !(0 <= q$a@699@01 && q$a@699@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 331 | 0 <= q$a@699@01 && q$a@699@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@699@01)
  (<= q$a@699@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 11
; [then-branch: 332 | False | dead]
; [else-branch: 332 | True | live]
(push) ; 12
; [else-branch: 332 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 331 | !(0 <= q$a@699@01 && q$a@699@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@699@01)
    (<= q$a@699@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@699@01)
      (<= q$a@699@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@699@01)
    (<= q$a@699@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@699@01 Int)) (!
  (and
    (or (<= 0 q$a@699@01) (not (<= 0 q$a@699@01)))
    (or
      (not
        (and
          (<= 0 q$a@699@01)
          (<= q$a@699@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@699@01)
        (<= q$a@699@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@699@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1427@17@1427@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@700@01 Int)
(push) ; 8
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 333 | !(0 <= q$a@700@01) | live]
; [else-branch: 333 | 0 <= q$a@700@01 | live]
(push) ; 10
; [then-branch: 333 | !(0 <= q$a@700@01)]
(assert (not (<= 0 q$a@700@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 333 | 0 <= q$a@700@01]
(assert (<= 0 q$a@700@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@700@01) (not (<= 0 q$a@700@01))))
(push) ; 9
; [then-branch: 334 | 0 <= q$a@700@01 && q$a@700@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 334 | !(0 <= q$a@700@01 && q$a@700@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 334 | 0 <= q$a@700@01 && q$a@700@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@700@01)
  (<= q$a@700@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 11
; [then-branch: 335 | False | dead]
; [else-branch: 335 | True | live]
(push) ; 12
; [else-branch: 335 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 334 | !(0 <= q$a@700@01 && q$a@700@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@700@01)
    (<= q$a@700@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@700@01)
      (<= q$a@700@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@700@01)
    (<= q$a@700@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@700@01 Int)) (!
  (and
    (or (<= 0 q$a@700@01) (not (<= 0 q$a@700@01)))
    (or
      (not
        (and
          (<= 0 q$a@700@01)
          (<= q$a@700@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@700@01)
        (<= q$a@700@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@700@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1428@17@1428@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@701@01 Int)
(declare-const q$b@702@01 Int)
(push) ; 8
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 336 | !(0 <= q$a@701@01) | live]
; [else-branch: 336 | 0 <= q$a@701@01 | live]
(push) ; 10
; [then-branch: 336 | !(0 <= q$a@701@01)]
(assert (not (<= 0 q$a@701@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 336 | 0 <= q$a@701@01]
(assert (<= 0 q$a@701@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 11
; [then-branch: 337 | !(q$a@701@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 337 | q$a@701@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 12
; [then-branch: 337 | !(q$a@701@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@701@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 12
(push) ; 12
; [else-branch: 337 | q$a@701@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@701@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 13
; [then-branch: 338 | !(0 <= q$b@702@01) | live]
; [else-branch: 338 | 0 <= q$b@702@01 | live]
(push) ; 14
; [then-branch: 338 | !(0 <= q$b@702@01)]
(assert (not (<= 0 q$b@702@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 338 | 0 <= q$b@702@01]
(assert (<= 0 q$b@702@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@702@01) (not (<= 0 q$b@702@01))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@702@01) (not (<= 0 q$b@702@01))))))
(assert (or
  (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@701@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@701@01)
  (and
    (<= 0 q$a@701@01)
    (=>
      (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@702@01) (not (<= 0 q$b@702@01)))))
    (or
      (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@701@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@701@01) (not (<= 0 q$a@701@01))))
(push) ; 9
; [then-branch: 339 | 0 <= q$a@701@01 && q$a@701@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@702@01 && q$b@702@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 339 | !(0 <= q$a@701@01 && q$a@701@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@702@01 && q$b@702@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 339 | 0 <= q$a@701@01 && q$a@701@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@702@01 && q$b@702@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@701@01)
  (and
    (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@702@01)
      (<= q$b@702@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 11
; [then-branch: 340 | False | dead]
; [else-branch: 340 | True | live]
(push) ; 12
; [else-branch: 340 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 339 | !(0 <= q$a@701@01 && q$a@701@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@702@01 && q$b@702@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@701@01)
    (and
      (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@702@01)
        (<= q$b@702@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@701@01)
    (and
      (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@702@01)
        (<= q$b@702@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@701@01)
    (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@702@01)
    (<= q$b@702@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@701@01)
      (and
        (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@702@01)
          (<= q$b@702@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@701@01)
    (and
      (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@702@01)
        (<= q$b@702@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@701@01 Int) (q$b@702@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@701@01)
      (and
        (<= 0 q$a@701@01)
        (=>
          (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@702@01) (not (<= 0 q$b@702@01)))))
        (or
          (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@701@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@701@01) (not (<= 0 q$a@701@01)))
    (=>
      (and
        (<= 0 q$a@701@01)
        (and
          (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@702@01)
            (<= q$b@702@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@701@01)
        (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@702@01)
        (<= q$b@702@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@701@01)
          (and
            (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@702@01)
              (<= q$b@702@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@701@01)
        (and
          (<= q$a@701@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@702@01)
            (<= q$b@702@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@701@01) q$b@702@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1429@17@1429@847-aux|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@703@01 $Snap)
(assert (= $t@703@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@640@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@704@01 $Struct)
(assert (=
  self@704@01
  ($struct_set<$Struct> self@629@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@629@01 7))
    l$havoc$1@640@01))))
; [exec]
; $contracts := l$havoc$2
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 8
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@704@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@704@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@704@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@704@01 3))))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@704@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@704@01 3)))))
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 319 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@696@01, 3)), l$_to@621@01))) + $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@696@01 3)) l$_to@621@01)))
      ($unwrap<Int> l$_value@622@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(pop) ; 6
; [eval] !($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(push) ; 6
(set-option :timeout 10)
(assert (not (>
  (+
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@696@01 3)) l$_to@621@01)))
    ($unwrap<Int> l$_value@622@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@696@01 3)) l$_to@621@01)))
      ($unwrap<Int> l$_value@622@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 341 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@696@01, 3)), l$_to@621@01))) + $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
; [else-branch: 341 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@696@01, 3)), l$_to@621@01))) + $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 341 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@696@01, 3)), l$_to@621@01))) + $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@696@01 3)) l$_to@621@01)))
      ($unwrap<Int> l$_value@622@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
; [exec]
; self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;   l$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;   l$_to): Int))) +
;   $unwrap(l$_value)): $Map[Int, Int])): $Struct)
; [eval] ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)): $Map[Int, Int])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(declare-const self@705@01 $Struct)
(assert (=
  self@705@01
  ($struct_set<$Struct> self@696@01 3 ($map_set<$Map<Int~_Int>> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@696@01 3)) l$_to@621@01 (+
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@696@01 3)) l$_to@621@01)))
    ($unwrap<Int> l$_value@622@01))))))
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)))
; [eval] $wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(push) ; 7
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
      ($unwrap<Int> l$_value@622@01))
    0))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
    ($unwrap<Int> l$_value@622@01))
  0)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 342 | $unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@705@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))) - $unwrap[Int](l$_value@622@01) < 0 | live]
; [else-branch: 342 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@705@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))) - $unwrap[Int](l$_value@622@01) < 0) | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 342 | $unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@705@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))) - $unwrap[Int](l$_value@622@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
    ($unwrap<Int> l$_value@622@01))
  0))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [exec]
; exhale $unwrap(l$_value) >
;   ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]),
;   l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==>
;   !$succ
; [eval] $unwrap(l$_value) > ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==> !$succ
; [eval] $unwrap(l$_value) > ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] $unwrap(l$_value)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($pre_self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(push) ; 8
(push) ; 9
(set-option :timeout 10)
(assert (not (not
  (>
    ($unwrap<Int> l$_value@622@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (>
  ($unwrap<Int> l$_value@622@01)
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 343 | $unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))) | live]
; [else-branch: 343 | !($unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0)))) | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 343 | $unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0)))]
(assert (>
  ($unwrap<Int> l$_value@622@01)
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
; [eval] !$succ
(pop) ; 9
(pop) ; 8
; Joined path conditions
(assert (>
  ($unwrap<Int> l$_value@622@01)
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
; [then-branch: 344 | False | dead]
; [else-branch: 344 | True | live]
(push) ; 8
; [else-branch: 344 | True]
(pop) ; 8
; [eval] !$succ
(push) ; 8
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 345 | True | live]
; [else-branch: 345 | False | dead]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 345 | True]
; [exec]
; assert old($succ ==>
;   perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write)
; [eval] old($succ ==> perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write)
; [eval] $succ ==> perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write
(push) ; 9
; [then-branch: 346 | False | dead]
; [else-branch: 346 | True | live]
(push) ; 10
; [else-branch: 346 | True]
(pop) ; 10
(pop) ; 9
; Joined path conditions
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 9
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 347 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) != $struct_get[Int]($struct_loc[Int](self@629@01, 6)) | live]
; [else-branch: 347 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) == $struct_get[Int]($struct_loc[Int](self@629@01, 6)) | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 347 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) != $struct_get[Int]($struct_loc[Int](self@629@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 10
(push) ; 10
; [else-branch: 347 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) == $struct_get[Int]($struct_loc[Int](self@629@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@706@01 Int)
(declare-const q$b@707@01 Int)
(push) ; 9
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 10
; [then-branch: 348 | !(0 <= q$a@706@01) | live]
; [else-branch: 348 | 0 <= q$a@706@01 | live]
(push) ; 11
; [then-branch: 348 | !(0 <= q$a@706@01)]
(assert (not (<= 0 q$a@706@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 348 | 0 <= q$a@706@01]
(assert (<= 0 q$a@706@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 12
; [then-branch: 349 | !(q$a@706@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 349 | q$a@706@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 13
; [then-branch: 349 | !(q$a@706@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@706@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 13
(push) ; 13
; [else-branch: 349 | q$a@706@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@706@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 14
; [then-branch: 350 | !(0 <= q$b@707@01) | live]
; [else-branch: 350 | 0 <= q$b@707@01 | live]
(push) ; 15
; [then-branch: 350 | !(0 <= q$b@707@01)]
(assert (not (<= 0 q$b@707@01)))
(pop) ; 15
(push) ; 15
; [else-branch: 350 | 0 <= q$b@707@01]
(assert (<= 0 q$b@707@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@707@01) (not (<= 0 q$b@707@01))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@707@01) (not (<= 0 q$b@707@01))))))
(assert (or
  (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@706@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@706@01)
  (and
    (<= 0 q$a@706@01)
    (=>
      (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@707@01) (not (<= 0 q$b@707@01)))))
    (or
      (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@706@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@706@01) (not (<= 0 q$a@706@01))))
(push) ; 10
; [then-branch: 351 | 0 <= q$a@706@01 && q$a@706@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@707@01 && q$b@707@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 351 | !(0 <= q$a@706@01 && q$a@706@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@707@01 && q$b@707@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 11
; [then-branch: 351 | 0 <= q$a@706@01 && q$a@706@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@707@01 && q$b@707@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@706@01)
  (and
    (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@707@01)
      (<= q$b@707@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 12
; [then-branch: 352 | False | dead]
; [else-branch: 352 | True | live]
(push) ; 13
; [else-branch: 352 | True]
(pop) ; 13
(pop) ; 12
; Joined path conditions
(pop) ; 11
(push) ; 11
; [else-branch: 351 | !(0 <= q$a@706@01 && q$a@706@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@707@01 && q$b@707@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@706@01)
    (and
      (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@707@01)
        (<= q$b@707@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@706@01)
    (and
      (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@707@01)
        (<= q$b@707@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@706@01)
    (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@707@01)
    (<= q$b@707@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@706@01)
      (and
        (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@707@01)
          (<= q$b@707@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@706@01)
    (and
      (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@707@01)
        (<= q$b@707@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 9
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@706@01 Int) (q$b@707@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@706@01)
      (and
        (<= 0 q$a@706@01)
        (=>
          (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@707@01) (not (<= 0 q$b@707@01)))))
        (or
          (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@706@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@706@01) (not (<= 0 q$a@706@01)))
    (=>
      (and
        (<= 0 q$a@706@01)
        (and
          (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@707@01)
            (<= q$b@707@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@706@01)
        (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@707@01)
        (<= q$b@707@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@706@01)
          (and
            (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@707@01)
              (<= q$b@707@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@706@01)
        (and
          (<= q$a@706@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@707@01)
            (<= q$b@707@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@706@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@707@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1426@17@1426@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@708@01 Int)
(push) ; 9
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 10
; [then-branch: 353 | !(0 <= q$a@708@01) | live]
; [else-branch: 353 | 0 <= q$a@708@01 | live]
(push) ; 11
; [then-branch: 353 | !(0 <= q$a@708@01)]
(assert (not (<= 0 q$a@708@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 353 | 0 <= q$a@708@01]
(assert (<= 0 q$a@708@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@708@01) (not (<= 0 q$a@708@01))))
(push) ; 10
; [then-branch: 354 | 0 <= q$a@708@01 && q$a@708@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 354 | !(0 <= q$a@708@01 && q$a@708@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 11
; [then-branch: 354 | 0 <= q$a@708@01 && q$a@708@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@708@01)
  (<= q$a@708@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 12
; [then-branch: 355 | False | dead]
; [else-branch: 355 | True | live]
(push) ; 13
; [else-branch: 355 | True]
(pop) ; 13
(pop) ; 12
; Joined path conditions
(pop) ; 11
(push) ; 11
; [else-branch: 354 | !(0 <= q$a@708@01 && q$a@708@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@708@01)
    (<= q$a@708@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@708@01)
      (<= q$a@708@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@708@01)
    (<= q$a@708@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 9
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@708@01 Int)) (!
  (and
    (or (<= 0 q$a@708@01) (not (<= 0 q$a@708@01)))
    (or
      (not
        (and
          (<= 0 q$a@708@01)
          (<= q$a@708@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@708@01)
        (<= q$a@708@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@708@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1427@17@1427@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@709@01 Int)
(push) ; 9
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 10
; [then-branch: 356 | !(0 <= q$a@709@01) | live]
; [else-branch: 356 | 0 <= q$a@709@01 | live]
(push) ; 11
; [then-branch: 356 | !(0 <= q$a@709@01)]
(assert (not (<= 0 q$a@709@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 356 | 0 <= q$a@709@01]
(assert (<= 0 q$a@709@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@709@01) (not (<= 0 q$a@709@01))))
(push) ; 10
; [then-branch: 357 | 0 <= q$a@709@01 && q$a@709@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 357 | !(0 <= q$a@709@01 && q$a@709@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 11
; [then-branch: 357 | 0 <= q$a@709@01 && q$a@709@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@709@01)
  (<= q$a@709@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 12
; [then-branch: 358 | False | dead]
; [else-branch: 358 | True | live]
(push) ; 13
; [else-branch: 358 | True]
(pop) ; 13
(pop) ; 12
; Joined path conditions
(pop) ; 11
(push) ; 11
; [else-branch: 357 | !(0 <= q$a@709@01 && q$a@709@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@709@01)
    (<= q$a@709@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@709@01)
      (<= q$a@709@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@709@01)
    (<= q$a@709@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 9
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@709@01 Int)) (!
  (and
    (or (<= 0 q$a@709@01) (not (<= 0 q$a@709@01)))
    (or
      (not
        (and
          (<= 0 q$a@709@01)
          (<= q$a@709@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@709@01)
        (<= q$a@709@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@709@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1428@17@1428@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@710@01 Int)
(declare-const q$b@711@01 Int)
(push) ; 9
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 10
; [then-branch: 359 | !(0 <= q$a@710@01) | live]
; [else-branch: 359 | 0 <= q$a@710@01 | live]
(push) ; 11
; [then-branch: 359 | !(0 <= q$a@710@01)]
(assert (not (<= 0 q$a@710@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 359 | 0 <= q$a@710@01]
(assert (<= 0 q$a@710@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 12
; [then-branch: 360 | !(q$a@710@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 360 | q$a@710@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 13
; [then-branch: 360 | !(q$a@710@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@710@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 13
(push) ; 13
; [else-branch: 360 | q$a@710@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@710@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 14
; [then-branch: 361 | !(0 <= q$b@711@01) | live]
; [else-branch: 361 | 0 <= q$b@711@01 | live]
(push) ; 15
; [then-branch: 361 | !(0 <= q$b@711@01)]
(assert (not (<= 0 q$b@711@01)))
(pop) ; 15
(push) ; 15
; [else-branch: 361 | 0 <= q$b@711@01]
(assert (<= 0 q$b@711@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@711@01) (not (<= 0 q$b@711@01))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@711@01) (not (<= 0 q$b@711@01))))))
(assert (or
  (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@710@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@710@01)
  (and
    (<= 0 q$a@710@01)
    (=>
      (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@711@01) (not (<= 0 q$b@711@01)))))
    (or
      (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@710@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@710@01) (not (<= 0 q$a@710@01))))
(push) ; 10
; [then-branch: 362 | 0 <= q$a@710@01 && q$a@710@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@711@01 && q$b@711@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 362 | !(0 <= q$a@710@01 && q$a@710@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@711@01 && q$b@711@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 11
; [then-branch: 362 | 0 <= q$a@710@01 && q$a@710@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@711@01 && q$b@711@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@710@01)
  (and
    (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@711@01)
      (<= q$b@711@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 12
; [then-branch: 363 | False | dead]
; [else-branch: 363 | True | live]
(push) ; 13
; [else-branch: 363 | True]
(pop) ; 13
(pop) ; 12
; Joined path conditions
(pop) ; 11
(push) ; 11
; [else-branch: 362 | !(0 <= q$a@710@01 && q$a@710@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@711@01 && q$b@711@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@710@01)
    (and
      (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@711@01)
        (<= q$b@711@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@710@01)
    (and
      (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@711@01)
        (<= q$b@711@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@710@01)
    (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@711@01)
    (<= q$b@711@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@710@01)
      (and
        (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@711@01)
          (<= q$b@711@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@710@01)
    (and
      (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@711@01)
        (<= q$b@711@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 9
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@710@01 Int) (q$b@711@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@710@01)
      (and
        (<= 0 q$a@710@01)
        (=>
          (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@711@01) (not (<= 0 q$b@711@01)))))
        (or
          (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@710@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@710@01) (not (<= 0 q$a@710@01)))
    (=>
      (and
        (<= 0 q$a@710@01)
        (and
          (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@711@01)
            (<= q$b@711@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@710@01)
        (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@711@01)
        (<= q$b@711@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@710@01)
          (and
            (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@711@01)
              (<= q$b@711@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@710@01)
        (and
          (<= q$a@710@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@711@01)
            (<= q$b@711@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@710@01) q$b@711@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1429@17@1429@847-aux|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@712@01 $Snap)
(assert (= $t@712@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@640@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@713@01 $Struct)
(assert (=
  self@713@01
  ($struct_set<$Struct> self@629@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@629@01 7))
    l$havoc$1@640@01))))
; [exec]
; $contracts := l$havoc$2
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 9
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@713@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@713@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 9
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@713@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@713@01 3))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@713@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@713@01 3)))))
(pop) ; 8
(pop) ; 7
(push) ; 7
; [else-branch: 342 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@705@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))) - $unwrap[Int](l$_value@622@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
      ($unwrap<Int> l$_value@622@01))
    0)))
(pop) ; 7
; [eval] !($unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) < 0)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)))
; [eval] $wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(push) ; 7
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
    ($unwrap<Int> l$_value@622@01))
  0)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
      ($unwrap<Int> l$_value@622@01))
    0))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 364 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@705@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))) - $unwrap[Int](l$_value@622@01) < 0) | live]
; [else-branch: 364 | $unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@705@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))) - $unwrap[Int](l$_value@622@01) < 0 | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 364 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@705@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))) - $unwrap[Int](l$_value@622@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
      ($unwrap<Int> l$_value@622@01))
    0)))
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)))
; [eval] $wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(push) ; 8
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
      ($unwrap<Int> l$_value@622@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 365 | $unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@705@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))) - $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
; [else-branch: 365 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@705@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))) - $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
(set-option :timeout 0)
(push) ; 8
; [else-branch: 365 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@705@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))) - $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
      ($unwrap<Int> l$_value@622@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(pop) ; 8
; [eval] !($unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)))
; [eval] $wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(push) ; 8
(set-option :timeout 10)
(assert (not (>
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
    ($unwrap<Int> l$_value@622@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
      ($unwrap<Int> l$_value@622@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 366 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@705@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))) - $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
; [else-branch: 366 | $unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@705@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))) - $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 366 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@705@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))) - $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
      ($unwrap<Int> l$_value@622@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
; [exec]
; self := ($struct_set(self, 4, ($map_set(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;   l$_from, ($map_set(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;   l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self,
;   4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg,
;   0)): Int)): Int))) -
;   $unwrap(l$_value)): $Map[Int, Int])): $Map[Int, $Map[Int, Int]])): $Struct)
; [eval] ($struct_set(self, 4, ($map_set(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from, ($map_set(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)): $Map[Int, Int])): $Map[Int, $Map[Int, Int]])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from, ($map_set(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)): $Map[Int, Int])): $Map[Int, $Map[Int, Int]])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($map_set(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)): $Map[Int, Int])
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)))
; [eval] $wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(declare-const self@714@01 $Struct)
(assert (=
  self@714@01
  ($struct_set<$Struct> self@705@01 4 ($map_set<$Map<Int~_$Map<Int~_Int>>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01 ($map_set<$Map<Int~_Int>> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)) (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
    ($unwrap<Int> l$_value@622@01)))))))
; [exec]
; inhale acc(e$Transfer(l$_from, l$_to, $unwrap(l$_value)), write)
; [eval] $unwrap(l$_value)
(declare-const $t@715@01 $Snap)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; $res := true
; [exec]
; label return
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not $out_of_gas@638@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not $out_of_gas@638@01))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 367 | $out_of_gas@638@01 | live]
; [else-branch: 367 | !($out_of_gas@638@01) | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 367 | $out_of_gas@638@01]
(assert $out_of_gas@638@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [exec]
; exhale $unwrap(l$_value) >
;   ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]),
;   l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==>
;   !$succ
; [eval] $unwrap(l$_value) > ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==> !$succ
; [eval] $unwrap(l$_value) > ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] $unwrap(l$_value)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($pre_self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(push) ; 10
(push) ; 11
(set-option :timeout 10)
(assert (not (not
  (>
    ($unwrap<Int> l$_value@622@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 368 | $unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))) | dead]
; [else-branch: 368 | !($unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0)))) | live]
(set-option :timeout 0)
(push) ; 11
; [else-branch: 368 | !($unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))]
(assert (not
  (>
    ($unwrap<Int> l$_value@622@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
(assert (not
  (>
    ($unwrap<Int> l$_value@622@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))))))
; [then-branch: 369 | False | dead]
; [else-branch: 369 | True | live]
(push) ; 10
; [else-branch: 369 | True]
(pop) ; 10
; [eval] !$succ
(push) ; 10
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 370 | True | live]
; [else-branch: 370 | False | dead]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 370 | True]
; [exec]
; assert old($succ ==>
;   perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write)
; [eval] old($succ ==> perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write)
; [eval] $succ ==> perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write
(push) ; 11
; [then-branch: 371 | False | dead]
; [else-branch: 371 | True | live]
(push) ; 12
; [else-branch: 371 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 11
(push) ; 12
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 372 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) != $struct_get[Int]($struct_loc[Int](self@629@01, 6)) | live]
; [else-branch: 372 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) == $struct_get[Int]($struct_loc[Int](self@629@01, 6)) | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 372 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) != $struct_get[Int]($struct_loc[Int](self@629@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 12
(push) ; 12
; [else-branch: 372 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) == $struct_get[Int]($struct_loc[Int](self@629@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@716@01 Int)
(declare-const q$b@717@01 Int)
(push) ; 11
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 373 | !(0 <= q$a@716@01) | live]
; [else-branch: 373 | 0 <= q$a@716@01 | live]
(push) ; 13
; [then-branch: 373 | !(0 <= q$a@716@01)]
(assert (not (<= 0 q$a@716@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 373 | 0 <= q$a@716@01]
(assert (<= 0 q$a@716@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 14
; [then-branch: 374 | !(q$a@716@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 374 | q$a@716@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 15
; [then-branch: 374 | !(q$a@716@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@716@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 15
(push) ; 15
; [else-branch: 374 | q$a@716@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@716@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 16
; [then-branch: 375 | !(0 <= q$b@717@01) | live]
; [else-branch: 375 | 0 <= q$b@717@01 | live]
(push) ; 17
; [then-branch: 375 | !(0 <= q$b@717@01)]
(assert (not (<= 0 q$b@717@01)))
(pop) ; 17
(push) ; 17
; [else-branch: 375 | 0 <= q$b@717@01]
(assert (<= 0 q$b@717@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 17
(pop) ; 16
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@717@01) (not (<= 0 q$b@717@01))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@717@01) (not (<= 0 q$b@717@01))))))
(assert (or
  (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@716@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@716@01)
  (and
    (<= 0 q$a@716@01)
    (=>
      (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@717@01) (not (<= 0 q$b@717@01)))))
    (or
      (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@716@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@716@01) (not (<= 0 q$a@716@01))))
(push) ; 12
; [then-branch: 376 | 0 <= q$a@716@01 && q$a@716@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@717@01 && q$b@717@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 376 | !(0 <= q$a@716@01 && q$a@716@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@717@01 && q$b@717@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 376 | 0 <= q$a@716@01 && q$a@716@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@717@01 && q$b@717@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@716@01)
  (and
    (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@717@01)
      (<= q$b@717@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 14
; [then-branch: 377 | False | dead]
; [else-branch: 377 | True | live]
(push) ; 15
; [else-branch: 377 | True]
(pop) ; 15
(pop) ; 14
; Joined path conditions
(pop) ; 13
(push) ; 13
; [else-branch: 376 | !(0 <= q$a@716@01 && q$a@716@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@717@01 && q$b@717@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@716@01)
    (and
      (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@717@01)
        (<= q$b@717@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@716@01)
    (and
      (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@717@01)
        (<= q$b@717@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@716@01)
    (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@717@01)
    (<= q$b@717@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@716@01)
      (and
        (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@717@01)
          (<= q$b@717@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@716@01)
    (and
      (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@717@01)
        (<= q$b@717@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@716@01 Int) (q$b@717@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@716@01)
      (and
        (<= 0 q$a@716@01)
        (=>
          (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@717@01) (not (<= 0 q$b@717@01)))))
        (or
          (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@716@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@716@01) (not (<= 0 q$a@716@01)))
    (=>
      (and
        (<= 0 q$a@716@01)
        (and
          (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@717@01)
            (<= q$b@717@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@716@01)
        (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@717@01)
        (<= q$b@717@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@716@01)
          (and
            (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@717@01)
              (<= q$b@717@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@716@01)
        (and
          (<= q$a@716@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@717@01)
            (<= q$b@717@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@716@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@717@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1426@17@1426@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@718@01 Int)
(push) ; 11
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 378 | !(0 <= q$a@718@01) | live]
; [else-branch: 378 | 0 <= q$a@718@01 | live]
(push) ; 13
; [then-branch: 378 | !(0 <= q$a@718@01)]
(assert (not (<= 0 q$a@718@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 378 | 0 <= q$a@718@01]
(assert (<= 0 q$a@718@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@718@01) (not (<= 0 q$a@718@01))))
(push) ; 12
; [then-branch: 379 | 0 <= q$a@718@01 && q$a@718@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 379 | !(0 <= q$a@718@01 && q$a@718@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 379 | 0 <= q$a@718@01 && q$a@718@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@718@01)
  (<= q$a@718@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 14
; [then-branch: 380 | False | dead]
; [else-branch: 380 | True | live]
(push) ; 15
; [else-branch: 380 | True]
(pop) ; 15
(pop) ; 14
; Joined path conditions
(pop) ; 13
(push) ; 13
; [else-branch: 379 | !(0 <= q$a@718@01 && q$a@718@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@718@01)
    (<= q$a@718@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@718@01)
      (<= q$a@718@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@718@01)
    (<= q$a@718@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@718@01 Int)) (!
  (and
    (or (<= 0 q$a@718@01) (not (<= 0 q$a@718@01)))
    (or
      (not
        (and
          (<= 0 q$a@718@01)
          (<= q$a@718@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@718@01)
        (<= q$a@718@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@718@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1427@17@1427@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@719@01 Int)
(push) ; 11
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 381 | !(0 <= q$a@719@01) | live]
; [else-branch: 381 | 0 <= q$a@719@01 | live]
(push) ; 13
; [then-branch: 381 | !(0 <= q$a@719@01)]
(assert (not (<= 0 q$a@719@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 381 | 0 <= q$a@719@01]
(assert (<= 0 q$a@719@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@719@01) (not (<= 0 q$a@719@01))))
(push) ; 12
; [then-branch: 382 | 0 <= q$a@719@01 && q$a@719@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 382 | !(0 <= q$a@719@01 && q$a@719@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 382 | 0 <= q$a@719@01 && q$a@719@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@719@01)
  (<= q$a@719@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 14
; [then-branch: 383 | False | dead]
; [else-branch: 383 | True | live]
(push) ; 15
; [else-branch: 383 | True]
(pop) ; 15
(pop) ; 14
; Joined path conditions
(pop) ; 13
(push) ; 13
; [else-branch: 382 | !(0 <= q$a@719@01 && q$a@719@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@719@01)
    (<= q$a@719@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@719@01)
      (<= q$a@719@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@719@01)
    (<= q$a@719@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@719@01 Int)) (!
  (and
    (or (<= 0 q$a@719@01) (not (<= 0 q$a@719@01)))
    (or
      (not
        (and
          (<= 0 q$a@719@01)
          (<= q$a@719@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@719@01)
        (<= q$a@719@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@719@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1428@17@1428@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@720@01 Int)
(declare-const q$b@721@01 Int)
(push) ; 11
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 384 | !(0 <= q$a@720@01) | live]
; [else-branch: 384 | 0 <= q$a@720@01 | live]
(push) ; 13
; [then-branch: 384 | !(0 <= q$a@720@01)]
(assert (not (<= 0 q$a@720@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 384 | 0 <= q$a@720@01]
(assert (<= 0 q$a@720@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 14
; [then-branch: 385 | !(q$a@720@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 385 | q$a@720@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 15
; [then-branch: 385 | !(q$a@720@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@720@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 15
(push) ; 15
; [else-branch: 385 | q$a@720@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@720@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 16
; [then-branch: 386 | !(0 <= q$b@721@01) | live]
; [else-branch: 386 | 0 <= q$b@721@01 | live]
(push) ; 17
; [then-branch: 386 | !(0 <= q$b@721@01)]
(assert (not (<= 0 q$b@721@01)))
(pop) ; 17
(push) ; 17
; [else-branch: 386 | 0 <= q$b@721@01]
(assert (<= 0 q$b@721@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 17
(pop) ; 16
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@721@01) (not (<= 0 q$b@721@01))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@721@01) (not (<= 0 q$b@721@01))))))
(assert (or
  (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@720@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@720@01)
  (and
    (<= 0 q$a@720@01)
    (=>
      (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@721@01) (not (<= 0 q$b@721@01)))))
    (or
      (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@720@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@720@01) (not (<= 0 q$a@720@01))))
(push) ; 12
; [then-branch: 387 | 0 <= q$a@720@01 && q$a@720@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@721@01 && q$b@721@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 387 | !(0 <= q$a@720@01 && q$a@720@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@721@01 && q$b@721@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 387 | 0 <= q$a@720@01 && q$a@720@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@721@01 && q$b@721@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@720@01)
  (and
    (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@721@01)
      (<= q$b@721@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 14
; [then-branch: 388 | False | dead]
; [else-branch: 388 | True | live]
(push) ; 15
; [else-branch: 388 | True]
(pop) ; 15
(pop) ; 14
; Joined path conditions
(pop) ; 13
(push) ; 13
; [else-branch: 387 | !(0 <= q$a@720@01 && q$a@720@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@721@01 && q$b@721@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@720@01)
    (and
      (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@721@01)
        (<= q$b@721@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@720@01)
    (and
      (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@721@01)
        (<= q$b@721@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@720@01)
    (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@721@01)
    (<= q$b@721@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@720@01)
      (and
        (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@721@01)
          (<= q$b@721@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@720@01)
    (and
      (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@721@01)
        (<= q$b@721@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@720@01 Int) (q$b@721@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@720@01)
      (and
        (<= 0 q$a@720@01)
        (=>
          (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@721@01) (not (<= 0 q$b@721@01)))))
        (or
          (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@720@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@720@01) (not (<= 0 q$a@720@01)))
    (=>
      (and
        (<= 0 q$a@720@01)
        (and
          (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@721@01)
            (<= q$b@721@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@720@01)
        (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@721@01)
        (<= q$b@721@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@720@01)
          (and
            (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@721@01)
              (<= q$b@721@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@720@01)
        (and
          (<= q$a@720@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@721@01)
            (<= q$b@721@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@720@01) q$b@721@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1429@17@1429@847-aux|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@722@01 $Snap)
(assert (= $t@722@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@640@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@723@01 $Struct)
(assert (=
  self@723@01
  ($struct_set<$Struct> self@629@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@629@01 7))
    l$havoc$1@640@01))))
; [exec]
; $contracts := l$havoc$2
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 11
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@723@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@723@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 11
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@723@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@723@01 3))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@723@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@723@01 3)))))
(pop) ; 10
(pop) ; 9
(push) ; 9
; [else-branch: 367 | !($out_of_gas@638@01)]
(assert (not $out_of_gas@638@01))
(pop) ; 9
; [eval] !$out_of_gas
(push) ; 9
(set-option :timeout 10)
(assert (not $out_of_gas@638@01))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not $out_of_gas@638@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 389 | !($out_of_gas@638@01) | live]
; [else-branch: 389 | $out_of_gas@638@01 | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 389 | !($out_of_gas@638@01)]
(assert (not $out_of_gas@638@01))
; [exec]
; label end
; [exec]
; exhale $unwrap(l$_value) >
;   ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]),
;   l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==>
;   !$succ
; [eval] $unwrap(l$_value) > ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==> !$succ
; [eval] $unwrap(l$_value) > ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] $unwrap(l$_value)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($pre_self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(push) ; 10
(push) ; 11
(set-option :timeout 10)
(assert (not (not
  (>
    ($unwrap<Int> l$_value@622@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 390 | $unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))) | dead]
; [else-branch: 390 | !($unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0)))) | live]
(set-option :timeout 0)
(push) ; 11
; [else-branch: 390 | !($unwrap[Int](l$_value@622@01) > $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))]
(assert (not
  (>
    ($unwrap<Int> l$_value@622@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
(assert (not
  (>
    ($unwrap<Int> l$_value@622@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))))))
(push) ; 10
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 391 | True | live]
; [else-branch: 391 | False | dead]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 391 | True]
; [exec]
; assert $succ ==>
;   perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write
; [eval] $succ ==> perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write
(push) ; 11
(push) ; 12
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 392 | True | live]
; [else-branch: 392 | False | dead]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 392 | True]
; [eval] perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write
; [eval] perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value)))
; [eval] $unwrap(l$_value)
; [eval] 1 * write
(pop) ; 12
(pop) ; 11
; Joined path conditions
; [exec]
; assert ($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 11
(push) ; 12
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@714@01 6)))))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@714@01 6))))))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 393 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) != $struct_get[Int]($struct_loc[Int](self@714@01, 6)) | live]
; [else-branch: 393 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) == $struct_get[Int]($struct_loc[Int](self@714@01, 6)) | live]
(set-option :timeout 0)
(push) ; 12
; [then-branch: 393 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) != $struct_get[Int]($struct_loc[Int](self@714@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@714@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 12
(push) ; 12
; [else-branch: 393 | $struct_get[Int]($struct_loc[Int](msg@625@01, 0)) == $struct_get[Int]($struct_loc[Int](self@714@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@714@01 6))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@714@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@714@01 6))))))
(push) ; 11
(assert (not (=>
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@714@01 6))))
  (>=
    ($struct_get<Int> ($struct_loc<Int> self@629@01 5))
    ($struct_get<Int> ($struct_loc<Int> self@714@01 5))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (=>
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@625@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@714@01 6))))
  (>=
    ($struct_get<Int> ($struct_loc<Int> self@629@01 5))
    ($struct_get<Int> ($struct_loc<Int> self@714@01 5)))))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@724@01 Int)
(declare-const q$b@725@01 Int)
(push) ; 11
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 394 | !(0 <= q$a@724@01) | live]
; [else-branch: 394 | 0 <= q$a@724@01 | live]
(push) ; 13
; [then-branch: 394 | !(0 <= q$a@724@01)]
(assert (not (<= 0 q$a@724@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 394 | 0 <= q$a@724@01]
(assert (<= 0 q$a@724@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 14
; [then-branch: 395 | !(q$a@724@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 395 | q$a@724@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 15
; [then-branch: 395 | !(q$a@724@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@724@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 15
(push) ; 15
; [else-branch: 395 | q$a@724@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@724@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 16
; [then-branch: 396 | !(0 <= q$b@725@01) | live]
; [else-branch: 396 | 0 <= q$b@725@01 | live]
(push) ; 17
; [then-branch: 396 | !(0 <= q$b@725@01)]
(assert (not (<= 0 q$b@725@01)))
(pop) ; 17
(push) ; 17
; [else-branch: 396 | 0 <= q$b@725@01]
(assert (<= 0 q$b@725@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 17
(pop) ; 16
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@725@01) (not (<= 0 q$b@725@01))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@725@01) (not (<= 0 q$b@725@01))))))
(assert (or
  (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@724@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@724@01)
  (and
    (<= 0 q$a@724@01)
    (=>
      (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@725@01) (not (<= 0 q$b@725@01)))))
    (or
      (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@724@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@724@01) (not (<= 0 q$a@724@01))))
(push) ; 12
; [then-branch: 397 | 0 <= q$a@724@01 && q$a@724@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@725@01 && q$b@725@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 397 | !(0 <= q$a@724@01 && q$a@724@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@725@01 && q$b@725@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 397 | 0 <= q$a@724@01 && q$a@724@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@725@01 && q$b@725@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@724@01)
  (and
    (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@725@01)
      (<= q$b@725@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 14
; [then-branch: 398 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@724@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@724@01)) | live]
; [else-branch: 398 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@724@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@724@01) | live]
(push) ; 15
; [then-branch: 398 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@724@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@724@01))]
(assert (not
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))))
(pop) ; 15
(push) ; 15
; [else-branch: 398 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@724@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@724@01)]
(assert (>
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))
  (not
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01)))))
(push) ; 14
; [then-branch: 399 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@724@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@724@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$b@725@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$b@725@01) | live]
; [else-branch: 399 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@724@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@724@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$b@725@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$b@725@01)) | live]
(push) ; 15
; [then-branch: 399 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@724@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@724@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$b@725@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$b@725@01)]
(assert (and
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@725@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@725@01))))
; [eval] perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] 1 * write
(pop) ; 15
(push) ; 15
; [else-branch: 399 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@724@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@724@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$b@725@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$b@725@01))]
(assert (not
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@725@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@725@01)))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@725@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@725@01))))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@725@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@725@01)))))
(pop) ; 13
(push) ; 13
; [else-branch: 397 | !(0 <= q$a@724@01 && q$a@724@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@725@01 && q$b@725@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@724@01)
    (and
      (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@725@01)
        (<= q$b@725@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@724@01)
    (and
      (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@725@01)
        (<= q$b@725@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@724@01)
    (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@725@01)
    (<= q$b@725@01 1461501637330902918203684832716283019655932542975)
    (or
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))
      (not
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))))
    (or
      (not
        (and
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@725@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@725@01))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@725@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@725@01)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@724@01)
      (and
        (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@725@01)
          (<= q$b@725@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@724@01)
    (and
      (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@725@01)
        (<= q$b@725@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@724@01 Int) (q$b@725@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@724@01)
      (and
        (<= 0 q$a@724@01)
        (=>
          (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@725@01) (not (<= 0 q$b@725@01)))))
        (or
          (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@724@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@724@01) (not (<= 0 q$a@724@01)))
    (=>
      (and
        (<= 0 q$a@724@01)
        (and
          (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@725@01)
            (<= q$b@725@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@724@01)
        (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@725@01)
        (<= q$b@725@01 1461501637330902918203684832716283019655932542975)
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@725@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@725@01))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@725@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@725@01))))))
    (or
      (not
        (and
          (<= 0 q$a@724@01)
          (and
            (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@725@01)
              (<= q$b@725@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@724@01)
        (and
          (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@725@01)
            (<= q$b@725@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@725@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1419@13@1419@853-aux|)))
(push) ; 11
(assert (not (forall ((q$a@724@01 Int) (q$b@725@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@724@01)
        (and
          (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@725@01)
            (<= q$b@725@01 1461501637330902918203684832716283019655932542975))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@725@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@725@01))))
    (=
      (ite
        (and
          (= q$b@725@01 l$_from@620@01)
          (= q$a@724@01 l$_to@621@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))
            ($unwrap<Int> l$_value@622@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@725@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1419@13@1419@853|))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@724@01 Int) (q$b@725@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@724@01)
        (and
          (<= q$a@724@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@725@01)
            (<= q$b@725@01 1461501637330902918203684832716283019655932542975))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@725@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@725@01))))
    (=
      (ite
        (and
          (= q$b@725@01 l$_from@620@01)
          (= q$a@724@01 l$_to@621@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@724@01))
            ($unwrap<Int> l$_value@622@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@724@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@725@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1419@13@1419@853|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@726@01 Int)
(push) ; 11
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 400 | !(0 <= q$a@726@01) | live]
; [else-branch: 400 | 0 <= q$a@726@01 | live]
(push) ; 13
; [then-branch: 400 | !(0 <= q$a@726@01)]
(assert (not (<= 0 q$a@726@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 400 | 0 <= q$a@726@01]
(assert (<= 0 q$a@726@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@726@01) (not (<= 0 q$a@726@01))))
(push) ; 12
; [then-branch: 401 | 0 <= q$a@726@01 && q$a@726@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 401 | !(0 <= q$a@726@01 && q$a@726@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 401 | 0 <= q$a@726@01 && q$a@726@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@726@01)
  (<= q$a@726@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 14
; [then-branch: 402 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@726@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@726@01)) | live]
; [else-branch: 402 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@726@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@726@01) | live]
(push) ; 15
; [then-branch: 402 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@726@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@726@01))]
(assert (not
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))))
(pop) ; 15
(push) ; 15
; [else-branch: 402 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@726@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@726@01)]
(assert (>
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01)))
; [eval] (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
(declare-const q$b@727@01 Int)
(push) ; 16
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$b
(push) ; 17
; [then-branch: 403 | !(0 <= q$b@727@01) | live]
; [else-branch: 403 | 0 <= q$b@727@01 | live]
(push) ; 18
; [then-branch: 403 | !(0 <= q$b@727@01)]
(assert (not (<= 0 q$b@727@01)))
(pop) ; 18
(push) ; 18
; [else-branch: 403 | 0 <= q$b@727@01]
(assert (<= 0 q$b@727@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 18
(pop) ; 17
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@727@01) (not (<= 0 q$b@727@01))))
(push) ; 17
; [then-branch: 404 | 0 <= q$b@727@01 && q$b@727@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 404 | !(0 <= q$b@727@01 && q$b@727@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 18
; [then-branch: 404 | 0 <= q$b@727@01 && q$b@727@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$b@727@01)
  (<= q$b@727@01 1461501637330902918203684832716283019655932542975)))
; [eval] q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] q$b != q$a
(push) ; 19
; [then-branch: 405 | q$b@727@01 != q$a@726@01 | live]
; [else-branch: 405 | q$b@727@01 == q$a@726@01 | live]
(push) ; 20
; [then-branch: 405 | q$b@727@01 != q$a@726@01]
(assert (not (= q$b@727@01 q$a@726@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 20
(push) ; 20
; [else-branch: 405 | q$b@727@01 == q$a@726@01]
(assert (= q$b@727@01 q$a@726@01))
(pop) ; 20
(pop) ; 19
; Joined path conditions
; Joined path conditions
(assert (or (= q$b@727@01 q$a@726@01) (not (= q$b@727@01 q$a@726@01))))
(pop) ; 18
(push) ; 18
; [else-branch: 404 | !(0 <= q$b@727@01 && q$b@727@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$b@727@01)
    (<= q$b@727@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 18
(pop) ; 17
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$b@727@01)
    (<= q$b@727@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$b@727@01)
    (<= q$b@727@01 1461501637330902918203684832716283019655932542975)
    (or (= q$b@727@01 q$a@726@01) (not (= q$b@727@01 q$a@726@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$b@727@01)
      (<= q$b@727@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$b@727@01)
    (<= q$b@727@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 16
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$b@727@01 Int)) (!
  (and
    (or (<= 0 q$b@727@01) (not (<= 0 q$b@727@01)))
    (=>
      (and
        (<= 0 q$b@727@01)
        (<= q$b@727@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@727@01)
        (<= q$b@727@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@727@01 q$a@726@01) (not (= q$b@727@01 q$a@726@01)))))
    (or
      (not
        (and
          (<= 0 q$b@727@01)
          (<= q$b@727@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@727@01)
        (<= q$b@727@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848-aux|)))
(assert (forall ((q$b@727@01 Int)) (!
  (and
    (or (<= 0 q$b@727@01) (not (<= 0 q$b@727@01)))
    (=>
      (and
        (<= 0 q$b@727@01)
        (<= q$b@727@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@727@01)
        (<= q$b@727@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@727@01 q$a@726@01) (not (= q$b@727@01 q$a@726@01)))))
    (or
      (not
        (and
          (<= 0 q$b@727@01)
          (<= q$b@727@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@727@01)
        (<= q$b@727@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848-aux|)))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (=>
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
    (forall ((q$b@727@01 Int)) (!
      (and
        (or (<= 0 q$b@727@01) (not (<= 0 q$b@727@01)))
        (=>
          (and
            (<= 0 q$b@727@01)
            (<= q$b@727@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@727@01)
            (<= q$b@727@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@727@01 q$a@726@01) (not (= q$b@727@01 q$a@726@01)))))
        (or
          (not
            (and
              (<= 0 q$b@727@01)
              (<= q$b@727@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@727@01)
            (<= q$b@727@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848-aux|))
    (forall ((q$b@727@01 Int)) (!
      (and
        (or (<= 0 q$b@727@01) (not (<= 0 q$b@727@01)))
        (=>
          (and
            (<= 0 q$b@727@01)
            (<= q$b@727@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@727@01)
            (<= q$b@727@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@727@01 q$a@726@01) (not (= q$b@727@01 q$a@726@01)))))
        (or
          (not
            (and
              (<= 0 q$b@727@01)
              (<= q$b@727@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@727@01)
            (<= q$b@727@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848-aux|)))))
(assert (or
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
  (not
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01)))))
(push) ; 14
; [then-branch: 406 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@726@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@726@01) && QA q$b@727@01 :: 0 <= q$b@727@01 && q$b@727@01 <= 1461501637330902918203684832716283019655932542975 && q$b@727@01 != q$a@726@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$b@727@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$b@727@01) | live]
; [else-branch: 406 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@726@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@726@01) && QA q$b@727@01 :: 0 <= q$b@727@01 && q$b@727@01 <= 1461501637330902918203684832716283019655932542975 && q$b@727@01 != q$a@726@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$b@727@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$b@727@01)) | live]
(push) ; 15
; [then-branch: 406 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@726@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@726@01) && QA q$b@727@01 :: 0 <= q$b@727@01 && q$b@727@01 <= 1461501637330902918203684832716283019655932542975 && q$b@727@01 != q$a@726@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$b@727@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$b@727@01)]
(assert (and
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
  (forall ((q$b@727@01 Int)) (!
    (=>
      (and
        (and
          (<= 0 q$b@727@01)
          (<= q$b@727@01 1461501637330902918203684832716283019655932542975))
        (not (= q$b@727@01 q$a@726@01)))
      (=
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01)))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848|))))
; [eval] perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] 1 * write
(pop) ; 15
(push) ; 15
; [else-branch: 406 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@726@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@726@01) && QA q$b@727@01 :: 0 <= q$b@727@01 && q$b@727@01 <= 1461501637330902918203684832716283019655932542975 && q$b@727@01 != q$a@726@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$b@727@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$b@727@01))]
(assert (not
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
    (forall ((q$b@727@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@727@01)
            (<= q$b@727@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@727@01 q$a@726@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848|)))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
      (forall ((q$b@727@01 Int)) (!
        (=>
          (and
            (and
              (<= 0 q$b@727@01)
              (<= q$b@727@01 1461501637330902918203684832716283019655932542975))
            (not (= q$b@727@01 q$a@726@01)))
          (=
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01)))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848|))))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
    (forall ((q$b@727@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@727@01)
            (<= q$b@727@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@727@01 q$a@726@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848|)))))
(pop) ; 13
(push) ; 13
; [else-branch: 401 | !(0 <= q$a@726@01 && q$a@726@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@726@01)
    (<= q$a@726@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@726@01)
    (<= q$a@726@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$a@726@01)
    (<= q$a@726@01 1461501637330902918203684832716283019655932542975)
    (=>
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
        (forall ((q$b@727@01 Int)) (!
          (and
            (or (<= 0 q$b@727@01) (not (<= 0 q$b@727@01)))
            (=>
              (and
                (<= 0 q$b@727@01)
                (<= q$b@727@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@727@01)
                (<= q$b@727@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@727@01 q$a@726@01) (not (= q$b@727@01 q$a@726@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@727@01)
                  (<=
                    q$b@727@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@727@01)
                (<= q$b@727@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848-aux|))
        (forall ((q$b@727@01 Int)) (!
          (and
            (or (<= 0 q$b@727@01) (not (<= 0 q$b@727@01)))
            (=>
              (and
                (<= 0 q$b@727@01)
                (<= q$b@727@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@727@01)
                (<= q$b@727@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@727@01 q$a@726@01) (not (= q$b@727@01 q$a@726@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@727@01)
                  (<=
                    q$b@727@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@727@01)
                (<= q$b@727@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848-aux|))))
    (or
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
      (not
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))))
    (or
      (not
        (and
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
          (forall ((q$b@727@01 Int)) (!
            (=>
              (and
                (and
                  (<= 0 q$b@727@01)
                  (<=
                    q$b@727@01
                    1461501637330902918203684832716283019655932542975))
                (not (= q$b@727@01 q$a@726@01)))
              (=
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01)))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848|))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
        (forall ((q$b@727@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@727@01)
                (<= q$b@727@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@727@01 q$a@726@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848|)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@726@01)
      (<= q$a@726@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@726@01)
    (<= q$a@726@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@726@01 Int)) (!
  (and
    (or (<= 0 q$a@726@01) (not (<= 0 q$a@726@01)))
    (=>
      (and
        (<= 0 q$a@726@01)
        (<= q$a@726@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@726@01)
        (<= q$a@726@01 1461501637330902918203684832716283019655932542975)
        (=>
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
            (forall ((q$b@727@01 Int)) (!
              (and
                (or (<= 0 q$b@727@01) (not (<= 0 q$b@727@01)))
                (=>
                  (and
                    (<= 0 q$b@727@01)
                    (<=
                      q$b@727@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@727@01)
                    (<=
                      q$b@727@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@727@01 q$a@726@01)
                      (not (= q$b@727@01 q$a@726@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@727@01)
                      (<=
                        q$b@727@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@727@01)
                    (<=
                      q$b@727@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848-aux|))
            (forall ((q$b@727@01 Int)) (!
              (and
                (or (<= 0 q$b@727@01) (not (<= 0 q$b@727@01)))
                (=>
                  (and
                    (<= 0 q$b@727@01)
                    (<=
                      q$b@727@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@727@01)
                    (<=
                      q$b@727@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@727@01 q$a@726@01)
                      (not (= q$b@727@01 q$a@726@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@727@01)
                      (<=
                        q$b@727@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@727@01)
                    (<=
                      q$b@727@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848-aux|))))
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
              (forall ((q$b@727@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@727@01)
                      (<=
                        q$b@727@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@727@01 q$a@726@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848|))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
            (forall ((q$b@727@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@727@01)
                    (<=
                      q$b@727@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@727@01 q$a@726@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@726@01)
          (<= q$a@726@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@726@01)
        (<= q$a@726@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@13@1420@1047-aux|)))
(assert (forall ((q$a@726@01 Int)) (!
  (and
    (or (<= 0 q$a@726@01) (not (<= 0 q$a@726@01)))
    (=>
      (and
        (<= 0 q$a@726@01)
        (<= q$a@726@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@726@01)
        (<= q$a@726@01 1461501637330902918203684832716283019655932542975)
        (=>
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
            (forall ((q$b@727@01 Int)) (!
              (and
                (or (<= 0 q$b@727@01) (not (<= 0 q$b@727@01)))
                (=>
                  (and
                    (<= 0 q$b@727@01)
                    (<=
                      q$b@727@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@727@01)
                    (<=
                      q$b@727@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@727@01 q$a@726@01)
                      (not (= q$b@727@01 q$a@726@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@727@01)
                      (<=
                        q$b@727@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@727@01)
                    (<=
                      q$b@727@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848-aux|))
            (forall ((q$b@727@01 Int)) (!
              (and
                (or (<= 0 q$b@727@01) (not (<= 0 q$b@727@01)))
                (=>
                  (and
                    (<= 0 q$b@727@01)
                    (<=
                      q$b@727@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@727@01)
                    (<=
                      q$b@727@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@727@01 q$a@726@01)
                      (not (= q$b@727@01 q$a@726@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@727@01)
                      (<=
                        q$b@727@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@727@01)
                    (<=
                      q$b@727@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848-aux|))))
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
              (forall ((q$b@727@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@727@01)
                      (<=
                        q$b@727@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@727@01 q$a@726@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848|))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
            (forall ((q$b@727@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@727@01)
                    (<=
                      q$b@727@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@727@01 q$a@726@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@726@01)
          (<= q$a@726@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@726@01)
        (<= q$a@726@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@13@1420@1047-aux|)))
(push) ; 11
(assert (not (forall ((q$a@726@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@726@01)
        (<= q$a@726@01 1461501637330902918203684832716283019655932542975))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
        (forall ((q$b@727@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@727@01)
                (<= q$b@727@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@727@01 q$a@726@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848|))))
    (=
      (ite
        (and
          (= q$a@726@01 l$_from@620@01)
          (= 0 l$_to@621@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
            ($unwrap<Int> l$_value@622@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@13@1420@1047|))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@726@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@726@01)
        (<= q$a@726@01 1461501637330902918203684832716283019655932542975))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
        (forall ((q$b@727@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@727@01)
                (<= q$b@727@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@727@01 q$a@726@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@727@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@727@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@425@1420@848|))))
    (=
      (ite
        (and
          (= q$a@726@01 l$_from@620@01)
          (= 0 l$_to@621@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
            ($unwrap<Int> l$_value@622@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@726@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@726@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1420@13@1420@1047|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@728@01 Int)
(push) ; 11
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 407 | !(0 <= q$a@728@01) | live]
; [else-branch: 407 | 0 <= q$a@728@01 | live]
(push) ; 13
; [then-branch: 407 | !(0 <= q$a@728@01)]
(assert (not (<= 0 q$a@728@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 407 | 0 <= q$a@728@01]
(assert (<= 0 q$a@728@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@728@01) (not (<= 0 q$a@728@01))))
(push) ; 12
; [then-branch: 408 | 0 <= q$a@728@01 && q$a@728@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 408 | !(0 <= q$a@728@01 && q$a@728@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 408 | 0 <= q$a@728@01 && q$a@728@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@728@01)
  (<= q$a@728@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 14
; [then-branch: 409 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@728@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@728@01)) | live]
; [else-branch: 409 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@728@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@728@01) | live]
(push) ; 15
; [then-branch: 409 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@728@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@728@01))]
(assert (not
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))))
(pop) ; 15
(push) ; 15
; [else-branch: 409 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@728@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@728@01)]
(assert (<
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01)))
; [eval] (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
(declare-const q$b@729@01 Int)
(push) ; 16
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$b
(push) ; 17
; [then-branch: 410 | !(0 <= q$b@729@01) | live]
; [else-branch: 410 | 0 <= q$b@729@01 | live]
(push) ; 18
; [then-branch: 410 | !(0 <= q$b@729@01)]
(assert (not (<= 0 q$b@729@01)))
(pop) ; 18
(push) ; 18
; [else-branch: 410 | 0 <= q$b@729@01]
(assert (<= 0 q$b@729@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 18
(pop) ; 17
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@729@01) (not (<= 0 q$b@729@01))))
(push) ; 17
; [then-branch: 411 | 0 <= q$b@729@01 && q$b@729@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 411 | !(0 <= q$b@729@01 && q$b@729@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 18
; [then-branch: 411 | 0 <= q$b@729@01 && q$b@729@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$b@729@01)
  (<= q$b@729@01 1461501637330902918203684832716283019655932542975)))
; [eval] q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] q$b != q$a
(push) ; 19
; [then-branch: 412 | q$b@729@01 != q$a@728@01 | live]
; [else-branch: 412 | q$b@729@01 == q$a@728@01 | live]
(push) ; 20
; [then-branch: 412 | q$b@729@01 != q$a@728@01]
(assert (not (= q$b@729@01 q$a@728@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 20
(push) ; 20
; [else-branch: 412 | q$b@729@01 == q$a@728@01]
(assert (= q$b@729@01 q$a@728@01))
(pop) ; 20
(pop) ; 19
; Joined path conditions
; Joined path conditions
(assert (or (= q$b@729@01 q$a@728@01) (not (= q$b@729@01 q$a@728@01))))
(pop) ; 18
(push) ; 18
; [else-branch: 411 | !(0 <= q$b@729@01 && q$b@729@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$b@729@01)
    (<= q$b@729@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 18
(pop) ; 17
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$b@729@01)
    (<= q$b@729@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$b@729@01)
    (<= q$b@729@01 1461501637330902918203684832716283019655932542975)
    (or (= q$b@729@01 q$a@728@01) (not (= q$b@729@01 q$a@728@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$b@729@01)
      (<= q$b@729@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$b@729@01)
    (<= q$b@729@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 16
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$b@729@01 Int)) (!
  (and
    (or (<= 0 q$b@729@01) (not (<= 0 q$b@729@01)))
    (=>
      (and
        (<= 0 q$b@729@01)
        (<= q$b@729@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@729@01)
        (<= q$b@729@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@729@01 q$a@728@01) (not (= q$b@729@01 q$a@728@01)))))
    (or
      (not
        (and
          (<= 0 q$b@729@01)
          (<= q$b@729@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@729@01)
        (<= q$b@729@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848-aux|)))
(assert (forall ((q$b@729@01 Int)) (!
  (and
    (or (<= 0 q$b@729@01) (not (<= 0 q$b@729@01)))
    (=>
      (and
        (<= 0 q$b@729@01)
        (<= q$b@729@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@729@01)
        (<= q$b@729@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@729@01 q$a@728@01) (not (= q$b@729@01 q$a@728@01)))))
    (or
      (not
        (and
          (<= 0 q$b@729@01)
          (<= q$b@729@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@729@01)
        (<= q$b@729@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848-aux|)))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
    (forall ((q$b@729@01 Int)) (!
      (and
        (or (<= 0 q$b@729@01) (not (<= 0 q$b@729@01)))
        (=>
          (and
            (<= 0 q$b@729@01)
            (<= q$b@729@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@729@01)
            (<= q$b@729@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@729@01 q$a@728@01) (not (= q$b@729@01 q$a@728@01)))))
        (or
          (not
            (and
              (<= 0 q$b@729@01)
              (<= q$b@729@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@729@01)
            (<= q$b@729@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848-aux|))
    (forall ((q$b@729@01 Int)) (!
      (and
        (or (<= 0 q$b@729@01) (not (<= 0 q$b@729@01)))
        (=>
          (and
            (<= 0 q$b@729@01)
            (<= q$b@729@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@729@01)
            (<= q$b@729@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@729@01 q$a@728@01) (not (= q$b@729@01 q$a@728@01)))))
        (or
          (not
            (and
              (<= 0 q$b@729@01)
              (<= q$b@729@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@729@01)
            (<= q$b@729@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848-aux|)))))
(assert (or
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
  (not
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01)))))
(push) ; 14
; [then-branch: 413 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@728@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@728@01) && QA q$b@729@01 :: 0 <= q$b@729@01 && q$b@729@01 <= 1461501637330902918203684832716283019655932542975 && q$b@729@01 != q$a@728@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$b@729@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$b@729@01) | live]
; [else-branch: 413 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@728@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@728@01) && QA q$b@729@01 :: 0 <= q$b@729@01 && q$b@729@01 <= 1461501637330902918203684832716283019655932542975 && q$b@729@01 != q$a@728@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$b@729@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$b@729@01)) | live]
(push) ; 15
; [then-branch: 413 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@728@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@728@01) && QA q$b@729@01 :: 0 <= q$b@729@01 && q$b@729@01 <= 1461501637330902918203684832716283019655932542975 && q$b@729@01 != q$a@728@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$b@729@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$b@729@01)]
(assert (and
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
  (forall ((q$b@729@01 Int)) (!
    (=>
      (and
        (and
          (<= 0 q$b@729@01)
          (<= q$b@729@01 1461501637330902918203684832716283019655932542975))
        (not (= q$b@729@01 q$a@728@01)))
      (=
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01)))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848|))))
; [eval] perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] 1 * write
(pop) ; 15
(push) ; 15
; [else-branch: 413 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$a@728@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$a@728@01) && QA q$b@729@01 :: 0 <= q$b@729@01 && q$b@729@01 <= 1461501637330902918203684832716283019655932542975 && q$b@729@01 != q$a@728@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@714@01, 3)), q$b@729@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), q$b@729@01))]
(assert (not
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
    (forall ((q$b@729@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@729@01)
            (<= q$b@729@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@729@01 q$a@728@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848|)))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
      (forall ((q$b@729@01 Int)) (!
        (=>
          (and
            (and
              (<= 0 q$b@729@01)
              (<= q$b@729@01 1461501637330902918203684832716283019655932542975))
            (not (= q$b@729@01 q$a@728@01)))
          (=
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01)))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848|))))
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
    (forall ((q$b@729@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@729@01)
            (<= q$b@729@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@729@01 q$a@728@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848|)))))
(pop) ; 13
(push) ; 13
; [else-branch: 408 | !(0 <= q$a@728@01 && q$a@728@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@728@01)
    (<= q$a@728@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@728@01)
    (<= q$a@728@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$a@728@01)
    (<= q$a@728@01 1461501637330902918203684832716283019655932542975)
    (=>
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
        (forall ((q$b@729@01 Int)) (!
          (and
            (or (<= 0 q$b@729@01) (not (<= 0 q$b@729@01)))
            (=>
              (and
                (<= 0 q$b@729@01)
                (<= q$b@729@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@729@01)
                (<= q$b@729@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@729@01 q$a@728@01) (not (= q$b@729@01 q$a@728@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@729@01)
                  (<=
                    q$b@729@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@729@01)
                (<= q$b@729@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848-aux|))
        (forall ((q$b@729@01 Int)) (!
          (and
            (or (<= 0 q$b@729@01) (not (<= 0 q$b@729@01)))
            (=>
              (and
                (<= 0 q$b@729@01)
                (<= q$b@729@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@729@01)
                (<= q$b@729@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@729@01 q$a@728@01) (not (= q$b@729@01 q$a@728@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@729@01)
                  (<=
                    q$b@729@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@729@01)
                (<= q$b@729@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848-aux|))))
    (or
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
      (not
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))))
    (or
      (not
        (and
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
          (forall ((q$b@729@01 Int)) (!
            (=>
              (and
                (and
                  (<= 0 q$b@729@01)
                  (<=
                    q$b@729@01
                    1461501637330902918203684832716283019655932542975))
                (not (= q$b@729@01 q$a@728@01)))
              (=
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01)))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848|))))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
        (forall ((q$b@729@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@729@01)
                (<= q$b@729@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@729@01 q$a@728@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848|)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@728@01)
      (<= q$a@728@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@728@01)
    (<= q$a@728@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@728@01 Int)) (!
  (and
    (or (<= 0 q$a@728@01) (not (<= 0 q$a@728@01)))
    (=>
      (and
        (<= 0 q$a@728@01)
        (<= q$a@728@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@728@01)
        (<= q$a@728@01 1461501637330902918203684832716283019655932542975)
        (=>
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
            (forall ((q$b@729@01 Int)) (!
              (and
                (or (<= 0 q$b@729@01) (not (<= 0 q$b@729@01)))
                (=>
                  (and
                    (<= 0 q$b@729@01)
                    (<=
                      q$b@729@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@729@01)
                    (<=
                      q$b@729@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@729@01 q$a@728@01)
                      (not (= q$b@729@01 q$a@728@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@729@01)
                      (<=
                        q$b@729@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@729@01)
                    (<=
                      q$b@729@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848-aux|))
            (forall ((q$b@729@01 Int)) (!
              (and
                (or (<= 0 q$b@729@01) (not (<= 0 q$b@729@01)))
                (=>
                  (and
                    (<= 0 q$b@729@01)
                    (<=
                      q$b@729@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@729@01)
                    (<=
                      q$b@729@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@729@01 q$a@728@01)
                      (not (= q$b@729@01 q$a@728@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@729@01)
                      (<=
                        q$b@729@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@729@01)
                    (<=
                      q$b@729@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848-aux|))))
        (or
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
          (not
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))))
        (or
          (not
            (and
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
              (forall ((q$b@729@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@729@01)
                      (<=
                        q$b@729@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@729@01 q$a@728@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848|))))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
            (forall ((q$b@729@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@729@01)
                    (<=
                      q$b@729@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@729@01 q$a@728@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@728@01)
          (<= q$a@728@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@728@01)
        (<= q$a@728@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@13@1421@1047-aux|)))
(assert (forall ((q$a@728@01 Int)) (!
  (and
    (or (<= 0 q$a@728@01) (not (<= 0 q$a@728@01)))
    (=>
      (and
        (<= 0 q$a@728@01)
        (<= q$a@728@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@728@01)
        (<= q$a@728@01 1461501637330902918203684832716283019655932542975)
        (=>
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
            (forall ((q$b@729@01 Int)) (!
              (and
                (or (<= 0 q$b@729@01) (not (<= 0 q$b@729@01)))
                (=>
                  (and
                    (<= 0 q$b@729@01)
                    (<=
                      q$b@729@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@729@01)
                    (<=
                      q$b@729@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@729@01 q$a@728@01)
                      (not (= q$b@729@01 q$a@728@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@729@01)
                      (<=
                        q$b@729@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@729@01)
                    (<=
                      q$b@729@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848-aux|))
            (forall ((q$b@729@01 Int)) (!
              (and
                (or (<= 0 q$b@729@01) (not (<= 0 q$b@729@01)))
                (=>
                  (and
                    (<= 0 q$b@729@01)
                    (<=
                      q$b@729@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@729@01)
                    (<=
                      q$b@729@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@729@01 q$a@728@01)
                      (not (= q$b@729@01 q$a@728@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@729@01)
                      (<=
                        q$b@729@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@729@01)
                    (<=
                      q$b@729@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848-aux|))))
        (or
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
          (not
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))))
        (or
          (not
            (and
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
              (forall ((q$b@729@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@729@01)
                      (<=
                        q$b@729@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@729@01 q$a@728@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848|))))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
            (forall ((q$b@729@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@729@01)
                    (<=
                      q$b@729@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@729@01 q$a@728@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@728@01)
          (<= q$a@728@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@728@01)
        (<= q$a@728@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@13@1421@1047-aux|)))
(push) ; 11
(assert (not (forall ((q$a@728@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@728@01)
        (<= q$a@728@01 1461501637330902918203684832716283019655932542975))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
        (forall ((q$b@729@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@729@01)
                (<= q$b@729@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@729@01 q$a@728@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848|))))
    (=
      (ite
        (and
          (= 0 l$_from@620@01)
          (= q$a@728@01 l$_to@621@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01))
            ($unwrap<Int> l$_value@622@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@13@1421@1047|))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@728@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@728@01)
        (<= q$a@728@01 1461501637330902918203684832716283019655932542975))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
        (forall ((q$b@729@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@729@01)
                (<= q$b@729@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@729@01 q$a@728@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$b@729@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$b@729@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@425@1421@848|))))
    (=
      (ite
        (and
          (= 0 l$_from@620@01)
          (= q$a@728@01 l$_to@621@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01))
            ($unwrap<Int> l$_value@622@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@714@01 3)) q$a@728@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) q$a@728@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1421@13@1421@1047|)))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@730@01 Int)
(declare-const q$b@731@01 Int)
(push) ; 11
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 414 | !(0 <= q$a@730@01) | live]
; [else-branch: 414 | 0 <= q$a@730@01 | live]
(push) ; 13
; [then-branch: 414 | !(0 <= q$a@730@01)]
(assert (not (<= 0 q$a@730@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 414 | 0 <= q$a@730@01]
(assert (<= 0 q$a@730@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 14
; [then-branch: 415 | !(q$a@730@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 415 | q$a@730@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 15
; [then-branch: 415 | !(q$a@730@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@730@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 15
(push) ; 15
; [else-branch: 415 | q$a@730@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@730@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 16
; [then-branch: 416 | !(0 <= q$b@731@01) | live]
; [else-branch: 416 | 0 <= q$b@731@01 | live]
(push) ; 17
; [then-branch: 416 | !(0 <= q$b@731@01)]
(assert (not (<= 0 q$b@731@01)))
(pop) ; 17
(push) ; 17
; [else-branch: 416 | 0 <= q$b@731@01]
(assert (<= 0 q$b@731@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 17
(pop) ; 16
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@731@01) (not (<= 0 q$b@731@01))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@731@01) (not (<= 0 q$b@731@01))))))
(assert (or
  (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@730@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@730@01)
  (and
    (<= 0 q$a@730@01)
    (=>
      (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@731@01) (not (<= 0 q$b@731@01)))))
    (or
      (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@730@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@730@01) (not (<= 0 q$a@730@01))))
(push) ; 12
; [then-branch: 417 | 0 <= q$a@730@01 && q$a@730@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@731@01 && q$b@731@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 417 | !(0 <= q$a@730@01 && q$a@730@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@731@01 && q$b@731@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 417 | 0 <= q$a@730@01 && q$a@730@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@731@01 && q$b@731@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@730@01)
  (and
    (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@731@01)
      (<= q$b@731@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 14
; [then-branch: 418 | $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), q$a@730@01), q$b@731@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@714@01, 4)), q$a@730@01), q$b@731@01) | live]
; [else-branch: 418 | !($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), q$a@730@01), q$b@731@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@714@01, 4)), q$a@730@01), q$b@731@01)) | live]
(push) ; 15
; [then-branch: 418 | $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), q$a@730@01), q$b@731@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@714@01, 4)), q$a@730@01), q$b@731@01)]
(assert (<
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@730@01) q$b@731@01)
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@714@01 4)) q$a@730@01) q$b@731@01)))
; [eval] perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] 1 * write
(pop) ; 15
(push) ; 15
; [else-branch: 418 | !($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@629@01, 4)), q$a@730@01), q$b@731@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@714@01, 4)), q$a@730@01), q$b@731@01))]
(assert (not
  (<
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@730@01) q$b@731@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@714@01 4)) q$a@730@01) q$b@731@01))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@730@01) q$b@731@01)
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@714@01 4)) q$a@730@01) q$b@731@01)))
  (<
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@730@01) q$b@731@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@714@01 4)) q$a@730@01) q$b@731@01))))
(pop) ; 13
(push) ; 13
; [else-branch: 417 | !(0 <= q$a@730@01 && q$a@730@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@731@01 && q$b@731@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@730@01)
    (and
      (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@731@01)
        (<= q$b@731@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@730@01)
    (and
      (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@731@01)
        (<= q$b@731@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@730@01)
    (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@731@01)
    (<= q$b@731@01 1461501637330902918203684832716283019655932542975)
    (or
      (not
        (<
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@730@01) q$b@731@01)
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@714@01 4)) q$a@730@01) q$b@731@01)))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@730@01) q$b@731@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@714@01 4)) q$a@730@01) q$b@731@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@730@01)
      (and
        (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@731@01)
          (<= q$b@731@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@730@01)
    (and
      (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@731@01)
        (<= q$b@731@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@730@01 Int) (q$b@731@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@730@01)
      (and
        (<= 0 q$a@730@01)
        (=>
          (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@731@01) (not (<= 0 q$b@731@01)))))
        (or
          (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@730@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@730@01) (not (<= 0 q$a@730@01)))
    (=>
      (and
        (<= 0 q$a@730@01)
        (and
          (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@731@01)
            (<= q$b@731@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@730@01)
        (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@731@01)
        (<= q$b@731@01 1461501637330902918203684832716283019655932542975)
        (or
          (not
            (<
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@730@01) q$b@731@01)
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@714@01 4)) q$a@730@01) q$b@731@01)))
          (<
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@730@01) q$b@731@01)
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@714@01 4)) q$a@730@01) q$b@731@01)))))
    (or
      (not
        (and
          (<= 0 q$a@730@01)
          (and
            (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@731@01)
              (<= q$b@731@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@730@01)
        (and
          (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@731@01)
            (<= q$b@731@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@714@01 4)) q$a@730@01) q$b@731@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1422@13@1422@843-aux|)))
(assert (forall ((q$a@730@01 Int) (q$b@731@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@730@01)
      (and
        (<= 0 q$a@730@01)
        (=>
          (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@731@01) (not (<= 0 q$b@731@01)))))
        (or
          (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@730@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@730@01) (not (<= 0 q$a@730@01)))
    (=>
      (and
        (<= 0 q$a@730@01)
        (and
          (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@731@01)
            (<= q$b@731@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@730@01)
        (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@731@01)
        (<= q$b@731@01 1461501637330902918203684832716283019655932542975)
        (or
          (not
            (<
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@730@01) q$b@731@01)
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@714@01 4)) q$a@730@01) q$b@731@01)))
          (<
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@730@01) q$b@731@01)
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@714@01 4)) q$a@730@01) q$b@731@01)))))
    (or
      (not
        (and
          (<= 0 q$a@730@01)
          (and
            (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@731@01)
              (<= q$b@731@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@730@01)
        (and
          (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@731@01)
            (<= q$b@731@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@730@01) q$b@731@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1422@13@1422@843-aux|)))
(push) ; 11
(assert (not (forall ((q$a@730@01 Int) (q$b@731@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@730@01)
        (and
          (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@731@01)
            (<= q$b@731@01 1461501637330902918203684832716283019655932542975))))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@730@01) q$b@731@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@714@01 4)) q$a@730@01) q$b@731@01)))
    false)
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@714@01 4)) q$a@730@01) q$b@731@01))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@730@01) q$b@731@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1422@13@1422@843|))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@730@01 Int) (q$b@731@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@730@01)
        (and
          (<= q$a@730@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@731@01)
            (<= q$b@731@01 1461501637330902918203684832716283019655932542975))))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@730@01) q$b@731@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@714@01 4)) q$a@730@01) q$b@731@01)))
    false)
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@714@01 4)) q$a@730@01) q$b@731@01))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@629@01 4)) q$a@730@01) q$b@731@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1422@13@1422@843|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@732@01 $Snap)
(assert (= $t@732@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@640@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@733@01 $Struct)
(assert (=
  self@733@01
  ($struct_set<$Struct> self@714@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@714@01 7))
    l$havoc$1@640@01))))
; [exec]
; $contracts := l$havoc$2
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 11
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@733@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@733@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@629@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 11
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@733@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@733@01 3))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@733@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@733@01 3)))))
(pop) ; 10
; [eval] !$succ
; [then-branch: 419 | False | dead]
; [else-branch: 419 | True | live]
(push) ; 10
; [else-branch: 419 | True]
(pop) ; 10
(pop) ; 9
(push) ; 9
; [else-branch: 389 | $out_of_gas@638@01]
(assert $out_of_gas@638@01)
(pop) ; 9
(pop) ; 8
(pop) ; 7
(push) ; 7
; [else-branch: 364 | $unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@705@01, 4)), l$_from@620@01), $struct_get[Int]($struct_loc[Int](msg@625@01, 0))))) - $unwrap[Int](l$_value@622@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@705@01 4)) l$_from@620@01) ($struct_get<Int> ($struct_loc<Int> msg@625@01 0)))))
    ($unwrap<Int> l$_value@622@01))
  0))
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 341 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@696@01, 3)), l$_to@621@01))) + $unwrap[Int](l$_value@622@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935]
(assert (>
  (+
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@696@01 3)) l$_to@621@01)))
    ($unwrap<Int> l$_value@622@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
(pop) ; 6
(pop) ; 5
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 314 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@629@01, 3)), l$_from@620@01))) - $unwrap[Int](l$_value@622@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@629@01 3)) l$_from@620@01)))
    ($unwrap<Int> l$_value@622@01))
  0))
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$approve ----------
(declare-const l$_spender@734@01 Int)
(declare-const l$_value@735@01 $Int)
(declare-const $succ@736@01 Bool)
(declare-const $res@737@01 Bool)
(declare-const l$_spender@738@01 Int)
(declare-const l$_value@739@01 $Int)
(declare-const $succ@740@01 Bool)
(declare-const $res@741@01 Bool)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@742@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@743@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@744@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@745@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@746@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@747@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@748@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@749@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@750@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@751@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@752@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@753@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@754@01 Bool)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@755@01 Bool)
; [exec]
; var l$havoc: Bool
(declare-const l$havoc@756@01 Bool)
; [exec]
; var l$havoc$1: Int
(declare-const l$havoc$1@757@01 Int)
; [exec]
; var l$havoc$2: $Map[Int, $Struct]
(declare-const l$havoc$2@758@01 $Map<Int~_$Struct>)
; [exec]
; inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
(declare-const $t@759@01 $Snap)
(assert (= $t@759@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 0)): Seq[Int])
; [eval] $struct_loc(self, 0)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@746@01 0))) 64))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
(declare-const $t@760@01 $Snap)
(assert (= $t@760@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 1)): Seq[Int])
; [eval] $struct_loc(self, 1)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@746@01 1))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@761@01 $Snap)
(assert (= $t@761@01 ($Snap.combine ($Snap.first $t@761@01) ($Snap.second $t@761@01))))
(assert (= ($Snap.first $t@761@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@746@01 2))))
(assert (= ($Snap.second $t@761@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@746@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@762@01 $Snap)
(assert (= $t@762@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@763@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 4
; [then-branch: 420 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), $q2@763@01)) | live]
; [else-branch: 420 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), $q2@763@01) | live]
(push) ; 5
; [then-branch: 420 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), $q2@763@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) $q2@763@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 420 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), $q2@763@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) $q2@763@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) $q2@763@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) $q2@763@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@763@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) $q2@763@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) $q2@763@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) $q2@763@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1463@11@1463@345-aux|)))
(assert (forall (($q2@763@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) $q2@763@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) $q2@763@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) $q2@763@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1463@11@1463@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $t@764@01 $Snap)
(assert (= $t@764@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $q2@765@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@765@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) $q2@765@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) $q2@765@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1464@11@1464@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@766@01 $Snap)
(assert (= $t@766@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@767@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@768@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 5
; [then-branch: 421 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@746@01, 4)), $q3@767@01), $q4@768@01)) | live]
; [else-branch: 421 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@746@01, 4)), $q3@767@01), $q4@768@01) | live]
(push) ; 6
; [then-branch: 421 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@746@01, 4)), $q3@767@01), $q4@768@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@767@01) $q4@768@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 421 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@746@01, 4)), $q3@767@01), $q4@768@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@767@01) $q4@768@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@767@01) $q4@768@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@767@01) $q4@768@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@768@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@767@01) $q4@768@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@767@01) $q4@768@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@767@01) $q4@768@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1465@131@1465@597-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@767@01 Int)) (!
  (forall (($q4@768@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@767@01) $q4@768@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@767@01) $q4@768@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@767@01) $q4@768@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1465@131@1465@597-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@767@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1465@11@1465@598-aux|)))
(assert (forall (($q3@767@01 Int)) (!
  (forall (($q4@768@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@767@01) $q4@768@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@767@01) $q4@768@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@767@01) $q4@768@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1465@131@1465@597|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@767@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1465@11@1465@598|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@769@01 $Snap)
(assert (= $t@769@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@770@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@771@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@770@01 Int)) (!
  (forall (($q4@771@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@770@01) $q4@771@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@770@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@770@01) $q4@771@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1466@131@1466@505|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) $q3@770@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1466@11@1466@506|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@772@01 $Snap)
(assert (= $t@772@01 ($Snap.combine ($Snap.first $t@772@01) ($Snap.second $t@772@01))))
(assert (= ($Snap.first $t@772@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@746@01 5))))
(assert (= ($Snap.second $t@772@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@746@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@773@01 $Snap)
(assert (= $t@773@01 ($Snap.combine ($Snap.first $t@773@01) ($Snap.second $t@773@01))))
(assert (= ($Snap.first $t@773@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@746@01 6))))
(assert (= ($Snap.second $t@773@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@746@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) &&
;   ($struct_get($struct_loc(self, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@774@01 $Snap)
(assert (= $t@774@01 ($Snap.combine ($Snap.first $t@774@01) ($Snap.second $t@774@01))))
(assert (= ($Snap.first $t@774@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 7)): Int)
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@746@01 7))))
(assert (= ($Snap.second $t@774@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@746@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 8)): Int) &&
;   ($struct_get($struct_loc(self, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@775@01 $Snap)
(assert (= $t@775@01 ($Snap.combine ($Snap.first $t@775@01) ($Snap.second $t@775@01))))
(assert (= ($Snap.first $t@775@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@746@01 8))))
(assert (= ($Snap.second $t@775@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@746@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@776@01 $Snap)
(assert (= $t@776@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@777@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(push) ; 4
; [then-branch: 422 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 10)), $q5@777@01)) | live]
; [else-branch: 422 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 10)), $q5@777@01) | live]
(push) ; 5
; [then-branch: 422 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 10)), $q5@777@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 10)) $q5@777@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 422 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 10)), $q5@777@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 10)) $q5@777@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 10)) $q5@777@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 10)) $q5@777@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@777@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 10)) $q5@777@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 10)) $q5@777@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 10)) $q5@777@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1471@11@1471@348-aux|)))
(assert (forall (($q5@777@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 10)) $q5@777@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 10)) $q5@777@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 10)) $q5@777@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1471@11@1471@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $t@778@01 $Snap)
(assert (= $t@778@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $q5@779@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@779@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 10)) $q5@779@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 10)) $q5@779@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1472@11@1472@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@780@01 $Snap)
(assert (= $t@780@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@781@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(push) ; 4
; [then-branch: 423 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 11)), $q6@781@01)) | live]
; [else-branch: 423 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 11)), $q6@781@01) | live]
(push) ; 5
; [then-branch: 423 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 11)), $q6@781@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 11)) $q6@781@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 423 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 11)), $q6@781@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 11)) $q6@781@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 11)) $q6@781@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 11)) $q6@781@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@781@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 11)) $q6@781@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 11)) $q6@781@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 11)) $q6@781@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1473@11@1473@348-aux|)))
(assert (forall (($q6@781@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 11)) $q6@781@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 11)) $q6@781@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 11)) $q6@781@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1473@11@1473@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $t@782@01 $Snap)
(assert (= $t@782@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $q6@783@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
; [eval] ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@783@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 11)) $q6@783@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 11)) $q6@783@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1474@11@1474@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@784@01 $Snap)
(assert (= $t@784@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@746@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@785@01 $Snap)
(assert (= $t@785@01 ($Snap.combine ($Snap.first $t@785@01) ($Snap.second $t@785@01))))
(assert (= ($Snap.first $t@785@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@785@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= l$_spender &&
;   l$_spender <= 1461501637330902918203684832716283019655932542975
(declare-const $t@786@01 $Snap)
(assert (= $t@786@01 ($Snap.combine ($Snap.first $t@786@01) ($Snap.second $t@786@01))))
(assert (= ($Snap.first $t@786@01) $Snap.unit))
; [eval] 0 <= l$_spender
(assert (<= 0 l$_spender@738@01))
(assert (= ($Snap.second $t@786@01) $Snap.unit))
; [eval] l$_spender <= 1461501637330902918203684832716283019655932542975
(assert (<= l$_spender@738@01 1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $unwrap(l$_value) &&
;   $unwrap(l$_value) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@787@01 $Snap)
(assert (= $t@787@01 ($Snap.combine ($Snap.first $t@787@01) ($Snap.second $t@787@01))))
(assert (= ($Snap.first $t@787@01) $Snap.unit))
; [eval] 0 <= $unwrap(l$_value)
; [eval] $unwrap(l$_value)
(assert (<= 0 ($unwrap<Int> l$_value@739@01)))
(assert (= ($Snap.second $t@787@01) $Snap.unit))
; [eval] $unwrap(l$_value) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap(l$_value)
(assert (<=
  ($unwrap<Int> l$_value@739@01)
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@788@01 $Snap)
(assert (= $t@788@01 ($Snap.combine ($Snap.first $t@788@01) ($Snap.second $t@788@01))))
(assert (= ($Snap.first $t@788@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@743@01 0))))
(assert (= ($Snap.second $t@788@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@743@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@789@01 $Snap)
(assert (= $t@789@01 ($Snap.combine ($Snap.first $t@789@01) ($Snap.second $t@789@01))))
(assert (= ($Snap.first $t@789@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@743@01 1))))
(assert (= ($Snap.second $t@789@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@743@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@790@01 $Snap)
(assert (= $t@790@01 ($Snap.combine ($Snap.first $t@790@01) ($Snap.second $t@790@01))))
(assert (= ($Snap.first $t@790@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@743@01 2))))
(assert (= ($Snap.second $t@790@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@743@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@791@01 $Snap)
(assert (= $t@791@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@743@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@792@01 $Snap)
(assert (= $t@792@01 ($Snap.combine ($Snap.first $t@792@01) ($Snap.second $t@792@01))))
(assert (= ($Snap.first $t@792@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@743@01 4))))
(assert (= ($Snap.second $t@792@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@743@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@793@01 $Snap)
(assert (= $t@793@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@743@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@794@01 $Snap)
(assert (= $t@794@01 ($Snap.combine ($Snap.first $t@794@01) ($Snap.second $t@794@01))))
(assert (= ($Snap.first $t@794@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))))
(assert (= ($Snap.second $t@794@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@795@01 $Snap)
(assert (= $t@795@01 ($Snap.combine ($Snap.first $t@795@01) ($Snap.second $t@795@01))))
(assert (= ($Snap.first $t@795@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@742@01 1))))
(assert (= ($Snap.second $t@795@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@742@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@796@01 $Snap)
(assert (= $t@796@01 ($Snap.combine ($Snap.first $t@796@01) ($Snap.second $t@796@01))))
(assert (= ($Snap.first $t@796@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@742@01 2))))
(assert (= ($Snap.second $t@796@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@742@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@797@01 $Snap)
(assert (= $t@797@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@742@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@798@01 $Snap)
(assert (= $t@798@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@742@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $t@799@01 $Snap)
(assert (= $t@799@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $a@800@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc(self, 6)): Int)
(declare-const $t@801@01 $Snap)
(assert (= $t@801@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
(declare-const $t@802@01 $Snap)
(assert (= $t@802@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@746@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@803@01 $Snap)
(assert (= $t@803@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@742@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 4, ($map_set(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;   ($struct_get($struct_loc(msg, 0)): Int), ($map_set(($map_get(($struct_get($struct_loc(self,
;   4)): $Map[Int, $Map[Int, Int]]), ($struct_get($struct_loc(msg, 0)): Int)): $Map[Int, Int]),
;   l$_spender, $unwrap(l$_value)): $Map[Int, Int])): $Map[Int, $Map[Int, Int]])): $Struct)
; [eval] ($struct_set(self, 4, ($map_set(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), ($struct_get($struct_loc(msg, 0)): Int), ($map_set(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), ($struct_get($struct_loc(msg, 0)): Int)): $Map[Int, Int]), l$_spender, $unwrap(l$_value)): $Map[Int, Int])): $Map[Int, $Map[Int, Int]])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), ($struct_get($struct_loc(msg, 0)): Int), ($map_set(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), ($struct_get($struct_loc(msg, 0)): Int)): $Map[Int, Int]), l$_spender, $unwrap(l$_value)): $Map[Int, Int])): $Map[Int, $Map[Int, Int]])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($map_set(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), ($struct_get($struct_loc(msg, 0)): Int)): $Map[Int, Int]), l$_spender, $unwrap(l$_value)): $Map[Int, Int])
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), ($struct_get($struct_loc(msg, 0)): Int)): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(declare-const self@804@01 $Struct)
(assert (=
  self@804@01
  ($struct_set<$Struct> self@746@01 4 ($map_set<$Map<Int~_$Map<Int~_Int>>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) ($struct_get<Int> ($struct_loc<Int> msg@742@01 0)) ($map_set<$Map<Int~_Int>> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))) l$_spender@738@01 ($unwrap<Int> l$_value@739@01))))))
; [exec]
; inhale acc(e$Approval(($struct_get($struct_loc(msg, 0)): Int), l$_spender, $unwrap(l$_value)), write)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(declare-const $t@805@01 $Snap)
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; $res := true
; [exec]
; label return
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not $out_of_gas@755@01)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not $out_of_gas@755@01))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 424 | $out_of_gas@755@01 | live]
; [else-branch: 424 | !($out_of_gas@755@01) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 424 | $out_of_gas@755@01]
(assert $out_of_gas@755@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; $res := l$havoc
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [then-branch: 425 | False | dead]
; [else-branch: 425 | True | live]
(push) ; 4
; [else-branch: 425 | True]
(pop) ; 4
; [eval] !$succ
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 426 | True | live]
; [else-branch: 426 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 426 | True]
; [exec]
; assert old($succ ==>
;   perm(e$Approval(($struct_get($struct_loc(msg, 0)): Int), l$_spender, $unwrap(l$_value))) ==
;   1 * write)
; [eval] old($succ ==> perm(e$Approval(($struct_get($struct_loc(msg, 0)): Int), l$_spender, $unwrap(l$_value))) == 1 * write)
; [eval] $succ ==> perm(e$Approval(($struct_get($struct_loc(msg, 0)): Int), l$_spender, $unwrap(l$_value))) == 1 * write
(push) ; 5
; [then-branch: 427 | False | dead]
; [else-branch: 427 | True | live]
(push) ; 6
; [else-branch: 427 | True]
(pop) ; 6
(pop) ; 5
; Joined path conditions
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 5
(push) ; 6
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@746@01 6)))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@746@01 6))))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 428 | $struct_get[Int]($struct_loc[Int](msg@742@01, 0)) != $struct_get[Int]($struct_loc[Int](self@746@01, 6)) | live]
; [else-branch: 428 | $struct_get[Int]($struct_loc[Int](msg@742@01, 0)) == $struct_get[Int]($struct_loc[Int](self@746@01, 6)) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 428 | $struct_get[Int]($struct_loc[Int](msg@742@01, 0)) != $struct_get[Int]($struct_loc[Int](self@746@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@746@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 6
(push) ; 6
; [else-branch: 428 | $struct_get[Int]($struct_loc[Int](msg@742@01, 0)) == $struct_get[Int]($struct_loc[Int](self@746@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@746@01 6))))
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@746@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@746@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@806@01 Int)
(declare-const q$b@807@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 429 | !(0 <= q$a@806@01) | live]
; [else-branch: 429 | 0 <= q$a@806@01 | live]
(push) ; 7
; [then-branch: 429 | !(0 <= q$a@806@01)]
(assert (not (<= 0 q$a@806@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 429 | 0 <= q$a@806@01]
(assert (<= 0 q$a@806@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 430 | !(q$a@806@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 430 | q$a@806@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 430 | !(q$a@806@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@806@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 430 | q$a@806@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@806@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 431 | !(0 <= q$b@807@01) | live]
; [else-branch: 431 | 0 <= q$b@807@01 | live]
(push) ; 11
; [then-branch: 431 | !(0 <= q$b@807@01)]
(assert (not (<= 0 q$b@807@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 431 | 0 <= q$b@807@01]
(assert (<= 0 q$b@807@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@807@01) (not (<= 0 q$b@807@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@807@01) (not (<= 0 q$b@807@01))))))
(assert (or
  (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@806@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@806@01)
  (and
    (<= 0 q$a@806@01)
    (=>
      (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@807@01) (not (<= 0 q$b@807@01)))))
    (or
      (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@806@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@806@01) (not (<= 0 q$a@806@01))))
(push) ; 6
; [then-branch: 432 | 0 <= q$a@806@01 && q$a@806@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@807@01 && q$b@807@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 432 | !(0 <= q$a@806@01 && q$a@806@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@807@01 && q$b@807@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 432 | 0 <= q$a@806@01 && q$a@806@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@807@01 && q$b@807@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@806@01)
  (and
    (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@807@01)
      (<= q$b@807@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 8
; [then-branch: 433 | False | dead]
; [else-branch: 433 | True | live]
(push) ; 9
; [else-branch: 433 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 432 | !(0 <= q$a@806@01 && q$a@806@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@807@01 && q$b@807@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@806@01)
    (and
      (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@807@01)
        (<= q$b@807@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@806@01)
    (and
      (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@807@01)
        (<= q$b@807@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@806@01)
    (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@807@01)
    (<= q$b@807@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@806@01)
      (and
        (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@807@01)
          (<= q$b@807@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@806@01)
    (and
      (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@807@01)
        (<= q$b@807@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@806@01 Int) (q$b@807@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@806@01)
      (and
        (<= 0 q$a@806@01)
        (=>
          (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@807@01) (not (<= 0 q$b@807@01)))))
        (or
          (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@806@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@806@01) (not (<= 0 q$a@806@01)))
    (=>
      (and
        (<= 0 q$a@806@01)
        (and
          (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@807@01)
            (<= q$b@807@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@806@01)
        (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@807@01)
        (<= q$b@807@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@806@01)
          (and
            (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@807@01)
              (<= q$b@807@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@806@01)
        (and
          (<= q$a@806@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@807@01)
            (<= q$b@807@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@806@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@807@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1540@17@1540@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@808@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 434 | !(0 <= q$a@808@01) | live]
; [else-branch: 434 | 0 <= q$a@808@01 | live]
(push) ; 7
; [then-branch: 434 | !(0 <= q$a@808@01)]
(assert (not (<= 0 q$a@808@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 434 | 0 <= q$a@808@01]
(assert (<= 0 q$a@808@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@808@01) (not (<= 0 q$a@808@01))))
(push) ; 6
; [then-branch: 435 | 0 <= q$a@808@01 && q$a@808@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 435 | !(0 <= q$a@808@01 && q$a@808@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 435 | 0 <= q$a@808@01 && q$a@808@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@808@01)
  (<= q$a@808@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 436 | False | dead]
; [else-branch: 436 | True | live]
(push) ; 9
; [else-branch: 436 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 435 | !(0 <= q$a@808@01 && q$a@808@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@808@01)
    (<= q$a@808@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@808@01)
      (<= q$a@808@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@808@01)
    (<= q$a@808@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@808@01 Int)) (!
  (and
    (or (<= 0 q$a@808@01) (not (<= 0 q$a@808@01)))
    (or
      (not
        (and
          (<= 0 q$a@808@01)
          (<= q$a@808@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@808@01)
        (<= q$a@808@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@808@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1541@17@1541@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@809@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 437 | !(0 <= q$a@809@01) | live]
; [else-branch: 437 | 0 <= q$a@809@01 | live]
(push) ; 7
; [then-branch: 437 | !(0 <= q$a@809@01)]
(assert (not (<= 0 q$a@809@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 437 | 0 <= q$a@809@01]
(assert (<= 0 q$a@809@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@809@01) (not (<= 0 q$a@809@01))))
(push) ; 6
; [then-branch: 438 | 0 <= q$a@809@01 && q$a@809@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 438 | !(0 <= q$a@809@01 && q$a@809@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 438 | 0 <= q$a@809@01 && q$a@809@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@809@01)
  (<= q$a@809@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 439 | False | dead]
; [else-branch: 439 | True | live]
(push) ; 9
; [else-branch: 439 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 438 | !(0 <= q$a@809@01 && q$a@809@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@809@01)
    (<= q$a@809@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@809@01)
      (<= q$a@809@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@809@01)
    (<= q$a@809@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@809@01 Int)) (!
  (and
    (or (<= 0 q$a@809@01) (not (<= 0 q$a@809@01)))
    (or
      (not
        (and
          (<= 0 q$a@809@01)
          (<= q$a@809@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@809@01)
        (<= q$a@809@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@809@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1542@17@1542@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@810@01 Int)
(declare-const q$b@811@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 440 | !(0 <= q$a@810@01) | live]
; [else-branch: 440 | 0 <= q$a@810@01 | live]
(push) ; 7
; [then-branch: 440 | !(0 <= q$a@810@01)]
(assert (not (<= 0 q$a@810@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 440 | 0 <= q$a@810@01]
(assert (<= 0 q$a@810@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 441 | !(q$a@810@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 441 | q$a@810@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 441 | !(q$a@810@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@810@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 441 | q$a@810@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@810@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 442 | !(0 <= q$b@811@01) | live]
; [else-branch: 442 | 0 <= q$b@811@01 | live]
(push) ; 11
; [then-branch: 442 | !(0 <= q$b@811@01)]
(assert (not (<= 0 q$b@811@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 442 | 0 <= q$b@811@01]
(assert (<= 0 q$b@811@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@811@01) (not (<= 0 q$b@811@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@811@01) (not (<= 0 q$b@811@01))))))
(assert (or
  (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@810@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@810@01)
  (and
    (<= 0 q$a@810@01)
    (=>
      (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@811@01) (not (<= 0 q$b@811@01)))))
    (or
      (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@810@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@810@01) (not (<= 0 q$a@810@01))))
(push) ; 6
; [then-branch: 443 | 0 <= q$a@810@01 && q$a@810@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@811@01 && q$b@811@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 443 | !(0 <= q$a@810@01 && q$a@810@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@811@01 && q$b@811@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 443 | 0 <= q$a@810@01 && q$a@810@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@811@01 && q$b@811@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@810@01)
  (and
    (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@811@01)
      (<= q$b@811@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 8
; [then-branch: 444 | False | dead]
; [else-branch: 444 | True | live]
(push) ; 9
; [else-branch: 444 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 443 | !(0 <= q$a@810@01 && q$a@810@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@811@01 && q$b@811@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@810@01)
    (and
      (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@811@01)
        (<= q$b@811@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@810@01)
    (and
      (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@811@01)
        (<= q$b@811@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@810@01)
    (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@811@01)
    (<= q$b@811@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@810@01)
      (and
        (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@811@01)
          (<= q$b@811@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@810@01)
    (and
      (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@811@01)
        (<= q$b@811@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@810@01 Int) (q$b@811@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@810@01)
      (and
        (<= 0 q$a@810@01)
        (=>
          (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@811@01) (not (<= 0 q$b@811@01)))))
        (or
          (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@810@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@810@01) (not (<= 0 q$a@810@01)))
    (=>
      (and
        (<= 0 q$a@810@01)
        (and
          (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@811@01)
            (<= q$b@811@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@810@01)
        (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@811@01)
        (<= q$b@811@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@810@01)
          (and
            (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@811@01)
              (<= q$b@811@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@810@01)
        (and
          (<= q$a@810@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@811@01)
            (<= q$b@811@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@810@01) q$b@811@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1543@17@1543@847-aux|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@812@01 $Snap)
(assert (= $t@812@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@757@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@813@01 $Struct)
(assert (=
  self@813@01
  ($struct_set<$Struct> self@746@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@746@01 7))
    l$havoc$1@757@01))))
; [exec]
; $contracts := l$havoc$2
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@813@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@746@01 6)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@813@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@746@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@813@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@813@01 3))))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@813@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@813@01 3)))))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 424 | !($out_of_gas@755@01)]
(assert (not $out_of_gas@755@01))
(pop) ; 3
; [eval] !$out_of_gas
(push) ; 3
(set-option :timeout 10)
(assert (not $out_of_gas@755@01))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not $out_of_gas@755@01)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 445 | !($out_of_gas@755@01) | live]
; [else-branch: 445 | $out_of_gas@755@01 | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 445 | !($out_of_gas@755@01)]
(assert (not $out_of_gas@755@01))
; [exec]
; label end
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 446 | True | live]
; [else-branch: 446 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 446 | True]
; [exec]
; assert $succ ==>
;   perm(e$Approval(($struct_get($struct_loc(msg, 0)): Int), l$_spender, $unwrap(l$_value))) ==
;   1 * write
; [eval] $succ ==> perm(e$Approval(($struct_get($struct_loc(msg, 0)): Int), l$_spender, $unwrap(l$_value))) == 1 * write
(push) ; 5
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 447 | True | live]
; [else-branch: 447 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 447 | True]
; [eval] perm(e$Approval(($struct_get($struct_loc(msg, 0)): Int), l$_spender, $unwrap(l$_value))) == 1 * write
; [eval] perm(e$Approval(($struct_get($struct_loc(msg, 0)): Int), l$_spender, $unwrap(l$_value)))
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
; [eval] 1 * write
(pop) ; 6
(pop) ; 5
; Joined path conditions
; [exec]
; assert ($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 5
(push) ; 6
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@804@01 6)))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@804@01 6))))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 448 | $struct_get[Int]($struct_loc[Int](msg@742@01, 0)) != $struct_get[Int]($struct_loc[Int](self@804@01, 6)) | live]
; [else-branch: 448 | $struct_get[Int]($struct_loc[Int](msg@742@01, 0)) == $struct_get[Int]($struct_loc[Int](self@804@01, 6)) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 448 | $struct_get[Int]($struct_loc[Int](msg@742@01, 0)) != $struct_get[Int]($struct_loc[Int](self@804@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@804@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 6
(push) ; 6
; [else-branch: 448 | $struct_get[Int]($struct_loc[Int](msg@742@01, 0)) == $struct_get[Int]($struct_loc[Int](self@804@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@804@01 6))))
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@804@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@804@01 6))))))
(push) ; 5
(assert (not (=>
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@804@01 6))))
  (>=
    ($struct_get<Int> ($struct_loc<Int> self@746@01 5))
    ($struct_get<Int> ($struct_loc<Int> self@804@01 5))))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=>
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@742@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@804@01 6))))
  (>=
    ($struct_get<Int> ($struct_loc<Int> self@746@01 5))
    ($struct_get<Int> ($struct_loc<Int> self@804@01 5)))))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@814@01 Int)
(declare-const q$b@815@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 449 | !(0 <= q$a@814@01) | live]
; [else-branch: 449 | 0 <= q$a@814@01 | live]
(push) ; 7
; [then-branch: 449 | !(0 <= q$a@814@01)]
(assert (not (<= 0 q$a@814@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 449 | 0 <= q$a@814@01]
(assert (<= 0 q$a@814@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 450 | !(q$a@814@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 450 | q$a@814@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 450 | !(q$a@814@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@814@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 450 | q$a@814@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@814@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 451 | !(0 <= q$b@815@01) | live]
; [else-branch: 451 | 0 <= q$b@815@01 | live]
(push) ; 11
; [then-branch: 451 | !(0 <= q$b@815@01)]
(assert (not (<= 0 q$b@815@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 451 | 0 <= q$b@815@01]
(assert (<= 0 q$b@815@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@815@01) (not (<= 0 q$b@815@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@815@01) (not (<= 0 q$b@815@01))))))
(assert (or
  (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@814@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@814@01)
  (and
    (<= 0 q$a@814@01)
    (=>
      (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@815@01) (not (<= 0 q$b@815@01)))))
    (or
      (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@814@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@814@01) (not (<= 0 q$a@814@01))))
(push) ; 6
; [then-branch: 452 | 0 <= q$a@814@01 && q$a@814@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@815@01 && q$b@815@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 452 | !(0 <= q$a@814@01 && q$a@814@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@815@01 && q$b@815@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 452 | 0 <= q$a@814@01 && q$a@814@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@815@01 && q$b@815@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@814@01)
  (and
    (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@815@01)
      (<= q$b@815@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 8
; [then-branch: 453 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@814@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@814@01)) | live]
; [else-branch: 453 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@814@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@814@01) | live]
(push) ; 9
; [then-branch: 453 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@814@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@814@01))]
(assert (not
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))))
(pop) ; 9
(push) ; 9
; [else-branch: 453 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@814@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@814@01)]
(assert (>
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))
  (not
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01)))))
(push) ; 8
; [then-branch: 454 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@814@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@814@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$b@815@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$b@815@01) | live]
; [else-branch: 454 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@814@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@814@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$b@815@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$b@815@01)) | live]
(push) ; 9
; [then-branch: 454 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@814@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@814@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$b@815@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$b@815@01)]
(assert (and
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@815@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@815@01))))
; [eval] perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] 1 * write
(pop) ; 9
(push) ; 9
; [else-branch: 454 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@814@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@814@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$b@815@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$b@815@01))]
(assert (not
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@815@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@815@01)))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@815@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@815@01))))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@815@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@815@01)))))
(pop) ; 7
(push) ; 7
; [else-branch: 452 | !(0 <= q$a@814@01 && q$a@814@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@815@01 && q$b@815@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@814@01)
    (and
      (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@815@01)
        (<= q$b@815@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@814@01)
    (and
      (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@815@01)
        (<= q$b@815@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@814@01)
    (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@815@01)
    (<= q$b@815@01 1461501637330902918203684832716283019655932542975)
    (or
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))
      (not
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))))
    (or
      (not
        (and
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@815@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@815@01))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@815@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@815@01)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@814@01)
      (and
        (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@815@01)
          (<= q$b@815@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@814@01)
    (and
      (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@815@01)
        (<= q$b@815@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@814@01 Int) (q$b@815@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@814@01)
      (and
        (<= 0 q$a@814@01)
        (=>
          (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@815@01) (not (<= 0 q$b@815@01)))))
        (or
          (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@814@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@814@01) (not (<= 0 q$a@814@01)))
    (=>
      (and
        (<= 0 q$a@814@01)
        (and
          (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@815@01)
            (<= q$b@815@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@814@01)
        (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@815@01)
        (<= q$b@815@01 1461501637330902918203684832716283019655932542975)
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@815@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@815@01))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@815@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@815@01))))))
    (or
      (not
        (and
          (<= 0 q$a@814@01)
          (and
            (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@815@01)
              (<= q$b@815@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@814@01)
        (and
          (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@815@01)
            (<= q$b@815@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@815@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1533@13@1533@853-aux|)))
(push) ; 5
(assert (not (forall ((q$a@814@01 Int) (q$b@815@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@814@01)
        (and
          (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@815@01)
            (<= q$b@815@01 1461501637330902918203684832716283019655932542975))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@815@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@815@01))))
    false)
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@815@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1533@13@1533@853|))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@814@01 Int) (q$b@815@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@814@01)
        (and
          (<= q$a@814@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@815@01)
            (<= q$b@815@01 1461501637330902918203684832716283019655932542975))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@814@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@815@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@815@01))))
    false)
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@814@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@815@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1533@13@1533@853|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@816@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 455 | !(0 <= q$a@816@01) | live]
; [else-branch: 455 | 0 <= q$a@816@01 | live]
(push) ; 7
; [then-branch: 455 | !(0 <= q$a@816@01)]
(assert (not (<= 0 q$a@816@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 455 | 0 <= q$a@816@01]
(assert (<= 0 q$a@816@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@816@01) (not (<= 0 q$a@816@01))))
(push) ; 6
; [then-branch: 456 | 0 <= q$a@816@01 && q$a@816@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 456 | !(0 <= q$a@816@01 && q$a@816@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 456 | 0 <= q$a@816@01 && q$a@816@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@816@01)
  (<= q$a@816@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 457 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@816@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@816@01)) | live]
; [else-branch: 457 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@816@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@816@01) | live]
(push) ; 9
; [then-branch: 457 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@816@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@816@01))]
(assert (not
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))))
(pop) ; 9
(push) ; 9
; [else-branch: 457 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@816@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@816@01)]
(assert (>
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01)))
; [eval] (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
(declare-const q$b@817@01 Int)
(push) ; 10
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$b
(push) ; 11
; [then-branch: 458 | !(0 <= q$b@817@01) | live]
; [else-branch: 458 | 0 <= q$b@817@01 | live]
(push) ; 12
; [then-branch: 458 | !(0 <= q$b@817@01)]
(assert (not (<= 0 q$b@817@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 458 | 0 <= q$b@817@01]
(assert (<= 0 q$b@817@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@817@01) (not (<= 0 q$b@817@01))))
(push) ; 11
; [then-branch: 459 | 0 <= q$b@817@01 && q$b@817@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 459 | !(0 <= q$b@817@01 && q$b@817@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 459 | 0 <= q$b@817@01 && q$b@817@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$b@817@01)
  (<= q$b@817@01 1461501637330902918203684832716283019655932542975)))
; [eval] q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] q$b != q$a
(push) ; 13
; [then-branch: 460 | q$b@817@01 != q$a@816@01 | live]
; [else-branch: 460 | q$b@817@01 == q$a@816@01 | live]
(push) ; 14
; [then-branch: 460 | q$b@817@01 != q$a@816@01]
(assert (not (= q$b@817@01 q$a@816@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 14
(push) ; 14
; [else-branch: 460 | q$b@817@01 == q$a@816@01]
(assert (= q$b@817@01 q$a@816@01))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (= q$b@817@01 q$a@816@01) (not (= q$b@817@01 q$a@816@01))))
(pop) ; 12
(push) ; 12
; [else-branch: 459 | !(0 <= q$b@817@01 && q$b@817@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$b@817@01)
    (<= q$b@817@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$b@817@01)
    (<= q$b@817@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$b@817@01)
    (<= q$b@817@01 1461501637330902918203684832716283019655932542975)
    (or (= q$b@817@01 q$a@816@01) (not (= q$b@817@01 q$a@816@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$b@817@01)
      (<= q$b@817@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$b@817@01)
    (<= q$b@817@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$b@817@01 Int)) (!
  (and
    (or (<= 0 q$b@817@01) (not (<= 0 q$b@817@01)))
    (=>
      (and
        (<= 0 q$b@817@01)
        (<= q$b@817@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@817@01)
        (<= q$b@817@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@817@01 q$a@816@01) (not (= q$b@817@01 q$a@816@01)))))
    (or
      (not
        (and
          (<= 0 q$b@817@01)
          (<= q$b@817@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@817@01)
        (<= q$b@817@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848-aux|)))
(assert (forall ((q$b@817@01 Int)) (!
  (and
    (or (<= 0 q$b@817@01) (not (<= 0 q$b@817@01)))
    (=>
      (and
        (<= 0 q$b@817@01)
        (<= q$b@817@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@817@01)
        (<= q$b@817@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@817@01 q$a@816@01) (not (= q$b@817@01 q$a@816@01)))))
    (or
      (not
        (and
          (<= 0 q$b@817@01)
          (<= q$b@817@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@817@01)
        (<= q$b@817@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848-aux|)))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
    (forall ((q$b@817@01 Int)) (!
      (and
        (or (<= 0 q$b@817@01) (not (<= 0 q$b@817@01)))
        (=>
          (and
            (<= 0 q$b@817@01)
            (<= q$b@817@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@817@01)
            (<= q$b@817@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@817@01 q$a@816@01) (not (= q$b@817@01 q$a@816@01)))))
        (or
          (not
            (and
              (<= 0 q$b@817@01)
              (<= q$b@817@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@817@01)
            (<= q$b@817@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848-aux|))
    (forall ((q$b@817@01 Int)) (!
      (and
        (or (<= 0 q$b@817@01) (not (<= 0 q$b@817@01)))
        (=>
          (and
            (<= 0 q$b@817@01)
            (<= q$b@817@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@817@01)
            (<= q$b@817@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@817@01 q$a@816@01) (not (= q$b@817@01 q$a@816@01)))))
        (or
          (not
            (and
              (<= 0 q$b@817@01)
              (<= q$b@817@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@817@01)
            (<= q$b@817@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848-aux|)))))
(assert (or
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
  (not
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01)))))
(push) ; 8
; [then-branch: 461 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@816@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@816@01) && QA q$b@817@01 :: 0 <= q$b@817@01 && q$b@817@01 <= 1461501637330902918203684832716283019655932542975 && q$b@817@01 != q$a@816@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$b@817@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$b@817@01) | live]
; [else-branch: 461 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@816@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@816@01) && QA q$b@817@01 :: 0 <= q$b@817@01 && q$b@817@01 <= 1461501637330902918203684832716283019655932542975 && q$b@817@01 != q$a@816@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$b@817@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$b@817@01)) | live]
(push) ; 9
; [then-branch: 461 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@816@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@816@01) && QA q$b@817@01 :: 0 <= q$b@817@01 && q$b@817@01 <= 1461501637330902918203684832716283019655932542975 && q$b@817@01 != q$a@816@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$b@817@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$b@817@01)]
(assert (and
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
  (forall ((q$b@817@01 Int)) (!
    (=>
      (and
        (and
          (<= 0 q$b@817@01)
          (<= q$b@817@01 1461501637330902918203684832716283019655932542975))
        (not (= q$b@817@01 q$a@816@01)))
      (=
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01)))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848|))))
; [eval] perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] 1 * write
(pop) ; 9
(push) ; 9
; [else-branch: 461 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@816@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@816@01) && QA q$b@817@01 :: 0 <= q$b@817@01 && q$b@817@01 <= 1461501637330902918203684832716283019655932542975 && q$b@817@01 != q$a@816@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$b@817@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$b@817@01))]
(assert (not
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
    (forall ((q$b@817@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@817@01)
            (<= q$b@817@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@817@01 q$a@816@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848|)))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
      (forall ((q$b@817@01 Int)) (!
        (=>
          (and
            (and
              (<= 0 q$b@817@01)
              (<= q$b@817@01 1461501637330902918203684832716283019655932542975))
            (not (= q$b@817@01 q$a@816@01)))
          (=
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01)))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848|))))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
    (forall ((q$b@817@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@817@01)
            (<= q$b@817@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@817@01 q$a@816@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848|)))))
(pop) ; 7
(push) ; 7
; [else-branch: 456 | !(0 <= q$a@816@01 && q$a@816@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@816@01)
    (<= q$a@816@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@816@01)
    (<= q$a@816@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$a@816@01)
    (<= q$a@816@01 1461501637330902918203684832716283019655932542975)
    (=>
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
        (forall ((q$b@817@01 Int)) (!
          (and
            (or (<= 0 q$b@817@01) (not (<= 0 q$b@817@01)))
            (=>
              (and
                (<= 0 q$b@817@01)
                (<= q$b@817@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@817@01)
                (<= q$b@817@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@817@01 q$a@816@01) (not (= q$b@817@01 q$a@816@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@817@01)
                  (<=
                    q$b@817@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@817@01)
                (<= q$b@817@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848-aux|))
        (forall ((q$b@817@01 Int)) (!
          (and
            (or (<= 0 q$b@817@01) (not (<= 0 q$b@817@01)))
            (=>
              (and
                (<= 0 q$b@817@01)
                (<= q$b@817@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@817@01)
                (<= q$b@817@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@817@01 q$a@816@01) (not (= q$b@817@01 q$a@816@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@817@01)
                  (<=
                    q$b@817@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@817@01)
                (<= q$b@817@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848-aux|))))
    (or
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
      (not
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))))
    (or
      (not
        (and
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
          (forall ((q$b@817@01 Int)) (!
            (=>
              (and
                (and
                  (<= 0 q$b@817@01)
                  (<=
                    q$b@817@01
                    1461501637330902918203684832716283019655932542975))
                (not (= q$b@817@01 q$a@816@01)))
              (=
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01)))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848|))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
        (forall ((q$b@817@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@817@01)
                (<= q$b@817@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@817@01 q$a@816@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848|)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@816@01)
      (<= q$a@816@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@816@01)
    (<= q$a@816@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@816@01 Int)) (!
  (and
    (or (<= 0 q$a@816@01) (not (<= 0 q$a@816@01)))
    (=>
      (and
        (<= 0 q$a@816@01)
        (<= q$a@816@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@816@01)
        (<= q$a@816@01 1461501637330902918203684832716283019655932542975)
        (=>
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
            (forall ((q$b@817@01 Int)) (!
              (and
                (or (<= 0 q$b@817@01) (not (<= 0 q$b@817@01)))
                (=>
                  (and
                    (<= 0 q$b@817@01)
                    (<=
                      q$b@817@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@817@01)
                    (<=
                      q$b@817@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@817@01 q$a@816@01)
                      (not (= q$b@817@01 q$a@816@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@817@01)
                      (<=
                        q$b@817@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@817@01)
                    (<=
                      q$b@817@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848-aux|))
            (forall ((q$b@817@01 Int)) (!
              (and
                (or (<= 0 q$b@817@01) (not (<= 0 q$b@817@01)))
                (=>
                  (and
                    (<= 0 q$b@817@01)
                    (<=
                      q$b@817@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@817@01)
                    (<=
                      q$b@817@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@817@01 q$a@816@01)
                      (not (= q$b@817@01 q$a@816@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@817@01)
                      (<=
                        q$b@817@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@817@01)
                    (<=
                      q$b@817@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848-aux|))))
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
              (forall ((q$b@817@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@817@01)
                      (<=
                        q$b@817@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@817@01 q$a@816@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848|))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
            (forall ((q$b@817@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@817@01)
                    (<=
                      q$b@817@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@817@01 q$a@816@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@816@01)
          (<= q$a@816@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@816@01)
        (<= q$a@816@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@13@1534@1047-aux|)))
(assert (forall ((q$a@816@01 Int)) (!
  (and
    (or (<= 0 q$a@816@01) (not (<= 0 q$a@816@01)))
    (=>
      (and
        (<= 0 q$a@816@01)
        (<= q$a@816@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@816@01)
        (<= q$a@816@01 1461501637330902918203684832716283019655932542975)
        (=>
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
            (forall ((q$b@817@01 Int)) (!
              (and
                (or (<= 0 q$b@817@01) (not (<= 0 q$b@817@01)))
                (=>
                  (and
                    (<= 0 q$b@817@01)
                    (<=
                      q$b@817@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@817@01)
                    (<=
                      q$b@817@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@817@01 q$a@816@01)
                      (not (= q$b@817@01 q$a@816@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@817@01)
                      (<=
                        q$b@817@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@817@01)
                    (<=
                      q$b@817@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848-aux|))
            (forall ((q$b@817@01 Int)) (!
              (and
                (or (<= 0 q$b@817@01) (not (<= 0 q$b@817@01)))
                (=>
                  (and
                    (<= 0 q$b@817@01)
                    (<=
                      q$b@817@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@817@01)
                    (<=
                      q$b@817@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@817@01 q$a@816@01)
                      (not (= q$b@817@01 q$a@816@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@817@01)
                      (<=
                        q$b@817@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@817@01)
                    (<=
                      q$b@817@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848-aux|))))
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
              (forall ((q$b@817@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@817@01)
                      (<=
                        q$b@817@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@817@01 q$a@816@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848|))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
            (forall ((q$b@817@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@817@01)
                    (<=
                      q$b@817@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@817@01 q$a@816@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@816@01)
          (<= q$a@816@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@816@01)
        (<= q$a@816@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@13@1534@1047-aux|)))
(push) ; 5
(assert (not (forall ((q$a@816@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@816@01)
        (<= q$a@816@01 1461501637330902918203684832716283019655932542975))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
        (forall ((q$b@817@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@817@01)
                (<= q$b@817@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@817@01 q$a@816@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848|))))
    false)
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@13@1534@1047|))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@816@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@816@01)
        (<= q$a@816@01 1461501637330902918203684832716283019655932542975))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
        (forall ((q$b@817@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@817@01)
                (<= q$b@817@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@817@01 q$a@816@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@817@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@817@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@425@1534@848|))))
    false)
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@816@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@816@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1534@13@1534@1047|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@818@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 462 | !(0 <= q$a@818@01) | live]
; [else-branch: 462 | 0 <= q$a@818@01 | live]
(push) ; 7
; [then-branch: 462 | !(0 <= q$a@818@01)]
(assert (not (<= 0 q$a@818@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 462 | 0 <= q$a@818@01]
(assert (<= 0 q$a@818@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@818@01) (not (<= 0 q$a@818@01))))
(push) ; 6
; [then-branch: 463 | 0 <= q$a@818@01 && q$a@818@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 463 | !(0 <= q$a@818@01 && q$a@818@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 463 | 0 <= q$a@818@01 && q$a@818@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@818@01)
  (<= q$a@818@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 464 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@818@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@818@01)) | live]
; [else-branch: 464 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@818@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@818@01) | live]
(push) ; 9
; [then-branch: 464 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@818@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@818@01))]
(assert (not
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))))
(pop) ; 9
(push) ; 9
; [else-branch: 464 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@818@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@818@01)]
(assert (<
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01)))
; [eval] (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
(declare-const q$b@819@01 Int)
(push) ; 10
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$b
(push) ; 11
; [then-branch: 465 | !(0 <= q$b@819@01) | live]
; [else-branch: 465 | 0 <= q$b@819@01 | live]
(push) ; 12
; [then-branch: 465 | !(0 <= q$b@819@01)]
(assert (not (<= 0 q$b@819@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 465 | 0 <= q$b@819@01]
(assert (<= 0 q$b@819@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@819@01) (not (<= 0 q$b@819@01))))
(push) ; 11
; [then-branch: 466 | 0 <= q$b@819@01 && q$b@819@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 466 | !(0 <= q$b@819@01 && q$b@819@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 466 | 0 <= q$b@819@01 && q$b@819@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$b@819@01)
  (<= q$b@819@01 1461501637330902918203684832716283019655932542975)))
; [eval] q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] q$b != q$a
(push) ; 13
; [then-branch: 467 | q$b@819@01 != q$a@818@01 | live]
; [else-branch: 467 | q$b@819@01 == q$a@818@01 | live]
(push) ; 14
; [then-branch: 467 | q$b@819@01 != q$a@818@01]
(assert (not (= q$b@819@01 q$a@818@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 14
(push) ; 14
; [else-branch: 467 | q$b@819@01 == q$a@818@01]
(assert (= q$b@819@01 q$a@818@01))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (= q$b@819@01 q$a@818@01) (not (= q$b@819@01 q$a@818@01))))
(pop) ; 12
(push) ; 12
; [else-branch: 466 | !(0 <= q$b@819@01 && q$b@819@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$b@819@01)
    (<= q$b@819@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$b@819@01)
    (<= q$b@819@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$b@819@01)
    (<= q$b@819@01 1461501637330902918203684832716283019655932542975)
    (or (= q$b@819@01 q$a@818@01) (not (= q$b@819@01 q$a@818@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$b@819@01)
      (<= q$b@819@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$b@819@01)
    (<= q$b@819@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$b@819@01 Int)) (!
  (and
    (or (<= 0 q$b@819@01) (not (<= 0 q$b@819@01)))
    (=>
      (and
        (<= 0 q$b@819@01)
        (<= q$b@819@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@819@01)
        (<= q$b@819@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@819@01 q$a@818@01) (not (= q$b@819@01 q$a@818@01)))))
    (or
      (not
        (and
          (<= 0 q$b@819@01)
          (<= q$b@819@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@819@01)
        (<= q$b@819@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848-aux|)))
(assert (forall ((q$b@819@01 Int)) (!
  (and
    (or (<= 0 q$b@819@01) (not (<= 0 q$b@819@01)))
    (=>
      (and
        (<= 0 q$b@819@01)
        (<= q$b@819@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@819@01)
        (<= q$b@819@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@819@01 q$a@818@01) (not (= q$b@819@01 q$a@818@01)))))
    (or
      (not
        (and
          (<= 0 q$b@819@01)
          (<= q$b@819@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@819@01)
        (<= q$b@819@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848-aux|)))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
    (forall ((q$b@819@01 Int)) (!
      (and
        (or (<= 0 q$b@819@01) (not (<= 0 q$b@819@01)))
        (=>
          (and
            (<= 0 q$b@819@01)
            (<= q$b@819@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@819@01)
            (<= q$b@819@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@819@01 q$a@818@01) (not (= q$b@819@01 q$a@818@01)))))
        (or
          (not
            (and
              (<= 0 q$b@819@01)
              (<= q$b@819@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@819@01)
            (<= q$b@819@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848-aux|))
    (forall ((q$b@819@01 Int)) (!
      (and
        (or (<= 0 q$b@819@01) (not (<= 0 q$b@819@01)))
        (=>
          (and
            (<= 0 q$b@819@01)
            (<= q$b@819@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@819@01)
            (<= q$b@819@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@819@01 q$a@818@01) (not (= q$b@819@01 q$a@818@01)))))
        (or
          (not
            (and
              (<= 0 q$b@819@01)
              (<= q$b@819@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@819@01)
            (<= q$b@819@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848-aux|)))))
(assert (or
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
  (not
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01)))))
(push) ; 8
; [then-branch: 468 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@818@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@818@01) && QA q$b@819@01 :: 0 <= q$b@819@01 && q$b@819@01 <= 1461501637330902918203684832716283019655932542975 && q$b@819@01 != q$a@818@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$b@819@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$b@819@01) | live]
; [else-branch: 468 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@818@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@818@01) && QA q$b@819@01 :: 0 <= q$b@819@01 && q$b@819@01 <= 1461501637330902918203684832716283019655932542975 && q$b@819@01 != q$a@818@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$b@819@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$b@819@01)) | live]
(push) ; 9
; [then-branch: 468 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@818@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@818@01) && QA q$b@819@01 :: 0 <= q$b@819@01 && q$b@819@01 <= 1461501637330902918203684832716283019655932542975 && q$b@819@01 != q$a@818@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$b@819@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$b@819@01)]
(assert (and
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
  (forall ((q$b@819@01 Int)) (!
    (=>
      (and
        (and
          (<= 0 q$b@819@01)
          (<= q$b@819@01 1461501637330902918203684832716283019655932542975))
        (not (= q$b@819@01 q$a@818@01)))
      (=
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01)))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848|))))
; [eval] perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] 1 * write
(pop) ; 9
(push) ; 9
; [else-branch: 468 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$a@818@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$a@818@01) && QA q$b@819@01 :: 0 <= q$b@819@01 && q$b@819@01 <= 1461501637330902918203684832716283019655932542975 && q$b@819@01 != q$a@818@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@804@01, 3)), q$b@819@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@746@01, 3)), q$b@819@01))]
(assert (not
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
    (forall ((q$b@819@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@819@01)
            (<= q$b@819@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@819@01 q$a@818@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848|)))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
      (forall ((q$b@819@01 Int)) (!
        (=>
          (and
            (and
              (<= 0 q$b@819@01)
              (<= q$b@819@01 1461501637330902918203684832716283019655932542975))
            (not (= q$b@819@01 q$a@818@01)))
          (=
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01)))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848|))))
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
    (forall ((q$b@819@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@819@01)
            (<= q$b@819@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@819@01 q$a@818@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848|)))))
(pop) ; 7
(push) ; 7
; [else-branch: 463 | !(0 <= q$a@818@01 && q$a@818@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@818@01)
    (<= q$a@818@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@818@01)
    (<= q$a@818@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$a@818@01)
    (<= q$a@818@01 1461501637330902918203684832716283019655932542975)
    (=>
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
        (forall ((q$b@819@01 Int)) (!
          (and
            (or (<= 0 q$b@819@01) (not (<= 0 q$b@819@01)))
            (=>
              (and
                (<= 0 q$b@819@01)
                (<= q$b@819@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@819@01)
                (<= q$b@819@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@819@01 q$a@818@01) (not (= q$b@819@01 q$a@818@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@819@01)
                  (<=
                    q$b@819@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@819@01)
                (<= q$b@819@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848-aux|))
        (forall ((q$b@819@01 Int)) (!
          (and
            (or (<= 0 q$b@819@01) (not (<= 0 q$b@819@01)))
            (=>
              (and
                (<= 0 q$b@819@01)
                (<= q$b@819@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@819@01)
                (<= q$b@819@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@819@01 q$a@818@01) (not (= q$b@819@01 q$a@818@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@819@01)
                  (<=
                    q$b@819@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@819@01)
                (<= q$b@819@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848-aux|))))
    (or
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
      (not
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))))
    (or
      (not
        (and
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
          (forall ((q$b@819@01 Int)) (!
            (=>
              (and
                (and
                  (<= 0 q$b@819@01)
                  (<=
                    q$b@819@01
                    1461501637330902918203684832716283019655932542975))
                (not (= q$b@819@01 q$a@818@01)))
              (=
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01)))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848|))))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
        (forall ((q$b@819@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@819@01)
                (<= q$b@819@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@819@01 q$a@818@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848|)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@818@01)
      (<= q$a@818@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@818@01)
    (<= q$a@818@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@818@01 Int)) (!
  (and
    (or (<= 0 q$a@818@01) (not (<= 0 q$a@818@01)))
    (=>
      (and
        (<= 0 q$a@818@01)
        (<= q$a@818@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@818@01)
        (<= q$a@818@01 1461501637330902918203684832716283019655932542975)
        (=>
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
            (forall ((q$b@819@01 Int)) (!
              (and
                (or (<= 0 q$b@819@01) (not (<= 0 q$b@819@01)))
                (=>
                  (and
                    (<= 0 q$b@819@01)
                    (<=
                      q$b@819@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@819@01)
                    (<=
                      q$b@819@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@819@01 q$a@818@01)
                      (not (= q$b@819@01 q$a@818@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@819@01)
                      (<=
                        q$b@819@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@819@01)
                    (<=
                      q$b@819@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848-aux|))
            (forall ((q$b@819@01 Int)) (!
              (and
                (or (<= 0 q$b@819@01) (not (<= 0 q$b@819@01)))
                (=>
                  (and
                    (<= 0 q$b@819@01)
                    (<=
                      q$b@819@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@819@01)
                    (<=
                      q$b@819@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@819@01 q$a@818@01)
                      (not (= q$b@819@01 q$a@818@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@819@01)
                      (<=
                        q$b@819@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@819@01)
                    (<=
                      q$b@819@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848-aux|))))
        (or
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
          (not
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))))
        (or
          (not
            (and
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
              (forall ((q$b@819@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@819@01)
                      (<=
                        q$b@819@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@819@01 q$a@818@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848|))))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
            (forall ((q$b@819@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@819@01)
                    (<=
                      q$b@819@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@819@01 q$a@818@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@818@01)
          (<= q$a@818@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@818@01)
        (<= q$a@818@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@13@1535@1047-aux|)))
(assert (forall ((q$a@818@01 Int)) (!
  (and
    (or (<= 0 q$a@818@01) (not (<= 0 q$a@818@01)))
    (=>
      (and
        (<= 0 q$a@818@01)
        (<= q$a@818@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@818@01)
        (<= q$a@818@01 1461501637330902918203684832716283019655932542975)
        (=>
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
            (forall ((q$b@819@01 Int)) (!
              (and
                (or (<= 0 q$b@819@01) (not (<= 0 q$b@819@01)))
                (=>
                  (and
                    (<= 0 q$b@819@01)
                    (<=
                      q$b@819@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@819@01)
                    (<=
                      q$b@819@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@819@01 q$a@818@01)
                      (not (= q$b@819@01 q$a@818@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@819@01)
                      (<=
                        q$b@819@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@819@01)
                    (<=
                      q$b@819@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848-aux|))
            (forall ((q$b@819@01 Int)) (!
              (and
                (or (<= 0 q$b@819@01) (not (<= 0 q$b@819@01)))
                (=>
                  (and
                    (<= 0 q$b@819@01)
                    (<=
                      q$b@819@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@819@01)
                    (<=
                      q$b@819@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@819@01 q$a@818@01)
                      (not (= q$b@819@01 q$a@818@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@819@01)
                      (<=
                        q$b@819@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@819@01)
                    (<=
                      q$b@819@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848-aux|))))
        (or
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
          (not
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))))
        (or
          (not
            (and
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
              (forall ((q$b@819@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@819@01)
                      (<=
                        q$b@819@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@819@01 q$a@818@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848|))))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
            (forall ((q$b@819@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@819@01)
                    (<=
                      q$b@819@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@819@01 q$a@818@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@818@01)
          (<= q$a@818@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@818@01)
        (<= q$a@818@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@13@1535@1047-aux|)))
(push) ; 5
(assert (not (forall ((q$a@818@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@818@01)
        (<= q$a@818@01 1461501637330902918203684832716283019655932542975))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
        (forall ((q$b@819@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@819@01)
                (<= q$b@819@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@819@01 q$a@818@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848|))))
    false)
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@13@1535@1047|))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@818@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@818@01)
        (<= q$a@818@01 1461501637330902918203684832716283019655932542975))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
        (forall ((q$b@819@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@819@01)
                (<= q$b@819@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@819@01 q$a@818@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$b@819@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$b@819@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@425@1535@848|))))
    false)
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@804@01 3)) q$a@818@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@746@01 3)) q$a@818@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1535@13@1535@1047|)))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@820@01 Int)
(declare-const q$b@821@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 469 | !(0 <= q$a@820@01) | live]
; [else-branch: 469 | 0 <= q$a@820@01 | live]
(push) ; 7
; [then-branch: 469 | !(0 <= q$a@820@01)]
(assert (not (<= 0 q$a@820@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 469 | 0 <= q$a@820@01]
(assert (<= 0 q$a@820@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 470 | !(q$a@820@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 470 | q$a@820@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 470 | !(q$a@820@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@820@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 470 | q$a@820@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@820@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 471 | !(0 <= q$b@821@01) | live]
; [else-branch: 471 | 0 <= q$b@821@01 | live]
(push) ; 11
; [then-branch: 471 | !(0 <= q$b@821@01)]
(assert (not (<= 0 q$b@821@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 471 | 0 <= q$b@821@01]
(assert (<= 0 q$b@821@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@821@01) (not (<= 0 q$b@821@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@821@01) (not (<= 0 q$b@821@01))))))
(assert (or
  (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@820@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@820@01)
  (and
    (<= 0 q$a@820@01)
    (=>
      (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@821@01) (not (<= 0 q$b@821@01)))))
    (or
      (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@820@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@820@01) (not (<= 0 q$a@820@01))))
(push) ; 6
; [then-branch: 472 | 0 <= q$a@820@01 && q$a@820@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@821@01 && q$b@821@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 472 | !(0 <= q$a@820@01 && q$a@820@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@821@01 && q$b@821@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 472 | 0 <= q$a@820@01 && q$a@820@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@821@01 && q$b@821@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@820@01)
  (and
    (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@821@01)
      (<= q$b@821@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 8
; [then-branch: 473 | $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@746@01, 4)), q$a@820@01), q$b@821@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@804@01, 4)), q$a@820@01), q$b@821@01) | live]
; [else-branch: 473 | !($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@746@01, 4)), q$a@820@01), q$b@821@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@804@01, 4)), q$a@820@01), q$b@821@01)) | live]
(push) ; 9
; [then-branch: 473 | $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@746@01, 4)), q$a@820@01), q$b@821@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@804@01, 4)), q$a@820@01), q$b@821@01)]
(assert (<
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@820@01) q$b@821@01)
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01)))
; [eval] perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] 1 * write
(pop) ; 9
(push) ; 9
; [else-branch: 473 | !($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@746@01, 4)), q$a@820@01), q$b@821@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@804@01, 4)), q$a@820@01), q$b@821@01))]
(assert (not
  (<
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@820@01) q$b@821@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@820@01) q$b@821@01)
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01)))
  (<
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@820@01) q$b@821@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01))))
(pop) ; 7
(push) ; 7
; [else-branch: 472 | !(0 <= q$a@820@01 && q$a@820@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@821@01 && q$b@821@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@820@01)
    (and
      (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@821@01)
        (<= q$b@821@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@820@01)
    (and
      (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@821@01)
        (<= q$b@821@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@820@01)
    (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@821@01)
    (<= q$b@821@01 1461501637330902918203684832716283019655932542975)
    (or
      (not
        (<
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@820@01) q$b@821@01)
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01)))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@820@01) q$b@821@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@820@01)
      (and
        (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@821@01)
          (<= q$b@821@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@820@01)
    (and
      (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@821@01)
        (<= q$b@821@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@820@01 Int) (q$b@821@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@820@01)
      (and
        (<= 0 q$a@820@01)
        (=>
          (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@821@01) (not (<= 0 q$b@821@01)))))
        (or
          (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@820@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@820@01) (not (<= 0 q$a@820@01)))
    (=>
      (and
        (<= 0 q$a@820@01)
        (and
          (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@821@01)
            (<= q$b@821@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@820@01)
        (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@821@01)
        (<= q$b@821@01 1461501637330902918203684832716283019655932542975)
        (or
          (not
            (<
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@820@01) q$b@821@01)
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01)))
          (<
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@820@01) q$b@821@01)
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01)))))
    (or
      (not
        (and
          (<= 0 q$a@820@01)
          (and
            (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@821@01)
              (<= q$b@821@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@820@01)
        (and
          (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@821@01)
            (<= q$b@821@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1536@13@1536@843-aux|)))
(assert (forall ((q$a@820@01 Int) (q$b@821@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@820@01)
      (and
        (<= 0 q$a@820@01)
        (=>
          (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@821@01) (not (<= 0 q$b@821@01)))))
        (or
          (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@820@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@820@01) (not (<= 0 q$a@820@01)))
    (=>
      (and
        (<= 0 q$a@820@01)
        (and
          (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@821@01)
            (<= q$b@821@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@820@01)
        (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@821@01)
        (<= q$b@821@01 1461501637330902918203684832716283019655932542975)
        (or
          (not
            (<
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@820@01) q$b@821@01)
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01)))
          (<
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@820@01) q$b@821@01)
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01)))))
    (or
      (not
        (and
          (<= 0 q$a@820@01)
          (and
            (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@821@01)
              (<= q$b@821@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@820@01)
        (and
          (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@821@01)
            (<= q$b@821@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@820@01) q$b@821@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1536@13@1536@843-aux|)))
(push) ; 5
(assert (not (forall ((q$a@820@01 Int) (q$b@821@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@820@01)
        (and
          (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@821@01)
            (<= q$b@821@01 1461501637330902918203684832716283019655932542975))))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@820@01) q$b@821@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01)))
    (=
      (ite
        (and
          (= q$a@820@01 ($struct_get<Int> ($struct_loc<Int> msg@742@01 0)))
          (= q$b@821@01 l$_spender@738@01)
          (=
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01)
            ($unwrap<Int> l$_value@739@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@820@01) q$b@821@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1536@13@1536@843|))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@820@01 Int) (q$b@821@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@820@01)
        (and
          (<= q$a@820@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@821@01)
            (<= q$b@821@01 1461501637330902918203684832716283019655932542975))))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@820@01) q$b@821@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01)))
    (=
      (ite
        (and
          (= q$a@820@01 ($struct_get<Int> ($struct_loc<Int> msg@742@01 0)))
          (= q$b@821@01 l$_spender@738@01)
          (=
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01)
            ($unwrap<Int> l$_value@739@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@804@01 4)) q$a@820@01) q$b@821@01))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@746@01 4)) q$a@820@01) q$b@821@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1536@13@1536@843|)))
; [exec]
; inhale l$havoc$1 >= 0
(declare-const $t@822@01 $Snap)
(assert (= $t@822@01 $Snap.unit))
; [eval] l$havoc$1 >= 0
(assert (>= l$havoc$1@757@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc$1): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@823@01 $Struct)
(assert (=
  self@823@01
  ($struct_set<$Struct> self@804@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@804@01 7))
    l$havoc$1@757@01))))
; [exec]
; $contracts := l$havoc$2
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@823@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@746@01 6)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@823@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@746@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@823@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@823@01 3))))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@823@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@823@01 3)))))
(pop) ; 4
; [eval] !$succ
; [then-branch: 474 | False | dead]
; [else-branch: 474 | True | live]
(push) ; 4
; [else-branch: 474 | True]
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 445 | $out_of_gas@755@01]
(assert $out_of_gas@755@01)
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$mint ----------
(declare-const l$_to@824@01 Int)
(declare-const l$_value@825@01 $Int)
(declare-const $succ@826@01 Bool)
(declare-const l$_to@827@01 Int)
(declare-const l$_value@828@01 $Int)
(declare-const $succ@829@01 Bool)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@830@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@831@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@832@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@833@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@834@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@835@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@836@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@837@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@838@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@839@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@840@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@841@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@842@01 Bool)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@843@01 Bool)
; [exec]
; var l$havoc: Int
(declare-const l$havoc@844@01 Int)
; [exec]
; var l$havoc$1: $Map[Int, $Struct]
(declare-const l$havoc$1@845@01 $Map<Int~_$Struct>)
; [exec]
; inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
(declare-const $t@846@01 $Snap)
(assert (= $t@846@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 0)): Seq[Int])
; [eval] $struct_loc(self, 0)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@834@01 0))) 64))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
(declare-const $t@847@01 $Snap)
(assert (= $t@847@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 1)): Seq[Int])
; [eval] $struct_loc(self, 1)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@834@01 1))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@848@01 $Snap)
(assert (= $t@848@01 ($Snap.combine ($Snap.first $t@848@01) ($Snap.second $t@848@01))))
(assert (= ($Snap.first $t@848@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@834@01 2))))
(assert (= ($Snap.second $t@848@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@834@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@849@01 $Snap)
(assert (= $t@849@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@850@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 4
; [then-branch: 475 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), $q2@850@01)) | live]
; [else-branch: 475 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), $q2@850@01) | live]
(push) ; 5
; [then-branch: 475 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), $q2@850@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) $q2@850@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 475 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), $q2@850@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) $q2@850@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) $q2@850@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) $q2@850@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@850@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) $q2@850@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) $q2@850@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) $q2@850@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1576@11@1576@345-aux|)))
(assert (forall (($q2@850@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) $q2@850@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) $q2@850@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) $q2@850@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1576@11@1576@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $t@851@01 $Snap)
(assert (= $t@851@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $q2@852@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@852@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) $q2@852@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) $q2@852@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1577@11@1577@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@853@01 $Snap)
(assert (= $t@853@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@854@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@855@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 5
; [then-branch: 476 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@834@01, 4)), $q3@854@01), $q4@855@01)) | live]
; [else-branch: 476 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@834@01, 4)), $q3@854@01), $q4@855@01) | live]
(push) ; 6
; [then-branch: 476 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@834@01, 4)), $q3@854@01), $q4@855@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@854@01) $q4@855@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 476 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@834@01, 4)), $q3@854@01), $q4@855@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@854@01) $q4@855@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@854@01) $q4@855@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@854@01) $q4@855@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@855@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@854@01) $q4@855@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@854@01) $q4@855@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@854@01) $q4@855@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1578@131@1578@597-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@854@01 Int)) (!
  (forall (($q4@855@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@854@01) $q4@855@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@854@01) $q4@855@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@854@01) $q4@855@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1578@131@1578@597-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@854@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1578@11@1578@598-aux|)))
(assert (forall (($q3@854@01 Int)) (!
  (forall (($q4@855@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@854@01) $q4@855@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@854@01) $q4@855@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@854@01) $q4@855@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1578@131@1578@597|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@854@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1578@11@1578@598|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@856@01 $Snap)
(assert (= $t@856@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@857@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@858@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@857@01 Int)) (!
  (forall (($q4@858@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@857@01) $q4@858@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@857@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@857@01) $q4@858@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1579@131@1579@505|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) $q3@857@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1579@11@1579@506|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@859@01 $Snap)
(assert (= $t@859@01 ($Snap.combine ($Snap.first $t@859@01) ($Snap.second $t@859@01))))
(assert (= ($Snap.first $t@859@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@834@01 5))))
(assert (= ($Snap.second $t@859@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@834@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@860@01 $Snap)
(assert (= $t@860@01 ($Snap.combine ($Snap.first $t@860@01) ($Snap.second $t@860@01))))
(assert (= ($Snap.first $t@860@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@834@01 6))))
(assert (= ($Snap.second $t@860@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) &&
;   ($struct_get($struct_loc(self, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@861@01 $Snap)
(assert (= $t@861@01 ($Snap.combine ($Snap.first $t@861@01) ($Snap.second $t@861@01))))
(assert (= ($Snap.first $t@861@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 7)): Int)
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@834@01 7))))
(assert (= ($Snap.second $t@861@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@834@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 8)): Int) &&
;   ($struct_get($struct_loc(self, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@862@01 $Snap)
(assert (= $t@862@01 ($Snap.combine ($Snap.first $t@862@01) ($Snap.second $t@862@01))))
(assert (= ($Snap.first $t@862@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@834@01 8))))
(assert (= ($Snap.second $t@862@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@834@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@863@01 $Snap)
(assert (= $t@863@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@864@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(push) ; 4
; [then-branch: 477 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 10)), $q5@864@01)) | live]
; [else-branch: 477 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 10)), $q5@864@01) | live]
(push) ; 5
; [then-branch: 477 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 10)), $q5@864@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 10)) $q5@864@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 477 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 10)), $q5@864@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 10)) $q5@864@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 10)) $q5@864@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 10)) $q5@864@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@864@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 10)) $q5@864@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 10)) $q5@864@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 10)) $q5@864@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1584@11@1584@348-aux|)))
(assert (forall (($q5@864@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 10)) $q5@864@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 10)) $q5@864@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 10)) $q5@864@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1584@11@1584@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $t@865@01 $Snap)
(assert (= $t@865@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $q5@866@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@866@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 10)) $q5@866@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 10)) $q5@866@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1585@11@1585@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@867@01 $Snap)
(assert (= $t@867@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@868@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(push) ; 4
; [then-branch: 478 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 11)), $q6@868@01)) | live]
; [else-branch: 478 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 11)), $q6@868@01) | live]
(push) ; 5
; [then-branch: 478 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 11)), $q6@868@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 11)) $q6@868@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 478 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 11)), $q6@868@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 11)) $q6@868@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 11)) $q6@868@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 11)) $q6@868@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@868@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 11)) $q6@868@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 11)) $q6@868@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 11)) $q6@868@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1586@11@1586@348-aux|)))
(assert (forall (($q6@868@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 11)) $q6@868@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 11)) $q6@868@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 11)) $q6@868@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1586@11@1586@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $t@869@01 $Snap)
(assert (= $t@869@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $q6@870@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
; [eval] ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@870@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 11)) $q6@870@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 11)) $q6@870@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1587@11@1587@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@871@01 $Snap)
(assert (= $t@871@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@834@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@872@01 $Snap)
(assert (= $t@872@01 ($Snap.combine ($Snap.first $t@872@01) ($Snap.second $t@872@01))))
(assert (= ($Snap.first $t@872@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@872@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= l$_to &&
;   l$_to <= 1461501637330902918203684832716283019655932542975
(declare-const $t@873@01 $Snap)
(assert (= $t@873@01 ($Snap.combine ($Snap.first $t@873@01) ($Snap.second $t@873@01))))
(assert (= ($Snap.first $t@873@01) $Snap.unit))
; [eval] 0 <= l$_to
(assert (<= 0 l$_to@827@01))
(assert (= ($Snap.second $t@873@01) $Snap.unit))
; [eval] l$_to <= 1461501637330902918203684832716283019655932542975
(assert (<= l$_to@827@01 1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $unwrap(l$_value) &&
;   $unwrap(l$_value) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@874@01 $Snap)
(assert (= $t@874@01 ($Snap.combine ($Snap.first $t@874@01) ($Snap.second $t@874@01))))
(assert (= ($Snap.first $t@874@01) $Snap.unit))
; [eval] 0 <= $unwrap(l$_value)
; [eval] $unwrap(l$_value)
(assert (<= 0 ($unwrap<Int> l$_value@828@01)))
(assert (= ($Snap.second $t@874@01) $Snap.unit))
; [eval] $unwrap(l$_value) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap(l$_value)
(assert (<=
  ($unwrap<Int> l$_value@828@01)
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@875@01 $Snap)
(assert (= $t@875@01 ($Snap.combine ($Snap.first $t@875@01) ($Snap.second $t@875@01))))
(assert (= ($Snap.first $t@875@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@831@01 0))))
(assert (= ($Snap.second $t@875@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@831@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@876@01 $Snap)
(assert (= $t@876@01 ($Snap.combine ($Snap.first $t@876@01) ($Snap.second $t@876@01))))
(assert (= ($Snap.first $t@876@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@831@01 1))))
(assert (= ($Snap.second $t@876@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@831@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@877@01 $Snap)
(assert (= $t@877@01 ($Snap.combine ($Snap.first $t@877@01) ($Snap.second $t@877@01))))
(assert (= ($Snap.first $t@877@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@831@01 2))))
(assert (= ($Snap.second $t@877@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@831@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@878@01 $Snap)
(assert (= $t@878@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@831@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@879@01 $Snap)
(assert (= $t@879@01 ($Snap.combine ($Snap.first $t@879@01) ($Snap.second $t@879@01))))
(assert (= ($Snap.first $t@879@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@831@01 4))))
(assert (= ($Snap.second $t@879@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@831@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@880@01 $Snap)
(assert (= $t@880@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@831@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@881@01 $Snap)
(assert (= $t@881@01 ($Snap.combine ($Snap.first $t@881@01) ($Snap.second $t@881@01))))
(assert (= ($Snap.first $t@881@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@830@01 0))))
(assert (= ($Snap.second $t@881@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@830@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@882@01 $Snap)
(assert (= $t@882@01 ($Snap.combine ($Snap.first $t@882@01) ($Snap.second $t@882@01))))
(assert (= ($Snap.first $t@882@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@830@01 1))))
(assert (= ($Snap.second $t@882@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@830@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@883@01 $Snap)
(assert (= $t@883@01 ($Snap.combine ($Snap.first $t@883@01) ($Snap.second $t@883@01))))
(assert (= ($Snap.first $t@883@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@830@01 2))))
(assert (= ($Snap.second $t@883@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@830@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@884@01 $Snap)
(assert (= $t@884@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@830@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@885@01 $Snap)
(assert (= $t@885@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@830@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $t@886@01 $Snap)
(assert (= $t@886@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $a@887@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc(self, 6)): Int)
(declare-const $t@888@01 $Snap)
(assert (= $t@888@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
(declare-const $t@889@01 $Snap)
(assert (= $t@889@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@834@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@890@01 $Snap)
(assert (= $t@890@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@830@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [eval] !(($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(self, 6)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@830@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6)))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@830@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@834@01 6))))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 479 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) != $struct_get[Int]($struct_loc[Int](self@834@01, 6)) | live]
; [else-branch: 479 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) == $struct_get[Int]($struct_loc[Int](self@834@01, 6)) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 479 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) != $struct_get[Int]($struct_loc[Int](self@834@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@830@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@834@01 6)))))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [then-branch: 480 | False | dead]
; [else-branch: 480 | True | live]
(push) ; 4
; [else-branch: 480 | True]
(pop) ; 4
; [eval] !$succ
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 481 | True | live]
; [else-branch: 481 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 481 | True]
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 5
(push) ; 6
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@830@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6)))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 482 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) != $struct_get[Int]($struct_loc[Int](self@834@01, 6)) | live]
; [else-branch: 482 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) == $struct_get[Int]($struct_loc[Int](self@834@01, 6)) | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 482 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) != $struct_get[Int]($struct_loc[Int](self@834@01, 6))]
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@891@01 Int)
(declare-const q$b@892@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 483 | !(0 <= q$a@891@01) | live]
; [else-branch: 483 | 0 <= q$a@891@01 | live]
(push) ; 7
; [then-branch: 483 | !(0 <= q$a@891@01)]
(assert (not (<= 0 q$a@891@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 483 | 0 <= q$a@891@01]
(assert (<= 0 q$a@891@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 484 | !(q$a@891@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 484 | q$a@891@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 484 | !(q$a@891@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@891@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 484 | q$a@891@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@891@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 485 | !(0 <= q$b@892@01) | live]
; [else-branch: 485 | 0 <= q$b@892@01 | live]
(push) ; 11
; [then-branch: 485 | !(0 <= q$b@892@01)]
(assert (not (<= 0 q$b@892@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 485 | 0 <= q$b@892@01]
(assert (<= 0 q$b@892@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@892@01) (not (<= 0 q$b@892@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@892@01) (not (<= 0 q$b@892@01))))))
(assert (or
  (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@891@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@891@01)
  (and
    (<= 0 q$a@891@01)
    (=>
      (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@892@01) (not (<= 0 q$b@892@01)))))
    (or
      (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@891@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@891@01) (not (<= 0 q$a@891@01))))
(push) ; 6
; [then-branch: 486 | 0 <= q$a@891@01 && q$a@891@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@892@01 && q$b@892@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 486 | !(0 <= q$a@891@01 && q$a@891@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@892@01 && q$b@892@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 486 | 0 <= q$a@891@01 && q$a@891@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@892@01 && q$b@892@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@891@01)
  (and
    (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@892@01)
      (<= q$b@892@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 8
; [then-branch: 487 | False | dead]
; [else-branch: 487 | True | live]
(push) ; 9
; [else-branch: 487 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 486 | !(0 <= q$a@891@01 && q$a@891@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@892@01 && q$b@892@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@891@01)
    (and
      (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@892@01)
        (<= q$b@892@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@891@01)
    (and
      (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@892@01)
        (<= q$b@892@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@891@01)
    (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@892@01)
    (<= q$b@892@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@891@01)
      (and
        (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@892@01)
          (<= q$b@892@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@891@01)
    (and
      (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@892@01)
        (<= q$b@892@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@891@01 Int) (q$b@892@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@891@01)
      (and
        (<= 0 q$a@891@01)
        (=>
          (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@892@01) (not (<= 0 q$b@892@01)))))
        (or
          (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@891@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@891@01) (not (<= 0 q$a@891@01)))
    (=>
      (and
        (<= 0 q$a@891@01)
        (and
          (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@892@01)
            (<= q$b@892@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@891@01)
        (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@892@01)
        (<= q$b@892@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@891@01)
          (and
            (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@892@01)
              (<= q$b@892@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@891@01)
        (and
          (<= q$a@891@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@892@01)
            (<= q$b@892@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@891@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@892@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1669@17@1669@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@893@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 488 | !(0 <= q$a@893@01) | live]
; [else-branch: 488 | 0 <= q$a@893@01 | live]
(push) ; 7
; [then-branch: 488 | !(0 <= q$a@893@01)]
(assert (not (<= 0 q$a@893@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 488 | 0 <= q$a@893@01]
(assert (<= 0 q$a@893@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@893@01) (not (<= 0 q$a@893@01))))
(push) ; 6
; [then-branch: 489 | 0 <= q$a@893@01 && q$a@893@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 489 | !(0 <= q$a@893@01 && q$a@893@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 489 | 0 <= q$a@893@01 && q$a@893@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@893@01)
  (<= q$a@893@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 490 | False | dead]
; [else-branch: 490 | True | live]
(push) ; 9
; [else-branch: 490 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 489 | !(0 <= q$a@893@01 && q$a@893@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@893@01)
    (<= q$a@893@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@893@01)
      (<= q$a@893@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@893@01)
    (<= q$a@893@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@893@01 Int)) (!
  (and
    (or (<= 0 q$a@893@01) (not (<= 0 q$a@893@01)))
    (or
      (not
        (and
          (<= 0 q$a@893@01)
          (<= q$a@893@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@893@01)
        (<= q$a@893@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@893@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1670@17@1670@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@894@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 491 | !(0 <= q$a@894@01) | live]
; [else-branch: 491 | 0 <= q$a@894@01 | live]
(push) ; 7
; [then-branch: 491 | !(0 <= q$a@894@01)]
(assert (not (<= 0 q$a@894@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 491 | 0 <= q$a@894@01]
(assert (<= 0 q$a@894@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@894@01) (not (<= 0 q$a@894@01))))
(push) ; 6
; [then-branch: 492 | 0 <= q$a@894@01 && q$a@894@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 492 | !(0 <= q$a@894@01 && q$a@894@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 492 | 0 <= q$a@894@01 && q$a@894@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@894@01)
  (<= q$a@894@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 493 | False | dead]
; [else-branch: 493 | True | live]
(push) ; 9
; [else-branch: 493 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 492 | !(0 <= q$a@894@01 && q$a@894@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@894@01)
    (<= q$a@894@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@894@01)
      (<= q$a@894@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@894@01)
    (<= q$a@894@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@894@01 Int)) (!
  (and
    (or (<= 0 q$a@894@01) (not (<= 0 q$a@894@01)))
    (or
      (not
        (and
          (<= 0 q$a@894@01)
          (<= q$a@894@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@894@01)
        (<= q$a@894@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@894@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1671@17@1671@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@895@01 Int)
(declare-const q$b@896@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 494 | !(0 <= q$a@895@01) | live]
; [else-branch: 494 | 0 <= q$a@895@01 | live]
(push) ; 7
; [then-branch: 494 | !(0 <= q$a@895@01)]
(assert (not (<= 0 q$a@895@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 494 | 0 <= q$a@895@01]
(assert (<= 0 q$a@895@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 495 | !(q$a@895@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 495 | q$a@895@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 495 | !(q$a@895@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@895@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 495 | q$a@895@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@895@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 496 | !(0 <= q$b@896@01) | live]
; [else-branch: 496 | 0 <= q$b@896@01 | live]
(push) ; 11
; [then-branch: 496 | !(0 <= q$b@896@01)]
(assert (not (<= 0 q$b@896@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 496 | 0 <= q$b@896@01]
(assert (<= 0 q$b@896@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@896@01) (not (<= 0 q$b@896@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@896@01) (not (<= 0 q$b@896@01))))))
(assert (or
  (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@895@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@895@01)
  (and
    (<= 0 q$a@895@01)
    (=>
      (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@896@01) (not (<= 0 q$b@896@01)))))
    (or
      (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@895@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@895@01) (not (<= 0 q$a@895@01))))
(push) ; 6
; [then-branch: 497 | 0 <= q$a@895@01 && q$a@895@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@896@01 && q$b@896@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 497 | !(0 <= q$a@895@01 && q$a@895@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@896@01 && q$b@896@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 497 | 0 <= q$a@895@01 && q$a@895@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@896@01 && q$b@896@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@895@01)
  (and
    (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@896@01)
      (<= q$b@896@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 8
; [then-branch: 498 | False | dead]
; [else-branch: 498 | True | live]
(push) ; 9
; [else-branch: 498 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 497 | !(0 <= q$a@895@01 && q$a@895@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@896@01 && q$b@896@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@895@01)
    (and
      (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@896@01)
        (<= q$b@896@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@895@01)
    (and
      (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@896@01)
        (<= q$b@896@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@895@01)
    (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@896@01)
    (<= q$b@896@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@895@01)
      (and
        (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@896@01)
          (<= q$b@896@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@895@01)
    (and
      (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@896@01)
        (<= q$b@896@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@895@01 Int) (q$b@896@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@895@01)
      (and
        (<= 0 q$a@895@01)
        (=>
          (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@896@01) (not (<= 0 q$b@896@01)))))
        (or
          (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@895@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@895@01) (not (<= 0 q$a@895@01)))
    (=>
      (and
        (<= 0 q$a@895@01)
        (and
          (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@896@01)
            (<= q$b@896@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@895@01)
        (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@896@01)
        (<= q$b@896@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@895@01)
          (and
            (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@896@01)
              (<= q$b@896@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@895@01)
        (and
          (<= q$a@895@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@896@01)
            (<= q$b@896@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@895@01) q$b@896@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1672@17@1672@847-aux|)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@897@01 $Snap)
(assert (= $t@897@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@844@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@898@01 $Struct)
(assert (=
  self@898@01
  ($struct_set<$Struct> self@834@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@834@01 7))
    l$havoc@844@01))))
; [exec]
; $contracts := l$havoc$1
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@898@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@898@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@898@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@898@01 3))))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@898@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@898@01 3)))))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 479 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) == $struct_get[Int]($struct_loc[Int](self@834@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@830@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6))))
(pop) ; 3
; [eval] !!(($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(self, 6)): Int))
; [eval] !(($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(self, 6)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@830@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@834@01 6))))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@830@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6)))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 499 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) == $struct_get[Int]($struct_loc[Int](self@834@01, 6)) | live]
; [else-branch: 499 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) != $struct_get[Int]($struct_loc[Int](self@834@01, 6)) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 499 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) == $struct_get[Int]($struct_loc[Int](self@834@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@830@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6))))
; [eval] !(l$_to != 0)
; [eval] l$_to != 0
(push) ; 4
(set-option :timeout 10)
(assert (not (not (= l$_to@827@01 0))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (= l$_to@827@01 0)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 500 | l$_to@827@01 == 0 | live]
; [else-branch: 500 | l$_to@827@01 != 0 | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 500 | l$_to@827@01 == 0]
(assert (= l$_to@827@01 0))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [then-branch: 501 | False | dead]
; [else-branch: 501 | True | live]
(push) ; 5
; [else-branch: 501 | True]
(pop) ; 5
; [eval] !$succ
(push) ; 5
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 502 | True | live]
; [else-branch: 502 | False | dead]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 502 | True]
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 6
; [then-branch: 503 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) != $struct_get[Int]($struct_loc[Int](self@834@01, 6)) | dead]
; [else-branch: 503 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) == $struct_get[Int]($struct_loc[Int](self@834@01, 6)) | live]
(push) ; 7
; [else-branch: 503 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) == $struct_get[Int]($struct_loc[Int](self@834@01, 6))]
(pop) ; 7
(pop) ; 6
; Joined path conditions
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@899@01 Int)
(declare-const q$b@900@01 Int)
(push) ; 6
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 7
; [then-branch: 504 | !(0 <= q$a@899@01) | live]
; [else-branch: 504 | 0 <= q$a@899@01 | live]
(push) ; 8
; [then-branch: 504 | !(0 <= q$a@899@01)]
(assert (not (<= 0 q$a@899@01)))
(pop) ; 8
(push) ; 8
; [else-branch: 504 | 0 <= q$a@899@01]
(assert (<= 0 q$a@899@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 9
; [then-branch: 505 | !(q$a@899@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 505 | q$a@899@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 10
; [then-branch: 505 | !(q$a@899@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@899@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 10
(push) ; 10
; [else-branch: 505 | q$a@899@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@899@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 11
; [then-branch: 506 | !(0 <= q$b@900@01) | live]
; [else-branch: 506 | 0 <= q$b@900@01 | live]
(push) ; 12
; [then-branch: 506 | !(0 <= q$b@900@01)]
(assert (not (<= 0 q$b@900@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 506 | 0 <= q$b@900@01]
(assert (<= 0 q$b@900@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@900@01) (not (<= 0 q$b@900@01))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@900@01) (not (<= 0 q$b@900@01))))))
(assert (or
  (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@899@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@899@01)
  (and
    (<= 0 q$a@899@01)
    (=>
      (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@900@01) (not (<= 0 q$b@900@01)))))
    (or
      (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@899@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@899@01) (not (<= 0 q$a@899@01))))
(push) ; 7
; [then-branch: 507 | 0 <= q$a@899@01 && q$a@899@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@900@01 && q$b@900@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 507 | !(0 <= q$a@899@01 && q$a@899@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@900@01 && q$b@900@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 8
; [then-branch: 507 | 0 <= q$a@899@01 && q$a@899@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@900@01 && q$b@900@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@899@01)
  (and
    (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@900@01)
      (<= q$b@900@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 9
; [then-branch: 508 | False | dead]
; [else-branch: 508 | True | live]
(push) ; 10
; [else-branch: 508 | True]
(pop) ; 10
(pop) ; 9
; Joined path conditions
(pop) ; 8
(push) ; 8
; [else-branch: 507 | !(0 <= q$a@899@01 && q$a@899@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@900@01 && q$b@900@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@899@01)
    (and
      (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@900@01)
        (<= q$b@900@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@899@01)
    (and
      (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@900@01)
        (<= q$b@900@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@899@01)
    (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@900@01)
    (<= q$b@900@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@899@01)
      (and
        (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@900@01)
          (<= q$b@900@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@899@01)
    (and
      (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@900@01)
        (<= q$b@900@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 6
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@899@01 Int) (q$b@900@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@899@01)
      (and
        (<= 0 q$a@899@01)
        (=>
          (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@900@01) (not (<= 0 q$b@900@01)))))
        (or
          (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@899@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@899@01) (not (<= 0 q$a@899@01)))
    (=>
      (and
        (<= 0 q$a@899@01)
        (and
          (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@900@01)
            (<= q$b@900@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@899@01)
        (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@900@01)
        (<= q$b@900@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@899@01)
          (and
            (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@900@01)
              (<= q$b@900@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@899@01)
        (and
          (<= q$a@899@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@900@01)
            (<= q$b@900@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@899@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@900@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1669@17@1669@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@901@01 Int)
(push) ; 6
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 7
; [then-branch: 509 | !(0 <= q$a@901@01) | live]
; [else-branch: 509 | 0 <= q$a@901@01 | live]
(push) ; 8
; [then-branch: 509 | !(0 <= q$a@901@01)]
(assert (not (<= 0 q$a@901@01)))
(pop) ; 8
(push) ; 8
; [else-branch: 509 | 0 <= q$a@901@01]
(assert (<= 0 q$a@901@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@901@01) (not (<= 0 q$a@901@01))))
(push) ; 7
; [then-branch: 510 | 0 <= q$a@901@01 && q$a@901@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 510 | !(0 <= q$a@901@01 && q$a@901@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 8
; [then-branch: 510 | 0 <= q$a@901@01 && q$a@901@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@901@01)
  (<= q$a@901@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 9
; [then-branch: 511 | False | dead]
; [else-branch: 511 | True | live]
(push) ; 10
; [else-branch: 511 | True]
(pop) ; 10
(pop) ; 9
; Joined path conditions
(pop) ; 8
(push) ; 8
; [else-branch: 510 | !(0 <= q$a@901@01 && q$a@901@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@901@01)
    (<= q$a@901@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@901@01)
      (<= q$a@901@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@901@01)
    (<= q$a@901@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 6
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@901@01 Int)) (!
  (and
    (or (<= 0 q$a@901@01) (not (<= 0 q$a@901@01)))
    (or
      (not
        (and
          (<= 0 q$a@901@01)
          (<= q$a@901@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@901@01)
        (<= q$a@901@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@901@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1670@17@1670@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@902@01 Int)
(push) ; 6
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 7
; [then-branch: 512 | !(0 <= q$a@902@01) | live]
; [else-branch: 512 | 0 <= q$a@902@01 | live]
(push) ; 8
; [then-branch: 512 | !(0 <= q$a@902@01)]
(assert (not (<= 0 q$a@902@01)))
(pop) ; 8
(push) ; 8
; [else-branch: 512 | 0 <= q$a@902@01]
(assert (<= 0 q$a@902@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@902@01) (not (<= 0 q$a@902@01))))
(push) ; 7
; [then-branch: 513 | 0 <= q$a@902@01 && q$a@902@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 513 | !(0 <= q$a@902@01 && q$a@902@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 8
; [then-branch: 513 | 0 <= q$a@902@01 && q$a@902@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@902@01)
  (<= q$a@902@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 9
; [then-branch: 514 | False | dead]
; [else-branch: 514 | True | live]
(push) ; 10
; [else-branch: 514 | True]
(pop) ; 10
(pop) ; 9
; Joined path conditions
(pop) ; 8
(push) ; 8
; [else-branch: 513 | !(0 <= q$a@902@01 && q$a@902@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@902@01)
    (<= q$a@902@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@902@01)
      (<= q$a@902@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@902@01)
    (<= q$a@902@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 6
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@902@01 Int)) (!
  (and
    (or (<= 0 q$a@902@01) (not (<= 0 q$a@902@01)))
    (or
      (not
        (and
          (<= 0 q$a@902@01)
          (<= q$a@902@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@902@01)
        (<= q$a@902@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@902@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1671@17@1671@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@903@01 Int)
(declare-const q$b@904@01 Int)
(push) ; 6
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 7
; [then-branch: 515 | !(0 <= q$a@903@01) | live]
; [else-branch: 515 | 0 <= q$a@903@01 | live]
(push) ; 8
; [then-branch: 515 | !(0 <= q$a@903@01)]
(assert (not (<= 0 q$a@903@01)))
(pop) ; 8
(push) ; 8
; [else-branch: 515 | 0 <= q$a@903@01]
(assert (<= 0 q$a@903@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 9
; [then-branch: 516 | !(q$a@903@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 516 | q$a@903@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 10
; [then-branch: 516 | !(q$a@903@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@903@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 10
(push) ; 10
; [else-branch: 516 | q$a@903@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@903@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 11
; [then-branch: 517 | !(0 <= q$b@904@01) | live]
; [else-branch: 517 | 0 <= q$b@904@01 | live]
(push) ; 12
; [then-branch: 517 | !(0 <= q$b@904@01)]
(assert (not (<= 0 q$b@904@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 517 | 0 <= q$b@904@01]
(assert (<= 0 q$b@904@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@904@01) (not (<= 0 q$b@904@01))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@904@01) (not (<= 0 q$b@904@01))))))
(assert (or
  (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@903@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@903@01)
  (and
    (<= 0 q$a@903@01)
    (=>
      (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@904@01) (not (<= 0 q$b@904@01)))))
    (or
      (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@903@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@903@01) (not (<= 0 q$a@903@01))))
(push) ; 7
; [then-branch: 518 | 0 <= q$a@903@01 && q$a@903@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@904@01 && q$b@904@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 518 | !(0 <= q$a@903@01 && q$a@903@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@904@01 && q$b@904@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 8
; [then-branch: 518 | 0 <= q$a@903@01 && q$a@903@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@904@01 && q$b@904@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@903@01)
  (and
    (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@904@01)
      (<= q$b@904@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 9
; [then-branch: 519 | False | dead]
; [else-branch: 519 | True | live]
(push) ; 10
; [else-branch: 519 | True]
(pop) ; 10
(pop) ; 9
; Joined path conditions
(pop) ; 8
(push) ; 8
; [else-branch: 518 | !(0 <= q$a@903@01 && q$a@903@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@904@01 && q$b@904@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@903@01)
    (and
      (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@904@01)
        (<= q$b@904@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@903@01)
    (and
      (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@904@01)
        (<= q$b@904@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@903@01)
    (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@904@01)
    (<= q$b@904@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@903@01)
      (and
        (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@904@01)
          (<= q$b@904@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@903@01)
    (and
      (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@904@01)
        (<= q$b@904@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 6
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@903@01 Int) (q$b@904@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@903@01)
      (and
        (<= 0 q$a@903@01)
        (=>
          (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@904@01) (not (<= 0 q$b@904@01)))))
        (or
          (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@903@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@903@01) (not (<= 0 q$a@903@01)))
    (=>
      (and
        (<= 0 q$a@903@01)
        (and
          (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@904@01)
            (<= q$b@904@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@903@01)
        (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@904@01)
        (<= q$b@904@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@903@01)
          (and
            (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@904@01)
              (<= q$b@904@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@903@01)
        (and
          (<= q$a@903@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@904@01)
            (<= q$b@904@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@903@01) q$b@904@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1672@17@1672@847-aux|)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@905@01 $Snap)
(assert (= $t@905@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@844@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@906@01 $Struct)
(assert (=
  self@906@01
  ($struct_set<$Struct> self@834@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@834@01 7))
    l$havoc@844@01))))
; [exec]
; $contracts := l$havoc$1
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 6
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@906@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6)))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@906@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 6
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@906@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@906@01 3))))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@906@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@906@01 3)))))
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 500 | l$_to@827@01 != 0]
(assert (not (= l$_to@827@01 0)))
(pop) ; 4
; [eval] !!(l$_to != 0)
; [eval] !(l$_to != 0)
; [eval] l$_to != 0
(push) ; 4
(set-option :timeout 10)
(assert (not (= l$_to@827@01 0)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not (= l$_to@827@01 0))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 520 | l$_to@827@01 != 0 | live]
; [else-branch: 520 | l$_to@827@01 == 0 | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 520 | l$_to@827@01 != 0]
(assert (not (= l$_to@827@01 0)))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) + $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] $unwrap(l$_value)
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@834@01 5))))
      ($unwrap<Int> l$_value@828@01))
    0))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 521 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@834@01, 5)))) + $unwrap[Int](l$_value@828@01) < 0 | dead]
; [else-branch: 521 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@834@01, 5)))) + $unwrap[Int](l$_value@828@01) < 0) | live]
(set-option :timeout 0)
(push) ; 5
; [else-branch: 521 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@834@01, 5)))) + $unwrap[Int](l$_value@828@01) < 0)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@834@01 5))))
      ($unwrap<Int> l$_value@828@01))
    0)))
(pop) ; 5
; [eval] !($unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) + $unwrap(l$_value) < 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) + $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] $unwrap(l$_value)
(push) ; 5
(set-option :timeout 10)
(assert (not (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@834@01 5))))
    ($unwrap<Int> l$_value@828@01))
  0)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@834@01 5))))
      ($unwrap<Int> l$_value@828@01))
    0))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 522 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@834@01, 5)))) + $unwrap[Int](l$_value@828@01) < 0) | live]
; [else-branch: 522 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@834@01, 5)))) + $unwrap[Int](l$_value@828@01) < 0 | dead]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 522 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@834@01, 5)))) + $unwrap[Int](l$_value@828@01) < 0)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@834@01 5))))
      ($unwrap<Int> l$_value@828@01))
    0)))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] $unwrap(l$_value)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@834@01 5))))
      ($unwrap<Int> l$_value@828@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (>
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@834@01 5))))
    ($unwrap<Int> l$_value@828@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 523 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@834@01, 5)))) + $unwrap[Int](l$_value@828@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | live]
; [else-branch: 523 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@834@01, 5)))) + $unwrap[Int](l$_value@828@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 523 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@834@01, 5)))) + $unwrap[Int](l$_value@828@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935]
(assert (>
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@834@01 5))))
    ($unwrap<Int> l$_value@828@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; [exec]
; $overflow := true
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [then-branch: 524 | False | dead]
; [else-branch: 524 | True | live]
(push) ; 7
; [else-branch: 524 | True]
(pop) ; 7
; [eval] !$succ
(push) ; 7
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 525 | True | live]
; [else-branch: 525 | False | dead]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 525 | True]
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 8
; [then-branch: 526 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) != $struct_get[Int]($struct_loc[Int](self@834@01, 6)) | dead]
; [else-branch: 526 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) == $struct_get[Int]($struct_loc[Int](self@834@01, 6)) | live]
(push) ; 9
; [else-branch: 526 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) == $struct_get[Int]($struct_loc[Int](self@834@01, 6))]
(pop) ; 9
(pop) ; 8
; Joined path conditions
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@907@01 Int)
(declare-const q$b@908@01 Int)
(push) ; 8
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 527 | !(0 <= q$a@907@01) | live]
; [else-branch: 527 | 0 <= q$a@907@01 | live]
(push) ; 10
; [then-branch: 527 | !(0 <= q$a@907@01)]
(assert (not (<= 0 q$a@907@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 527 | 0 <= q$a@907@01]
(assert (<= 0 q$a@907@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 11
; [then-branch: 528 | !(q$a@907@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 528 | q$a@907@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 12
; [then-branch: 528 | !(q$a@907@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@907@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 12
(push) ; 12
; [else-branch: 528 | q$a@907@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@907@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 13
; [then-branch: 529 | !(0 <= q$b@908@01) | live]
; [else-branch: 529 | 0 <= q$b@908@01 | live]
(push) ; 14
; [then-branch: 529 | !(0 <= q$b@908@01)]
(assert (not (<= 0 q$b@908@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 529 | 0 <= q$b@908@01]
(assert (<= 0 q$b@908@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@908@01) (not (<= 0 q$b@908@01))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@908@01) (not (<= 0 q$b@908@01))))))
(assert (or
  (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@907@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@907@01)
  (and
    (<= 0 q$a@907@01)
    (=>
      (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@908@01) (not (<= 0 q$b@908@01)))))
    (or
      (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@907@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@907@01) (not (<= 0 q$a@907@01))))
(push) ; 9
; [then-branch: 530 | 0 <= q$a@907@01 && q$a@907@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@908@01 && q$b@908@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 530 | !(0 <= q$a@907@01 && q$a@907@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@908@01 && q$b@908@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 530 | 0 <= q$a@907@01 && q$a@907@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@908@01 && q$b@908@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@907@01)
  (and
    (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@908@01)
      (<= q$b@908@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 11
; [then-branch: 531 | False | dead]
; [else-branch: 531 | True | live]
(push) ; 12
; [else-branch: 531 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 530 | !(0 <= q$a@907@01 && q$a@907@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@908@01 && q$b@908@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@907@01)
    (and
      (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@908@01)
        (<= q$b@908@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@907@01)
    (and
      (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@908@01)
        (<= q$b@908@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@907@01)
    (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@908@01)
    (<= q$b@908@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@907@01)
      (and
        (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@908@01)
          (<= q$b@908@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@907@01)
    (and
      (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@908@01)
        (<= q$b@908@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@907@01 Int) (q$b@908@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@907@01)
      (and
        (<= 0 q$a@907@01)
        (=>
          (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@908@01) (not (<= 0 q$b@908@01)))))
        (or
          (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@907@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@907@01) (not (<= 0 q$a@907@01)))
    (=>
      (and
        (<= 0 q$a@907@01)
        (and
          (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@908@01)
            (<= q$b@908@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@907@01)
        (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@908@01)
        (<= q$b@908@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@907@01)
          (and
            (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@908@01)
              (<= q$b@908@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@907@01)
        (and
          (<= q$a@907@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@908@01)
            (<= q$b@908@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@907@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@908@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1669@17@1669@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@909@01 Int)
(push) ; 8
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 532 | !(0 <= q$a@909@01) | live]
; [else-branch: 532 | 0 <= q$a@909@01 | live]
(push) ; 10
; [then-branch: 532 | !(0 <= q$a@909@01)]
(assert (not (<= 0 q$a@909@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 532 | 0 <= q$a@909@01]
(assert (<= 0 q$a@909@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@909@01) (not (<= 0 q$a@909@01))))
(push) ; 9
; [then-branch: 533 | 0 <= q$a@909@01 && q$a@909@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 533 | !(0 <= q$a@909@01 && q$a@909@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 533 | 0 <= q$a@909@01 && q$a@909@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@909@01)
  (<= q$a@909@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 11
; [then-branch: 534 | False | dead]
; [else-branch: 534 | True | live]
(push) ; 12
; [else-branch: 534 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 533 | !(0 <= q$a@909@01 && q$a@909@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@909@01)
    (<= q$a@909@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@909@01)
      (<= q$a@909@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@909@01)
    (<= q$a@909@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@909@01 Int)) (!
  (and
    (or (<= 0 q$a@909@01) (not (<= 0 q$a@909@01)))
    (or
      (not
        (and
          (<= 0 q$a@909@01)
          (<= q$a@909@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@909@01)
        (<= q$a@909@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@909@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1670@17@1670@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@910@01 Int)
(push) ; 8
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 535 | !(0 <= q$a@910@01) | live]
; [else-branch: 535 | 0 <= q$a@910@01 | live]
(push) ; 10
; [then-branch: 535 | !(0 <= q$a@910@01)]
(assert (not (<= 0 q$a@910@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 535 | 0 <= q$a@910@01]
(assert (<= 0 q$a@910@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@910@01) (not (<= 0 q$a@910@01))))
(push) ; 9
; [then-branch: 536 | 0 <= q$a@910@01 && q$a@910@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 536 | !(0 <= q$a@910@01 && q$a@910@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 536 | 0 <= q$a@910@01 && q$a@910@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@910@01)
  (<= q$a@910@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 11
; [then-branch: 537 | False | dead]
; [else-branch: 537 | True | live]
(push) ; 12
; [else-branch: 537 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 536 | !(0 <= q$a@910@01 && q$a@910@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@910@01)
    (<= q$a@910@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@910@01)
      (<= q$a@910@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@910@01)
    (<= q$a@910@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@910@01 Int)) (!
  (and
    (or (<= 0 q$a@910@01) (not (<= 0 q$a@910@01)))
    (or
      (not
        (and
          (<= 0 q$a@910@01)
          (<= q$a@910@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@910@01)
        (<= q$a@910@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@910@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1671@17@1671@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@911@01 Int)
(declare-const q$b@912@01 Int)
(push) ; 8
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 538 | !(0 <= q$a@911@01) | live]
; [else-branch: 538 | 0 <= q$a@911@01 | live]
(push) ; 10
; [then-branch: 538 | !(0 <= q$a@911@01)]
(assert (not (<= 0 q$a@911@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 538 | 0 <= q$a@911@01]
(assert (<= 0 q$a@911@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 11
; [then-branch: 539 | !(q$a@911@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 539 | q$a@911@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 12
; [then-branch: 539 | !(q$a@911@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@911@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 12
(push) ; 12
; [else-branch: 539 | q$a@911@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@911@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 13
; [then-branch: 540 | !(0 <= q$b@912@01) | live]
; [else-branch: 540 | 0 <= q$b@912@01 | live]
(push) ; 14
; [then-branch: 540 | !(0 <= q$b@912@01)]
(assert (not (<= 0 q$b@912@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 540 | 0 <= q$b@912@01]
(assert (<= 0 q$b@912@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@912@01) (not (<= 0 q$b@912@01))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@912@01) (not (<= 0 q$b@912@01))))))
(assert (or
  (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@911@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@911@01)
  (and
    (<= 0 q$a@911@01)
    (=>
      (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@912@01) (not (<= 0 q$b@912@01)))))
    (or
      (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@911@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@911@01) (not (<= 0 q$a@911@01))))
(push) ; 9
; [then-branch: 541 | 0 <= q$a@911@01 && q$a@911@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@912@01 && q$b@912@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 541 | !(0 <= q$a@911@01 && q$a@911@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@912@01 && q$b@912@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 541 | 0 <= q$a@911@01 && q$a@911@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@912@01 && q$b@912@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@911@01)
  (and
    (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@912@01)
      (<= q$b@912@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 11
; [then-branch: 542 | False | dead]
; [else-branch: 542 | True | live]
(push) ; 12
; [else-branch: 542 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 541 | !(0 <= q$a@911@01 && q$a@911@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@912@01 && q$b@912@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@911@01)
    (and
      (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@912@01)
        (<= q$b@912@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@911@01)
    (and
      (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@912@01)
        (<= q$b@912@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@911@01)
    (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@912@01)
    (<= q$b@912@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@911@01)
      (and
        (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@912@01)
          (<= q$b@912@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@911@01)
    (and
      (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@912@01)
        (<= q$b@912@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@911@01 Int) (q$b@912@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@911@01)
      (and
        (<= 0 q$a@911@01)
        (=>
          (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@912@01) (not (<= 0 q$b@912@01)))))
        (or
          (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@911@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@911@01) (not (<= 0 q$a@911@01)))
    (=>
      (and
        (<= 0 q$a@911@01)
        (and
          (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@912@01)
            (<= q$b@912@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@911@01)
        (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@912@01)
        (<= q$b@912@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@911@01)
          (and
            (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@912@01)
              (<= q$b@912@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@911@01)
        (and
          (<= q$a@911@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@912@01)
            (<= q$b@912@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@911@01) q$b@912@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1672@17@1672@847-aux|)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@913@01 $Snap)
(assert (= $t@913@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@844@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@914@01 $Struct)
(assert (=
  self@914@01
  ($struct_set<$Struct> self@834@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@834@01 7))
    l$havoc@844@01))))
; [exec]
; $contracts := l$havoc$1
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 8
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@914@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@914@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@914@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@914@01 3))))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@914@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@914@01 3)))))
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 523 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@834@01, 5)))) + $unwrap[Int](l$_value@828@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@834@01 5))))
      ($unwrap<Int> l$_value@828@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(pop) ; 6
; [eval] !($unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] $unwrap(l$_value)
(push) ; 6
(set-option :timeout 10)
(assert (not (>
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@834@01 5))))
    ($unwrap<Int> l$_value@828@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@834@01 5))))
      ($unwrap<Int> l$_value@828@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 543 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@834@01, 5)))) + $unwrap[Int](l$_value@828@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
; [else-branch: 543 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@834@01, 5)))) + $unwrap[Int](l$_value@828@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 543 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@834@01, 5)))) + $unwrap[Int](l$_value@828@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@834@01 5))))
      ($unwrap<Int> l$_value@828@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
; [exec]
; self := ($struct_set(self, 5, $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) +
;   $unwrap(l$_value)): $Struct)
; [eval] ($struct_set(self, 5, $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) + $unwrap(l$_value)): $Struct)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] $unwrap(l$_value)
(declare-const self@915@01 $Struct)
(assert (=
  self@915@01
  ($struct_set<$Struct> self@834@01 5 (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@834@01 5))))
    ($unwrap<Int> l$_value@828@01)))))
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(push) ; 7
(set-option :timeout 10)
(assert (not (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@915@01 3)) l$_to@827@01)))
      ($unwrap<Int> l$_value@828@01))
    0))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 544 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@915@01, 3)), l$_to@827@01))) + $unwrap[Int](l$_value@828@01) < 0 | dead]
; [else-branch: 544 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@915@01, 3)), l$_to@827@01))) + $unwrap[Int](l$_value@828@01) < 0) | live]
(set-option :timeout 0)
(push) ; 7
; [else-branch: 544 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@915@01, 3)), l$_to@827@01))) + $unwrap[Int](l$_value@828@01) < 0)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@915@01 3)) l$_to@827@01)))
      ($unwrap<Int> l$_value@828@01))
    0)))
(pop) ; 7
; [eval] !($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) < 0)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(push) ; 7
(set-option :timeout 10)
(assert (not (<
  (+
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@915@01 3)) l$_to@827@01)))
    ($unwrap<Int> l$_value@828@01))
  0)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@915@01 3)) l$_to@827@01)))
      ($unwrap<Int> l$_value@828@01))
    0))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 545 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@915@01, 3)), l$_to@827@01))) + $unwrap[Int](l$_value@828@01) < 0) | live]
; [else-branch: 545 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@915@01, 3)), l$_to@827@01))) + $unwrap[Int](l$_value@828@01) < 0 | dead]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 545 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@915@01, 3)), l$_to@827@01))) + $unwrap[Int](l$_value@828@01) < 0)]
(assert (not
  (<
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@915@01 3)) l$_to@827@01)))
      ($unwrap<Int> l$_value@828@01))
    0)))
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(push) ; 8
(set-option :timeout 10)
(assert (not (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@915@01 3)) l$_to@827@01)))
      ($unwrap<Int> l$_value@828@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 546 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@915@01, 3)), l$_to@827@01))) + $unwrap[Int](l$_value@828@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
; [else-branch: 546 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@915@01, 3)), l$_to@827@01))) + $unwrap[Int](l$_value@828@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
(set-option :timeout 0)
(push) ; 8
; [else-branch: 546 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@915@01, 3)), l$_to@827@01))) + $unwrap[Int](l$_value@828@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@915@01 3)) l$_to@827@01)))
      ($unwrap<Int> l$_value@828@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(pop) ; 8
; [eval] !($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(push) ; 8
(set-option :timeout 10)
(assert (not (>
  (+
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@915@01 3)) l$_to@827@01)))
    ($unwrap<Int> l$_value@828@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@915@01 3)) l$_to@827@01)))
      ($unwrap<Int> l$_value@828@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 547 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@915@01, 3)), l$_to@827@01))) + $unwrap[Int](l$_value@828@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
; [else-branch: 547 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@915@01, 3)), l$_to@827@01))) + $unwrap[Int](l$_value@828@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 547 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@915@01, 3)), l$_to@827@01))) + $unwrap[Int](l$_value@828@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (+
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@915@01 3)) l$_to@827@01)))
      ($unwrap<Int> l$_value@828@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
; [exec]
; self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;   l$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;   l$_to): Int))) +
;   $unwrap(l$_value)): $Map[Int, Int])): $Struct)
; [eval] ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)): $Map[Int, Int])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$_value)
(declare-const self@916@01 $Struct)
(assert (=
  self@916@01
  ($struct_set<$Struct> self@915@01 3 ($map_set<$Map<Int~_Int>> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@915@01 3)) l$_to@827@01 (+
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@915@01 3)) l$_to@827@01)))
    ($unwrap<Int> l$_value@828@01))))))
; [exec]
; inhale acc(e$Transfer(0, l$_to, $unwrap(l$_value)), write)
; [eval] $unwrap(l$_value)
(declare-const $t@917@01 $Snap)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label return
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not $out_of_gas@843@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not $out_of_gas@843@01))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 548 | $out_of_gas@843@01 | live]
; [else-branch: 548 | !($out_of_gas@843@01) | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 548 | $out_of_gas@843@01]
(assert $out_of_gas@843@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [then-branch: 549 | False | dead]
; [else-branch: 549 | True | live]
(push) ; 10
; [else-branch: 549 | True]
(pop) ; 10
; [eval] !$succ
(push) ; 10
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 550 | True | live]
; [else-branch: 550 | False | dead]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 550 | True]
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 11
; [then-branch: 551 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) != $struct_get[Int]($struct_loc[Int](self@834@01, 6)) | dead]
; [else-branch: 551 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) == $struct_get[Int]($struct_loc[Int](self@834@01, 6)) | live]
(push) ; 12
; [else-branch: 551 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) == $struct_get[Int]($struct_loc[Int](self@834@01, 6))]
(pop) ; 12
(pop) ; 11
; Joined path conditions
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@918@01 Int)
(declare-const q$b@919@01 Int)
(push) ; 11
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 552 | !(0 <= q$a@918@01) | live]
; [else-branch: 552 | 0 <= q$a@918@01 | live]
(push) ; 13
; [then-branch: 552 | !(0 <= q$a@918@01)]
(assert (not (<= 0 q$a@918@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 552 | 0 <= q$a@918@01]
(assert (<= 0 q$a@918@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 14
; [then-branch: 553 | !(q$a@918@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 553 | q$a@918@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 15
; [then-branch: 553 | !(q$a@918@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@918@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 15
(push) ; 15
; [else-branch: 553 | q$a@918@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@918@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 16
; [then-branch: 554 | !(0 <= q$b@919@01) | live]
; [else-branch: 554 | 0 <= q$b@919@01 | live]
(push) ; 17
; [then-branch: 554 | !(0 <= q$b@919@01)]
(assert (not (<= 0 q$b@919@01)))
(pop) ; 17
(push) ; 17
; [else-branch: 554 | 0 <= q$b@919@01]
(assert (<= 0 q$b@919@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 17
(pop) ; 16
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@919@01) (not (<= 0 q$b@919@01))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@919@01) (not (<= 0 q$b@919@01))))))
(assert (or
  (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@918@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@918@01)
  (and
    (<= 0 q$a@918@01)
    (=>
      (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@919@01) (not (<= 0 q$b@919@01)))))
    (or
      (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@918@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@918@01) (not (<= 0 q$a@918@01))))
(push) ; 12
; [then-branch: 555 | 0 <= q$a@918@01 && q$a@918@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@919@01 && q$b@919@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 555 | !(0 <= q$a@918@01 && q$a@918@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@919@01 && q$b@919@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 555 | 0 <= q$a@918@01 && q$a@918@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@919@01 && q$b@919@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@918@01)
  (and
    (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@919@01)
      (<= q$b@919@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 14
; [then-branch: 556 | False | dead]
; [else-branch: 556 | True | live]
(push) ; 15
; [else-branch: 556 | True]
(pop) ; 15
(pop) ; 14
; Joined path conditions
(pop) ; 13
(push) ; 13
; [else-branch: 555 | !(0 <= q$a@918@01 && q$a@918@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@919@01 && q$b@919@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@918@01)
    (and
      (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@919@01)
        (<= q$b@919@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@918@01)
    (and
      (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@919@01)
        (<= q$b@919@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@918@01)
    (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@919@01)
    (<= q$b@919@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@918@01)
      (and
        (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@919@01)
          (<= q$b@919@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@918@01)
    (and
      (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@919@01)
        (<= q$b@919@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@918@01 Int) (q$b@919@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@918@01)
      (and
        (<= 0 q$a@918@01)
        (=>
          (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@919@01) (not (<= 0 q$b@919@01)))))
        (or
          (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@918@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@918@01) (not (<= 0 q$a@918@01)))
    (=>
      (and
        (<= 0 q$a@918@01)
        (and
          (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@919@01)
            (<= q$b@919@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@918@01)
        (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@919@01)
        (<= q$b@919@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@918@01)
          (and
            (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@919@01)
              (<= q$b@919@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@918@01)
        (and
          (<= q$a@918@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@919@01)
            (<= q$b@919@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@918@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@919@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1669@17@1669@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@920@01 Int)
(push) ; 11
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 557 | !(0 <= q$a@920@01) | live]
; [else-branch: 557 | 0 <= q$a@920@01 | live]
(push) ; 13
; [then-branch: 557 | !(0 <= q$a@920@01)]
(assert (not (<= 0 q$a@920@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 557 | 0 <= q$a@920@01]
(assert (<= 0 q$a@920@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@920@01) (not (<= 0 q$a@920@01))))
(push) ; 12
; [then-branch: 558 | 0 <= q$a@920@01 && q$a@920@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 558 | !(0 <= q$a@920@01 && q$a@920@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 558 | 0 <= q$a@920@01 && q$a@920@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@920@01)
  (<= q$a@920@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 14
; [then-branch: 559 | False | dead]
; [else-branch: 559 | True | live]
(push) ; 15
; [else-branch: 559 | True]
(pop) ; 15
(pop) ; 14
; Joined path conditions
(pop) ; 13
(push) ; 13
; [else-branch: 558 | !(0 <= q$a@920@01 && q$a@920@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@920@01)
    (<= q$a@920@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@920@01)
      (<= q$a@920@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@920@01)
    (<= q$a@920@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@920@01 Int)) (!
  (and
    (or (<= 0 q$a@920@01) (not (<= 0 q$a@920@01)))
    (or
      (not
        (and
          (<= 0 q$a@920@01)
          (<= q$a@920@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@920@01)
        (<= q$a@920@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@920@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1670@17@1670@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@921@01 Int)
(push) ; 11
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 560 | !(0 <= q$a@921@01) | live]
; [else-branch: 560 | 0 <= q$a@921@01 | live]
(push) ; 13
; [then-branch: 560 | !(0 <= q$a@921@01)]
(assert (not (<= 0 q$a@921@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 560 | 0 <= q$a@921@01]
(assert (<= 0 q$a@921@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@921@01) (not (<= 0 q$a@921@01))))
(push) ; 12
; [then-branch: 561 | 0 <= q$a@921@01 && q$a@921@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 561 | !(0 <= q$a@921@01 && q$a@921@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 561 | 0 <= q$a@921@01 && q$a@921@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@921@01)
  (<= q$a@921@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 14
; [then-branch: 562 | False | dead]
; [else-branch: 562 | True | live]
(push) ; 15
; [else-branch: 562 | True]
(pop) ; 15
(pop) ; 14
; Joined path conditions
(pop) ; 13
(push) ; 13
; [else-branch: 561 | !(0 <= q$a@921@01 && q$a@921@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@921@01)
    (<= q$a@921@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@921@01)
      (<= q$a@921@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@921@01)
    (<= q$a@921@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@921@01 Int)) (!
  (and
    (or (<= 0 q$a@921@01) (not (<= 0 q$a@921@01)))
    (or
      (not
        (and
          (<= 0 q$a@921@01)
          (<= q$a@921@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@921@01)
        (<= q$a@921@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@921@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1671@17@1671@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@922@01 Int)
(declare-const q$b@923@01 Int)
(push) ; 11
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 563 | !(0 <= q$a@922@01) | live]
; [else-branch: 563 | 0 <= q$a@922@01 | live]
(push) ; 13
; [then-branch: 563 | !(0 <= q$a@922@01)]
(assert (not (<= 0 q$a@922@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 563 | 0 <= q$a@922@01]
(assert (<= 0 q$a@922@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 14
; [then-branch: 564 | !(q$a@922@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 564 | q$a@922@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 15
; [then-branch: 564 | !(q$a@922@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@922@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 15
(push) ; 15
; [else-branch: 564 | q$a@922@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@922@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 16
; [then-branch: 565 | !(0 <= q$b@923@01) | live]
; [else-branch: 565 | 0 <= q$b@923@01 | live]
(push) ; 17
; [then-branch: 565 | !(0 <= q$b@923@01)]
(assert (not (<= 0 q$b@923@01)))
(pop) ; 17
(push) ; 17
; [else-branch: 565 | 0 <= q$b@923@01]
(assert (<= 0 q$b@923@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 17
(pop) ; 16
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@923@01) (not (<= 0 q$b@923@01))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@923@01) (not (<= 0 q$b@923@01))))))
(assert (or
  (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@922@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@922@01)
  (and
    (<= 0 q$a@922@01)
    (=>
      (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@923@01) (not (<= 0 q$b@923@01)))))
    (or
      (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@922@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@922@01) (not (<= 0 q$a@922@01))))
(push) ; 12
; [then-branch: 566 | 0 <= q$a@922@01 && q$a@922@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@923@01 && q$b@923@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 566 | !(0 <= q$a@922@01 && q$a@922@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@923@01 && q$b@923@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 566 | 0 <= q$a@922@01 && q$a@922@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@923@01 && q$b@923@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@922@01)
  (and
    (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@923@01)
      (<= q$b@923@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 14
; [then-branch: 567 | False | dead]
; [else-branch: 567 | True | live]
(push) ; 15
; [else-branch: 567 | True]
(pop) ; 15
(pop) ; 14
; Joined path conditions
(pop) ; 13
(push) ; 13
; [else-branch: 566 | !(0 <= q$a@922@01 && q$a@922@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@923@01 && q$b@923@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@922@01)
    (and
      (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@923@01)
        (<= q$b@923@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@922@01)
    (and
      (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@923@01)
        (<= q$b@923@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@922@01)
    (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@923@01)
    (<= q$b@923@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@922@01)
      (and
        (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@923@01)
          (<= q$b@923@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@922@01)
    (and
      (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@923@01)
        (<= q$b@923@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@922@01 Int) (q$b@923@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@922@01)
      (and
        (<= 0 q$a@922@01)
        (=>
          (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@923@01) (not (<= 0 q$b@923@01)))))
        (or
          (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@922@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@922@01) (not (<= 0 q$a@922@01)))
    (=>
      (and
        (<= 0 q$a@922@01)
        (and
          (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@923@01)
            (<= q$b@923@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@922@01)
        (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@923@01)
        (<= q$b@923@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@922@01)
          (and
            (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@923@01)
              (<= q$b@923@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@922@01)
        (and
          (<= q$a@922@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@923@01)
            (<= q$b@923@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@922@01) q$b@923@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1672@17@1672@847-aux|)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@924@01 $Snap)
(assert (= $t@924@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@844@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@925@01 $Struct)
(assert (=
  self@925@01
  ($struct_set<$Struct> self@834@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@834@01 7))
    l$havoc@844@01))))
; [exec]
; $contracts := l$havoc$1
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 11
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@925@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@925@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 11
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@925@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@925@01 3))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@925@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@925@01 3)))))
(pop) ; 10
(pop) ; 9
(push) ; 9
; [else-branch: 548 | !($out_of_gas@843@01)]
(assert (not $out_of_gas@843@01))
(pop) ; 9
; [eval] !$out_of_gas
(push) ; 9
(set-option :timeout 10)
(assert (not $out_of_gas@843@01))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not $out_of_gas@843@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 568 | !($out_of_gas@843@01) | live]
; [else-branch: 568 | $out_of_gas@843@01 | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 568 | !($out_of_gas@843@01)]
(assert (not $out_of_gas@843@01))
; [exec]
; label end
(push) ; 10
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 569 | True | live]
; [else-branch: 569 | False | dead]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 569 | True]
; [exec]
; assert ($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 11
(push) ; 12
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@830@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@916@01 6)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [then-branch: 570 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) != $struct_get[Int]($struct_loc[Int](self@916@01, 6)) | dead]
; [else-branch: 570 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) == $struct_get[Int]($struct_loc[Int](self@916@01, 6)) | live]
(set-option :timeout 0)
(push) ; 12
; [else-branch: 570 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) == $struct_get[Int]($struct_loc[Int](self@916@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@830@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@916@01 6))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@830@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@916@01 6))))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@926@01 Int)
(declare-const q$b@927@01 Int)
(push) ; 11
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 571 | !(0 <= q$a@926@01) | live]
; [else-branch: 571 | 0 <= q$a@926@01 | live]
(push) ; 13
; [then-branch: 571 | !(0 <= q$a@926@01)]
(assert (not (<= 0 q$a@926@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 571 | 0 <= q$a@926@01]
(assert (<= 0 q$a@926@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 14
; [then-branch: 572 | !(q$a@926@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 572 | q$a@926@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 15
; [then-branch: 572 | !(q$a@926@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@926@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 15
(push) ; 15
; [else-branch: 572 | q$a@926@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@926@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 16
; [then-branch: 573 | !(0 <= q$b@927@01) | live]
; [else-branch: 573 | 0 <= q$b@927@01 | live]
(push) ; 17
; [then-branch: 573 | !(0 <= q$b@927@01)]
(assert (not (<= 0 q$b@927@01)))
(pop) ; 17
(push) ; 17
; [else-branch: 573 | 0 <= q$b@927@01]
(assert (<= 0 q$b@927@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 17
(pop) ; 16
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@927@01) (not (<= 0 q$b@927@01))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@927@01) (not (<= 0 q$b@927@01))))))
(assert (or
  (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@926@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@926@01)
  (and
    (<= 0 q$a@926@01)
    (=>
      (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@927@01) (not (<= 0 q$b@927@01)))))
    (or
      (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@926@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@926@01) (not (<= 0 q$a@926@01))))
(push) ; 12
; [then-branch: 574 | 0 <= q$a@926@01 && q$a@926@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@927@01 && q$b@927@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 574 | !(0 <= q$a@926@01 && q$a@926@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@927@01 && q$b@927@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 574 | 0 <= q$a@926@01 && q$a@926@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@927@01 && q$b@927@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@926@01)
  (and
    (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@927@01)
      (<= q$b@927@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 14
; [then-branch: 575 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@926@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@926@01)) | live]
; [else-branch: 575 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@926@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@926@01) | live]
(push) ; 15
; [then-branch: 575 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@926@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@926@01))]
(assert (not
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))))
(pop) ; 15
(push) ; 15
; [else-branch: 575 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@926@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@926@01)]
(assert (>
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))
  (not
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01)))))
(push) ; 14
; [then-branch: 576 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@926@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@926@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$b@927@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$b@927@01) | live]
; [else-branch: 576 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@926@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@926@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$b@927@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$b@927@01)) | live]
(push) ; 15
; [then-branch: 576 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@926@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@926@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$b@927@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$b@927@01)]
(assert (and
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@927@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@927@01))))
; [eval] perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] 1 * write
(pop) ; 15
(push) ; 15
; [else-branch: 576 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@926@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@926@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$b@927@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$b@927@01))]
(assert (not
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@927@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@927@01)))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@927@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@927@01))))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@927@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@927@01)))))
(pop) ; 13
(push) ; 13
; [else-branch: 574 | !(0 <= q$a@926@01 && q$a@926@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@927@01 && q$b@927@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@926@01)
    (and
      (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@927@01)
        (<= q$b@927@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@926@01)
    (and
      (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@927@01)
        (<= q$b@927@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@926@01)
    (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@927@01)
    (<= q$b@927@01 1461501637330902918203684832716283019655932542975)
    (or
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))
      (not
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))))
    (or
      (not
        (and
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@927@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@927@01))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@927@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@927@01)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@926@01)
      (and
        (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@927@01)
          (<= q$b@927@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@926@01)
    (and
      (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@927@01)
        (<= q$b@927@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@926@01 Int) (q$b@927@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@926@01)
      (and
        (<= 0 q$a@926@01)
        (=>
          (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@927@01) (not (<= 0 q$b@927@01)))))
        (or
          (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@926@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@926@01) (not (<= 0 q$a@926@01)))
    (=>
      (and
        (<= 0 q$a@926@01)
        (and
          (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@927@01)
            (<= q$b@927@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@926@01)
        (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@927@01)
        (<= q$b@927@01 1461501637330902918203684832716283019655932542975)
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@927@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@927@01))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@927@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@927@01))))))
    (or
      (not
        (and
          (<= 0 q$a@926@01)
          (and
            (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@927@01)
              (<= q$b@927@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@926@01)
        (and
          (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@927@01)
            (<= q$b@927@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@927@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1663@13@1663@853-aux|)))
(push) ; 11
(assert (not (forall ((q$a@926@01 Int) (q$b@927@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@926@01)
        (and
          (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@927@01)
            (<= q$b@927@01 1461501637330902918203684832716283019655932542975))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@927@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@927@01))))
    (=
      (ite
        (and
          (= q$b@927@01 0)
          (= q$a@926@01 l$_to@827@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))
            ($unwrap<Int> l$_value@828@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@927@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1663@13@1663@853|))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@926@01 Int) (q$b@927@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@926@01)
        (and
          (<= q$a@926@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@927@01)
            (<= q$b@927@01 1461501637330902918203684832716283019655932542975))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@927@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@927@01))))
    (=
      (ite
        (and
          (= q$b@927@01 0)
          (= q$a@926@01 l$_to@827@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@926@01))
            ($unwrap<Int> l$_value@828@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@926@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@927@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1663@13@1663@853|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@928@01 Int)
(push) ; 11
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 577 | !(0 <= q$a@928@01) | live]
; [else-branch: 577 | 0 <= q$a@928@01 | live]
(push) ; 13
; [then-branch: 577 | !(0 <= q$a@928@01)]
(assert (not (<= 0 q$a@928@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 577 | 0 <= q$a@928@01]
(assert (<= 0 q$a@928@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@928@01) (not (<= 0 q$a@928@01))))
(push) ; 12
; [then-branch: 578 | 0 <= q$a@928@01 && q$a@928@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 578 | !(0 <= q$a@928@01 && q$a@928@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 578 | 0 <= q$a@928@01 && q$a@928@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@928@01)
  (<= q$a@928@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 14
; [then-branch: 579 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@928@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@928@01)) | live]
; [else-branch: 579 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@928@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@928@01) | live]
(push) ; 15
; [then-branch: 579 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@928@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@928@01))]
(assert (not
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))))
(pop) ; 15
(push) ; 15
; [else-branch: 579 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@928@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@928@01)]
(assert (>
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01)))
; [eval] (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
(declare-const q$b@929@01 Int)
(push) ; 16
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$b
(push) ; 17
; [then-branch: 580 | !(0 <= q$b@929@01) | live]
; [else-branch: 580 | 0 <= q$b@929@01 | live]
(push) ; 18
; [then-branch: 580 | !(0 <= q$b@929@01)]
(assert (not (<= 0 q$b@929@01)))
(pop) ; 18
(push) ; 18
; [else-branch: 580 | 0 <= q$b@929@01]
(assert (<= 0 q$b@929@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 18
(pop) ; 17
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@929@01) (not (<= 0 q$b@929@01))))
(push) ; 17
; [then-branch: 581 | 0 <= q$b@929@01 && q$b@929@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 581 | !(0 <= q$b@929@01 && q$b@929@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 18
; [then-branch: 581 | 0 <= q$b@929@01 && q$b@929@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$b@929@01)
  (<= q$b@929@01 1461501637330902918203684832716283019655932542975)))
; [eval] q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] q$b != q$a
(push) ; 19
; [then-branch: 582 | q$b@929@01 != q$a@928@01 | live]
; [else-branch: 582 | q$b@929@01 == q$a@928@01 | live]
(push) ; 20
; [then-branch: 582 | q$b@929@01 != q$a@928@01]
(assert (not (= q$b@929@01 q$a@928@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 20
(push) ; 20
; [else-branch: 582 | q$b@929@01 == q$a@928@01]
(assert (= q$b@929@01 q$a@928@01))
(pop) ; 20
(pop) ; 19
; Joined path conditions
; Joined path conditions
(assert (or (= q$b@929@01 q$a@928@01) (not (= q$b@929@01 q$a@928@01))))
(pop) ; 18
(push) ; 18
; [else-branch: 581 | !(0 <= q$b@929@01 && q$b@929@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$b@929@01)
    (<= q$b@929@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 18
(pop) ; 17
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$b@929@01)
    (<= q$b@929@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$b@929@01)
    (<= q$b@929@01 1461501637330902918203684832716283019655932542975)
    (or (= q$b@929@01 q$a@928@01) (not (= q$b@929@01 q$a@928@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$b@929@01)
      (<= q$b@929@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$b@929@01)
    (<= q$b@929@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 16
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$b@929@01 Int)) (!
  (and
    (or (<= 0 q$b@929@01) (not (<= 0 q$b@929@01)))
    (=>
      (and
        (<= 0 q$b@929@01)
        (<= q$b@929@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@929@01)
        (<= q$b@929@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@929@01 q$a@928@01) (not (= q$b@929@01 q$a@928@01)))))
    (or
      (not
        (and
          (<= 0 q$b@929@01)
          (<= q$b@929@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@929@01)
        (<= q$b@929@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848-aux|)))
(assert (forall ((q$b@929@01 Int)) (!
  (and
    (or (<= 0 q$b@929@01) (not (<= 0 q$b@929@01)))
    (=>
      (and
        (<= 0 q$b@929@01)
        (<= q$b@929@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@929@01)
        (<= q$b@929@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@929@01 q$a@928@01) (not (= q$b@929@01 q$a@928@01)))))
    (or
      (not
        (and
          (<= 0 q$b@929@01)
          (<= q$b@929@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@929@01)
        (<= q$b@929@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848-aux|)))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (=>
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
    (forall ((q$b@929@01 Int)) (!
      (and
        (or (<= 0 q$b@929@01) (not (<= 0 q$b@929@01)))
        (=>
          (and
            (<= 0 q$b@929@01)
            (<= q$b@929@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@929@01)
            (<= q$b@929@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@929@01 q$a@928@01) (not (= q$b@929@01 q$a@928@01)))))
        (or
          (not
            (and
              (<= 0 q$b@929@01)
              (<= q$b@929@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@929@01)
            (<= q$b@929@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848-aux|))
    (forall ((q$b@929@01 Int)) (!
      (and
        (or (<= 0 q$b@929@01) (not (<= 0 q$b@929@01)))
        (=>
          (and
            (<= 0 q$b@929@01)
            (<= q$b@929@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@929@01)
            (<= q$b@929@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@929@01 q$a@928@01) (not (= q$b@929@01 q$a@928@01)))))
        (or
          (not
            (and
              (<= 0 q$b@929@01)
              (<= q$b@929@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@929@01)
            (<= q$b@929@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848-aux|)))))
(assert (or
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
  (not
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01)))))
(push) ; 14
; [then-branch: 583 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@928@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@928@01) && QA q$b@929@01 :: 0 <= q$b@929@01 && q$b@929@01 <= 1461501637330902918203684832716283019655932542975 && q$b@929@01 != q$a@928@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$b@929@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$b@929@01) | live]
; [else-branch: 583 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@928@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@928@01) && QA q$b@929@01 :: 0 <= q$b@929@01 && q$b@929@01 <= 1461501637330902918203684832716283019655932542975 && q$b@929@01 != q$a@928@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$b@929@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$b@929@01)) | live]
(push) ; 15
; [then-branch: 583 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@928@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@928@01) && QA q$b@929@01 :: 0 <= q$b@929@01 && q$b@929@01 <= 1461501637330902918203684832716283019655932542975 && q$b@929@01 != q$a@928@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$b@929@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$b@929@01)]
(assert (and
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
  (forall ((q$b@929@01 Int)) (!
    (=>
      (and
        (and
          (<= 0 q$b@929@01)
          (<= q$b@929@01 1461501637330902918203684832716283019655932542975))
        (not (= q$b@929@01 q$a@928@01)))
      (=
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01)))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848|))))
; [eval] perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] 1 * write
(pop) ; 15
(push) ; 15
; [else-branch: 583 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@928@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@928@01) && QA q$b@929@01 :: 0 <= q$b@929@01 && q$b@929@01 <= 1461501637330902918203684832716283019655932542975 && q$b@929@01 != q$a@928@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$b@929@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$b@929@01))]
(assert (not
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
    (forall ((q$b@929@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@929@01)
            (<= q$b@929@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@929@01 q$a@928@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848|)))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
      (forall ((q$b@929@01 Int)) (!
        (=>
          (and
            (and
              (<= 0 q$b@929@01)
              (<= q$b@929@01 1461501637330902918203684832716283019655932542975))
            (not (= q$b@929@01 q$a@928@01)))
          (=
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01)))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848|))))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
    (forall ((q$b@929@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@929@01)
            (<= q$b@929@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@929@01 q$a@928@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848|)))))
(pop) ; 13
(push) ; 13
; [else-branch: 578 | !(0 <= q$a@928@01 && q$a@928@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@928@01)
    (<= q$a@928@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@928@01)
    (<= q$a@928@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$a@928@01)
    (<= q$a@928@01 1461501637330902918203684832716283019655932542975)
    (=>
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
        (forall ((q$b@929@01 Int)) (!
          (and
            (or (<= 0 q$b@929@01) (not (<= 0 q$b@929@01)))
            (=>
              (and
                (<= 0 q$b@929@01)
                (<= q$b@929@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@929@01)
                (<= q$b@929@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@929@01 q$a@928@01) (not (= q$b@929@01 q$a@928@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@929@01)
                  (<=
                    q$b@929@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@929@01)
                (<= q$b@929@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848-aux|))
        (forall ((q$b@929@01 Int)) (!
          (and
            (or (<= 0 q$b@929@01) (not (<= 0 q$b@929@01)))
            (=>
              (and
                (<= 0 q$b@929@01)
                (<= q$b@929@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@929@01)
                (<= q$b@929@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@929@01 q$a@928@01) (not (= q$b@929@01 q$a@928@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@929@01)
                  (<=
                    q$b@929@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@929@01)
                (<= q$b@929@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848-aux|))))
    (or
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
      (not
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))))
    (or
      (not
        (and
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
          (forall ((q$b@929@01 Int)) (!
            (=>
              (and
                (and
                  (<= 0 q$b@929@01)
                  (<=
                    q$b@929@01
                    1461501637330902918203684832716283019655932542975))
                (not (= q$b@929@01 q$a@928@01)))
              (=
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01)))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848|))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
        (forall ((q$b@929@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@929@01)
                (<= q$b@929@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@929@01 q$a@928@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848|)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@928@01)
      (<= q$a@928@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@928@01)
    (<= q$a@928@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@928@01 Int)) (!
  (and
    (or (<= 0 q$a@928@01) (not (<= 0 q$a@928@01)))
    (=>
      (and
        (<= 0 q$a@928@01)
        (<= q$a@928@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@928@01)
        (<= q$a@928@01 1461501637330902918203684832716283019655932542975)
        (=>
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
            (forall ((q$b@929@01 Int)) (!
              (and
                (or (<= 0 q$b@929@01) (not (<= 0 q$b@929@01)))
                (=>
                  (and
                    (<= 0 q$b@929@01)
                    (<=
                      q$b@929@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@929@01)
                    (<=
                      q$b@929@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@929@01 q$a@928@01)
                      (not (= q$b@929@01 q$a@928@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@929@01)
                      (<=
                        q$b@929@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@929@01)
                    (<=
                      q$b@929@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848-aux|))
            (forall ((q$b@929@01 Int)) (!
              (and
                (or (<= 0 q$b@929@01) (not (<= 0 q$b@929@01)))
                (=>
                  (and
                    (<= 0 q$b@929@01)
                    (<=
                      q$b@929@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@929@01)
                    (<=
                      q$b@929@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@929@01 q$a@928@01)
                      (not (= q$b@929@01 q$a@928@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@929@01)
                      (<=
                        q$b@929@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@929@01)
                    (<=
                      q$b@929@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848-aux|))))
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
              (forall ((q$b@929@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@929@01)
                      (<=
                        q$b@929@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@929@01 q$a@928@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848|))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
            (forall ((q$b@929@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@929@01)
                    (<=
                      q$b@929@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@929@01 q$a@928@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@928@01)
          (<= q$a@928@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@928@01)
        (<= q$a@928@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@13@1664@1047-aux|)))
(assert (forall ((q$a@928@01 Int)) (!
  (and
    (or (<= 0 q$a@928@01) (not (<= 0 q$a@928@01)))
    (=>
      (and
        (<= 0 q$a@928@01)
        (<= q$a@928@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@928@01)
        (<= q$a@928@01 1461501637330902918203684832716283019655932542975)
        (=>
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
            (forall ((q$b@929@01 Int)) (!
              (and
                (or (<= 0 q$b@929@01) (not (<= 0 q$b@929@01)))
                (=>
                  (and
                    (<= 0 q$b@929@01)
                    (<=
                      q$b@929@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@929@01)
                    (<=
                      q$b@929@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@929@01 q$a@928@01)
                      (not (= q$b@929@01 q$a@928@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@929@01)
                      (<=
                        q$b@929@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@929@01)
                    (<=
                      q$b@929@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848-aux|))
            (forall ((q$b@929@01 Int)) (!
              (and
                (or (<= 0 q$b@929@01) (not (<= 0 q$b@929@01)))
                (=>
                  (and
                    (<= 0 q$b@929@01)
                    (<=
                      q$b@929@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@929@01)
                    (<=
                      q$b@929@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@929@01 q$a@928@01)
                      (not (= q$b@929@01 q$a@928@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@929@01)
                      (<=
                        q$b@929@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@929@01)
                    (<=
                      q$b@929@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848-aux|))))
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
              (forall ((q$b@929@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@929@01)
                      (<=
                        q$b@929@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@929@01 q$a@928@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848|))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
            (forall ((q$b@929@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@929@01)
                    (<=
                      q$b@929@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@929@01 q$a@928@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@928@01)
          (<= q$a@928@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@928@01)
        (<= q$a@928@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@13@1664@1047-aux|)))
(push) ; 11
(assert (not (forall ((q$a@928@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@928@01)
        (<= q$a@928@01 1461501637330902918203684832716283019655932542975))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
        (forall ((q$b@929@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@929@01)
                (<= q$b@929@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@929@01 q$a@928@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848|))))
    (=
      (ite
        (and
          (= q$a@928@01 0)
          (= 0 l$_to@827@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
            ($unwrap<Int> l$_value@828@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@13@1664@1047|))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@928@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@928@01)
        (<= q$a@928@01 1461501637330902918203684832716283019655932542975))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
        (forall ((q$b@929@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@929@01)
                (<= q$b@929@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@929@01 q$a@928@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@929@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@929@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@425@1664@848|))))
    (=
      (ite
        (and
          (= q$a@928@01 0)
          (= 0 l$_to@827@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
            ($unwrap<Int> l$_value@828@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@928@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@928@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1664@13@1664@1047|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@930@01 Int)
(push) ; 11
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 584 | !(0 <= q$a@930@01) | live]
; [else-branch: 584 | 0 <= q$a@930@01 | live]
(push) ; 13
; [then-branch: 584 | !(0 <= q$a@930@01)]
(assert (not (<= 0 q$a@930@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 584 | 0 <= q$a@930@01]
(assert (<= 0 q$a@930@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@930@01) (not (<= 0 q$a@930@01))))
(push) ; 12
; [then-branch: 585 | 0 <= q$a@930@01 && q$a@930@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 585 | !(0 <= q$a@930@01 && q$a@930@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 585 | 0 <= q$a@930@01 && q$a@930@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@930@01)
  (<= q$a@930@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 14
; [then-branch: 586 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@930@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@930@01)) | live]
; [else-branch: 586 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@930@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@930@01) | live]
(push) ; 15
; [then-branch: 586 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@930@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@930@01))]
(assert (not
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))))
(pop) ; 15
(push) ; 15
; [else-branch: 586 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@930@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@930@01)]
(assert (<
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01)))
; [eval] (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
(declare-const q$b@931@01 Int)
(push) ; 16
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$b
(push) ; 17
; [then-branch: 587 | !(0 <= q$b@931@01) | live]
; [else-branch: 587 | 0 <= q$b@931@01 | live]
(push) ; 18
; [then-branch: 587 | !(0 <= q$b@931@01)]
(assert (not (<= 0 q$b@931@01)))
(pop) ; 18
(push) ; 18
; [else-branch: 587 | 0 <= q$b@931@01]
(assert (<= 0 q$b@931@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 18
(pop) ; 17
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@931@01) (not (<= 0 q$b@931@01))))
(push) ; 17
; [then-branch: 588 | 0 <= q$b@931@01 && q$b@931@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 588 | !(0 <= q$b@931@01 && q$b@931@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 18
; [then-branch: 588 | 0 <= q$b@931@01 && q$b@931@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$b@931@01)
  (<= q$b@931@01 1461501637330902918203684832716283019655932542975)))
; [eval] q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] q$b != q$a
(push) ; 19
; [then-branch: 589 | q$b@931@01 != q$a@930@01 | live]
; [else-branch: 589 | q$b@931@01 == q$a@930@01 | live]
(push) ; 20
; [then-branch: 589 | q$b@931@01 != q$a@930@01]
(assert (not (= q$b@931@01 q$a@930@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 20
(push) ; 20
; [else-branch: 589 | q$b@931@01 == q$a@930@01]
(assert (= q$b@931@01 q$a@930@01))
(pop) ; 20
(pop) ; 19
; Joined path conditions
; Joined path conditions
(assert (or (= q$b@931@01 q$a@930@01) (not (= q$b@931@01 q$a@930@01))))
(pop) ; 18
(push) ; 18
; [else-branch: 588 | !(0 <= q$b@931@01 && q$b@931@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$b@931@01)
    (<= q$b@931@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 18
(pop) ; 17
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$b@931@01)
    (<= q$b@931@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$b@931@01)
    (<= q$b@931@01 1461501637330902918203684832716283019655932542975)
    (or (= q$b@931@01 q$a@930@01) (not (= q$b@931@01 q$a@930@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$b@931@01)
      (<= q$b@931@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$b@931@01)
    (<= q$b@931@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 16
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$b@931@01 Int)) (!
  (and
    (or (<= 0 q$b@931@01) (not (<= 0 q$b@931@01)))
    (=>
      (and
        (<= 0 q$b@931@01)
        (<= q$b@931@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@931@01)
        (<= q$b@931@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@931@01 q$a@930@01) (not (= q$b@931@01 q$a@930@01)))))
    (or
      (not
        (and
          (<= 0 q$b@931@01)
          (<= q$b@931@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@931@01)
        (<= q$b@931@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848-aux|)))
(assert (forall ((q$b@931@01 Int)) (!
  (and
    (or (<= 0 q$b@931@01) (not (<= 0 q$b@931@01)))
    (=>
      (and
        (<= 0 q$b@931@01)
        (<= q$b@931@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@931@01)
        (<= q$b@931@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@931@01 q$a@930@01) (not (= q$b@931@01 q$a@930@01)))))
    (or
      (not
        (and
          (<= 0 q$b@931@01)
          (<= q$b@931@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@931@01)
        (<= q$b@931@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848-aux|)))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
    (forall ((q$b@931@01 Int)) (!
      (and
        (or (<= 0 q$b@931@01) (not (<= 0 q$b@931@01)))
        (=>
          (and
            (<= 0 q$b@931@01)
            (<= q$b@931@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@931@01)
            (<= q$b@931@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@931@01 q$a@930@01) (not (= q$b@931@01 q$a@930@01)))))
        (or
          (not
            (and
              (<= 0 q$b@931@01)
              (<= q$b@931@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@931@01)
            (<= q$b@931@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848-aux|))
    (forall ((q$b@931@01 Int)) (!
      (and
        (or (<= 0 q$b@931@01) (not (<= 0 q$b@931@01)))
        (=>
          (and
            (<= 0 q$b@931@01)
            (<= q$b@931@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@931@01)
            (<= q$b@931@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@931@01 q$a@930@01) (not (= q$b@931@01 q$a@930@01)))))
        (or
          (not
            (and
              (<= 0 q$b@931@01)
              (<= q$b@931@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@931@01)
            (<= q$b@931@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848-aux|)))))
(assert (or
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
  (not
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01)))))
(push) ; 14
; [then-branch: 590 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@930@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@930@01) && QA q$b@931@01 :: 0 <= q$b@931@01 && q$b@931@01 <= 1461501637330902918203684832716283019655932542975 && q$b@931@01 != q$a@930@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$b@931@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$b@931@01) | live]
; [else-branch: 590 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@930@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@930@01) && QA q$b@931@01 :: 0 <= q$b@931@01 && q$b@931@01 <= 1461501637330902918203684832716283019655932542975 && q$b@931@01 != q$a@930@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$b@931@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$b@931@01)) | live]
(push) ; 15
; [then-branch: 590 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@930@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@930@01) && QA q$b@931@01 :: 0 <= q$b@931@01 && q$b@931@01 <= 1461501637330902918203684832716283019655932542975 && q$b@931@01 != q$a@930@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$b@931@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$b@931@01)]
(assert (and
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
  (forall ((q$b@931@01 Int)) (!
    (=>
      (and
        (and
          (<= 0 q$b@931@01)
          (<= q$b@931@01 1461501637330902918203684832716283019655932542975))
        (not (= q$b@931@01 q$a@930@01)))
      (=
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01)))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848|))))
; [eval] perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] 1 * write
(pop) ; 15
(push) ; 15
; [else-branch: 590 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$a@930@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$a@930@01) && QA q$b@931@01 :: 0 <= q$b@931@01 && q$b@931@01 <= 1461501637330902918203684832716283019655932542975 && q$b@931@01 != q$a@930@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@916@01, 3)), q$b@931@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@834@01, 3)), q$b@931@01))]
(assert (not
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
    (forall ((q$b@931@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@931@01)
            (<= q$b@931@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@931@01 q$a@930@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848|)))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
      (forall ((q$b@931@01 Int)) (!
        (=>
          (and
            (and
              (<= 0 q$b@931@01)
              (<= q$b@931@01 1461501637330902918203684832716283019655932542975))
            (not (= q$b@931@01 q$a@930@01)))
          (=
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01)))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848|))))
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
    (forall ((q$b@931@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@931@01)
            (<= q$b@931@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@931@01 q$a@930@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848|)))))
(pop) ; 13
(push) ; 13
; [else-branch: 585 | !(0 <= q$a@930@01 && q$a@930@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@930@01)
    (<= q$a@930@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@930@01)
    (<= q$a@930@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$a@930@01)
    (<= q$a@930@01 1461501637330902918203684832716283019655932542975)
    (=>
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
        (forall ((q$b@931@01 Int)) (!
          (and
            (or (<= 0 q$b@931@01) (not (<= 0 q$b@931@01)))
            (=>
              (and
                (<= 0 q$b@931@01)
                (<= q$b@931@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@931@01)
                (<= q$b@931@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@931@01 q$a@930@01) (not (= q$b@931@01 q$a@930@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@931@01)
                  (<=
                    q$b@931@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@931@01)
                (<= q$b@931@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848-aux|))
        (forall ((q$b@931@01 Int)) (!
          (and
            (or (<= 0 q$b@931@01) (not (<= 0 q$b@931@01)))
            (=>
              (and
                (<= 0 q$b@931@01)
                (<= q$b@931@01 1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@931@01)
                (<= q$b@931@01 1461501637330902918203684832716283019655932542975)
                (or (= q$b@931@01 q$a@930@01) (not (= q$b@931@01 q$a@930@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@931@01)
                  (<=
                    q$b@931@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@931@01)
                (<= q$b@931@01 1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848-aux|))))
    (or
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
      (not
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))))
    (or
      (not
        (and
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
          (forall ((q$b@931@01 Int)) (!
            (=>
              (and
                (and
                  (<= 0 q$b@931@01)
                  (<=
                    q$b@931@01
                    1461501637330902918203684832716283019655932542975))
                (not (= q$b@931@01 q$a@930@01)))
              (=
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01)))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848|))))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
        (forall ((q$b@931@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@931@01)
                (<= q$b@931@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@931@01 q$a@930@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848|)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@930@01)
      (<= q$a@930@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@930@01)
    (<= q$a@930@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@930@01 Int)) (!
  (and
    (or (<= 0 q$a@930@01) (not (<= 0 q$a@930@01)))
    (=>
      (and
        (<= 0 q$a@930@01)
        (<= q$a@930@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@930@01)
        (<= q$a@930@01 1461501637330902918203684832716283019655932542975)
        (=>
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
            (forall ((q$b@931@01 Int)) (!
              (and
                (or (<= 0 q$b@931@01) (not (<= 0 q$b@931@01)))
                (=>
                  (and
                    (<= 0 q$b@931@01)
                    (<=
                      q$b@931@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@931@01)
                    (<=
                      q$b@931@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@931@01 q$a@930@01)
                      (not (= q$b@931@01 q$a@930@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@931@01)
                      (<=
                        q$b@931@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@931@01)
                    (<=
                      q$b@931@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848-aux|))
            (forall ((q$b@931@01 Int)) (!
              (and
                (or (<= 0 q$b@931@01) (not (<= 0 q$b@931@01)))
                (=>
                  (and
                    (<= 0 q$b@931@01)
                    (<=
                      q$b@931@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@931@01)
                    (<=
                      q$b@931@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@931@01 q$a@930@01)
                      (not (= q$b@931@01 q$a@930@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@931@01)
                      (<=
                        q$b@931@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@931@01)
                    (<=
                      q$b@931@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848-aux|))))
        (or
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
          (not
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))))
        (or
          (not
            (and
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
              (forall ((q$b@931@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@931@01)
                      (<=
                        q$b@931@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@931@01 q$a@930@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848|))))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
            (forall ((q$b@931@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@931@01)
                    (<=
                      q$b@931@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@931@01 q$a@930@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@930@01)
          (<= q$a@930@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@930@01)
        (<= q$a@930@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@13@1665@1047-aux|)))
(assert (forall ((q$a@930@01 Int)) (!
  (and
    (or (<= 0 q$a@930@01) (not (<= 0 q$a@930@01)))
    (=>
      (and
        (<= 0 q$a@930@01)
        (<= q$a@930@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@930@01)
        (<= q$a@930@01 1461501637330902918203684832716283019655932542975)
        (=>
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
            (forall ((q$b@931@01 Int)) (!
              (and
                (or (<= 0 q$b@931@01) (not (<= 0 q$b@931@01)))
                (=>
                  (and
                    (<= 0 q$b@931@01)
                    (<=
                      q$b@931@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@931@01)
                    (<=
                      q$b@931@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@931@01 q$a@930@01)
                      (not (= q$b@931@01 q$a@930@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@931@01)
                      (<=
                        q$b@931@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@931@01)
                    (<=
                      q$b@931@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848-aux|))
            (forall ((q$b@931@01 Int)) (!
              (and
                (or (<= 0 q$b@931@01) (not (<= 0 q$b@931@01)))
                (=>
                  (and
                    (<= 0 q$b@931@01)
                    (<=
                      q$b@931@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@931@01)
                    (<=
                      q$b@931@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@931@01 q$a@930@01)
                      (not (= q$b@931@01 q$a@930@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@931@01)
                      (<=
                        q$b@931@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@931@01)
                    (<=
                      q$b@931@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848-aux|))))
        (or
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
          (not
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))))
        (or
          (not
            (and
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
              (forall ((q$b@931@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@931@01)
                      (<=
                        q$b@931@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@931@01 q$a@930@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848|))))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
            (forall ((q$b@931@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@931@01)
                    (<=
                      q$b@931@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@931@01 q$a@930@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@930@01)
          (<= q$a@930@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@930@01)
        (<= q$a@930@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@13@1665@1047-aux|)))
(push) ; 11
(assert (not (forall ((q$a@930@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@930@01)
        (<= q$a@930@01 1461501637330902918203684832716283019655932542975))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
        (forall ((q$b@931@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@931@01)
                (<= q$b@931@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@931@01 q$a@930@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848|))))
    (=
      (ite
        (and
          (= q$a@930@01 l$_to@827@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01))
            ($unwrap<Int> l$_value@828@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@13@1665@1047|))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@930@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@930@01)
        (<= q$a@930@01 1461501637330902918203684832716283019655932542975))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
        (forall ((q$b@931@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@931@01)
                (<= q$b@931@01 1461501637330902918203684832716283019655932542975))
              (not (= q$b@931@01 q$a@930@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$b@931@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$b@931@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@425@1665@848|))))
    (=
      (ite
        (and
          (= q$a@930@01 l$_to@827@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01))
            ($unwrap<Int> l$_value@828@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@916@01 3)) q$a@930@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@834@01 3)) q$a@930@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1665@13@1665@1047|)))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@932@01 Int)
(declare-const q$b@933@01 Int)
(push) ; 11
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 12
; [then-branch: 591 | !(0 <= q$a@932@01) | live]
; [else-branch: 591 | 0 <= q$a@932@01 | live]
(push) ; 13
; [then-branch: 591 | !(0 <= q$a@932@01)]
(assert (not (<= 0 q$a@932@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 591 | 0 <= q$a@932@01]
(assert (<= 0 q$a@932@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 14
; [then-branch: 592 | !(q$a@932@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 592 | q$a@932@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 15
; [then-branch: 592 | !(q$a@932@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@932@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 15
(push) ; 15
; [else-branch: 592 | q$a@932@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@932@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 16
; [then-branch: 593 | !(0 <= q$b@933@01) | live]
; [else-branch: 593 | 0 <= q$b@933@01 | live]
(push) ; 17
; [then-branch: 593 | !(0 <= q$b@933@01)]
(assert (not (<= 0 q$b@933@01)))
(pop) ; 17
(push) ; 17
; [else-branch: 593 | 0 <= q$b@933@01]
(assert (<= 0 q$b@933@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 17
(pop) ; 16
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@933@01) (not (<= 0 q$b@933@01))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@933@01) (not (<= 0 q$b@933@01))))))
(assert (or
  (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@932@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@932@01)
  (and
    (<= 0 q$a@932@01)
    (=>
      (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@933@01) (not (<= 0 q$b@933@01)))))
    (or
      (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@932@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@932@01) (not (<= 0 q$a@932@01))))
(push) ; 12
; [then-branch: 594 | 0 <= q$a@932@01 && q$a@932@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@933@01 && q$b@933@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 594 | !(0 <= q$a@932@01 && q$a@932@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@933@01 && q$b@933@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 13
; [then-branch: 594 | 0 <= q$a@932@01 && q$a@932@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@933@01 && q$b@933@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@932@01)
  (and
    (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@933@01)
      (<= q$b@933@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 14
; [then-branch: 595 | $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@834@01, 4)), q$a@932@01), q$b@933@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@916@01, 4)), q$a@932@01), q$b@933@01) | live]
; [else-branch: 595 | !($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@834@01, 4)), q$a@932@01), q$b@933@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@916@01, 4)), q$a@932@01), q$b@933@01)) | live]
(push) ; 15
; [then-branch: 595 | $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@834@01, 4)), q$a@932@01), q$b@933@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@916@01, 4)), q$a@932@01), q$b@933@01)]
(assert (<
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@932@01) q$b@933@01)
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@916@01 4)) q$a@932@01) q$b@933@01)))
; [eval] perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] 1 * write
(pop) ; 15
(push) ; 15
; [else-branch: 595 | !($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@834@01, 4)), q$a@932@01), q$b@933@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@916@01, 4)), q$a@932@01), q$b@933@01))]
(assert (not
  (<
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@932@01) q$b@933@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@916@01 4)) q$a@932@01) q$b@933@01))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@932@01) q$b@933@01)
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@916@01 4)) q$a@932@01) q$b@933@01)))
  (<
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@932@01) q$b@933@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@916@01 4)) q$a@932@01) q$b@933@01))))
(pop) ; 13
(push) ; 13
; [else-branch: 594 | !(0 <= q$a@932@01 && q$a@932@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@933@01 && q$b@933@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@932@01)
    (and
      (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@933@01)
        (<= q$b@933@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@932@01)
    (and
      (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@933@01)
        (<= q$b@933@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@932@01)
    (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@933@01)
    (<= q$b@933@01 1461501637330902918203684832716283019655932542975)
    (or
      (not
        (<
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@932@01) q$b@933@01)
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@916@01 4)) q$a@932@01) q$b@933@01)))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@932@01) q$b@933@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@916@01 4)) q$a@932@01) q$b@933@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@932@01)
      (and
        (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@933@01)
          (<= q$b@933@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@932@01)
    (and
      (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@933@01)
        (<= q$b@933@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@932@01 Int) (q$b@933@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@932@01)
      (and
        (<= 0 q$a@932@01)
        (=>
          (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@933@01) (not (<= 0 q$b@933@01)))))
        (or
          (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@932@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@932@01) (not (<= 0 q$a@932@01)))
    (=>
      (and
        (<= 0 q$a@932@01)
        (and
          (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@933@01)
            (<= q$b@933@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@932@01)
        (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@933@01)
        (<= q$b@933@01 1461501637330902918203684832716283019655932542975)
        (or
          (not
            (<
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@932@01) q$b@933@01)
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@916@01 4)) q$a@932@01) q$b@933@01)))
          (<
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@932@01) q$b@933@01)
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@916@01 4)) q$a@932@01) q$b@933@01)))))
    (or
      (not
        (and
          (<= 0 q$a@932@01)
          (and
            (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@933@01)
              (<= q$b@933@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@932@01)
        (and
          (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@933@01)
            (<= q$b@933@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@916@01 4)) q$a@932@01) q$b@933@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1666@13@1666@843-aux|)))
(assert (forall ((q$a@932@01 Int) (q$b@933@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@932@01)
      (and
        (<= 0 q$a@932@01)
        (=>
          (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@933@01) (not (<= 0 q$b@933@01)))))
        (or
          (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
          (not (<= q$a@932@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@932@01) (not (<= 0 q$a@932@01)))
    (=>
      (and
        (<= 0 q$a@932@01)
        (and
          (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@933@01)
            (<= q$b@933@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@932@01)
        (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@933@01)
        (<= q$b@933@01 1461501637330902918203684832716283019655932542975)
        (or
          (not
            (<
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@932@01) q$b@933@01)
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@916@01 4)) q$a@932@01) q$b@933@01)))
          (<
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@932@01) q$b@933@01)
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@916@01 4)) q$a@932@01) q$b@933@01)))))
    (or
      (not
        (and
          (<= 0 q$a@932@01)
          (and
            (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@933@01)
              (<= q$b@933@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@932@01)
        (and
          (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@933@01)
            (<= q$b@933@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@932@01) q$b@933@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1666@13@1666@843-aux|)))
(push) ; 11
(assert (not (forall ((q$a@932@01 Int) (q$b@933@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@932@01)
        (and
          (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@933@01)
            (<= q$b@933@01 1461501637330902918203684832716283019655932542975))))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@932@01) q$b@933@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@916@01 4)) q$a@932@01) q$b@933@01)))
    false)
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@916@01 4)) q$a@932@01) q$b@933@01))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@932@01) q$b@933@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1666@13@1666@843|))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@932@01 Int) (q$b@933@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@932@01)
        (and
          (<= q$a@932@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@933@01)
            (<= q$b@933@01 1461501637330902918203684832716283019655932542975))))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@932@01) q$b@933@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@916@01 4)) q$a@932@01) q$b@933@01)))
    false)
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@916@01 4)) q$a@932@01) q$b@933@01))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@834@01 4)) q$a@932@01) q$b@933@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1666@13@1666@843|)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@934@01 $Snap)
(assert (= $t@934@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@844@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@935@01 $Struct)
(assert (=
  self@935@01
  ($struct_set<$Struct> self@916@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@916@01 7))
    l$havoc@844@01))))
; [exec]
; $contracts := l$havoc$1
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 11
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@935@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@935@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@834@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 11
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@935@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@935@01 3))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@935@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@935@01 3)))))
(pop) ; 10
; [eval] !$succ
; [then-branch: 596 | False | dead]
; [else-branch: 596 | True | live]
(push) ; 10
; [else-branch: 596 | True]
(pop) ; 10
(pop) ; 9
(push) ; 9
; [else-branch: 568 | $out_of_gas@843@01]
(assert $out_of_gas@843@01)
(pop) ; 9
(pop) ; 8
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 543 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@834@01, 5)))) + $unwrap[Int](l$_value@828@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935]
(assert (>
  (+
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@834@01 5))))
    ($unwrap<Int> l$_value@828@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
(pop) ; 6
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 520 | l$_to@827@01 == 0]
(assert (= l$_to@827@01 0))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 499 | $struct_get[Int]($struct_loc[Int](msg@830@01, 0)) != $struct_get[Int]($struct_loc[Int](self@834@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@830@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@834@01 6)))))
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$burn ----------
(declare-const l$_value@936@01 $Int)
(declare-const $succ@937@01 Bool)
(declare-const l$_value@938@01 $Int)
(declare-const $succ@939@01 Bool)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@940@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@941@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@942@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@943@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@944@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@945@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@946@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@947@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@948@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@949@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@950@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@951@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@952@01 Bool)
; [exec]
; var l$i0$_to: Int
(declare-const l$i0$_to@953@01 Int)
; [exec]
; var l$i0$_value: $Int
(declare-const l$i0$_value@954@01 $Int)
; [exec]
; var i0$$pre_self: $Struct
(declare-const i0$$pre_self@955@01 $Struct)
; [exec]
; var i0$$pre_$contracts: $Map[Int, $Struct]
(declare-const i0$$pre_$contracts@956@01 $Map<Int~_$Struct>)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@957@01 Bool)
; [exec]
; var l$havoc: Int
(declare-const l$havoc@958@01 Int)
; [exec]
; var l$havoc$1: $Map[Int, $Struct]
(declare-const l$havoc$1@959@01 $Map<Int~_$Struct>)
; [exec]
; inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
(declare-const $t@960@01 $Snap)
(assert (= $t@960@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 0)): Seq[Int])
; [eval] $struct_loc(self, 0)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@944@01 0))) 64))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
(declare-const $t@961@01 $Snap)
(assert (= $t@961@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 1)): Seq[Int])
; [eval] $struct_loc(self, 1)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@944@01 1))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@962@01 $Snap)
(assert (= $t@962@01 ($Snap.combine ($Snap.first $t@962@01) ($Snap.second $t@962@01))))
(assert (= ($Snap.first $t@962@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@944@01 2))))
(assert (= ($Snap.second $t@962@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@944@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@963@01 $Snap)
(assert (= $t@963@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@964@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 4
; [then-branch: 597 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), $q2@964@01)) | live]
; [else-branch: 597 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), $q2@964@01) | live]
(push) ; 5
; [then-branch: 597 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), $q2@964@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) $q2@964@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 597 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), $q2@964@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) $q2@964@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) $q2@964@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) $q2@964@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@964@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) $q2@964@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) $q2@964@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) $q2@964@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1709@11@1709@345-aux|)))
(assert (forall (($q2@964@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) $q2@964@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) $q2@964@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) $q2@964@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1709@11@1709@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $t@965@01 $Snap)
(assert (= $t@965@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $q2@966@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@966@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) $q2@966@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) $q2@966@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1710@11@1710@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@967@01 $Snap)
(assert (= $t@967@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@968@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@969@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 5
; [then-branch: 598 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@944@01, 4)), $q3@968@01), $q4@969@01)) | live]
; [else-branch: 598 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@944@01, 4)), $q3@968@01), $q4@969@01) | live]
(push) ; 6
; [then-branch: 598 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@944@01, 4)), $q3@968@01), $q4@969@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@968@01) $q4@969@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 598 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@944@01, 4)), $q3@968@01), $q4@969@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@968@01) $q4@969@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@968@01) $q4@969@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@968@01) $q4@969@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@969@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@968@01) $q4@969@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@968@01) $q4@969@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@968@01) $q4@969@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1711@131@1711@597-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@968@01 Int)) (!
  (forall (($q4@969@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@968@01) $q4@969@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@968@01) $q4@969@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@968@01) $q4@969@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1711@131@1711@597-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@968@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1711@11@1711@598-aux|)))
(assert (forall (($q3@968@01 Int)) (!
  (forall (($q4@969@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@968@01) $q4@969@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@968@01) $q4@969@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@968@01) $q4@969@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1711@131@1711@597|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@968@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1711@11@1711@598|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@970@01 $Snap)
(assert (= $t@970@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@971@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@972@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@971@01 Int)) (!
  (forall (($q4@972@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@971@01) $q4@972@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@971@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@971@01) $q4@972@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1712@131@1712@505|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) $q3@971@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1712@11@1712@506|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@973@01 $Snap)
(assert (= $t@973@01 ($Snap.combine ($Snap.first $t@973@01) ($Snap.second $t@973@01))))
(assert (= ($Snap.first $t@973@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@944@01 5))))
(assert (= ($Snap.second $t@973@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@944@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@974@01 $Snap)
(assert (= $t@974@01 ($Snap.combine ($Snap.first $t@974@01) ($Snap.second $t@974@01))))
(assert (= ($Snap.first $t@974@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@944@01 6))))
(assert (= ($Snap.second $t@974@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@944@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) &&
;   ($struct_get($struct_loc(self, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@975@01 $Snap)
(assert (= $t@975@01 ($Snap.combine ($Snap.first $t@975@01) ($Snap.second $t@975@01))))
(assert (= ($Snap.first $t@975@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 7)): Int)
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@944@01 7))))
(assert (= ($Snap.second $t@975@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@944@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 8)): Int) &&
;   ($struct_get($struct_loc(self, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@976@01 $Snap)
(assert (= $t@976@01 ($Snap.combine ($Snap.first $t@976@01) ($Snap.second $t@976@01))))
(assert (= ($Snap.first $t@976@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@944@01 8))))
(assert (= ($Snap.second $t@976@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@944@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@977@01 $Snap)
(assert (= $t@977@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@978@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(push) ; 4
; [then-branch: 599 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 10)), $q5@978@01)) | live]
; [else-branch: 599 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 10)), $q5@978@01) | live]
(push) ; 5
; [then-branch: 599 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 10)), $q5@978@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 10)) $q5@978@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 599 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 10)), $q5@978@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 10)) $q5@978@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 10)) $q5@978@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 10)) $q5@978@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@978@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 10)) $q5@978@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 10)) $q5@978@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 10)) $q5@978@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1717@11@1717@348-aux|)))
(assert (forall (($q5@978@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 10)) $q5@978@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 10)) $q5@978@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 10)) $q5@978@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1717@11@1717@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $t@979@01 $Snap)
(assert (= $t@979@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $q5@980@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@980@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 10)) $q5@980@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 10)) $q5@980@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1718@11@1718@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@981@01 $Snap)
(assert (= $t@981@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@982@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(push) ; 4
; [then-branch: 600 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 11)), $q6@982@01)) | live]
; [else-branch: 600 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 11)), $q6@982@01) | live]
(push) ; 5
; [then-branch: 600 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 11)), $q6@982@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 11)) $q6@982@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 600 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 11)), $q6@982@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 11)) $q6@982@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 11)) $q6@982@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 11)) $q6@982@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@982@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 11)) $q6@982@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 11)) $q6@982@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 11)) $q6@982@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1719@11@1719@348-aux|)))
(assert (forall (($q6@982@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 11)) $q6@982@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 11)) $q6@982@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 11)) $q6@982@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1719@11@1719@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $t@983@01 $Snap)
(assert (= $t@983@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $q6@984@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
; [eval] ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@984@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 11)) $q6@984@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 11)) $q6@984@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1720@11@1720@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@985@01 $Snap)
(assert (= $t@985@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@944@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@986@01 $Snap)
(assert (= $t@986@01 ($Snap.combine ($Snap.first $t@986@01) ($Snap.second $t@986@01))))
(assert (= ($Snap.first $t@986@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@986@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $unwrap(l$_value) &&
;   $unwrap(l$_value) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@987@01 $Snap)
(assert (= $t@987@01 ($Snap.combine ($Snap.first $t@987@01) ($Snap.second $t@987@01))))
(assert (= ($Snap.first $t@987@01) $Snap.unit))
; [eval] 0 <= $unwrap(l$_value)
; [eval] $unwrap(l$_value)
(assert (<= 0 ($unwrap<Int> l$_value@938@01)))
(assert (= ($Snap.second $t@987@01) $Snap.unit))
; [eval] $unwrap(l$_value) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap(l$_value)
(assert (<=
  ($unwrap<Int> l$_value@938@01)
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@988@01 $Snap)
(assert (= $t@988@01 ($Snap.combine ($Snap.first $t@988@01) ($Snap.second $t@988@01))))
(assert (= ($Snap.first $t@988@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@941@01 0))))
(assert (= ($Snap.second $t@988@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@941@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@989@01 $Snap)
(assert (= $t@989@01 ($Snap.combine ($Snap.first $t@989@01) ($Snap.second $t@989@01))))
(assert (= ($Snap.first $t@989@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@941@01 1))))
(assert (= ($Snap.second $t@989@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@941@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@990@01 $Snap)
(assert (= $t@990@01 ($Snap.combine ($Snap.first $t@990@01) ($Snap.second $t@990@01))))
(assert (= ($Snap.first $t@990@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@941@01 2))))
(assert (= ($Snap.second $t@990@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@941@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@991@01 $Snap)
(assert (= $t@991@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@941@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@992@01 $Snap)
(assert (= $t@992@01 ($Snap.combine ($Snap.first $t@992@01) ($Snap.second $t@992@01))))
(assert (= ($Snap.first $t@992@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@941@01 4))))
(assert (= ($Snap.second $t@992@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@941@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@993@01 $Snap)
(assert (= $t@993@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@941@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@994@01 $Snap)
(assert (= $t@994@01 ($Snap.combine ($Snap.first $t@994@01) ($Snap.second $t@994@01))))
(assert (= ($Snap.first $t@994@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))))
(assert (= ($Snap.second $t@994@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@995@01 $Snap)
(assert (= $t@995@01 ($Snap.combine ($Snap.first $t@995@01) ($Snap.second $t@995@01))))
(assert (= ($Snap.first $t@995@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@940@01 1))))
(assert (= ($Snap.second $t@995@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@940@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@996@01 $Snap)
(assert (= $t@996@01 ($Snap.combine ($Snap.first $t@996@01) ($Snap.second $t@996@01))))
(assert (= ($Snap.first $t@996@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@940@01 2))))
(assert (= ($Snap.second $t@996@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@940@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@997@01 $Snap)
(assert (= $t@997@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@940@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@998@01 $Snap)
(assert (= $t@998@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@940@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $t@999@01 $Snap)
(assert (= $t@999@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $a@1000@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc(self, 6)): Int)
(declare-const $t@1001@01 $Snap)
(assert (= $t@1001@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
(declare-const $t@1002@01 $Snap)
(assert (= $t@1002@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@944@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@1003@01 $Snap)
(assert (= $t@1003@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@940@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; i0$$pre_self := self
; [exec]
; i0$$pre_$contracts := $contracts
; [exec]
; l$i0$_to := ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(declare-const l$i0$_to@1004@01 Int)
(assert (= l$i0$_to@1004@01 ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))))
; [exec]
; l$i0$_value := l$_value
; [eval] !(l$i0$_to != 0)
; [eval] l$i0$_to != 0
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not (= l$i0$_to@1004@01 0))))
(check-sat)
; unsat
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 601 | l$i0$_to@1004@01 == 0 | dead]
; [else-branch: 601 | l$i0$_to@1004@01 != 0 | live]
(set-option :timeout 0)
(push) ; 3
; [else-branch: 601 | l$i0$_to@1004@01 != 0]
(assert (not (= l$i0$_to@1004@01 0)))
(pop) ; 3
; [eval] !!(l$i0$_to != 0)
; [eval] !(l$i0$_to != 0)
; [eval] l$i0$_to != 0
(push) ; 3
(set-option :timeout 10)
(assert (not (= l$i0$_to@1004@01 0)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not (= l$i0$_to@1004@01 0))))
(check-sat)
; unsat
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 602 | l$i0$_to@1004@01 != 0 | live]
; [else-branch: 602 | l$i0$_to@1004@01 == 0 | dead]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 602 | l$i0$_to@1004@01 != 0]
(assert (not (= l$i0$_to@1004@01 0)))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) < 0
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] $unwrap(l$i0$_value)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@944@01 5))))
      ($unwrap<Int> l$_value@938@01))
    0))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@944@01 5))))
    ($unwrap<Int> l$_value@938@01))
  0)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 603 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@944@01, 5)))) - $unwrap[Int](l$_value@938@01) < 0 | live]
; [else-branch: 603 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@944@01, 5)))) - $unwrap[Int](l$_value@938@01) < 0) | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 603 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@944@01, 5)))) - $unwrap[Int](l$_value@938@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@944@01 5))))
    ($unwrap<Int> l$_value@938@01))
  0))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [then-branch: 604 | False | dead]
; [else-branch: 604 | True | live]
(push) ; 5
; [else-branch: 604 | True]
(pop) ; 5
; [eval] !$succ
(push) ; 5
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 605 | True | live]
; [else-branch: 605 | False | dead]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 605 | True]
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 6
(push) ; 7
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@944@01 6)))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@944@01 6))))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 606 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) != $struct_get[Int]($struct_loc[Int](self@944@01, 6)) | live]
; [else-branch: 606 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) == $struct_get[Int]($struct_loc[Int](self@944@01, 6)) | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 606 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) != $struct_get[Int]($struct_loc[Int](self@944@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@944@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 7
(push) ; 7
; [else-branch: 606 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) == $struct_get[Int]($struct_loc[Int](self@944@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@944@01 6))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@944@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@944@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1005@01 Int)
(declare-const q$b@1006@01 Int)
(push) ; 6
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 7
; [then-branch: 607 | !(0 <= q$a@1005@01) | live]
; [else-branch: 607 | 0 <= q$a@1005@01 | live]
(push) ; 8
; [then-branch: 607 | !(0 <= q$a@1005@01)]
(assert (not (<= 0 q$a@1005@01)))
(pop) ; 8
(push) ; 8
; [else-branch: 607 | 0 <= q$a@1005@01]
(assert (<= 0 q$a@1005@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 9
; [then-branch: 608 | !(q$a@1005@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 608 | q$a@1005@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 10
; [then-branch: 608 | !(q$a@1005@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 10
(push) ; 10
; [else-branch: 608 | q$a@1005@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1005@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 11
; [then-branch: 609 | !(0 <= q$b@1006@01) | live]
; [else-branch: 609 | 0 <= q$b@1006@01 | live]
(push) ; 12
; [then-branch: 609 | !(0 <= q$b@1006@01)]
(assert (not (<= 0 q$b@1006@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 609 | 0 <= q$b@1006@01]
(assert (<= 0 q$b@1006@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1006@01) (not (<= 0 q$b@1006@01))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1006@01) (not (<= 0 q$b@1006@01))))))
(assert (or
  (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1005@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1005@01)
  (and
    (<= 0 q$a@1005@01)
    (=>
      (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1006@01) (not (<= 0 q$b@1006@01)))))
    (or
      (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1005@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1005@01) (not (<= 0 q$a@1005@01))))
(push) ; 7
; [then-branch: 610 | 0 <= q$a@1005@01 && q$a@1005@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1006@01 && q$b@1006@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 610 | !(0 <= q$a@1005@01 && q$a@1005@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1006@01 && q$b@1006@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 8
; [then-branch: 610 | 0 <= q$a@1005@01 && q$a@1005@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1006@01 && q$b@1006@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1005@01)
  (and
    (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1006@01)
      (<= q$b@1006@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 9
; [then-branch: 611 | False | dead]
; [else-branch: 611 | True | live]
(push) ; 10
; [else-branch: 611 | True]
(pop) ; 10
(pop) ; 9
; Joined path conditions
(pop) ; 8
(push) ; 8
; [else-branch: 610 | !(0 <= q$a@1005@01 && q$a@1005@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1006@01 && q$b@1006@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1005@01)
    (and
      (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1006@01)
        (<= q$b@1006@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1005@01)
    (and
      (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1006@01)
        (<= q$b@1006@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1005@01)
    (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1006@01)
    (<= q$b@1006@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1005@01)
      (and
        (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1006@01)
          (<= q$b@1006@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1005@01)
    (and
      (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1006@01)
        (<= q$b@1006@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 6
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1005@01 Int) (q$b@1006@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1005@01)
      (and
        (<= 0 q$a@1005@01)
        (=>
          (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1006@01) (not (<= 0 q$b@1006@01)))))
        (or
          (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1005@01) (not (<= 0 q$a@1005@01)))
    (=>
      (and
        (<= 0 q$a@1005@01)
        (and
          (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1006@01)
            (<= q$b@1006@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1005@01)
        (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1006@01)
        (<= q$b@1006@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1005@01)
          (and
            (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1006@01)
              (<= q$b@1006@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1005@01)
        (and
          (<= q$a@1005@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1006@01)
            (<= q$b@1006@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1005@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1006@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1805@17@1805@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1007@01 Int)
(push) ; 6
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 7
; [then-branch: 612 | !(0 <= q$a@1007@01) | live]
; [else-branch: 612 | 0 <= q$a@1007@01 | live]
(push) ; 8
; [then-branch: 612 | !(0 <= q$a@1007@01)]
(assert (not (<= 0 q$a@1007@01)))
(pop) ; 8
(push) ; 8
; [else-branch: 612 | 0 <= q$a@1007@01]
(assert (<= 0 q$a@1007@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1007@01) (not (<= 0 q$a@1007@01))))
(push) ; 7
; [then-branch: 613 | 0 <= q$a@1007@01 && q$a@1007@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 613 | !(0 <= q$a@1007@01 && q$a@1007@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 8
; [then-branch: 613 | 0 <= q$a@1007@01 && q$a@1007@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1007@01)
  (<= q$a@1007@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 9
; [then-branch: 614 | False | dead]
; [else-branch: 614 | True | live]
(push) ; 10
; [else-branch: 614 | True]
(pop) ; 10
(pop) ; 9
; Joined path conditions
(pop) ; 8
(push) ; 8
; [else-branch: 613 | !(0 <= q$a@1007@01 && q$a@1007@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1007@01)
    (<= q$a@1007@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1007@01)
      (<= q$a@1007@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1007@01)
    (<= q$a@1007@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 6
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1007@01 Int)) (!
  (and
    (or (<= 0 q$a@1007@01) (not (<= 0 q$a@1007@01)))
    (or
      (not
        (and
          (<= 0 q$a@1007@01)
          (<= q$a@1007@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1007@01)
        (<= q$a@1007@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1007@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1806@17@1806@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1008@01 Int)
(push) ; 6
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 7
; [then-branch: 615 | !(0 <= q$a@1008@01) | live]
; [else-branch: 615 | 0 <= q$a@1008@01 | live]
(push) ; 8
; [then-branch: 615 | !(0 <= q$a@1008@01)]
(assert (not (<= 0 q$a@1008@01)))
(pop) ; 8
(push) ; 8
; [else-branch: 615 | 0 <= q$a@1008@01]
(assert (<= 0 q$a@1008@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1008@01) (not (<= 0 q$a@1008@01))))
(push) ; 7
; [then-branch: 616 | 0 <= q$a@1008@01 && q$a@1008@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 616 | !(0 <= q$a@1008@01 && q$a@1008@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 8
; [then-branch: 616 | 0 <= q$a@1008@01 && q$a@1008@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1008@01)
  (<= q$a@1008@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 9
; [then-branch: 617 | False | dead]
; [else-branch: 617 | True | live]
(push) ; 10
; [else-branch: 617 | True]
(pop) ; 10
(pop) ; 9
; Joined path conditions
(pop) ; 8
(push) ; 8
; [else-branch: 616 | !(0 <= q$a@1008@01 && q$a@1008@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1008@01)
    (<= q$a@1008@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1008@01)
      (<= q$a@1008@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1008@01)
    (<= q$a@1008@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 6
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1008@01 Int)) (!
  (and
    (or (<= 0 q$a@1008@01) (not (<= 0 q$a@1008@01)))
    (or
      (not
        (and
          (<= 0 q$a@1008@01)
          (<= q$a@1008@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1008@01)
        (<= q$a@1008@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1008@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1807@17@1807@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@1009@01 Int)
(declare-const q$b@1010@01 Int)
(push) ; 6
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 7
; [then-branch: 618 | !(0 <= q$a@1009@01) | live]
; [else-branch: 618 | 0 <= q$a@1009@01 | live]
(push) ; 8
; [then-branch: 618 | !(0 <= q$a@1009@01)]
(assert (not (<= 0 q$a@1009@01)))
(pop) ; 8
(push) ; 8
; [else-branch: 618 | 0 <= q$a@1009@01]
(assert (<= 0 q$a@1009@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 9
; [then-branch: 619 | !(q$a@1009@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 619 | q$a@1009@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 10
; [then-branch: 619 | !(q$a@1009@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 10
(push) ; 10
; [else-branch: 619 | q$a@1009@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1009@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 11
; [then-branch: 620 | !(0 <= q$b@1010@01) | live]
; [else-branch: 620 | 0 <= q$b@1010@01 | live]
(push) ; 12
; [then-branch: 620 | !(0 <= q$b@1010@01)]
(assert (not (<= 0 q$b@1010@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 620 | 0 <= q$b@1010@01]
(assert (<= 0 q$b@1010@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1010@01) (not (<= 0 q$b@1010@01))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1010@01) (not (<= 0 q$b@1010@01))))))
(assert (or
  (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1009@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1009@01)
  (and
    (<= 0 q$a@1009@01)
    (=>
      (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1010@01) (not (<= 0 q$b@1010@01)))))
    (or
      (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1009@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1009@01) (not (<= 0 q$a@1009@01))))
(push) ; 7
; [then-branch: 621 | 0 <= q$a@1009@01 && q$a@1009@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1010@01 && q$b@1010@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 621 | !(0 <= q$a@1009@01 && q$a@1009@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1010@01 && q$b@1010@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 8
; [then-branch: 621 | 0 <= q$a@1009@01 && q$a@1009@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1010@01 && q$b@1010@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1009@01)
  (and
    (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1010@01)
      (<= q$b@1010@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 9
; [then-branch: 622 | False | dead]
; [else-branch: 622 | True | live]
(push) ; 10
; [else-branch: 622 | True]
(pop) ; 10
(pop) ; 9
; Joined path conditions
(pop) ; 8
(push) ; 8
; [else-branch: 621 | !(0 <= q$a@1009@01 && q$a@1009@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1010@01 && q$b@1010@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1009@01)
    (and
      (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1010@01)
        (<= q$b@1010@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1009@01)
    (and
      (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1010@01)
        (<= q$b@1010@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1009@01)
    (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1010@01)
    (<= q$b@1010@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1009@01)
      (and
        (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1010@01)
          (<= q$b@1010@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1009@01)
    (and
      (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1010@01)
        (<= q$b@1010@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 6
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1009@01 Int) (q$b@1010@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1009@01)
      (and
        (<= 0 q$a@1009@01)
        (=>
          (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1010@01) (not (<= 0 q$b@1010@01)))))
        (or
          (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1009@01) (not (<= 0 q$a@1009@01)))
    (=>
      (and
        (<= 0 q$a@1009@01)
        (and
          (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1010@01)
            (<= q$b@1010@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1009@01)
        (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1010@01)
        (<= q$b@1010@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1009@01)
          (and
            (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1010@01)
              (<= q$b@1010@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1009@01)
        (and
          (<= q$a@1009@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1010@01)
            (<= q$b@1010@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1009@01) q$b@1010@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1808@17@1808@847-aux|)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@1011@01 $Snap)
(assert (= $t@1011@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@958@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@1012@01 $Struct)
(assert (=
  self@1012@01
  ($struct_set<$Struct> self@944@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@944@01 7))
    l$havoc@958@01))))
; [exec]
; $contracts := l$havoc$1
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 6
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1012@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@944@01 6)))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1012@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@944@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 6
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1012@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1012@01 3))))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1012@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1012@01 3)))))
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 603 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@944@01, 5)))) - $unwrap[Int](l$_value@938@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@944@01 5))))
      ($unwrap<Int> l$_value@938@01))
    0)))
(pop) ; 4
; [eval] !($unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) < 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) < 0
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] $unwrap(l$i0$_value)
(push) ; 4
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@944@01 5))))
    ($unwrap<Int> l$_value@938@01))
  0)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@944@01 5))))
      ($unwrap<Int> l$_value@938@01))
    0))))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 623 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@944@01, 5)))) - $unwrap[Int](l$_value@938@01) < 0) | live]
; [else-branch: 623 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@944@01, 5)))) - $unwrap[Int](l$_value@938@01) < 0 | live]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 623 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@944@01, 5)))) - $unwrap[Int](l$_value@938@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@944@01 5))))
      ($unwrap<Int> l$_value@938@01))
    0)))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] $unwrap(l$i0$_value)
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@944@01 5))))
      ($unwrap<Int> l$_value@938@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 624 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@944@01, 5)))) - $unwrap[Int](l$_value@938@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
; [else-branch: 624 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@944@01, 5)))) - $unwrap[Int](l$_value@938@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
(set-option :timeout 0)
(push) ; 5
; [else-branch: 624 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@944@01, 5)))) - $unwrap[Int](l$_value@938@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@944@01 5))))
      ($unwrap<Int> l$_value@938@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(pop) ; 5
; [eval] !($unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] $unwrap(l$i0$_value)
(push) ; 5
(set-option :timeout 10)
(assert (not (>
  (-
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@944@01 5))))
    ($unwrap<Int> l$_value@938@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@944@01 5))))
      ($unwrap<Int> l$_value@938@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 625 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@944@01, 5)))) - $unwrap[Int](l$_value@938@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
; [else-branch: 625 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@944@01, 5)))) - $unwrap[Int](l$_value@938@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 625 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@944@01, 5)))) - $unwrap[Int](l$_value@938@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@944@01 5))))
      ($unwrap<Int> l$_value@938@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
; [exec]
; self := ($struct_set(self, 5, $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) -
;   $unwrap(l$i0$_value)): $Struct)
; [eval] ($struct_set(self, 5, $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value)): $Struct)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] $unwrap(l$i0$_value)
(declare-const self@1013@01 $Struct)
(assert (=
  self@1013@01
  ($struct_set<$Struct> self@944@01 5 (-
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@944@01 5))))
    ($unwrap<Int> l$_value@938@01)))))
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) < 0
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$i0$_value)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1013@01 3)) l$i0$_to@1004@01)))
      ($unwrap<Int> l$_value@938@01))
    0))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1013@01 3)) l$i0$_to@1004@01)))
    ($unwrap<Int> l$_value@938@01))
  0)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 626 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1013@01, 3)), l$i0$_to@1004@01))) - $unwrap[Int](l$_value@938@01) < 0 | live]
; [else-branch: 626 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1013@01, 3)), l$i0$_to@1004@01))) - $unwrap[Int](l$_value@938@01) < 0) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 626 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1013@01, 3)), l$i0$_to@1004@01))) - $unwrap[Int](l$_value@938@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1013@01 3)) l$i0$_to@1004@01)))
    ($unwrap<Int> l$_value@938@01))
  0))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [then-branch: 627 | False | dead]
; [else-branch: 627 | True | live]
(push) ; 7
; [else-branch: 627 | True]
(pop) ; 7
; [eval] !$succ
(push) ; 7
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 628 | True | live]
; [else-branch: 628 | False | dead]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 628 | True]
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 8
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@944@01 6)))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@944@01 6))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 629 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) != $struct_get[Int]($struct_loc[Int](self@944@01, 6)) | live]
; [else-branch: 629 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) == $struct_get[Int]($struct_loc[Int](self@944@01, 6)) | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 629 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) != $struct_get[Int]($struct_loc[Int](self@944@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@944@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 9
(push) ; 9
; [else-branch: 629 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) == $struct_get[Int]($struct_loc[Int](self@944@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@944@01 6))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@944@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@944@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1014@01 Int)
(declare-const q$b@1015@01 Int)
(push) ; 8
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 630 | !(0 <= q$a@1014@01) | live]
; [else-branch: 630 | 0 <= q$a@1014@01 | live]
(push) ; 10
; [then-branch: 630 | !(0 <= q$a@1014@01)]
(assert (not (<= 0 q$a@1014@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 630 | 0 <= q$a@1014@01]
(assert (<= 0 q$a@1014@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 11
; [then-branch: 631 | !(q$a@1014@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 631 | q$a@1014@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 12
; [then-branch: 631 | !(q$a@1014@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 12
(push) ; 12
; [else-branch: 631 | q$a@1014@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1014@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 13
; [then-branch: 632 | !(0 <= q$b@1015@01) | live]
; [else-branch: 632 | 0 <= q$b@1015@01 | live]
(push) ; 14
; [then-branch: 632 | !(0 <= q$b@1015@01)]
(assert (not (<= 0 q$b@1015@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 632 | 0 <= q$b@1015@01]
(assert (<= 0 q$b@1015@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1015@01) (not (<= 0 q$b@1015@01))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1015@01) (not (<= 0 q$b@1015@01))))))
(assert (or
  (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1014@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1014@01)
  (and
    (<= 0 q$a@1014@01)
    (=>
      (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1015@01) (not (<= 0 q$b@1015@01)))))
    (or
      (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1014@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1014@01) (not (<= 0 q$a@1014@01))))
(push) ; 9
; [then-branch: 633 | 0 <= q$a@1014@01 && q$a@1014@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1015@01 && q$b@1015@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 633 | !(0 <= q$a@1014@01 && q$a@1014@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1015@01 && q$b@1015@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 633 | 0 <= q$a@1014@01 && q$a@1014@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1015@01 && q$b@1015@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1014@01)
  (and
    (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1015@01)
      (<= q$b@1015@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 11
; [then-branch: 634 | False | dead]
; [else-branch: 634 | True | live]
(push) ; 12
; [else-branch: 634 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 633 | !(0 <= q$a@1014@01 && q$a@1014@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1015@01 && q$b@1015@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1014@01)
    (and
      (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1015@01)
        (<= q$b@1015@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1014@01)
    (and
      (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1015@01)
        (<= q$b@1015@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1014@01)
    (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1015@01)
    (<= q$b@1015@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1014@01)
      (and
        (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1015@01)
          (<= q$b@1015@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1014@01)
    (and
      (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1015@01)
        (<= q$b@1015@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1014@01 Int) (q$b@1015@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1014@01)
      (and
        (<= 0 q$a@1014@01)
        (=>
          (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1015@01) (not (<= 0 q$b@1015@01)))))
        (or
          (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1014@01) (not (<= 0 q$a@1014@01)))
    (=>
      (and
        (<= 0 q$a@1014@01)
        (and
          (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1015@01)
            (<= q$b@1015@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1014@01)
        (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1015@01)
        (<= q$b@1015@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1014@01)
          (and
            (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1015@01)
              (<= q$b@1015@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1014@01)
        (and
          (<= q$a@1014@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1015@01)
            (<= q$b@1015@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1014@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1015@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1805@17@1805@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1016@01 Int)
(push) ; 8
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 635 | !(0 <= q$a@1016@01) | live]
; [else-branch: 635 | 0 <= q$a@1016@01 | live]
(push) ; 10
; [then-branch: 635 | !(0 <= q$a@1016@01)]
(assert (not (<= 0 q$a@1016@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 635 | 0 <= q$a@1016@01]
(assert (<= 0 q$a@1016@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1016@01) (not (<= 0 q$a@1016@01))))
(push) ; 9
; [then-branch: 636 | 0 <= q$a@1016@01 && q$a@1016@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 636 | !(0 <= q$a@1016@01 && q$a@1016@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 636 | 0 <= q$a@1016@01 && q$a@1016@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1016@01)
  (<= q$a@1016@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 11
; [then-branch: 637 | False | dead]
; [else-branch: 637 | True | live]
(push) ; 12
; [else-branch: 637 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 636 | !(0 <= q$a@1016@01 && q$a@1016@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1016@01)
    (<= q$a@1016@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1016@01)
      (<= q$a@1016@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1016@01)
    (<= q$a@1016@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1016@01 Int)) (!
  (and
    (or (<= 0 q$a@1016@01) (not (<= 0 q$a@1016@01)))
    (or
      (not
        (and
          (<= 0 q$a@1016@01)
          (<= q$a@1016@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1016@01)
        (<= q$a@1016@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1016@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1806@17@1806@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1017@01 Int)
(push) ; 8
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 638 | !(0 <= q$a@1017@01) | live]
; [else-branch: 638 | 0 <= q$a@1017@01 | live]
(push) ; 10
; [then-branch: 638 | !(0 <= q$a@1017@01)]
(assert (not (<= 0 q$a@1017@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 638 | 0 <= q$a@1017@01]
(assert (<= 0 q$a@1017@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1017@01) (not (<= 0 q$a@1017@01))))
(push) ; 9
; [then-branch: 639 | 0 <= q$a@1017@01 && q$a@1017@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 639 | !(0 <= q$a@1017@01 && q$a@1017@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 639 | 0 <= q$a@1017@01 && q$a@1017@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1017@01)
  (<= q$a@1017@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 11
; [then-branch: 640 | False | dead]
; [else-branch: 640 | True | live]
(push) ; 12
; [else-branch: 640 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 639 | !(0 <= q$a@1017@01 && q$a@1017@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1017@01)
    (<= q$a@1017@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1017@01)
      (<= q$a@1017@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1017@01)
    (<= q$a@1017@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1017@01 Int)) (!
  (and
    (or (<= 0 q$a@1017@01) (not (<= 0 q$a@1017@01)))
    (or
      (not
        (and
          (<= 0 q$a@1017@01)
          (<= q$a@1017@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1017@01)
        (<= q$a@1017@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1017@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1807@17@1807@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@1018@01 Int)
(declare-const q$b@1019@01 Int)
(push) ; 8
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 641 | !(0 <= q$a@1018@01) | live]
; [else-branch: 641 | 0 <= q$a@1018@01 | live]
(push) ; 10
; [then-branch: 641 | !(0 <= q$a@1018@01)]
(assert (not (<= 0 q$a@1018@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 641 | 0 <= q$a@1018@01]
(assert (<= 0 q$a@1018@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 11
; [then-branch: 642 | !(q$a@1018@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 642 | q$a@1018@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 12
; [then-branch: 642 | !(q$a@1018@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 12
(push) ; 12
; [else-branch: 642 | q$a@1018@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1018@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 13
; [then-branch: 643 | !(0 <= q$b@1019@01) | live]
; [else-branch: 643 | 0 <= q$b@1019@01 | live]
(push) ; 14
; [then-branch: 643 | !(0 <= q$b@1019@01)]
(assert (not (<= 0 q$b@1019@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 643 | 0 <= q$b@1019@01]
(assert (<= 0 q$b@1019@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1019@01) (not (<= 0 q$b@1019@01))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1019@01) (not (<= 0 q$b@1019@01))))))
(assert (or
  (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1018@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1018@01)
  (and
    (<= 0 q$a@1018@01)
    (=>
      (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1019@01) (not (<= 0 q$b@1019@01)))))
    (or
      (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1018@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1018@01) (not (<= 0 q$a@1018@01))))
(push) ; 9
; [then-branch: 644 | 0 <= q$a@1018@01 && q$a@1018@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1019@01 && q$b@1019@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 644 | !(0 <= q$a@1018@01 && q$a@1018@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1019@01 && q$b@1019@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 644 | 0 <= q$a@1018@01 && q$a@1018@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1019@01 && q$b@1019@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1018@01)
  (and
    (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1019@01)
      (<= q$b@1019@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 11
; [then-branch: 645 | False | dead]
; [else-branch: 645 | True | live]
(push) ; 12
; [else-branch: 645 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 644 | !(0 <= q$a@1018@01 && q$a@1018@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1019@01 && q$b@1019@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1018@01)
    (and
      (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1019@01)
        (<= q$b@1019@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1018@01)
    (and
      (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1019@01)
        (<= q$b@1019@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1018@01)
    (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1019@01)
    (<= q$b@1019@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1018@01)
      (and
        (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1019@01)
          (<= q$b@1019@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1018@01)
    (and
      (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1019@01)
        (<= q$b@1019@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1018@01 Int) (q$b@1019@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1018@01)
      (and
        (<= 0 q$a@1018@01)
        (=>
          (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1019@01) (not (<= 0 q$b@1019@01)))))
        (or
          (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1018@01) (not (<= 0 q$a@1018@01)))
    (=>
      (and
        (<= 0 q$a@1018@01)
        (and
          (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1019@01)
            (<= q$b@1019@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1018@01)
        (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1019@01)
        (<= q$b@1019@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1018@01)
          (and
            (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1019@01)
              (<= q$b@1019@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1018@01)
        (and
          (<= q$a@1018@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1019@01)
            (<= q$b@1019@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1018@01) q$b@1019@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1808@17@1808@847-aux|)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@1020@01 $Snap)
(assert (= $t@1020@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@958@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@1021@01 $Struct)
(assert (=
  self@1021@01
  ($struct_set<$Struct> self@944@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@944@01 7))
    l$havoc@958@01))))
; [exec]
; $contracts := l$havoc$1
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 8
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1021@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@944@01 6)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1021@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@944@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1021@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1021@01 3))))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1021@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1021@01 3)))))
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 626 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1013@01, 3)), l$i0$_to@1004@01))) - $unwrap[Int](l$_value@938@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1013@01 3)) l$i0$_to@1004@01)))
      ($unwrap<Int> l$_value@938@01))
    0)))
(pop) ; 6
; [eval] !($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) < 0)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) < 0
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$i0$_value)
(push) ; 6
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1013@01 3)) l$i0$_to@1004@01)))
    ($unwrap<Int> l$_value@938@01))
  0)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1013@01 3)) l$i0$_to@1004@01)))
      ($unwrap<Int> l$_value@938@01))
    0))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 646 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1013@01, 3)), l$i0$_to@1004@01))) - $unwrap[Int](l$_value@938@01) < 0) | live]
; [else-branch: 646 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1013@01, 3)), l$i0$_to@1004@01))) - $unwrap[Int](l$_value@938@01) < 0 | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 646 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1013@01, 3)), l$i0$_to@1004@01))) - $unwrap[Int](l$_value@938@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1013@01 3)) l$i0$_to@1004@01)))
      ($unwrap<Int> l$_value@938@01))
    0)))
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$i0$_value)
(push) ; 7
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1013@01 3)) l$i0$_to@1004@01)))
      ($unwrap<Int> l$_value@938@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 647 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1013@01, 3)), l$i0$_to@1004@01))) - $unwrap[Int](l$_value@938@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
; [else-branch: 647 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1013@01, 3)), l$i0$_to@1004@01))) - $unwrap[Int](l$_value@938@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
(set-option :timeout 0)
(push) ; 7
; [else-branch: 647 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1013@01, 3)), l$i0$_to@1004@01))) - $unwrap[Int](l$_value@938@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1013@01 3)) l$i0$_to@1004@01)))
      ($unwrap<Int> l$_value@938@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(pop) ; 7
; [eval] !($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$i0$_value)
(push) ; 7
(set-option :timeout 10)
(assert (not (>
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1013@01 3)) l$i0$_to@1004@01)))
    ($unwrap<Int> l$_value@938@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1013@01 3)) l$i0$_to@1004@01)))
      ($unwrap<Int> l$_value@938@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 648 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1013@01, 3)), l$i0$_to@1004@01))) - $unwrap[Int](l$_value@938@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
; [else-branch: 648 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1013@01, 3)), l$i0$_to@1004@01))) - $unwrap[Int](l$_value@938@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 648 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1013@01, 3)), l$i0$_to@1004@01))) - $unwrap[Int](l$_value@938@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1013@01 3)) l$i0$_to@1004@01)))
      ($unwrap<Int> l$_value@938@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
; [exec]
; self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;   l$i0$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;   l$i0$_to): Int))) -
;   $unwrap(l$i0$_value)): $Map[Int, Int])): $Struct)
; [eval] ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)): $Map[Int, Int])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$i0$_value)
(declare-const self@1022@01 $Struct)
(assert (=
  self@1022@01
  ($struct_set<$Struct> self@1013@01 3 ($map_set<$Map<Int~_Int>> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1013@01 3)) l$i0$_to@1004@01 (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1013@01 3)) l$i0$_to@1004@01)))
    ($unwrap<Int> l$_value@938@01))))))
; [exec]
; inhale acc(e$Transfer(l$i0$_to, 0, $unwrap(l$i0$_value)), write)
; [eval] $unwrap(l$i0$_value)
(declare-const $t@1023@01 $Snap)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label i0$return
; [exec]
; label return
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (not $out_of_gas@957@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not $out_of_gas@957@01))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 649 | $out_of_gas@957@01 | live]
; [else-branch: 649 | !($out_of_gas@957@01) | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 649 | $out_of_gas@957@01]
(assert $out_of_gas@957@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [then-branch: 650 | False | dead]
; [else-branch: 650 | True | live]
(push) ; 9
; [else-branch: 650 | True]
(pop) ; 9
; [eval] !$succ
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 651 | True | live]
; [else-branch: 651 | False | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 651 | True]
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 10
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@944@01 6)))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@944@01 6))))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 652 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) != $struct_get[Int]($struct_loc[Int](self@944@01, 6)) | live]
; [else-branch: 652 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) == $struct_get[Int]($struct_loc[Int](self@944@01, 6)) | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 652 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) != $struct_get[Int]($struct_loc[Int](self@944@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@944@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 11
(push) ; 11
; [else-branch: 652 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) == $struct_get[Int]($struct_loc[Int](self@944@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@944@01 6))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@944@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@944@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1024@01 Int)
(declare-const q$b@1025@01 Int)
(push) ; 10
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 653 | !(0 <= q$a@1024@01) | live]
; [else-branch: 653 | 0 <= q$a@1024@01 | live]
(push) ; 12
; [then-branch: 653 | !(0 <= q$a@1024@01)]
(assert (not (<= 0 q$a@1024@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 653 | 0 <= q$a@1024@01]
(assert (<= 0 q$a@1024@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 13
; [then-branch: 654 | !(q$a@1024@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 654 | q$a@1024@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 14
; [then-branch: 654 | !(q$a@1024@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 14
(push) ; 14
; [else-branch: 654 | q$a@1024@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1024@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 15
; [then-branch: 655 | !(0 <= q$b@1025@01) | live]
; [else-branch: 655 | 0 <= q$b@1025@01 | live]
(push) ; 16
; [then-branch: 655 | !(0 <= q$b@1025@01)]
(assert (not (<= 0 q$b@1025@01)))
(pop) ; 16
(push) ; 16
; [else-branch: 655 | 0 <= q$b@1025@01]
(assert (<= 0 q$b@1025@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1025@01) (not (<= 0 q$b@1025@01))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1025@01) (not (<= 0 q$b@1025@01))))))
(assert (or
  (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1024@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1024@01)
  (and
    (<= 0 q$a@1024@01)
    (=>
      (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1025@01) (not (<= 0 q$b@1025@01)))))
    (or
      (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1024@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1024@01) (not (<= 0 q$a@1024@01))))
(push) ; 11
; [then-branch: 656 | 0 <= q$a@1024@01 && q$a@1024@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1025@01 && q$b@1025@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 656 | !(0 <= q$a@1024@01 && q$a@1024@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1025@01 && q$b@1025@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 656 | 0 <= q$a@1024@01 && q$a@1024@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1025@01 && q$b@1025@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1024@01)
  (and
    (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1025@01)
      (<= q$b@1025@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 13
; [then-branch: 657 | False | dead]
; [else-branch: 657 | True | live]
(push) ; 14
; [else-branch: 657 | True]
(pop) ; 14
(pop) ; 13
; Joined path conditions
(pop) ; 12
(push) ; 12
; [else-branch: 656 | !(0 <= q$a@1024@01 && q$a@1024@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1025@01 && q$b@1025@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1024@01)
    (and
      (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1025@01)
        (<= q$b@1025@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1024@01)
    (and
      (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1025@01)
        (<= q$b@1025@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1024@01)
    (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1025@01)
    (<= q$b@1025@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1024@01)
      (and
        (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1025@01)
          (<= q$b@1025@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1024@01)
    (and
      (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1025@01)
        (<= q$b@1025@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1024@01 Int) (q$b@1025@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1024@01)
      (and
        (<= 0 q$a@1024@01)
        (=>
          (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1025@01) (not (<= 0 q$b@1025@01)))))
        (or
          (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1024@01) (not (<= 0 q$a@1024@01)))
    (=>
      (and
        (<= 0 q$a@1024@01)
        (and
          (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1025@01)
            (<= q$b@1025@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1024@01)
        (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1025@01)
        (<= q$b@1025@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1024@01)
          (and
            (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1025@01)
              (<= q$b@1025@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1024@01)
        (and
          (<= q$a@1024@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1025@01)
            (<= q$b@1025@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1024@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1025@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1805@17@1805@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1026@01 Int)
(push) ; 10
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 658 | !(0 <= q$a@1026@01) | live]
; [else-branch: 658 | 0 <= q$a@1026@01 | live]
(push) ; 12
; [then-branch: 658 | !(0 <= q$a@1026@01)]
(assert (not (<= 0 q$a@1026@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 658 | 0 <= q$a@1026@01]
(assert (<= 0 q$a@1026@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1026@01) (not (<= 0 q$a@1026@01))))
(push) ; 11
; [then-branch: 659 | 0 <= q$a@1026@01 && q$a@1026@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 659 | !(0 <= q$a@1026@01 && q$a@1026@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 659 | 0 <= q$a@1026@01 && q$a@1026@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1026@01)
  (<= q$a@1026@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 13
; [then-branch: 660 | False | dead]
; [else-branch: 660 | True | live]
(push) ; 14
; [else-branch: 660 | True]
(pop) ; 14
(pop) ; 13
; Joined path conditions
(pop) ; 12
(push) ; 12
; [else-branch: 659 | !(0 <= q$a@1026@01 && q$a@1026@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1026@01)
    (<= q$a@1026@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1026@01)
      (<= q$a@1026@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1026@01)
    (<= q$a@1026@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1026@01 Int)) (!
  (and
    (or (<= 0 q$a@1026@01) (not (<= 0 q$a@1026@01)))
    (or
      (not
        (and
          (<= 0 q$a@1026@01)
          (<= q$a@1026@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1026@01)
        (<= q$a@1026@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1026@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1806@17@1806@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1027@01 Int)
(push) ; 10
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 661 | !(0 <= q$a@1027@01) | live]
; [else-branch: 661 | 0 <= q$a@1027@01 | live]
(push) ; 12
; [then-branch: 661 | !(0 <= q$a@1027@01)]
(assert (not (<= 0 q$a@1027@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 661 | 0 <= q$a@1027@01]
(assert (<= 0 q$a@1027@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1027@01) (not (<= 0 q$a@1027@01))))
(push) ; 11
; [then-branch: 662 | 0 <= q$a@1027@01 && q$a@1027@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 662 | !(0 <= q$a@1027@01 && q$a@1027@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 662 | 0 <= q$a@1027@01 && q$a@1027@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1027@01)
  (<= q$a@1027@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 13
; [then-branch: 663 | False | dead]
; [else-branch: 663 | True | live]
(push) ; 14
; [else-branch: 663 | True]
(pop) ; 14
(pop) ; 13
; Joined path conditions
(pop) ; 12
(push) ; 12
; [else-branch: 662 | !(0 <= q$a@1027@01 && q$a@1027@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1027@01)
    (<= q$a@1027@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1027@01)
      (<= q$a@1027@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1027@01)
    (<= q$a@1027@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1027@01 Int)) (!
  (and
    (or (<= 0 q$a@1027@01) (not (<= 0 q$a@1027@01)))
    (or
      (not
        (and
          (<= 0 q$a@1027@01)
          (<= q$a@1027@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1027@01)
        (<= q$a@1027@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1027@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1807@17@1807@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@1028@01 Int)
(declare-const q$b@1029@01 Int)
(push) ; 10
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 664 | !(0 <= q$a@1028@01) | live]
; [else-branch: 664 | 0 <= q$a@1028@01 | live]
(push) ; 12
; [then-branch: 664 | !(0 <= q$a@1028@01)]
(assert (not (<= 0 q$a@1028@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 664 | 0 <= q$a@1028@01]
(assert (<= 0 q$a@1028@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 13
; [then-branch: 665 | !(q$a@1028@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 665 | q$a@1028@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 14
; [then-branch: 665 | !(q$a@1028@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 14
(push) ; 14
; [else-branch: 665 | q$a@1028@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1028@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 15
; [then-branch: 666 | !(0 <= q$b@1029@01) | live]
; [else-branch: 666 | 0 <= q$b@1029@01 | live]
(push) ; 16
; [then-branch: 666 | !(0 <= q$b@1029@01)]
(assert (not (<= 0 q$b@1029@01)))
(pop) ; 16
(push) ; 16
; [else-branch: 666 | 0 <= q$b@1029@01]
(assert (<= 0 q$b@1029@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1029@01) (not (<= 0 q$b@1029@01))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1029@01) (not (<= 0 q$b@1029@01))))))
(assert (or
  (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1028@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1028@01)
  (and
    (<= 0 q$a@1028@01)
    (=>
      (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1029@01) (not (<= 0 q$b@1029@01)))))
    (or
      (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1028@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1028@01) (not (<= 0 q$a@1028@01))))
(push) ; 11
; [then-branch: 667 | 0 <= q$a@1028@01 && q$a@1028@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1029@01 && q$b@1029@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 667 | !(0 <= q$a@1028@01 && q$a@1028@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1029@01 && q$b@1029@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 667 | 0 <= q$a@1028@01 && q$a@1028@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1029@01 && q$b@1029@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1028@01)
  (and
    (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1029@01)
      (<= q$b@1029@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 13
; [then-branch: 668 | False | dead]
; [else-branch: 668 | True | live]
(push) ; 14
; [else-branch: 668 | True]
(pop) ; 14
(pop) ; 13
; Joined path conditions
(pop) ; 12
(push) ; 12
; [else-branch: 667 | !(0 <= q$a@1028@01 && q$a@1028@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1029@01 && q$b@1029@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1028@01)
    (and
      (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1029@01)
        (<= q$b@1029@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1028@01)
    (and
      (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1029@01)
        (<= q$b@1029@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1028@01)
    (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1029@01)
    (<= q$b@1029@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1028@01)
      (and
        (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1029@01)
          (<= q$b@1029@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1028@01)
    (and
      (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1029@01)
        (<= q$b@1029@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1028@01 Int) (q$b@1029@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1028@01)
      (and
        (<= 0 q$a@1028@01)
        (=>
          (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1029@01) (not (<= 0 q$b@1029@01)))))
        (or
          (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1028@01) (not (<= 0 q$a@1028@01)))
    (=>
      (and
        (<= 0 q$a@1028@01)
        (and
          (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1029@01)
            (<= q$b@1029@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1028@01)
        (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1029@01)
        (<= q$b@1029@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1028@01)
          (and
            (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1029@01)
              (<= q$b@1029@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1028@01)
        (and
          (<= q$a@1028@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1029@01)
            (<= q$b@1029@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1028@01) q$b@1029@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1808@17@1808@847-aux|)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@1030@01 $Snap)
(assert (= $t@1030@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@958@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@1031@01 $Struct)
(assert (=
  self@1031@01
  ($struct_set<$Struct> self@944@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@944@01 7))
    l$havoc@958@01))))
; [exec]
; $contracts := l$havoc$1
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 10
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1031@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@944@01 6)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1031@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@944@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 10
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1031@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1031@01 3))))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1031@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1031@01 3)))))
(pop) ; 9
(pop) ; 8
(push) ; 8
; [else-branch: 649 | !($out_of_gas@957@01)]
(assert (not $out_of_gas@957@01))
(pop) ; 8
; [eval] !$out_of_gas
(push) ; 8
(set-option :timeout 10)
(assert (not $out_of_gas@957@01))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (not $out_of_gas@957@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 669 | !($out_of_gas@957@01) | live]
; [else-branch: 669 | $out_of_gas@957@01 | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 669 | !($out_of_gas@957@01)]
(assert (not $out_of_gas@957@01))
; [exec]
; label end
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 670 | True | live]
; [else-branch: 670 | False | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 670 | True]
; [exec]
; assert ($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 10
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@1022@01 6)))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1022@01 6))))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 671 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) != $struct_get[Int]($struct_loc[Int](self@1022@01, 6)) | live]
; [else-branch: 671 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) == $struct_get[Int]($struct_loc[Int](self@1022@01, 6)) | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 671 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) != $struct_get[Int]($struct_loc[Int](self@1022@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1022@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 11
(push) ; 11
; [else-branch: 671 | $struct_get[Int]($struct_loc[Int](msg@940@01, 0)) == $struct_get[Int]($struct_loc[Int](self@1022@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@1022@01 6))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1022@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@1022@01 6))))))
(push) ; 10
(assert (not (=>
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@1022@01 6))))
  (>=
    ($struct_get<Int> ($struct_loc<Int> self@944@01 5))
    ($struct_get<Int> ($struct_loc<Int> self@1022@01 5))))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (=>
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@940@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@1022@01 6))))
  (>=
    ($struct_get<Int> ($struct_loc<Int> self@944@01 5))
    ($struct_get<Int> ($struct_loc<Int> self@1022@01 5)))))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1032@01 Int)
(declare-const q$b@1033@01 Int)
(push) ; 10
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 672 | !(0 <= q$a@1032@01) | live]
; [else-branch: 672 | 0 <= q$a@1032@01 | live]
(push) ; 12
; [then-branch: 672 | !(0 <= q$a@1032@01)]
(assert (not (<= 0 q$a@1032@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 672 | 0 <= q$a@1032@01]
(assert (<= 0 q$a@1032@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 13
; [then-branch: 673 | !(q$a@1032@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 673 | q$a@1032@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 14
; [then-branch: 673 | !(q$a@1032@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 14
(push) ; 14
; [else-branch: 673 | q$a@1032@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1032@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 15
; [then-branch: 674 | !(0 <= q$b@1033@01) | live]
; [else-branch: 674 | 0 <= q$b@1033@01 | live]
(push) ; 16
; [then-branch: 674 | !(0 <= q$b@1033@01)]
(assert (not (<= 0 q$b@1033@01)))
(pop) ; 16
(push) ; 16
; [else-branch: 674 | 0 <= q$b@1033@01]
(assert (<= 0 q$b@1033@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1033@01) (not (<= 0 q$b@1033@01))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1033@01) (not (<= 0 q$b@1033@01))))))
(assert (or
  (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1032@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1032@01)
  (and
    (<= 0 q$a@1032@01)
    (=>
      (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1033@01) (not (<= 0 q$b@1033@01)))))
    (or
      (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1032@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1032@01) (not (<= 0 q$a@1032@01))))
(push) ; 11
; [then-branch: 675 | 0 <= q$a@1032@01 && q$a@1032@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1033@01 && q$b@1033@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 675 | !(0 <= q$a@1032@01 && q$a@1032@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1033@01 && q$b@1033@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 675 | 0 <= q$a@1032@01 && q$a@1032@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1033@01 && q$b@1033@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1032@01)
  (and
    (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1033@01)
      (<= q$b@1033@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 13
; [then-branch: 676 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1032@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1032@01)) | live]
; [else-branch: 676 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1032@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1032@01) | live]
(push) ; 14
; [then-branch: 676 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1032@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1032@01))]
(assert (not
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))))
(pop) ; 14
(push) ; 14
; [else-branch: 676 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1032@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1032@01)]
(assert (>
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))
  (not
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01)))))
(push) ; 13
; [then-branch: 677 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1032@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1032@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$b@1033@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$b@1033@01) | live]
; [else-branch: 677 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1032@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1032@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$b@1033@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$b@1033@01)) | live]
(push) ; 14
; [then-branch: 677 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1032@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1032@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$b@1033@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$b@1033@01)]
(assert (and
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1033@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1033@01))))
; [eval] perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] 1 * write
(pop) ; 14
(push) ; 14
; [else-branch: 677 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1032@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1032@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$b@1033@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$b@1033@01))]
(assert (not
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1033@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1033@01)))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1033@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1033@01))))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1033@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1033@01)))))
(pop) ; 12
(push) ; 12
; [else-branch: 675 | !(0 <= q$a@1032@01 && q$a@1032@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1033@01 && q$b@1033@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1032@01)
    (and
      (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1033@01)
        (<= q$b@1033@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1032@01)
    (and
      (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1033@01)
        (<= q$b@1033@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1032@01)
    (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1033@01)
    (<= q$b@1033@01 1461501637330902918203684832716283019655932542975)
    (or
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))
      (not
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))))
    (or
      (not
        (and
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1033@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1033@01))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1033@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1033@01)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1032@01)
      (and
        (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1033@01)
          (<= q$b@1033@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1032@01)
    (and
      (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1033@01)
        (<= q$b@1033@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1032@01 Int) (q$b@1033@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1032@01)
      (and
        (<= 0 q$a@1032@01)
        (=>
          (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1033@01) (not (<= 0 q$b@1033@01)))))
        (or
          (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1032@01) (not (<= 0 q$a@1032@01)))
    (=>
      (and
        (<= 0 q$a@1032@01)
        (and
          (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1033@01)
            (<= q$b@1033@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1032@01)
        (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1033@01)
        (<= q$b@1033@01 1461501637330902918203684832716283019655932542975)
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1033@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1033@01))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1033@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1033@01))))))
    (or
      (not
        (and
          (<= 0 q$a@1032@01)
          (and
            (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1033@01)
              (<= q$b@1033@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1032@01)
        (and
          (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1033@01)
            (<= q$b@1033@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1033@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1799@13@1799@853-aux|)))
(push) ; 10
(assert (not (forall ((q$a@1032@01 Int) (q$b@1033@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1032@01)
        (and
          (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1033@01)
            (<= q$b@1033@01 1461501637330902918203684832716283019655932542975))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1033@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1033@01))))
    (=
      (ite
        (and
          (= q$b@1033@01 l$i0$_to@1004@01)
          (= q$a@1032@01 0)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))
            ($unwrap<Int> l$_value@938@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1033@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1799@13@1799@853|))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@1032@01 Int) (q$b@1033@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1032@01)
        (and
          (<= q$a@1032@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1033@01)
            (<= q$b@1033@01 1461501637330902918203684832716283019655932542975))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1033@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1033@01))))
    (=
      (ite
        (and
          (= q$b@1033@01 l$i0$_to@1004@01)
          (= q$a@1032@01 0)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1032@01))
            ($unwrap<Int> l$_value@938@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1032@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1033@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1799@13@1799@853|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1034@01 Int)
(push) ; 10
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 678 | !(0 <= q$a@1034@01) | live]
; [else-branch: 678 | 0 <= q$a@1034@01 | live]
(push) ; 12
; [then-branch: 678 | !(0 <= q$a@1034@01)]
(assert (not (<= 0 q$a@1034@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 678 | 0 <= q$a@1034@01]
(assert (<= 0 q$a@1034@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1034@01) (not (<= 0 q$a@1034@01))))
(push) ; 11
; [then-branch: 679 | 0 <= q$a@1034@01 && q$a@1034@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 679 | !(0 <= q$a@1034@01 && q$a@1034@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 679 | 0 <= q$a@1034@01 && q$a@1034@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1034@01)
  (<= q$a@1034@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 13
; [then-branch: 680 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1034@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1034@01)) | live]
; [else-branch: 680 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1034@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1034@01) | live]
(push) ; 14
; [then-branch: 680 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1034@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1034@01))]
(assert (not
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))))
(pop) ; 14
(push) ; 14
; [else-branch: 680 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1034@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1034@01)]
(assert (>
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01)))
; [eval] (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
(declare-const q$b@1035@01 Int)
(push) ; 15
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$b
(push) ; 16
; [then-branch: 681 | !(0 <= q$b@1035@01) | live]
; [else-branch: 681 | 0 <= q$b@1035@01 | live]
(push) ; 17
; [then-branch: 681 | !(0 <= q$b@1035@01)]
(assert (not (<= 0 q$b@1035@01)))
(pop) ; 17
(push) ; 17
; [else-branch: 681 | 0 <= q$b@1035@01]
(assert (<= 0 q$b@1035@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 17
(pop) ; 16
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1035@01) (not (<= 0 q$b@1035@01))))
(push) ; 16
; [then-branch: 682 | 0 <= q$b@1035@01 && q$b@1035@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 682 | !(0 <= q$b@1035@01 && q$b@1035@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 17
; [then-branch: 682 | 0 <= q$b@1035@01 && q$b@1035@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$b@1035@01)
  (<= q$b@1035@01 1461501637330902918203684832716283019655932542975)))
; [eval] q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] q$b != q$a
(push) ; 18
; [then-branch: 683 | q$b@1035@01 != q$a@1034@01 | live]
; [else-branch: 683 | q$b@1035@01 == q$a@1034@01 | live]
(push) ; 19
; [then-branch: 683 | q$b@1035@01 != q$a@1034@01]
(assert (not (= q$b@1035@01 q$a@1034@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 19
(push) ; 19
; [else-branch: 683 | q$b@1035@01 == q$a@1034@01]
(assert (= q$b@1035@01 q$a@1034@01))
(pop) ; 19
(pop) ; 18
; Joined path conditions
; Joined path conditions
(assert (or (= q$b@1035@01 q$a@1034@01) (not (= q$b@1035@01 q$a@1034@01))))
(pop) ; 17
(push) ; 17
; [else-branch: 682 | !(0 <= q$b@1035@01 && q$b@1035@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$b@1035@01)
    (<= q$b@1035@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 17
(pop) ; 16
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$b@1035@01)
    (<= q$b@1035@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$b@1035@01)
    (<= q$b@1035@01 1461501637330902918203684832716283019655932542975)
    (or (= q$b@1035@01 q$a@1034@01) (not (= q$b@1035@01 q$a@1034@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$b@1035@01)
      (<= q$b@1035@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$b@1035@01)
    (<= q$b@1035@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 15
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$b@1035@01 Int)) (!
  (and
    (or (<= 0 q$b@1035@01) (not (<= 0 q$b@1035@01)))
    (=>
      (and
        (<= 0 q$b@1035@01)
        (<= q$b@1035@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@1035@01)
        (<= q$b@1035@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@1035@01 q$a@1034@01) (not (= q$b@1035@01 q$a@1034@01)))))
    (or
      (not
        (and
          (<= 0 q$b@1035@01)
          (<= q$b@1035@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@1035@01)
        (<= q$b@1035@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848-aux|)))
(assert (forall ((q$b@1035@01 Int)) (!
  (and
    (or (<= 0 q$b@1035@01) (not (<= 0 q$b@1035@01)))
    (=>
      (and
        (<= 0 q$b@1035@01)
        (<= q$b@1035@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@1035@01)
        (<= q$b@1035@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@1035@01 q$a@1034@01) (not (= q$b@1035@01 q$a@1034@01)))))
    (or
      (not
        (and
          (<= 0 q$b@1035@01)
          (<= q$b@1035@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@1035@01)
        (<= q$b@1035@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848-aux|)))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (=>
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
    (forall ((q$b@1035@01 Int)) (!
      (and
        (or (<= 0 q$b@1035@01) (not (<= 0 q$b@1035@01)))
        (=>
          (and
            (<= 0 q$b@1035@01)
            (<= q$b@1035@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@1035@01)
            (<= q$b@1035@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@1035@01 q$a@1034@01) (not (= q$b@1035@01 q$a@1034@01)))))
        (or
          (not
            (and
              (<= 0 q$b@1035@01)
              (<= q$b@1035@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@1035@01)
            (<= q$b@1035@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848-aux|))
    (forall ((q$b@1035@01 Int)) (!
      (and
        (or (<= 0 q$b@1035@01) (not (<= 0 q$b@1035@01)))
        (=>
          (and
            (<= 0 q$b@1035@01)
            (<= q$b@1035@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@1035@01)
            (<= q$b@1035@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@1035@01 q$a@1034@01) (not (= q$b@1035@01 q$a@1034@01)))))
        (or
          (not
            (and
              (<= 0 q$b@1035@01)
              (<= q$b@1035@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@1035@01)
            (<= q$b@1035@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848-aux|)))))
(assert (or
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
  (not
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01)))))
(push) ; 13
; [then-branch: 684 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1034@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1034@01) && QA q$b@1035@01 :: 0 <= q$b@1035@01 && q$b@1035@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1035@01 != q$a@1034@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$b@1035@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$b@1035@01) | live]
; [else-branch: 684 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1034@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1034@01) && QA q$b@1035@01 :: 0 <= q$b@1035@01 && q$b@1035@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1035@01 != q$a@1034@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$b@1035@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$b@1035@01)) | live]
(push) ; 14
; [then-branch: 684 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1034@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1034@01) && QA q$b@1035@01 :: 0 <= q$b@1035@01 && q$b@1035@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1035@01 != q$a@1034@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$b@1035@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$b@1035@01)]
(assert (and
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
  (forall ((q$b@1035@01 Int)) (!
    (=>
      (and
        (and
          (<= 0 q$b@1035@01)
          (<= q$b@1035@01 1461501637330902918203684832716283019655932542975))
        (not (= q$b@1035@01 q$a@1034@01)))
      (=
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01)))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848|))))
; [eval] perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] 1 * write
(pop) ; 14
(push) ; 14
; [else-branch: 684 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1034@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1034@01) && QA q$b@1035@01 :: 0 <= q$b@1035@01 && q$b@1035@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1035@01 != q$a@1034@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$b@1035@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$b@1035@01))]
(assert (not
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
    (forall ((q$b@1035@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@1035@01)
            (<= q$b@1035@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@1035@01 q$a@1034@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848|)))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
      (forall ((q$b@1035@01 Int)) (!
        (=>
          (and
            (and
              (<= 0 q$b@1035@01)
              (<= q$b@1035@01 1461501637330902918203684832716283019655932542975))
            (not (= q$b@1035@01 q$a@1034@01)))
          (=
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01)))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848|))))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
    (forall ((q$b@1035@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@1035@01)
            (<= q$b@1035@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@1035@01 q$a@1034@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848|)))))
(pop) ; 12
(push) ; 12
; [else-branch: 679 | !(0 <= q$a@1034@01 && q$a@1034@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1034@01)
    (<= q$a@1034@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1034@01)
    (<= q$a@1034@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$a@1034@01)
    (<= q$a@1034@01 1461501637330902918203684832716283019655932542975)
    (=>
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
        (forall ((q$b@1035@01 Int)) (!
          (and
            (or (<= 0 q$b@1035@01) (not (<= 0 q$b@1035@01)))
            (=>
              (and
                (<= 0 q$b@1035@01)
                (<=
                  q$b@1035@01
                  1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@1035@01)
                (<=
                  q$b@1035@01
                  1461501637330902918203684832716283019655932542975)
                (or
                  (= q$b@1035@01 q$a@1034@01)
                  (not (= q$b@1035@01 q$a@1034@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@1035@01)
                  (<=
                    q$b@1035@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@1035@01)
                (<=
                  q$b@1035@01
                  1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848-aux|))
        (forall ((q$b@1035@01 Int)) (!
          (and
            (or (<= 0 q$b@1035@01) (not (<= 0 q$b@1035@01)))
            (=>
              (and
                (<= 0 q$b@1035@01)
                (<=
                  q$b@1035@01
                  1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@1035@01)
                (<=
                  q$b@1035@01
                  1461501637330902918203684832716283019655932542975)
                (or
                  (= q$b@1035@01 q$a@1034@01)
                  (not (= q$b@1035@01 q$a@1034@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@1035@01)
                  (<=
                    q$b@1035@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@1035@01)
                (<=
                  q$b@1035@01
                  1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848-aux|))))
    (or
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
      (not
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))))
    (or
      (not
        (and
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
          (forall ((q$b@1035@01 Int)) (!
            (=>
              (and
                (and
                  (<= 0 q$b@1035@01)
                  (<=
                    q$b@1035@01
                    1461501637330902918203684832716283019655932542975))
                (not (= q$b@1035@01 q$a@1034@01)))
              (=
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01)))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848|))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
        (forall ((q$b@1035@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@1035@01)
                (<=
                  q$b@1035@01
                  1461501637330902918203684832716283019655932542975))
              (not (= q$b@1035@01 q$a@1034@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848|)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1034@01)
      (<= q$a@1034@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1034@01)
    (<= q$a@1034@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1034@01 Int)) (!
  (and
    (or (<= 0 q$a@1034@01) (not (<= 0 q$a@1034@01)))
    (=>
      (and
        (<= 0 q$a@1034@01)
        (<= q$a@1034@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@1034@01)
        (<= q$a@1034@01 1461501637330902918203684832716283019655932542975)
        (=>
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
            (forall ((q$b@1035@01 Int)) (!
              (and
                (or (<= 0 q$b@1035@01) (not (<= 0 q$b@1035@01)))
                (=>
                  (and
                    (<= 0 q$b@1035@01)
                    (<=
                      q$b@1035@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1035@01)
                    (<=
                      q$b@1035@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1035@01 q$a@1034@01)
                      (not (= q$b@1035@01 q$a@1034@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1035@01)
                      (<=
                        q$b@1035@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1035@01)
                    (<=
                      q$b@1035@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848-aux|))
            (forall ((q$b@1035@01 Int)) (!
              (and
                (or (<= 0 q$b@1035@01) (not (<= 0 q$b@1035@01)))
                (=>
                  (and
                    (<= 0 q$b@1035@01)
                    (<=
                      q$b@1035@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1035@01)
                    (<=
                      q$b@1035@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1035@01 q$a@1034@01)
                      (not (= q$b@1035@01 q$a@1034@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1035@01)
                      (<=
                        q$b@1035@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1035@01)
                    (<=
                      q$b@1035@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848-aux|))))
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
              (forall ((q$b@1035@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@1035@01)
                      (<=
                        q$b@1035@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@1035@01 q$a@1034@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848|))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
            (forall ((q$b@1035@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@1035@01)
                    (<=
                      q$b@1035@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@1035@01 q$a@1034@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@1034@01)
          (<= q$a@1034@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1034@01)
        (<= q$a@1034@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@13@1800@1047-aux|)))
(assert (forall ((q$a@1034@01 Int)) (!
  (and
    (or (<= 0 q$a@1034@01) (not (<= 0 q$a@1034@01)))
    (=>
      (and
        (<= 0 q$a@1034@01)
        (<= q$a@1034@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@1034@01)
        (<= q$a@1034@01 1461501637330902918203684832716283019655932542975)
        (=>
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
            (forall ((q$b@1035@01 Int)) (!
              (and
                (or (<= 0 q$b@1035@01) (not (<= 0 q$b@1035@01)))
                (=>
                  (and
                    (<= 0 q$b@1035@01)
                    (<=
                      q$b@1035@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1035@01)
                    (<=
                      q$b@1035@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1035@01 q$a@1034@01)
                      (not (= q$b@1035@01 q$a@1034@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1035@01)
                      (<=
                        q$b@1035@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1035@01)
                    (<=
                      q$b@1035@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848-aux|))
            (forall ((q$b@1035@01 Int)) (!
              (and
                (or (<= 0 q$b@1035@01) (not (<= 0 q$b@1035@01)))
                (=>
                  (and
                    (<= 0 q$b@1035@01)
                    (<=
                      q$b@1035@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1035@01)
                    (<=
                      q$b@1035@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1035@01 q$a@1034@01)
                      (not (= q$b@1035@01 q$a@1034@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1035@01)
                      (<=
                        q$b@1035@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1035@01)
                    (<=
                      q$b@1035@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848-aux|))))
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
              (forall ((q$b@1035@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@1035@01)
                      (<=
                        q$b@1035@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@1035@01 q$a@1034@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848|))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
            (forall ((q$b@1035@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@1035@01)
                    (<=
                      q$b@1035@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@1035@01 q$a@1034@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@1034@01)
          (<= q$a@1034@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1034@01)
        (<= q$a@1034@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@13@1800@1047-aux|)))
(push) ; 10
(assert (not (forall ((q$a@1034@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1034@01)
        (<= q$a@1034@01 1461501637330902918203684832716283019655932542975))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
        (forall ((q$b@1035@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@1035@01)
                (<=
                  q$b@1035@01
                  1461501637330902918203684832716283019655932542975))
              (not (= q$b@1035@01 q$a@1034@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848|))))
    (=
      (ite
        (and
          (= q$a@1034@01 l$i0$_to@1004@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
            ($unwrap<Int> l$_value@938@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@13@1800@1047|))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@1034@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1034@01)
        (<= q$a@1034@01 1461501637330902918203684832716283019655932542975))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
        (forall ((q$b@1035@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@1035@01)
                (<=
                  q$b@1035@01
                  1461501637330902918203684832716283019655932542975))
              (not (= q$b@1035@01 q$a@1034@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1035@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1035@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@425@1800@848|))))
    (=
      (ite
        (and
          (= q$a@1034@01 l$i0$_to@1004@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
            ($unwrap<Int> l$_value@938@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1034@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1034@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1800@13@1800@1047|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1036@01 Int)
(push) ; 10
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 685 | !(0 <= q$a@1036@01) | live]
; [else-branch: 685 | 0 <= q$a@1036@01 | live]
(push) ; 12
; [then-branch: 685 | !(0 <= q$a@1036@01)]
(assert (not (<= 0 q$a@1036@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 685 | 0 <= q$a@1036@01]
(assert (<= 0 q$a@1036@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1036@01) (not (<= 0 q$a@1036@01))))
(push) ; 11
; [then-branch: 686 | 0 <= q$a@1036@01 && q$a@1036@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 686 | !(0 <= q$a@1036@01 && q$a@1036@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 686 | 0 <= q$a@1036@01 && q$a@1036@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1036@01)
  (<= q$a@1036@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 13
; [then-branch: 687 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1036@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1036@01)) | live]
; [else-branch: 687 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1036@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1036@01) | live]
(push) ; 14
; [then-branch: 687 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1036@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1036@01))]
(assert (not
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))))
(pop) ; 14
(push) ; 14
; [else-branch: 687 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1036@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1036@01)]
(assert (<
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01)))
; [eval] (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
(declare-const q$b@1037@01 Int)
(push) ; 15
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$b
(push) ; 16
; [then-branch: 688 | !(0 <= q$b@1037@01) | live]
; [else-branch: 688 | 0 <= q$b@1037@01 | live]
(push) ; 17
; [then-branch: 688 | !(0 <= q$b@1037@01)]
(assert (not (<= 0 q$b@1037@01)))
(pop) ; 17
(push) ; 17
; [else-branch: 688 | 0 <= q$b@1037@01]
(assert (<= 0 q$b@1037@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 17
(pop) ; 16
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1037@01) (not (<= 0 q$b@1037@01))))
(push) ; 16
; [then-branch: 689 | 0 <= q$b@1037@01 && q$b@1037@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 689 | !(0 <= q$b@1037@01 && q$b@1037@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 17
; [then-branch: 689 | 0 <= q$b@1037@01 && q$b@1037@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$b@1037@01)
  (<= q$b@1037@01 1461501637330902918203684832716283019655932542975)))
; [eval] q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] q$b != q$a
(push) ; 18
; [then-branch: 690 | q$b@1037@01 != q$a@1036@01 | live]
; [else-branch: 690 | q$b@1037@01 == q$a@1036@01 | live]
(push) ; 19
; [then-branch: 690 | q$b@1037@01 != q$a@1036@01]
(assert (not (= q$b@1037@01 q$a@1036@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 19
(push) ; 19
; [else-branch: 690 | q$b@1037@01 == q$a@1036@01]
(assert (= q$b@1037@01 q$a@1036@01))
(pop) ; 19
(pop) ; 18
; Joined path conditions
; Joined path conditions
(assert (or (= q$b@1037@01 q$a@1036@01) (not (= q$b@1037@01 q$a@1036@01))))
(pop) ; 17
(push) ; 17
; [else-branch: 689 | !(0 <= q$b@1037@01 && q$b@1037@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$b@1037@01)
    (<= q$b@1037@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 17
(pop) ; 16
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$b@1037@01)
    (<= q$b@1037@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$b@1037@01)
    (<= q$b@1037@01 1461501637330902918203684832716283019655932542975)
    (or (= q$b@1037@01 q$a@1036@01) (not (= q$b@1037@01 q$a@1036@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$b@1037@01)
      (<= q$b@1037@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$b@1037@01)
    (<= q$b@1037@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 15
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$b@1037@01 Int)) (!
  (and
    (or (<= 0 q$b@1037@01) (not (<= 0 q$b@1037@01)))
    (=>
      (and
        (<= 0 q$b@1037@01)
        (<= q$b@1037@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@1037@01)
        (<= q$b@1037@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@1037@01 q$a@1036@01) (not (= q$b@1037@01 q$a@1036@01)))))
    (or
      (not
        (and
          (<= 0 q$b@1037@01)
          (<= q$b@1037@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@1037@01)
        (<= q$b@1037@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848-aux|)))
(assert (forall ((q$b@1037@01 Int)) (!
  (and
    (or (<= 0 q$b@1037@01) (not (<= 0 q$b@1037@01)))
    (=>
      (and
        (<= 0 q$b@1037@01)
        (<= q$b@1037@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@1037@01)
        (<= q$b@1037@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@1037@01 q$a@1036@01) (not (= q$b@1037@01 q$a@1036@01)))))
    (or
      (not
        (and
          (<= 0 q$b@1037@01)
          (<= q$b@1037@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@1037@01)
        (<= q$b@1037@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848-aux|)))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
    (forall ((q$b@1037@01 Int)) (!
      (and
        (or (<= 0 q$b@1037@01) (not (<= 0 q$b@1037@01)))
        (=>
          (and
            (<= 0 q$b@1037@01)
            (<= q$b@1037@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@1037@01)
            (<= q$b@1037@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@1037@01 q$a@1036@01) (not (= q$b@1037@01 q$a@1036@01)))))
        (or
          (not
            (and
              (<= 0 q$b@1037@01)
              (<= q$b@1037@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@1037@01)
            (<= q$b@1037@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848-aux|))
    (forall ((q$b@1037@01 Int)) (!
      (and
        (or (<= 0 q$b@1037@01) (not (<= 0 q$b@1037@01)))
        (=>
          (and
            (<= 0 q$b@1037@01)
            (<= q$b@1037@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@1037@01)
            (<= q$b@1037@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@1037@01 q$a@1036@01) (not (= q$b@1037@01 q$a@1036@01)))))
        (or
          (not
            (and
              (<= 0 q$b@1037@01)
              (<= q$b@1037@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@1037@01)
            (<= q$b@1037@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848-aux|)))))
(assert (or
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
  (not
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01)))))
(push) ; 13
; [then-branch: 691 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1036@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1036@01) && QA q$b@1037@01 :: 0 <= q$b@1037@01 && q$b@1037@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1037@01 != q$a@1036@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$b@1037@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$b@1037@01) | live]
; [else-branch: 691 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1036@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1036@01) && QA q$b@1037@01 :: 0 <= q$b@1037@01 && q$b@1037@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1037@01 != q$a@1036@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$b@1037@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$b@1037@01)) | live]
(push) ; 14
; [then-branch: 691 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1036@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1036@01) && QA q$b@1037@01 :: 0 <= q$b@1037@01 && q$b@1037@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1037@01 != q$a@1036@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$b@1037@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$b@1037@01)]
(assert (and
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
  (forall ((q$b@1037@01 Int)) (!
    (=>
      (and
        (and
          (<= 0 q$b@1037@01)
          (<= q$b@1037@01 1461501637330902918203684832716283019655932542975))
        (not (= q$b@1037@01 q$a@1036@01)))
      (=
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01)))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848|))))
; [eval] perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] 1 * write
(pop) ; 14
(push) ; 14
; [else-branch: 691 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$a@1036@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$a@1036@01) && QA q$b@1037@01 :: 0 <= q$b@1037@01 && q$b@1037@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1037@01 != q$a@1036@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1022@01, 3)), q$b@1037@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@944@01, 3)), q$b@1037@01))]
(assert (not
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
    (forall ((q$b@1037@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@1037@01)
            (<= q$b@1037@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@1037@01 q$a@1036@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848|)))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
      (forall ((q$b@1037@01 Int)) (!
        (=>
          (and
            (and
              (<= 0 q$b@1037@01)
              (<= q$b@1037@01 1461501637330902918203684832716283019655932542975))
            (not (= q$b@1037@01 q$a@1036@01)))
          (=
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01)))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848|))))
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
    (forall ((q$b@1037@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@1037@01)
            (<= q$b@1037@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@1037@01 q$a@1036@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848|)))))
(pop) ; 12
(push) ; 12
; [else-branch: 686 | !(0 <= q$a@1036@01 && q$a@1036@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1036@01)
    (<= q$a@1036@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1036@01)
    (<= q$a@1036@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$a@1036@01)
    (<= q$a@1036@01 1461501637330902918203684832716283019655932542975)
    (=>
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
        (forall ((q$b@1037@01 Int)) (!
          (and
            (or (<= 0 q$b@1037@01) (not (<= 0 q$b@1037@01)))
            (=>
              (and
                (<= 0 q$b@1037@01)
                (<=
                  q$b@1037@01
                  1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@1037@01)
                (<=
                  q$b@1037@01
                  1461501637330902918203684832716283019655932542975)
                (or
                  (= q$b@1037@01 q$a@1036@01)
                  (not (= q$b@1037@01 q$a@1036@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@1037@01)
                  (<=
                    q$b@1037@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@1037@01)
                (<=
                  q$b@1037@01
                  1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848-aux|))
        (forall ((q$b@1037@01 Int)) (!
          (and
            (or (<= 0 q$b@1037@01) (not (<= 0 q$b@1037@01)))
            (=>
              (and
                (<= 0 q$b@1037@01)
                (<=
                  q$b@1037@01
                  1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@1037@01)
                (<=
                  q$b@1037@01
                  1461501637330902918203684832716283019655932542975)
                (or
                  (= q$b@1037@01 q$a@1036@01)
                  (not (= q$b@1037@01 q$a@1036@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@1037@01)
                  (<=
                    q$b@1037@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@1037@01)
                (<=
                  q$b@1037@01
                  1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848-aux|))))
    (or
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
      (not
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))))
    (or
      (not
        (and
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
          (forall ((q$b@1037@01 Int)) (!
            (=>
              (and
                (and
                  (<= 0 q$b@1037@01)
                  (<=
                    q$b@1037@01
                    1461501637330902918203684832716283019655932542975))
                (not (= q$b@1037@01 q$a@1036@01)))
              (=
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01)))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848|))))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
        (forall ((q$b@1037@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@1037@01)
                (<=
                  q$b@1037@01
                  1461501637330902918203684832716283019655932542975))
              (not (= q$b@1037@01 q$a@1036@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848|)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1036@01)
      (<= q$a@1036@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1036@01)
    (<= q$a@1036@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1036@01 Int)) (!
  (and
    (or (<= 0 q$a@1036@01) (not (<= 0 q$a@1036@01)))
    (=>
      (and
        (<= 0 q$a@1036@01)
        (<= q$a@1036@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@1036@01)
        (<= q$a@1036@01 1461501637330902918203684832716283019655932542975)
        (=>
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
            (forall ((q$b@1037@01 Int)) (!
              (and
                (or (<= 0 q$b@1037@01) (not (<= 0 q$b@1037@01)))
                (=>
                  (and
                    (<= 0 q$b@1037@01)
                    (<=
                      q$b@1037@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1037@01)
                    (<=
                      q$b@1037@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1037@01 q$a@1036@01)
                      (not (= q$b@1037@01 q$a@1036@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1037@01)
                      (<=
                        q$b@1037@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1037@01)
                    (<=
                      q$b@1037@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848-aux|))
            (forall ((q$b@1037@01 Int)) (!
              (and
                (or (<= 0 q$b@1037@01) (not (<= 0 q$b@1037@01)))
                (=>
                  (and
                    (<= 0 q$b@1037@01)
                    (<=
                      q$b@1037@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1037@01)
                    (<=
                      q$b@1037@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1037@01 q$a@1036@01)
                      (not (= q$b@1037@01 q$a@1036@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1037@01)
                      (<=
                        q$b@1037@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1037@01)
                    (<=
                      q$b@1037@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848-aux|))))
        (or
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
          (not
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))))
        (or
          (not
            (and
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
              (forall ((q$b@1037@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@1037@01)
                      (<=
                        q$b@1037@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@1037@01 q$a@1036@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848|))))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
            (forall ((q$b@1037@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@1037@01)
                    (<=
                      q$b@1037@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@1037@01 q$a@1036@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@1036@01)
          (<= q$a@1036@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1036@01)
        (<= q$a@1036@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@13@1801@1047-aux|)))
(assert (forall ((q$a@1036@01 Int)) (!
  (and
    (or (<= 0 q$a@1036@01) (not (<= 0 q$a@1036@01)))
    (=>
      (and
        (<= 0 q$a@1036@01)
        (<= q$a@1036@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@1036@01)
        (<= q$a@1036@01 1461501637330902918203684832716283019655932542975)
        (=>
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
            (forall ((q$b@1037@01 Int)) (!
              (and
                (or (<= 0 q$b@1037@01) (not (<= 0 q$b@1037@01)))
                (=>
                  (and
                    (<= 0 q$b@1037@01)
                    (<=
                      q$b@1037@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1037@01)
                    (<=
                      q$b@1037@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1037@01 q$a@1036@01)
                      (not (= q$b@1037@01 q$a@1036@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1037@01)
                      (<=
                        q$b@1037@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1037@01)
                    (<=
                      q$b@1037@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848-aux|))
            (forall ((q$b@1037@01 Int)) (!
              (and
                (or (<= 0 q$b@1037@01) (not (<= 0 q$b@1037@01)))
                (=>
                  (and
                    (<= 0 q$b@1037@01)
                    (<=
                      q$b@1037@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1037@01)
                    (<=
                      q$b@1037@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1037@01 q$a@1036@01)
                      (not (= q$b@1037@01 q$a@1036@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1037@01)
                      (<=
                        q$b@1037@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1037@01)
                    (<=
                      q$b@1037@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848-aux|))))
        (or
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
          (not
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))))
        (or
          (not
            (and
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
              (forall ((q$b@1037@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@1037@01)
                      (<=
                        q$b@1037@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@1037@01 q$a@1036@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848|))))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
            (forall ((q$b@1037@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@1037@01)
                    (<=
                      q$b@1037@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@1037@01 q$a@1036@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@1036@01)
          (<= q$a@1036@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1036@01)
        (<= q$a@1036@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@13@1801@1047-aux|)))
(push) ; 10
(assert (not (forall ((q$a@1036@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1036@01)
        (<= q$a@1036@01 1461501637330902918203684832716283019655932542975))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
        (forall ((q$b@1037@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@1037@01)
                (<=
                  q$b@1037@01
                  1461501637330902918203684832716283019655932542975))
              (not (= q$b@1037@01 q$a@1036@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848|))))
    (=
      (ite
        (and
          (= 0 l$i0$_to@1004@01)
          (= q$a@1036@01 0)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01))
            ($unwrap<Int> l$_value@938@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@13@1801@1047|))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@1036@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1036@01)
        (<= q$a@1036@01 1461501637330902918203684832716283019655932542975))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
        (forall ((q$b@1037@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@1037@01)
                (<=
                  q$b@1037@01
                  1461501637330902918203684832716283019655932542975))
              (not (= q$b@1037@01 q$a@1036@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$b@1037@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$b@1037@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@425@1801@848|))))
    (=
      (ite
        (and
          (= 0 l$i0$_to@1004@01)
          (= q$a@1036@01 0)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01))
            ($unwrap<Int> l$_value@938@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1022@01 3)) q$a@1036@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@944@01 3)) q$a@1036@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1801@13@1801@1047|)))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@1038@01 Int)
(declare-const q$b@1039@01 Int)
(push) ; 10
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 692 | !(0 <= q$a@1038@01) | live]
; [else-branch: 692 | 0 <= q$a@1038@01 | live]
(push) ; 12
; [then-branch: 692 | !(0 <= q$a@1038@01)]
(assert (not (<= 0 q$a@1038@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 692 | 0 <= q$a@1038@01]
(assert (<= 0 q$a@1038@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 13
; [then-branch: 693 | !(q$a@1038@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 693 | q$a@1038@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 14
; [then-branch: 693 | !(q$a@1038@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 14
(push) ; 14
; [else-branch: 693 | q$a@1038@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1038@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 15
; [then-branch: 694 | !(0 <= q$b@1039@01) | live]
; [else-branch: 694 | 0 <= q$b@1039@01 | live]
(push) ; 16
; [then-branch: 694 | !(0 <= q$b@1039@01)]
(assert (not (<= 0 q$b@1039@01)))
(pop) ; 16
(push) ; 16
; [else-branch: 694 | 0 <= q$b@1039@01]
(assert (<= 0 q$b@1039@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1039@01) (not (<= 0 q$b@1039@01))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1039@01) (not (<= 0 q$b@1039@01))))))
(assert (or
  (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1038@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1038@01)
  (and
    (<= 0 q$a@1038@01)
    (=>
      (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1039@01) (not (<= 0 q$b@1039@01)))))
    (or
      (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1038@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1038@01) (not (<= 0 q$a@1038@01))))
(push) ; 11
; [then-branch: 695 | 0 <= q$a@1038@01 && q$a@1038@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1039@01 && q$b@1039@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 695 | !(0 <= q$a@1038@01 && q$a@1038@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1039@01 && q$b@1039@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 695 | 0 <= q$a@1038@01 && q$a@1038@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1039@01 && q$b@1039@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1038@01)
  (and
    (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1039@01)
      (<= q$b@1039@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 13
; [then-branch: 696 | $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@944@01, 4)), q$a@1038@01), q$b@1039@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1022@01, 4)), q$a@1038@01), q$b@1039@01) | live]
; [else-branch: 696 | !($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@944@01, 4)), q$a@1038@01), q$b@1039@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1022@01, 4)), q$a@1038@01), q$b@1039@01)) | live]
(push) ; 14
; [then-branch: 696 | $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@944@01, 4)), q$a@1038@01), q$b@1039@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1022@01, 4)), q$a@1038@01), q$b@1039@01)]
(assert (<
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1038@01) q$b@1039@01)
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1022@01 4)) q$a@1038@01) q$b@1039@01)))
; [eval] perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] 1 * write
(pop) ; 14
(push) ; 14
; [else-branch: 696 | !($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@944@01, 4)), q$a@1038@01), q$b@1039@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1022@01, 4)), q$a@1038@01), q$b@1039@01))]
(assert (not
  (<
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1038@01) q$b@1039@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1022@01 4)) q$a@1038@01) q$b@1039@01))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1038@01) q$b@1039@01)
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1022@01 4)) q$a@1038@01) q$b@1039@01)))
  (<
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1038@01) q$b@1039@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1022@01 4)) q$a@1038@01) q$b@1039@01))))
(pop) ; 12
(push) ; 12
; [else-branch: 695 | !(0 <= q$a@1038@01 && q$a@1038@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1039@01 && q$b@1039@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1038@01)
    (and
      (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1039@01)
        (<= q$b@1039@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1038@01)
    (and
      (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1039@01)
        (<= q$b@1039@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1038@01)
    (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1039@01)
    (<= q$b@1039@01 1461501637330902918203684832716283019655932542975)
    (or
      (not
        (<
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1038@01) q$b@1039@01)
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1022@01 4)) q$a@1038@01) q$b@1039@01)))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1038@01) q$b@1039@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1022@01 4)) q$a@1038@01) q$b@1039@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1038@01)
      (and
        (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1039@01)
          (<= q$b@1039@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1038@01)
    (and
      (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1039@01)
        (<= q$b@1039@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1038@01 Int) (q$b@1039@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1038@01)
      (and
        (<= 0 q$a@1038@01)
        (=>
          (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1039@01) (not (<= 0 q$b@1039@01)))))
        (or
          (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1038@01) (not (<= 0 q$a@1038@01)))
    (=>
      (and
        (<= 0 q$a@1038@01)
        (and
          (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1039@01)
            (<= q$b@1039@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1038@01)
        (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1039@01)
        (<= q$b@1039@01 1461501637330902918203684832716283019655932542975)
        (or
          (not
            (<
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1038@01) q$b@1039@01)
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1022@01 4)) q$a@1038@01) q$b@1039@01)))
          (<
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1038@01) q$b@1039@01)
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1022@01 4)) q$a@1038@01) q$b@1039@01)))))
    (or
      (not
        (and
          (<= 0 q$a@1038@01)
          (and
            (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1039@01)
              (<= q$b@1039@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1038@01)
        (and
          (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1039@01)
            (<= q$b@1039@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1022@01 4)) q$a@1038@01) q$b@1039@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1802@13@1802@843-aux|)))
(assert (forall ((q$a@1038@01 Int) (q$b@1039@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1038@01)
      (and
        (<= 0 q$a@1038@01)
        (=>
          (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1039@01) (not (<= 0 q$b@1039@01)))))
        (or
          (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1038@01) (not (<= 0 q$a@1038@01)))
    (=>
      (and
        (<= 0 q$a@1038@01)
        (and
          (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1039@01)
            (<= q$b@1039@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1038@01)
        (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1039@01)
        (<= q$b@1039@01 1461501637330902918203684832716283019655932542975)
        (or
          (not
            (<
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1038@01) q$b@1039@01)
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1022@01 4)) q$a@1038@01) q$b@1039@01)))
          (<
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1038@01) q$b@1039@01)
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1022@01 4)) q$a@1038@01) q$b@1039@01)))))
    (or
      (not
        (and
          (<= 0 q$a@1038@01)
          (and
            (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1039@01)
              (<= q$b@1039@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1038@01)
        (and
          (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1039@01)
            (<= q$b@1039@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1038@01) q$b@1039@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1802@13@1802@843-aux|)))
(push) ; 10
(assert (not (forall ((q$a@1038@01 Int) (q$b@1039@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1038@01)
        (and
          (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1039@01)
            (<= q$b@1039@01 1461501637330902918203684832716283019655932542975))))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1038@01) q$b@1039@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1022@01 4)) q$a@1038@01) q$b@1039@01)))
    false)
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1022@01 4)) q$a@1038@01) q$b@1039@01))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1038@01) q$b@1039@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1802@13@1802@843|))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@1038@01 Int) (q$b@1039@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1038@01)
        (and
          (<= q$a@1038@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1039@01)
            (<= q$b@1039@01 1461501637330902918203684832716283019655932542975))))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1038@01) q$b@1039@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1022@01 4)) q$a@1038@01) q$b@1039@01)))
    false)
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1022@01 4)) q$a@1038@01) q$b@1039@01))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@944@01 4)) q$a@1038@01) q$b@1039@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1802@13@1802@843|)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@1040@01 $Snap)
(assert (= $t@1040@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@958@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@1041@01 $Struct)
(assert (=
  self@1041@01
  ($struct_set<$Struct> self@1022@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@1022@01 7))
    l$havoc@958@01))))
; [exec]
; $contracts := l$havoc$1
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 10
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1041@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@944@01 6)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1041@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@944@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 10
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1041@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1041@01 3))))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1041@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1041@01 3)))))
(pop) ; 9
; [eval] !$succ
; [then-branch: 697 | False | dead]
; [else-branch: 697 | True | live]
(push) ; 9
; [else-branch: 697 | True]
(pop) ; 9
(pop) ; 8
(push) ; 8
; [else-branch: 669 | $out_of_gas@957@01]
(assert $out_of_gas@957@01)
(pop) ; 8
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 646 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1013@01, 3)), l$i0$_to@1004@01))) - $unwrap[Int](l$_value@938@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1013@01 3)) l$i0$_to@1004@01)))
    ($unwrap<Int> l$_value@938@01))
  0))
(pop) ; 6
(pop) ; 5
(pop) ; 4
(push) ; 4
; [else-branch: 623 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@944@01, 5)))) - $unwrap[Int](l$_value@938@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@944@01 5))))
    ($unwrap<Int> l$_value@938@01))
  0))
(pop) ; 4
(pop) ; 3
(pop) ; 2
(pop) ; 1
; ---------- f$burnFrom ----------
(declare-const l$_to@1042@01 Int)
(declare-const l$_value@1043@01 $Int)
(declare-const $succ@1044@01 Bool)
(declare-const l$_to@1045@01 Int)
(declare-const l$_value@1046@01 $Int)
(declare-const $succ@1047@01 Bool)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var msg: $Struct
(declare-const msg@1048@01 $Struct)
; [exec]
; var block: $Struct
(declare-const block@1049@01 $Struct)
; [exec]
; var chain: $Struct
(declare-const chain@1050@01 $Struct)
; [exec]
; var tx: $Struct
(declare-const tx@1051@01 $Struct)
; [exec]
; var self: $Struct
(declare-const self@1052@01 $Struct)
; [exec]
; var $contracts: $Map[Int, $Struct]
(declare-const $contracts@1053@01 $Map<Int~_$Struct>)
; [exec]
; var $old_self: $Struct
(declare-const $old_self@1054@01 $Struct)
; [exec]
; var $old_$contracts: $Map[Int, $Struct]
(declare-const $old_$contracts@1055@01 $Map<Int~_$Struct>)
; [exec]
; var $pre_self: $Struct
(declare-const $pre_self@1056@01 $Struct)
; [exec]
; var $pre_$contracts: $Map[Int, $Struct]
(declare-const $pre_$contracts@1057@01 $Map<Int~_$Struct>)
; [exec]
; var $issued_self: $Struct
(declare-const $issued_self@1058@01 $Struct)
; [exec]
; var $issued_$contracts: $Map[Int, $Struct]
(declare-const $issued_$contracts@1059@01 $Map<Int~_$Struct>)
; [exec]
; var $overflow: Bool
(declare-const $overflow@1060@01 Bool)
; [exec]
; var l$i0$_to: Int
(declare-const l$i0$_to@1061@01 Int)
; [exec]
; var l$i0$_value: $Int
(declare-const l$i0$_value@1062@01 $Int)
; [exec]
; var i0$$pre_self: $Struct
(declare-const i0$$pre_self@1063@01 $Struct)
; [exec]
; var i0$$pre_$contracts: $Map[Int, $Struct]
(declare-const i0$$pre_$contracts@1064@01 $Map<Int~_$Struct>)
; [exec]
; var $out_of_gas: Bool
(declare-const $out_of_gas@1065@01 Bool)
; [exec]
; var l$havoc: Int
(declare-const l$havoc@1066@01 Int)
; [exec]
; var l$havoc$1: $Map[Int, $Struct]
(declare-const l$havoc$1@1067@01 $Map<Int~_$Struct>)
; [exec]
; inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
(declare-const $t@1068@01 $Snap)
(assert (= $t@1068@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
; [eval] |($struct_get($struct_loc(self, 0)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 0)): Seq[Int])
; [eval] $struct_loc(self, 0)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@1052@01 0))) 64))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
(declare-const $t@1069@01 $Snap)
(assert (= $t@1069@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
; [eval] |($struct_get($struct_loc(self, 1)): Seq[Int])|
; [eval] ($struct_get($struct_loc(self, 1)): Seq[Int])
; [eval] $struct_loc(self, 1)
(assert (<= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> self@1052@01 1))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) &&
;   ($struct_get($struct_loc(self, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1070@01 $Snap)
(assert (= $t@1070@01 ($Snap.combine ($Snap.first $t@1070@01) ($Snap.second $t@1070@01))))
(assert (= ($Snap.first $t@1070@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 2)): Int)
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@1052@01 2))))
(assert (= ($Snap.second $t@1070@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 2)): Int)
; [eval] $struct_loc(self, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@1071@01 $Snap)
(assert (= $t@1071@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q2@1072@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 4
; [then-branch: 698 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), $q2@1072@01)) | live]
; [else-branch: 698 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), $q2@1072@01) | live]
(push) ; 5
; [then-branch: 698 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), $q2@1072@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) $q2@1072@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 698 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), $q2@1072@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) $q2@1072@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) $q2@1072@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) $q2@1072@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@1072@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) $q2@1072@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) $q2@1072@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) $q2@1072@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1845@11@1845@345-aux|)))
(assert (forall (($q2@1072@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) $q2@1072@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) $q2@1072@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) $q2@1072@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1845@11@1845@345|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q2: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) }
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $t@1073@01 $Snap)
(assert (= $t@1073@01 $Snap.unit))
; [eval] (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
(declare-const $q2@1074@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q2@1074@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) $q2@1074@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) $q2@1074@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1846@11@1846@253|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       0 <=
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) &&
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $t@1075@01 $Snap)
(assert (= $t@1075@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(declare-const $q3@1076@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q4@1077@01 Int)
(push) ; 4
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 5
; [then-branch: 699 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), $q3@1076@01), $q4@1077@01)) | live]
; [else-branch: 699 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), $q3@1076@01), $q4@1077@01) | live]
(push) ; 6
; [then-branch: 699 | !(0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), $q3@1076@01), $q4@1077@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1076@01) $q4@1077@01))))
(pop) ; 6
(push) ; 6
; [else-branch: 699 | 0 <= $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), $q3@1076@01), $q4@1077@01)]
(assert (<=
  0
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1076@01) $q4@1077@01)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1076@01) $q4@1077@01))
  (not
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1076@01) $q4@1077@01)))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q4@1077@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1076@01) $q4@1077@01))
    (not
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1076@01) $q4@1077@01))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1076@01) $q4@1077@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1847@131@1847@597-aux|)))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@1076@01 Int)) (!
  (forall (($q4@1077@01 Int)) (!
    (or
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1076@01) $q4@1077@01))
      (not
        (<=
          0
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1076@01) $q4@1077@01))))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1076@01) $q4@1077@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1847@131@1847@597-aux|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1076@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1847@11@1847@598-aux|)))
(assert (forall (($q3@1076@01 Int)) (!
  (forall (($q4@1077@01 Int)) (!
    (and
      (<=
        0
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1076@01) $q4@1077@01))
      (<=
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1076@01) $q4@1077@01)
        115792089237316195423570985008687907853269984665640564039457584007913129639935))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1076@01) $q4@1077@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1847@131@1847@597|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1076@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1847@11@1847@598|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q3: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     $q3): $Map[Int, Int]) }
;     (forall $q4: Int ::
;       { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) }
;       ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int]), $q4): Int) <=
;       ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;       $q3): $Map[Int, Int])): Int)))
(declare-const $t@1078@01 $Snap)
(assert (= $t@1078@01 $Snap.unit))
; [eval] (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
(declare-const $q3@1079@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int))
(declare-const $q4@1080@01 Int)
(push) ; 4
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q3@1079@01 Int)) (!
  (forall (($q4@1080@01 Int)) (!
    (<=
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1079@01) $q4@1080@01)
      ($map_sum<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1079@01)))
    :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1079@01) $q4@1080@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1848@131@1848@505|))
  :pattern (($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) $q3@1079@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1848@11@1848@506|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) &&
;   ($struct_get($struct_loc(self, 5)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1081@01 $Snap)
(assert (= $t@1081@01 ($Snap.combine ($Snap.first $t@1081@01) ($Snap.second $t@1081@01))))
(assert (= ($Snap.first $t@1081@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@1052@01 5))))
(assert (= ($Snap.second $t@1081@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 5))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) &&
;   ($struct_get($struct_loc(self, 6)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@1082@01 $Snap)
(assert (= $t@1082@01 ($Snap.combine ($Snap.first $t@1082@01) ($Snap.second $t@1082@01))))
(assert (= ($Snap.first $t@1082@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))
(assert (= ($Snap.second $t@1082@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) &&
;   ($struct_get($struct_loc(self, 7)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1083@01 $Snap)
(assert (= $t@1083@01 ($Snap.combine ($Snap.first $t@1083@01) ($Snap.second $t@1083@01))))
(assert (= ($Snap.first $t@1083@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(self, 7)): Int)
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> self@1052@01 7))))
(assert (= ($Snap.second $t@1083@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 7))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale -170141183460469231731687303715884105728 <=
;   ($struct_get($struct_loc(self, 8)): Int) &&
;   ($struct_get($struct_loc(self, 8)): Int) <=
;   170141183460469231731687303715884105727
(declare-const $t@1084@01 $Snap)
(assert (= $t@1084@01 ($Snap.combine ($Snap.first $t@1084@01) ($Snap.second $t@1084@01))))
(assert (= ($Snap.first $t@1084@01) $Snap.unit))
; [eval] -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int)
; [eval] -170141183460469231731687303715884105728
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  (- 0 170141183460469231731687303715884105728)
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 8))))
(assert (= ($Snap.second $t@1084@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
; [eval] ($struct_get($struct_loc(self, 8)): Int)
; [eval] $struct_loc(self, 8)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 8))
  170141183460469231731687303715884105727))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@1085@01 $Snap)
(assert (= $t@1085@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q5@1086@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(push) ; 4
; [then-branch: 700 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 10)), $q5@1086@01)) | live]
; [else-branch: 700 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 10)), $q5@1086@01) | live]
(push) ; 5
; [then-branch: 700 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 10)), $q5@1086@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 10)) $q5@1086@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 700 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 10)), $q5@1086@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 10)) $q5@1086@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 10)) $q5@1086@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 10)) $q5@1086@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@1086@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 10)) $q5@1086@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 10)) $q5@1086@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 10)) $q5@1086@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1853@11@1853@348-aux|)))
(assert (forall (($q5@1086@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 10)) $q5@1086@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 10)) $q5@1086@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 10)) $q5@1086@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1853@11@1853@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q5: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $t@1087@01 $Snap)
(assert (= $t@1087@01 $Snap.unit))
; [eval] (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
(declare-const $q5@1088@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q5@1088@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 10)) $q5@1088@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 10))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 10)) $q5@1088@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1854@11@1854@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     0 <=
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $t@1089@01 $Snap)
(assert (= $t@1089@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
(declare-const $q6@1090@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(push) ; 4
; [then-branch: 701 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 11)), $q6@1090@01)) | live]
; [else-branch: 701 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 11)), $q6@1090@01) | live]
(push) ; 5
; [then-branch: 701 | !(0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 11)), $q6@1090@01))]
(assert (not
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 11)) $q6@1090@01))))
(pop) ; 5
(push) ; 5
; [else-branch: 701 | 0 <= $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 11)), $q6@1090@01)]
(assert (<=
  0
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 11)) $q6@1090@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(assert (or
  (<=
    0
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 11)) $q6@1090@01))
  (not
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 11)) $q6@1090@01)))))
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@1090@01 Int)) (!
  (or
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 11)) $q6@1090@01))
    (not
      (<=
        0
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 11)) $q6@1090@01))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 11)) $q6@1090@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1855@11@1855@348-aux|)))
(assert (forall (($q6@1090@01 Int)) (!
  (and
    (<=
      0
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 11)) $q6@1090@01))
    (<=
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 11)) $q6@1090@01)
      115792089237316195423570985008687907853269984665640564039457584007913129639935))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 11)) $q6@1090@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1855@11@1855@348|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (forall $q6: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) }
;     ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <=
;     ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $t@1091@01 $Snap)
(assert (= $t@1091@01 $Snap.unit))
; [eval] (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
(declare-const $q6@1092@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
; [eval] ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 11)): $Map[Int, Int])
; [eval] $struct_loc(self, 11)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall (($q6@1092@01 Int)) (!
  (<=
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 11)) $q6@1092@01)
    ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 11))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 11)) $q6@1092@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1856@11@1856@256|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, -1)): Int) ==
;   9122519725869122497593506884710
(declare-const $t@1093@01 $Snap)
(assert (= $t@1093@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
; [eval] ($struct_get($struct_loc(self, -1)): Int)
; [eval] $struct_loc(self, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 (- 0 1)))
  9122519725869122497593506884710))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $self_address() &&
;   $self_address() <= 1461501637330902918203684832716283019655932542975
(declare-const $t@1094@01 $Snap)
(assert (= $t@1094@01 ($Snap.combine ($Snap.first $t@1094@01) ($Snap.second $t@1094@01))))
(assert (= ($Snap.first $t@1094@01) $Snap.unit))
; [eval] 0 <= $self_address()
; [eval] $self_address()
(assert (<= 0 (as $self_address<Int>  Int)))
(assert (= ($Snap.second $t@1094@01) $Snap.unit))
; [eval] $self_address() <= 1461501637330902918203684832716283019655932542975
; [eval] $self_address()
(assert (<=
  (as $self_address<Int>  Int)
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= l$_to &&
;   l$_to <= 1461501637330902918203684832716283019655932542975
(declare-const $t@1095@01 $Snap)
(assert (= $t@1095@01 ($Snap.combine ($Snap.first $t@1095@01) ($Snap.second $t@1095@01))))
(assert (= ($Snap.first $t@1095@01) $Snap.unit))
; [eval] 0 <= l$_to
(assert (<= 0 l$_to@1045@01))
(assert (= ($Snap.second $t@1095@01) $Snap.unit))
; [eval] l$_to <= 1461501637330902918203684832716283019655932542975
(assert (<= l$_to@1045@01 1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= $unwrap(l$_value) &&
;   $unwrap(l$_value) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1096@01 $Snap)
(assert (= $t@1096@01 ($Snap.combine ($Snap.first $t@1096@01) ($Snap.second $t@1096@01))))
(assert (= ($Snap.first $t@1096@01) $Snap.unit))
; [eval] 0 <= $unwrap(l$_value)
; [eval] $unwrap(l$_value)
(assert (<= 0 ($unwrap<Int> l$_value@1046@01)))
(assert (= ($Snap.second $t@1096@01) $Snap.unit))
; [eval] $unwrap(l$_value) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap(l$_value)
(assert (<=
  ($unwrap<Int> l$_value@1046@01)
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) &&
;   ($struct_get($struct_loc(block, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@1097@01 $Snap)
(assert (= $t@1097@01 ($Snap.combine ($Snap.first $t@1097@01) ($Snap.second $t@1097@01))))
(assert (= ($Snap.first $t@1097@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 0)): Int)
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@1049@01 0))))
(assert (= ($Snap.second $t@1097@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(block, 0)): Int)
; [eval] $struct_loc(block, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@1049@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) &&
;   ($struct_get($struct_loc(block, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1098@01 $Snap)
(assert (= $t@1098@01 ($Snap.combine ($Snap.first $t@1098@01) ($Snap.second $t@1098@01))))
(assert (= ($Snap.first $t@1098@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 1)): Int)
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@1049@01 1))))
(assert (= ($Snap.second $t@1098@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 1)): Int)
; [eval] $struct_loc(block, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@1049@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) &&
;   ($struct_get($struct_loc(block, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1099@01 $Snap)
(assert (= $t@1099@01 ($Snap.combine ($Snap.first $t@1099@01) ($Snap.second $t@1099@01))))
(assert (= ($Snap.first $t@1099@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 2)): Int)
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@1049@01 2))))
(assert (= ($Snap.second $t@1099@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 2)): Int)
; [eval] $struct_loc(block, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@1049@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
(declare-const $t@1100@01 $Snap)
(assert (= $t@1100@01 $Snap.unit))
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
; [eval] |($struct_get($struct_loc(block, 3)): Seq[Int])|
; [eval] ($struct_get($struct_loc(block, 3)): Seq[Int])
; [eval] $struct_loc(block, 3)
(assert (= (Seq_length ($struct_get<Seq<Int>> ($struct_loc<Int> block@1049@01 3))) 32))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) &&
;   ($struct_get($struct_loc(block, 4)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1101@01 $Snap)
(assert (= $t@1101@01 ($Snap.combine ($Snap.first $t@1101@01) ($Snap.second $t@1101@01))))
(assert (= ($Snap.first $t@1101@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(block, 4)): Int)
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> block@1049@01 4))))
(assert (= ($Snap.second $t@1101@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(block, 4)): Int)
; [eval] $struct_loc(block, 4)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> block@1049@01 4))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(block, -1)): Int) ==
;   2335365049822495359383864865678187
(declare-const $t@1102@01 $Snap)
(assert (= $t@1102@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
; [eval] ($struct_get($struct_loc(block, -1)): Int)
; [eval] $struct_loc(block, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> block@1049@01 (- 0 1)))
  2335365049822495359383864865678187))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) &&
;   ($struct_get($struct_loc(msg, 0)): Int) <=
;   1461501637330902918203684832716283019655932542975
(declare-const $t@1103@01 $Snap)
(assert (= $t@1103@01 ($Snap.combine ($Snap.first $t@1103@01) ($Snap.second $t@1103@01))))
(assert (= ($Snap.first $t@1103@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 0)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))))
(assert (= ($Snap.second $t@1103@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
  1461501637330902918203684832716283019655932542975))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) &&
;   ($struct_get($struct_loc(msg, 1)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1104@01 $Snap)
(assert (= $t@1104@01 ($Snap.combine ($Snap.first $t@1104@01) ($Snap.second $t@1104@01))))
(assert (= ($Snap.first $t@1104@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 1)): Int)
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@1048@01 1))))
(assert (= ($Snap.second $t@1104@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 1))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) &&
;   ($struct_get($struct_loc(msg, 2)): Int) <=
;   115792089237316195423570985008687907853269984665640564039457584007913129639935
(declare-const $t@1105@01 $Snap)
(assert (= $t@1105@01 ($Snap.combine ($Snap.first $t@1105@01) ($Snap.second $t@1105@01))))
(assert (= ($Snap.first $t@1105@01) $Snap.unit))
; [eval] 0 <= ($struct_get($struct_loc(msg, 2)): Int)
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<= 0 ($struct_get<Int> ($struct_loc<Int> msg@1048@01 2))))
(assert (= ($Snap.second $t@1105@01) $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] ($struct_get($struct_loc(msg, 2)): Int)
; [eval] $struct_loc(msg, 2)
(assert (<=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 2))
  115792089237316195423570985008687907853269984665640564039457584007913129639935))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, -1)): Int) ==
;   35634842679176259756224246631
(declare-const $t@1106@01 $Snap)
(assert (= $t@1106@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
; [eval] ($struct_get($struct_loc(msg, -1)): Int)
; [eval] $struct_loc(msg, -1)
; [eval] -1
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 (- 0 1)))
  35634842679176259756224246631))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
(declare-const $t@1107@01 $Snap)
(assert (= $t@1107@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != 0
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
(assert (not (= ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)) 0)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (forall $a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) }
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >=
;     ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $t@1108@01 $Snap)
(assert (= $t@1108@01 $Snap.unit))
; [eval] (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
(declare-const $a@1109@01 Int)
(set-option :timeout 0)
(push) ; 3
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
; [eval] ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int)
; [eval] ($struct_get($struct_loc(self, 10)): $Map[Int, Int])
; [eval] $struct_loc(self, 10)
(pop) ; 3
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc(self, 6)): Int)
(declare-const $t@1110@01 $Snap)
(assert (= $t@1110@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
(declare-const $t@1111@01 $Snap)
(assert (= $t@1111@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)))))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; $pre_self := self
; [exec]
; $pre_$contracts := $contracts
; [exec]
; $old_self := self
; [exec]
; $old_$contracts := $contracts
; [exec]
; $succ := true
; [exec]
; $overflow := false
; [exec]
; inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
(declare-const $t@1112@01 $Snap)
(assert (= $t@1112@01 $Snap.unit))
; [eval] ($struct_get($struct_loc(msg, 1)): Int) == 0
; [eval] ($struct_get($struct_loc(msg, 1)): Int)
; [eval] $struct_loc(msg, 1)
(assert (= ($struct_get<Int> ($struct_loc<Int> msg@1048@01 1)) 0))
; State saturation: after inhale
(check-sat)
; unknown
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)))
; [eval] $wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01) ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)))))
      ($unwrap<Int> l$_value@1046@01))
    0))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01) ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)))))
    ($unwrap<Int> l$_value@1046@01))
  0)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 702 | $unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), l$_to@1045@01), $struct_get[Int]($struct_loc[Int](msg@1048@01, 0))))) - $unwrap[Int](l$_value@1046@01) < 0 | live]
; [else-branch: 702 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), l$_to@1045@01), $struct_get[Int]($struct_loc[Int](msg@1048@01, 0))))) - $unwrap[Int](l$_value@1046@01) < 0) | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 702 | $unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), l$_to@1045@01), $struct_get[Int]($struct_loc[Int](msg@1048@01, 0))))) - $unwrap[Int](l$_value@1046@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01) ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)))))
    ($unwrap<Int> l$_value@1046@01))
  0))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [then-branch: 703 | False | dead]
; [else-branch: 703 | True | live]
(push) ; 4
; [else-branch: 703 | True]
(pop) ; 4
; [eval] !$succ
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 704 | True | live]
; [else-branch: 704 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 704 | True]
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 5
(push) ; 6
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 705 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) != $struct_get[Int]($struct_loc[Int](self@1052@01, 6)) | live]
; [else-branch: 705 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) == $struct_get[Int]($struct_loc[Int](self@1052@01, 6)) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 705 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) != $struct_get[Int]($struct_loc[Int](self@1052@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 6
(push) ; 6
; [else-branch: 705 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) == $struct_get[Int]($struct_loc[Int](self@1052@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1113@01 Int)
(declare-const q$b@1114@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 706 | !(0 <= q$a@1113@01) | live]
; [else-branch: 706 | 0 <= q$a@1113@01 | live]
(push) ; 7
; [then-branch: 706 | !(0 <= q$a@1113@01)]
(assert (not (<= 0 q$a@1113@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 706 | 0 <= q$a@1113@01]
(assert (<= 0 q$a@1113@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 707 | !(q$a@1113@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 707 | q$a@1113@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 707 | !(q$a@1113@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 707 | q$a@1113@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1113@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 708 | !(0 <= q$b@1114@01) | live]
; [else-branch: 708 | 0 <= q$b@1114@01 | live]
(push) ; 11
; [then-branch: 708 | !(0 <= q$b@1114@01)]
(assert (not (<= 0 q$b@1114@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 708 | 0 <= q$b@1114@01]
(assert (<= 0 q$b@1114@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1114@01) (not (<= 0 q$b@1114@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1114@01) (not (<= 0 q$b@1114@01))))))
(assert (or
  (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1113@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1113@01)
  (and
    (<= 0 q$a@1113@01)
    (=>
      (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1114@01) (not (<= 0 q$b@1114@01)))))
    (or
      (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1113@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1113@01) (not (<= 0 q$a@1113@01))))
(push) ; 6
; [then-branch: 709 | 0 <= q$a@1113@01 && q$a@1113@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1114@01 && q$b@1114@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 709 | !(0 <= q$a@1113@01 && q$a@1113@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1114@01 && q$b@1114@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 709 | 0 <= q$a@1113@01 && q$a@1113@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1114@01 && q$b@1114@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1113@01)
  (and
    (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1114@01)
      (<= q$b@1114@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 8
; [then-branch: 710 | False | dead]
; [else-branch: 710 | True | live]
(push) ; 9
; [else-branch: 710 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 709 | !(0 <= q$a@1113@01 && q$a@1113@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1114@01 && q$b@1114@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1113@01)
    (and
      (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1114@01)
        (<= q$b@1114@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1113@01)
    (and
      (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1114@01)
        (<= q$b@1114@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1113@01)
    (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1114@01)
    (<= q$b@1114@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1113@01)
      (and
        (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1114@01)
          (<= q$b@1114@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1113@01)
    (and
      (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1114@01)
        (<= q$b@1114@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1113@01 Int) (q$b@1114@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1113@01)
      (and
        (<= 0 q$a@1113@01)
        (=>
          (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1114@01) (not (<= 0 q$b@1114@01)))))
        (or
          (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1113@01) (not (<= 0 q$a@1113@01)))
    (=>
      (and
        (<= 0 q$a@1113@01)
        (and
          (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1114@01)
            (<= q$b@1114@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1113@01)
        (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1114@01)
        (<= q$b@1114@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1113@01)
          (and
            (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1114@01)
              (<= q$b@1114@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1113@01)
        (and
          (<= q$a@1113@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1114@01)
            (<= q$b@1114@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1113@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1114@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1950@17@1950@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1115@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 711 | !(0 <= q$a@1115@01) | live]
; [else-branch: 711 | 0 <= q$a@1115@01 | live]
(push) ; 7
; [then-branch: 711 | !(0 <= q$a@1115@01)]
(assert (not (<= 0 q$a@1115@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 711 | 0 <= q$a@1115@01]
(assert (<= 0 q$a@1115@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1115@01) (not (<= 0 q$a@1115@01))))
(push) ; 6
; [then-branch: 712 | 0 <= q$a@1115@01 && q$a@1115@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 712 | !(0 <= q$a@1115@01 && q$a@1115@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 712 | 0 <= q$a@1115@01 && q$a@1115@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1115@01)
  (<= q$a@1115@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 713 | False | dead]
; [else-branch: 713 | True | live]
(push) ; 9
; [else-branch: 713 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 712 | !(0 <= q$a@1115@01 && q$a@1115@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1115@01)
    (<= q$a@1115@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1115@01)
      (<= q$a@1115@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1115@01)
    (<= q$a@1115@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1115@01 Int)) (!
  (and
    (or (<= 0 q$a@1115@01) (not (<= 0 q$a@1115@01)))
    (or
      (not
        (and
          (<= 0 q$a@1115@01)
          (<= q$a@1115@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1115@01)
        (<= q$a@1115@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1115@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1951@17@1951@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1116@01 Int)
(push) ; 5
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 714 | !(0 <= q$a@1116@01) | live]
; [else-branch: 714 | 0 <= q$a@1116@01 | live]
(push) ; 7
; [then-branch: 714 | !(0 <= q$a@1116@01)]
(assert (not (<= 0 q$a@1116@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 714 | 0 <= q$a@1116@01]
(assert (<= 0 q$a@1116@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1116@01) (not (<= 0 q$a@1116@01))))
(push) ; 6
; [then-branch: 715 | 0 <= q$a@1116@01 && q$a@1116@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 715 | !(0 <= q$a@1116@01 && q$a@1116@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 715 | 0 <= q$a@1116@01 && q$a@1116@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1116@01)
  (<= q$a@1116@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
; [then-branch: 716 | False | dead]
; [else-branch: 716 | True | live]
(push) ; 9
; [else-branch: 716 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 715 | !(0 <= q$a@1116@01 && q$a@1116@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1116@01)
    (<= q$a@1116@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1116@01)
      (<= q$a@1116@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1116@01)
    (<= q$a@1116@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1116@01 Int)) (!
  (and
    (or (<= 0 q$a@1116@01) (not (<= 0 q$a@1116@01)))
    (or
      (not
        (and
          (<= 0 q$a@1116@01)
          (<= q$a@1116@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1116@01)
        (<= q$a@1116@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1116@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1952@17@1952@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@1117@01 Int)
(declare-const q$b@1118@01 Int)
(push) ; 5
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 6
; [then-branch: 717 | !(0 <= q$a@1117@01) | live]
; [else-branch: 717 | 0 <= q$a@1117@01 | live]
(push) ; 7
; [then-branch: 717 | !(0 <= q$a@1117@01)]
(assert (not (<= 0 q$a@1117@01)))
(pop) ; 7
(push) ; 7
; [else-branch: 717 | 0 <= q$a@1117@01]
(assert (<= 0 q$a@1117@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 8
; [then-branch: 718 | !(q$a@1117@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 718 | q$a@1117@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 9
; [then-branch: 718 | !(q$a@1117@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 9
(push) ; 9
; [else-branch: 718 | q$a@1117@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1117@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 10
; [then-branch: 719 | !(0 <= q$b@1118@01) | live]
; [else-branch: 719 | 0 <= q$b@1118@01 | live]
(push) ; 11
; [then-branch: 719 | !(0 <= q$b@1118@01)]
(assert (not (<= 0 q$b@1118@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 719 | 0 <= q$b@1118@01]
(assert (<= 0 q$b@1118@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1118@01) (not (<= 0 q$b@1118@01))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1118@01) (not (<= 0 q$b@1118@01))))))
(assert (or
  (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1117@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1117@01)
  (and
    (<= 0 q$a@1117@01)
    (=>
      (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1118@01) (not (<= 0 q$b@1118@01)))))
    (or
      (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1117@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1117@01) (not (<= 0 q$a@1117@01))))
(push) ; 6
; [then-branch: 720 | 0 <= q$a@1117@01 && q$a@1117@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1118@01 && q$b@1118@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 720 | !(0 <= q$a@1117@01 && q$a@1117@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1118@01 && q$b@1118@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 7
; [then-branch: 720 | 0 <= q$a@1117@01 && q$a@1117@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1118@01 && q$b@1118@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1117@01)
  (and
    (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1118@01)
      (<= q$b@1118@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 8
; [then-branch: 721 | False | dead]
; [else-branch: 721 | True | live]
(push) ; 9
; [else-branch: 721 | True]
(pop) ; 9
(pop) ; 8
; Joined path conditions
(pop) ; 7
(push) ; 7
; [else-branch: 720 | !(0 <= q$a@1117@01 && q$a@1117@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1118@01 && q$b@1118@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1117@01)
    (and
      (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1118@01)
        (<= q$b@1118@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
(pop) ; 6
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1117@01)
    (and
      (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1118@01)
        (<= q$b@1118@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1117@01)
    (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1118@01)
    (<= q$b@1118@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1117@01)
      (and
        (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1118@01)
          (<= q$b@1118@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1117@01)
    (and
      (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1118@01)
        (<= q$b@1118@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 5
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1117@01 Int) (q$b@1118@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1117@01)
      (and
        (<= 0 q$a@1117@01)
        (=>
          (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1118@01) (not (<= 0 q$b@1118@01)))))
        (or
          (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1117@01) (not (<= 0 q$a@1117@01)))
    (=>
      (and
        (<= 0 q$a@1117@01)
        (and
          (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1118@01)
            (<= q$b@1118@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1117@01)
        (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1118@01)
        (<= q$b@1118@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1117@01)
          (and
            (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1118@01)
              (<= q$b@1118@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1117@01)
        (and
          (<= q$a@1117@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1118@01)
            (<= q$b@1118@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1117@01) q$b@1118@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1953@17@1953@847-aux|)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@1119@01 $Snap)
(assert (= $t@1119@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@1066@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@1120@01 $Struct)
(assert (=
  self@1120@01
  ($struct_set<$Struct> self@1052@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 7))
    l$havoc@1066@01))))
; [exec]
; $contracts := l$havoc$1
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1120@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1120@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 5
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1120@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1120@01 3))))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1120@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1120@01 3)))))
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 702 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), l$_to@1045@01), $struct_get[Int]($struct_loc[Int](msg@1048@01, 0))))) - $unwrap[Int](l$_value@1046@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01) ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)))))
      ($unwrap<Int> l$_value@1046@01))
    0)))
(pop) ; 3
; [eval] !($unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) < 0)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) < 0
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)))
; [eval] $wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(push) ; 3
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01) ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)))))
    ($unwrap<Int> l$_value@1046@01))
  0)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01) ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)))))
      ($unwrap<Int> l$_value@1046@01))
    0))))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 722 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), l$_to@1045@01), $struct_get[Int]($struct_loc[Int](msg@1048@01, 0))))) - $unwrap[Int](l$_value@1046@01) < 0) | live]
; [else-branch: 722 | $unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), l$_to@1045@01), $struct_get[Int]($struct_loc[Int](msg@1048@01, 0))))) - $unwrap[Int](l$_value@1046@01) < 0 | live]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 722 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), l$_to@1045@01), $struct_get[Int]($struct_loc[Int](msg@1048@01, 0))))) - $unwrap[Int](l$_value@1046@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01) ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)))))
      ($unwrap<Int> l$_value@1046@01))
    0)))
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)))
; [eval] $wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01) ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)))))
      ($unwrap<Int> l$_value@1046@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 723 | $unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), l$_to@1045@01), $struct_get[Int]($struct_loc[Int](msg@1048@01, 0))))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
; [else-branch: 723 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), l$_to@1045@01), $struct_get[Int]($struct_loc[Int](msg@1048@01, 0))))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
(set-option :timeout 0)
(push) ; 4
; [else-branch: 723 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), l$_to@1045@01), $struct_get[Int]($struct_loc[Int](msg@1048@01, 0))))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01) ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)))))
      ($unwrap<Int> l$_value@1046@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(pop) ; 4
; [eval] !($unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)))
; [eval] $wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(push) ; 4
(set-option :timeout 10)
(assert (not (>
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01) ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)))))
    ($unwrap<Int> l$_value@1046@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01) ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)))))
      ($unwrap<Int> l$_value@1046@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 724 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), l$_to@1045@01), $struct_get[Int]($struct_loc[Int](msg@1048@01, 0))))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
; [else-branch: 724 | $unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), l$_to@1045@01), $struct_get[Int]($struct_loc[Int](msg@1048@01, 0))))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 724 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), l$_to@1045@01), $struct_get[Int]($struct_loc[Int](msg@1048@01, 0))))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01) ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)))))
      ($unwrap<Int> l$_value@1046@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
; [exec]
; self := ($struct_set(self, 4, ($map_set(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;   l$_to, ($map_set(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;   l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self,
;   4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg,
;   0)): Int)): Int))) -
;   $unwrap(l$_value)): $Map[Int, Int])): $Map[Int, $Map[Int, Int]])): $Struct)
; [eval] ($struct_set(self, 4, ($map_set(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to, ($map_set(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)): $Map[Int, Int])): $Map[Int, $Map[Int, Int]])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to, ($map_set(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)): $Map[Int, Int])): $Map[Int, $Map[Int, Int]])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($map_set(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)): $Map[Int, Int])
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)
; [eval] $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)))
; [eval] $wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] $unwrap(l$_value)
(declare-const self@1121@01 $Struct)
(assert (=
  self@1121@01
  ($struct_set<$Struct> self@1052@01 4 ($map_set<$Map<Int~_$Map<Int~_Int>>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01 ($map_set<$Map<Int~_Int>> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01) ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)) (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01) ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)))))
    ($unwrap<Int> l$_value@1046@01)))))))
; [exec]
; i0$$pre_self := self
; [exec]
; i0$$pre_$contracts := $contracts
; [exec]
; l$i0$_to := l$_to
; [exec]
; l$i0$_value := l$_value
; [eval] !(l$i0$_to != 0)
; [eval] l$i0$_to != 0
(push) ; 5
(set-option :timeout 10)
(assert (not (not (= l$_to@1045@01 0))))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (= l$_to@1045@01 0)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 725 | l$_to@1045@01 == 0 | live]
; [else-branch: 725 | l$_to@1045@01 != 0 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 725 | l$_to@1045@01 == 0]
(assert (= l$_to@1045@01 0))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [then-branch: 726 | False | dead]
; [else-branch: 726 | True | live]
(push) ; 6
; [else-branch: 726 | True]
(pop) ; 6
; [eval] !$succ
(push) ; 6
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 727 | True | live]
; [else-branch: 727 | False | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 727 | True]
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 7
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 728 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) != $struct_get[Int]($struct_loc[Int](self@1052@01, 6)) | live]
; [else-branch: 728 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) == $struct_get[Int]($struct_loc[Int](self@1052@01, 6)) | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 728 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) != $struct_get[Int]($struct_loc[Int](self@1052@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 8
(push) ; 8
; [else-branch: 728 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) == $struct_get[Int]($struct_loc[Int](self@1052@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1122@01 Int)
(declare-const q$b@1123@01 Int)
(push) ; 7
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 8
; [then-branch: 729 | !(0 <= q$a@1122@01) | live]
; [else-branch: 729 | 0 <= q$a@1122@01 | live]
(push) ; 9
; [then-branch: 729 | !(0 <= q$a@1122@01)]
(assert (not (<= 0 q$a@1122@01)))
(pop) ; 9
(push) ; 9
; [else-branch: 729 | 0 <= q$a@1122@01]
(assert (<= 0 q$a@1122@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 10
; [then-branch: 730 | !(q$a@1122@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 730 | q$a@1122@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 11
; [then-branch: 730 | !(q$a@1122@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 11
(push) ; 11
; [else-branch: 730 | q$a@1122@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1122@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 12
; [then-branch: 731 | !(0 <= q$b@1123@01) | live]
; [else-branch: 731 | 0 <= q$b@1123@01 | live]
(push) ; 13
; [then-branch: 731 | !(0 <= q$b@1123@01)]
(assert (not (<= 0 q$b@1123@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 731 | 0 <= q$b@1123@01]
(assert (<= 0 q$b@1123@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1123@01) (not (<= 0 q$b@1123@01))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1123@01) (not (<= 0 q$b@1123@01))))))
(assert (or
  (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1122@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1122@01)
  (and
    (<= 0 q$a@1122@01)
    (=>
      (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1123@01) (not (<= 0 q$b@1123@01)))))
    (or
      (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1122@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1122@01) (not (<= 0 q$a@1122@01))))
(push) ; 8
; [then-branch: 732 | 0 <= q$a@1122@01 && q$a@1122@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1123@01 && q$b@1123@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 732 | !(0 <= q$a@1122@01 && q$a@1122@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1123@01 && q$b@1123@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 9
; [then-branch: 732 | 0 <= q$a@1122@01 && q$a@1122@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1123@01 && q$b@1123@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1122@01)
  (and
    (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1123@01)
      (<= q$b@1123@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 10
; [then-branch: 733 | False | dead]
; [else-branch: 733 | True | live]
(push) ; 11
; [else-branch: 733 | True]
(pop) ; 11
(pop) ; 10
; Joined path conditions
(pop) ; 9
(push) ; 9
; [else-branch: 732 | !(0 <= q$a@1122@01 && q$a@1122@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1123@01 && q$b@1123@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1122@01)
    (and
      (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1123@01)
        (<= q$b@1123@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1122@01)
    (and
      (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1123@01)
        (<= q$b@1123@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1122@01)
    (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1123@01)
    (<= q$b@1123@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1122@01)
      (and
        (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1123@01)
          (<= q$b@1123@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1122@01)
    (and
      (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1123@01)
        (<= q$b@1123@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 7
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1122@01 Int) (q$b@1123@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1122@01)
      (and
        (<= 0 q$a@1122@01)
        (=>
          (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1123@01) (not (<= 0 q$b@1123@01)))))
        (or
          (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1122@01) (not (<= 0 q$a@1122@01)))
    (=>
      (and
        (<= 0 q$a@1122@01)
        (and
          (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1123@01)
            (<= q$b@1123@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1122@01)
        (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1123@01)
        (<= q$b@1123@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1122@01)
          (and
            (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1123@01)
              (<= q$b@1123@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1122@01)
        (and
          (<= q$a@1122@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1123@01)
            (<= q$b@1123@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1122@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1123@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1950@17@1950@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1124@01 Int)
(push) ; 7
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 8
; [then-branch: 734 | !(0 <= q$a@1124@01) | live]
; [else-branch: 734 | 0 <= q$a@1124@01 | live]
(push) ; 9
; [then-branch: 734 | !(0 <= q$a@1124@01)]
(assert (not (<= 0 q$a@1124@01)))
(pop) ; 9
(push) ; 9
; [else-branch: 734 | 0 <= q$a@1124@01]
(assert (<= 0 q$a@1124@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1124@01) (not (<= 0 q$a@1124@01))))
(push) ; 8
; [then-branch: 735 | 0 <= q$a@1124@01 && q$a@1124@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 735 | !(0 <= q$a@1124@01 && q$a@1124@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 9
; [then-branch: 735 | 0 <= q$a@1124@01 && q$a@1124@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1124@01)
  (<= q$a@1124@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 10
; [then-branch: 736 | False | dead]
; [else-branch: 736 | True | live]
(push) ; 11
; [else-branch: 736 | True]
(pop) ; 11
(pop) ; 10
; Joined path conditions
(pop) ; 9
(push) ; 9
; [else-branch: 735 | !(0 <= q$a@1124@01 && q$a@1124@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1124@01)
    (<= q$a@1124@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1124@01)
      (<= q$a@1124@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1124@01)
    (<= q$a@1124@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1124@01 Int)) (!
  (and
    (or (<= 0 q$a@1124@01) (not (<= 0 q$a@1124@01)))
    (or
      (not
        (and
          (<= 0 q$a@1124@01)
          (<= q$a@1124@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1124@01)
        (<= q$a@1124@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1124@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1951@17@1951@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1125@01 Int)
(push) ; 7
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 8
; [then-branch: 737 | !(0 <= q$a@1125@01) | live]
; [else-branch: 737 | 0 <= q$a@1125@01 | live]
(push) ; 9
; [then-branch: 737 | !(0 <= q$a@1125@01)]
(assert (not (<= 0 q$a@1125@01)))
(pop) ; 9
(push) ; 9
; [else-branch: 737 | 0 <= q$a@1125@01]
(assert (<= 0 q$a@1125@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1125@01) (not (<= 0 q$a@1125@01))))
(push) ; 8
; [then-branch: 738 | 0 <= q$a@1125@01 && q$a@1125@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 738 | !(0 <= q$a@1125@01 && q$a@1125@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 9
; [then-branch: 738 | 0 <= q$a@1125@01 && q$a@1125@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1125@01)
  (<= q$a@1125@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 10
; [then-branch: 739 | False | dead]
; [else-branch: 739 | True | live]
(push) ; 11
; [else-branch: 739 | True]
(pop) ; 11
(pop) ; 10
; Joined path conditions
(pop) ; 9
(push) ; 9
; [else-branch: 738 | !(0 <= q$a@1125@01 && q$a@1125@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1125@01)
    (<= q$a@1125@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1125@01)
      (<= q$a@1125@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1125@01)
    (<= q$a@1125@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 7
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1125@01 Int)) (!
  (and
    (or (<= 0 q$a@1125@01) (not (<= 0 q$a@1125@01)))
    (or
      (not
        (and
          (<= 0 q$a@1125@01)
          (<= q$a@1125@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1125@01)
        (<= q$a@1125@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1125@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1952@17@1952@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@1126@01 Int)
(declare-const q$b@1127@01 Int)
(push) ; 7
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 8
; [then-branch: 740 | !(0 <= q$a@1126@01) | live]
; [else-branch: 740 | 0 <= q$a@1126@01 | live]
(push) ; 9
; [then-branch: 740 | !(0 <= q$a@1126@01)]
(assert (not (<= 0 q$a@1126@01)))
(pop) ; 9
(push) ; 9
; [else-branch: 740 | 0 <= q$a@1126@01]
(assert (<= 0 q$a@1126@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 10
; [then-branch: 741 | !(q$a@1126@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 741 | q$a@1126@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 11
; [then-branch: 741 | !(q$a@1126@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 11
(push) ; 11
; [else-branch: 741 | q$a@1126@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1126@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 12
; [then-branch: 742 | !(0 <= q$b@1127@01) | live]
; [else-branch: 742 | 0 <= q$b@1127@01 | live]
(push) ; 13
; [then-branch: 742 | !(0 <= q$b@1127@01)]
(assert (not (<= 0 q$b@1127@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 742 | 0 <= q$b@1127@01]
(assert (<= 0 q$b@1127@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1127@01) (not (<= 0 q$b@1127@01))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1127@01) (not (<= 0 q$b@1127@01))))))
(assert (or
  (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1126@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1126@01)
  (and
    (<= 0 q$a@1126@01)
    (=>
      (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1127@01) (not (<= 0 q$b@1127@01)))))
    (or
      (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1126@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1126@01) (not (<= 0 q$a@1126@01))))
(push) ; 8
; [then-branch: 743 | 0 <= q$a@1126@01 && q$a@1126@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1127@01 && q$b@1127@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 743 | !(0 <= q$a@1126@01 && q$a@1126@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1127@01 && q$b@1127@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 9
; [then-branch: 743 | 0 <= q$a@1126@01 && q$a@1126@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1127@01 && q$b@1127@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1126@01)
  (and
    (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1127@01)
      (<= q$b@1127@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 10
; [then-branch: 744 | False | dead]
; [else-branch: 744 | True | live]
(push) ; 11
; [else-branch: 744 | True]
(pop) ; 11
(pop) ; 10
; Joined path conditions
(pop) ; 9
(push) ; 9
; [else-branch: 743 | !(0 <= q$a@1126@01 && q$a@1126@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1127@01 && q$b@1127@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1126@01)
    (and
      (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1127@01)
        (<= q$b@1127@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1126@01)
    (and
      (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1127@01)
        (<= q$b@1127@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1126@01)
    (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1127@01)
    (<= q$b@1127@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1126@01)
      (and
        (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1127@01)
          (<= q$b@1127@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1126@01)
    (and
      (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1127@01)
        (<= q$b@1127@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 7
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1126@01 Int) (q$b@1127@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1126@01)
      (and
        (<= 0 q$a@1126@01)
        (=>
          (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1127@01) (not (<= 0 q$b@1127@01)))))
        (or
          (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1126@01) (not (<= 0 q$a@1126@01)))
    (=>
      (and
        (<= 0 q$a@1126@01)
        (and
          (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1127@01)
            (<= q$b@1127@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1126@01)
        (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1127@01)
        (<= q$b@1127@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1126@01)
          (and
            (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1127@01)
              (<= q$b@1127@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1126@01)
        (and
          (<= q$a@1126@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1127@01)
            (<= q$b@1127@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1126@01) q$b@1127@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1953@17@1953@847-aux|)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@1128@01 $Snap)
(assert (= $t@1128@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@1066@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@1129@01 $Struct)
(assert (=
  self@1129@01
  ($struct_set<$Struct> self@1052@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 7))
    l$havoc@1066@01))))
; [exec]
; $contracts := l$havoc$1
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 7
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1129@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1129@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 7
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1129@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1129@01 3))))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1129@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1129@01 3)))))
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 725 | l$_to@1045@01 != 0]
(assert (not (= l$_to@1045@01 0)))
(pop) ; 5
; [eval] !!(l$i0$_to != 0)
; [eval] !(l$i0$_to != 0)
; [eval] l$i0$_to != 0
(push) ; 5
(set-option :timeout 10)
(assert (not (= l$_to@1045@01 0)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not (= l$_to@1045@01 0))))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 745 | l$_to@1045@01 != 0 | live]
; [else-branch: 745 | l$_to@1045@01 == 0 | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 745 | l$_to@1045@01 != 0]
(assert (not (= l$_to@1045@01 0)))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) < 0
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] $unwrap(l$i0$_value)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@1121@01 5))))
      ($unwrap<Int> l$_value@1046@01))
    0))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@1121@01 5))))
    ($unwrap<Int> l$_value@1046@01))
  0)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 746 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@1121@01, 5)))) - $unwrap[Int](l$_value@1046@01) < 0 | live]
; [else-branch: 746 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@1121@01, 5)))) - $unwrap[Int](l$_value@1046@01) < 0) | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 746 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@1121@01, 5)))) - $unwrap[Int](l$_value@1046@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@1121@01 5))))
    ($unwrap<Int> l$_value@1046@01))
  0))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [then-branch: 747 | False | dead]
; [else-branch: 747 | True | live]
(push) ; 7
; [else-branch: 747 | True]
(pop) ; 7
; [eval] !$succ
(push) ; 7
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 748 | True | live]
; [else-branch: 748 | False | dead]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 748 | True]
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 8
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 749 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) != $struct_get[Int]($struct_loc[Int](self@1052@01, 6)) | live]
; [else-branch: 749 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) == $struct_get[Int]($struct_loc[Int](self@1052@01, 6)) | live]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 749 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) != $struct_get[Int]($struct_loc[Int](self@1052@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 9
(push) ; 9
; [else-branch: 749 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) == $struct_get[Int]($struct_loc[Int](self@1052@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1130@01 Int)
(declare-const q$b@1131@01 Int)
(push) ; 8
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 750 | !(0 <= q$a@1130@01) | live]
; [else-branch: 750 | 0 <= q$a@1130@01 | live]
(push) ; 10
; [then-branch: 750 | !(0 <= q$a@1130@01)]
(assert (not (<= 0 q$a@1130@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 750 | 0 <= q$a@1130@01]
(assert (<= 0 q$a@1130@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 11
; [then-branch: 751 | !(q$a@1130@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 751 | q$a@1130@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 12
; [then-branch: 751 | !(q$a@1130@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 12
(push) ; 12
; [else-branch: 751 | q$a@1130@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1130@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 13
; [then-branch: 752 | !(0 <= q$b@1131@01) | live]
; [else-branch: 752 | 0 <= q$b@1131@01 | live]
(push) ; 14
; [then-branch: 752 | !(0 <= q$b@1131@01)]
(assert (not (<= 0 q$b@1131@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 752 | 0 <= q$b@1131@01]
(assert (<= 0 q$b@1131@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1131@01) (not (<= 0 q$b@1131@01))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1131@01) (not (<= 0 q$b@1131@01))))))
(assert (or
  (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1130@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1130@01)
  (and
    (<= 0 q$a@1130@01)
    (=>
      (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1131@01) (not (<= 0 q$b@1131@01)))))
    (or
      (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1130@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1130@01) (not (<= 0 q$a@1130@01))))
(push) ; 9
; [then-branch: 753 | 0 <= q$a@1130@01 && q$a@1130@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1131@01 && q$b@1131@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 753 | !(0 <= q$a@1130@01 && q$a@1130@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1131@01 && q$b@1131@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 753 | 0 <= q$a@1130@01 && q$a@1130@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1131@01 && q$b@1131@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1130@01)
  (and
    (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1131@01)
      (<= q$b@1131@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 11
; [then-branch: 754 | False | dead]
; [else-branch: 754 | True | live]
(push) ; 12
; [else-branch: 754 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 753 | !(0 <= q$a@1130@01 && q$a@1130@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1131@01 && q$b@1131@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1130@01)
    (and
      (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1131@01)
        (<= q$b@1131@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1130@01)
    (and
      (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1131@01)
        (<= q$b@1131@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1130@01)
    (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1131@01)
    (<= q$b@1131@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1130@01)
      (and
        (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1131@01)
          (<= q$b@1131@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1130@01)
    (and
      (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1131@01)
        (<= q$b@1131@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1130@01 Int) (q$b@1131@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1130@01)
      (and
        (<= 0 q$a@1130@01)
        (=>
          (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1131@01) (not (<= 0 q$b@1131@01)))))
        (or
          (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1130@01) (not (<= 0 q$a@1130@01)))
    (=>
      (and
        (<= 0 q$a@1130@01)
        (and
          (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1131@01)
            (<= q$b@1131@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1130@01)
        (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1131@01)
        (<= q$b@1131@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1130@01)
          (and
            (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1131@01)
              (<= q$b@1131@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1130@01)
        (and
          (<= q$a@1130@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1131@01)
            (<= q$b@1131@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1130@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1131@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1950@17@1950@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1132@01 Int)
(push) ; 8
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 755 | !(0 <= q$a@1132@01) | live]
; [else-branch: 755 | 0 <= q$a@1132@01 | live]
(push) ; 10
; [then-branch: 755 | !(0 <= q$a@1132@01)]
(assert (not (<= 0 q$a@1132@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 755 | 0 <= q$a@1132@01]
(assert (<= 0 q$a@1132@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1132@01) (not (<= 0 q$a@1132@01))))
(push) ; 9
; [then-branch: 756 | 0 <= q$a@1132@01 && q$a@1132@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 756 | !(0 <= q$a@1132@01 && q$a@1132@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 756 | 0 <= q$a@1132@01 && q$a@1132@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1132@01)
  (<= q$a@1132@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 11
; [then-branch: 757 | False | dead]
; [else-branch: 757 | True | live]
(push) ; 12
; [else-branch: 757 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 756 | !(0 <= q$a@1132@01 && q$a@1132@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1132@01)
    (<= q$a@1132@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1132@01)
      (<= q$a@1132@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1132@01)
    (<= q$a@1132@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1132@01 Int)) (!
  (and
    (or (<= 0 q$a@1132@01) (not (<= 0 q$a@1132@01)))
    (or
      (not
        (and
          (<= 0 q$a@1132@01)
          (<= q$a@1132@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1132@01)
        (<= q$a@1132@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1132@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1951@17@1951@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1133@01 Int)
(push) ; 8
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 758 | !(0 <= q$a@1133@01) | live]
; [else-branch: 758 | 0 <= q$a@1133@01 | live]
(push) ; 10
; [then-branch: 758 | !(0 <= q$a@1133@01)]
(assert (not (<= 0 q$a@1133@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 758 | 0 <= q$a@1133@01]
(assert (<= 0 q$a@1133@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1133@01) (not (<= 0 q$a@1133@01))))
(push) ; 9
; [then-branch: 759 | 0 <= q$a@1133@01 && q$a@1133@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 759 | !(0 <= q$a@1133@01 && q$a@1133@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 759 | 0 <= q$a@1133@01 && q$a@1133@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1133@01)
  (<= q$a@1133@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 11
; [then-branch: 760 | False | dead]
; [else-branch: 760 | True | live]
(push) ; 12
; [else-branch: 760 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 759 | !(0 <= q$a@1133@01 && q$a@1133@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1133@01)
    (<= q$a@1133@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1133@01)
      (<= q$a@1133@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1133@01)
    (<= q$a@1133@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1133@01 Int)) (!
  (and
    (or (<= 0 q$a@1133@01) (not (<= 0 q$a@1133@01)))
    (or
      (not
        (and
          (<= 0 q$a@1133@01)
          (<= q$a@1133@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1133@01)
        (<= q$a@1133@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1133@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1952@17@1952@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@1134@01 Int)
(declare-const q$b@1135@01 Int)
(push) ; 8
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 9
; [then-branch: 761 | !(0 <= q$a@1134@01) | live]
; [else-branch: 761 | 0 <= q$a@1134@01 | live]
(push) ; 10
; [then-branch: 761 | !(0 <= q$a@1134@01)]
(assert (not (<= 0 q$a@1134@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 761 | 0 <= q$a@1134@01]
(assert (<= 0 q$a@1134@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 11
; [then-branch: 762 | !(q$a@1134@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 762 | q$a@1134@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 12
; [then-branch: 762 | !(q$a@1134@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 12
(push) ; 12
; [else-branch: 762 | q$a@1134@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1134@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 13
; [then-branch: 763 | !(0 <= q$b@1135@01) | live]
; [else-branch: 763 | 0 <= q$b@1135@01 | live]
(push) ; 14
; [then-branch: 763 | !(0 <= q$b@1135@01)]
(assert (not (<= 0 q$b@1135@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 763 | 0 <= q$b@1135@01]
(assert (<= 0 q$b@1135@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1135@01) (not (<= 0 q$b@1135@01))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1135@01) (not (<= 0 q$b@1135@01))))))
(assert (or
  (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1134@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1134@01)
  (and
    (<= 0 q$a@1134@01)
    (=>
      (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1135@01) (not (<= 0 q$b@1135@01)))))
    (or
      (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1134@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1134@01) (not (<= 0 q$a@1134@01))))
(push) ; 9
; [then-branch: 764 | 0 <= q$a@1134@01 && q$a@1134@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1135@01 && q$b@1135@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 764 | !(0 <= q$a@1134@01 && q$a@1134@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1135@01 && q$b@1135@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 10
; [then-branch: 764 | 0 <= q$a@1134@01 && q$a@1134@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1135@01 && q$b@1135@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1134@01)
  (and
    (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1135@01)
      (<= q$b@1135@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 11
; [then-branch: 765 | False | dead]
; [else-branch: 765 | True | live]
(push) ; 12
; [else-branch: 765 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
(pop) ; 10
(push) ; 10
; [else-branch: 764 | !(0 <= q$a@1134@01 && q$a@1134@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1135@01 && q$b@1135@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1134@01)
    (and
      (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1135@01)
        (<= q$b@1135@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1134@01)
    (and
      (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1135@01)
        (<= q$b@1135@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1134@01)
    (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1135@01)
    (<= q$b@1135@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1134@01)
      (and
        (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1135@01)
          (<= q$b@1135@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1134@01)
    (and
      (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1135@01)
        (<= q$b@1135@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1134@01 Int) (q$b@1135@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1134@01)
      (and
        (<= 0 q$a@1134@01)
        (=>
          (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1135@01) (not (<= 0 q$b@1135@01)))))
        (or
          (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1134@01) (not (<= 0 q$a@1134@01)))
    (=>
      (and
        (<= 0 q$a@1134@01)
        (and
          (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1135@01)
            (<= q$b@1135@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1134@01)
        (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1135@01)
        (<= q$b@1135@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1134@01)
          (and
            (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1135@01)
              (<= q$b@1135@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1134@01)
        (and
          (<= q$a@1134@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1135@01)
            (<= q$b@1135@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1134@01) q$b@1135@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1953@17@1953@847-aux|)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@1136@01 $Snap)
(assert (= $t@1136@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@1066@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@1137@01 $Struct)
(assert (=
  self@1137@01
  ($struct_set<$Struct> self@1052@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 7))
    l$havoc@1066@01))))
; [exec]
; $contracts := l$havoc$1
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 8
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1137@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1137@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 8
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1137@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1137@01 3))))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1137@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1137@01 3)))))
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 746 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@1121@01, 5)))) - $unwrap[Int](l$_value@1046@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@1121@01 5))))
      ($unwrap<Int> l$_value@1046@01))
    0)))
(pop) ; 6
; [eval] !($unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) < 0)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) < 0
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] $unwrap(l$i0$_value)
(push) ; 6
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@1121@01 5))))
    ($unwrap<Int> l$_value@1046@01))
  0)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@1121@01 5))))
      ($unwrap<Int> l$_value@1046@01))
    0))))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 766 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@1121@01, 5)))) - $unwrap[Int](l$_value@1046@01) < 0) | live]
; [else-branch: 766 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@1121@01, 5)))) - $unwrap[Int](l$_value@1046@01) < 0 | live]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 766 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@1121@01, 5)))) - $unwrap[Int](l$_value@1046@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@1121@01 5))))
      ($unwrap<Int> l$_value@1046@01))
    0)))
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] $unwrap(l$i0$_value)
(push) ; 7
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@1121@01 5))))
      ($unwrap<Int> l$_value@1046@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 767 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@1121@01, 5)))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
; [else-branch: 767 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@1121@01, 5)))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
(set-option :timeout 0)
(push) ; 7
; [else-branch: 767 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@1121@01, 5)))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@1121@01 5))))
      ($unwrap<Int> l$_value@1046@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(pop) ; 7
; [eval] !($unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] $unwrap(l$i0$_value)
(push) ; 7
(set-option :timeout 10)
(assert (not (>
  (-
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@1121@01 5))))
    ($unwrap<Int> l$_value@1046@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@1121@01 5))))
      ($unwrap<Int> l$_value@1046@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 768 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@1121@01, 5)))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
; [else-branch: 768 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@1121@01, 5)))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 768 | !($unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@1121@01, 5)))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@1121@01 5))))
      ($unwrap<Int> l$_value@1046@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
; [exec]
; self := ($struct_set(self, 5, $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) -
;   $unwrap(l$i0$_value)): $Struct)
; [eval] ($struct_set(self, 5, $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value)): $Struct)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
; [eval] $wrap(($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] $unwrap(l$i0$_value)
(declare-const self@1138@01 $Struct)
(assert (=
  self@1138@01
  ($struct_set<$Struct> self@1121@01 5 (-
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@1121@01 5))))
    ($unwrap<Int> l$_value@1046@01)))))
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) < 0
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$i0$_value)
(push) ; 8
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1138@01 3)) l$_to@1045@01)))
      ($unwrap<Int> l$_value@1046@01))
    0))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1138@01 3)) l$_to@1045@01)))
    ($unwrap<Int> l$_value@1046@01))
  0)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 769 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1138@01, 3)), l$_to@1045@01))) - $unwrap[Int](l$_value@1046@01) < 0 | live]
; [else-branch: 769 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1138@01, 3)), l$_to@1045@01))) - $unwrap[Int](l$_value@1046@01) < 0) | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 769 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1138@01, 3)), l$_to@1045@01))) - $unwrap[Int](l$_value@1046@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1138@01 3)) l$_to@1045@01)))
    ($unwrap<Int> l$_value@1046@01))
  0))
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [then-branch: 770 | False | dead]
; [else-branch: 770 | True | live]
(push) ; 9
; [else-branch: 770 | True]
(pop) ; 9
; [eval] !$succ
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 771 | True | live]
; [else-branch: 771 | False | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 771 | True]
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 10
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 772 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) != $struct_get[Int]($struct_loc[Int](self@1052@01, 6)) | live]
; [else-branch: 772 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) == $struct_get[Int]($struct_loc[Int](self@1052@01, 6)) | live]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 772 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) != $struct_get[Int]($struct_loc[Int](self@1052@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 11
(push) ; 11
; [else-branch: 772 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) == $struct_get[Int]($struct_loc[Int](self@1052@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1139@01 Int)
(declare-const q$b@1140@01 Int)
(push) ; 10
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 773 | !(0 <= q$a@1139@01) | live]
; [else-branch: 773 | 0 <= q$a@1139@01 | live]
(push) ; 12
; [then-branch: 773 | !(0 <= q$a@1139@01)]
(assert (not (<= 0 q$a@1139@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 773 | 0 <= q$a@1139@01]
(assert (<= 0 q$a@1139@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 13
; [then-branch: 774 | !(q$a@1139@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 774 | q$a@1139@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 14
; [then-branch: 774 | !(q$a@1139@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 14
(push) ; 14
; [else-branch: 774 | q$a@1139@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1139@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 15
; [then-branch: 775 | !(0 <= q$b@1140@01) | live]
; [else-branch: 775 | 0 <= q$b@1140@01 | live]
(push) ; 16
; [then-branch: 775 | !(0 <= q$b@1140@01)]
(assert (not (<= 0 q$b@1140@01)))
(pop) ; 16
(push) ; 16
; [else-branch: 775 | 0 <= q$b@1140@01]
(assert (<= 0 q$b@1140@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1140@01) (not (<= 0 q$b@1140@01))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1140@01) (not (<= 0 q$b@1140@01))))))
(assert (or
  (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1139@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1139@01)
  (and
    (<= 0 q$a@1139@01)
    (=>
      (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1140@01) (not (<= 0 q$b@1140@01)))))
    (or
      (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1139@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1139@01) (not (<= 0 q$a@1139@01))))
(push) ; 11
; [then-branch: 776 | 0 <= q$a@1139@01 && q$a@1139@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1140@01 && q$b@1140@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 776 | !(0 <= q$a@1139@01 && q$a@1139@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1140@01 && q$b@1140@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 776 | 0 <= q$a@1139@01 && q$a@1139@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1140@01 && q$b@1140@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1139@01)
  (and
    (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1140@01)
      (<= q$b@1140@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 13
; [then-branch: 777 | False | dead]
; [else-branch: 777 | True | live]
(push) ; 14
; [else-branch: 777 | True]
(pop) ; 14
(pop) ; 13
; Joined path conditions
(pop) ; 12
(push) ; 12
; [else-branch: 776 | !(0 <= q$a@1139@01 && q$a@1139@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1140@01 && q$b@1140@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1139@01)
    (and
      (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1140@01)
        (<= q$b@1140@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1139@01)
    (and
      (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1140@01)
        (<= q$b@1140@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1139@01)
    (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1140@01)
    (<= q$b@1140@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1139@01)
      (and
        (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1140@01)
          (<= q$b@1140@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1139@01)
    (and
      (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1140@01)
        (<= q$b@1140@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1139@01 Int) (q$b@1140@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1139@01)
      (and
        (<= 0 q$a@1139@01)
        (=>
          (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1140@01) (not (<= 0 q$b@1140@01)))))
        (or
          (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1139@01) (not (<= 0 q$a@1139@01)))
    (=>
      (and
        (<= 0 q$a@1139@01)
        (and
          (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1140@01)
            (<= q$b@1140@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1139@01)
        (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1140@01)
        (<= q$b@1140@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1139@01)
          (and
            (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1140@01)
              (<= q$b@1140@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1139@01)
        (and
          (<= q$a@1139@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1140@01)
            (<= q$b@1140@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1139@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1140@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1950@17@1950@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1141@01 Int)
(push) ; 10
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 778 | !(0 <= q$a@1141@01) | live]
; [else-branch: 778 | 0 <= q$a@1141@01 | live]
(push) ; 12
; [then-branch: 778 | !(0 <= q$a@1141@01)]
(assert (not (<= 0 q$a@1141@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 778 | 0 <= q$a@1141@01]
(assert (<= 0 q$a@1141@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1141@01) (not (<= 0 q$a@1141@01))))
(push) ; 11
; [then-branch: 779 | 0 <= q$a@1141@01 && q$a@1141@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 779 | !(0 <= q$a@1141@01 && q$a@1141@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 779 | 0 <= q$a@1141@01 && q$a@1141@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1141@01)
  (<= q$a@1141@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 13
; [then-branch: 780 | False | dead]
; [else-branch: 780 | True | live]
(push) ; 14
; [else-branch: 780 | True]
(pop) ; 14
(pop) ; 13
; Joined path conditions
(pop) ; 12
(push) ; 12
; [else-branch: 779 | !(0 <= q$a@1141@01 && q$a@1141@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1141@01)
    (<= q$a@1141@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1141@01)
      (<= q$a@1141@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1141@01)
    (<= q$a@1141@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1141@01 Int)) (!
  (and
    (or (<= 0 q$a@1141@01) (not (<= 0 q$a@1141@01)))
    (or
      (not
        (and
          (<= 0 q$a@1141@01)
          (<= q$a@1141@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1141@01)
        (<= q$a@1141@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1141@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1951@17@1951@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1142@01 Int)
(push) ; 10
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 781 | !(0 <= q$a@1142@01) | live]
; [else-branch: 781 | 0 <= q$a@1142@01 | live]
(push) ; 12
; [then-branch: 781 | !(0 <= q$a@1142@01)]
(assert (not (<= 0 q$a@1142@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 781 | 0 <= q$a@1142@01]
(assert (<= 0 q$a@1142@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1142@01) (not (<= 0 q$a@1142@01))))
(push) ; 11
; [then-branch: 782 | 0 <= q$a@1142@01 && q$a@1142@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 782 | !(0 <= q$a@1142@01 && q$a@1142@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 782 | 0 <= q$a@1142@01 && q$a@1142@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1142@01)
  (<= q$a@1142@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 13
; [then-branch: 783 | False | dead]
; [else-branch: 783 | True | live]
(push) ; 14
; [else-branch: 783 | True]
(pop) ; 14
(pop) ; 13
; Joined path conditions
(pop) ; 12
(push) ; 12
; [else-branch: 782 | !(0 <= q$a@1142@01 && q$a@1142@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1142@01)
    (<= q$a@1142@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1142@01)
      (<= q$a@1142@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1142@01)
    (<= q$a@1142@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1142@01 Int)) (!
  (and
    (or (<= 0 q$a@1142@01) (not (<= 0 q$a@1142@01)))
    (or
      (not
        (and
          (<= 0 q$a@1142@01)
          (<= q$a@1142@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1142@01)
        (<= q$a@1142@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1142@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1952@17@1952@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@1143@01 Int)
(declare-const q$b@1144@01 Int)
(push) ; 10
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 11
; [then-branch: 784 | !(0 <= q$a@1143@01) | live]
; [else-branch: 784 | 0 <= q$a@1143@01 | live]
(push) ; 12
; [then-branch: 784 | !(0 <= q$a@1143@01)]
(assert (not (<= 0 q$a@1143@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 784 | 0 <= q$a@1143@01]
(assert (<= 0 q$a@1143@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 13
; [then-branch: 785 | !(q$a@1143@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 785 | q$a@1143@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 14
; [then-branch: 785 | !(q$a@1143@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 14
(push) ; 14
; [else-branch: 785 | q$a@1143@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1143@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 15
; [then-branch: 786 | !(0 <= q$b@1144@01) | live]
; [else-branch: 786 | 0 <= q$b@1144@01 | live]
(push) ; 16
; [then-branch: 786 | !(0 <= q$b@1144@01)]
(assert (not (<= 0 q$b@1144@01)))
(pop) ; 16
(push) ; 16
; [else-branch: 786 | 0 <= q$b@1144@01]
(assert (<= 0 q$b@1144@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1144@01) (not (<= 0 q$b@1144@01))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1144@01) (not (<= 0 q$b@1144@01))))))
(assert (or
  (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1143@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1143@01)
  (and
    (<= 0 q$a@1143@01)
    (=>
      (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1144@01) (not (<= 0 q$b@1144@01)))))
    (or
      (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1143@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1143@01) (not (<= 0 q$a@1143@01))))
(push) ; 11
; [then-branch: 787 | 0 <= q$a@1143@01 && q$a@1143@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1144@01 && q$b@1144@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 787 | !(0 <= q$a@1143@01 && q$a@1143@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1144@01 && q$b@1144@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 12
; [then-branch: 787 | 0 <= q$a@1143@01 && q$a@1143@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1144@01 && q$b@1144@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1143@01)
  (and
    (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1144@01)
      (<= q$b@1144@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 13
; [then-branch: 788 | False | dead]
; [else-branch: 788 | True | live]
(push) ; 14
; [else-branch: 788 | True]
(pop) ; 14
(pop) ; 13
; Joined path conditions
(pop) ; 12
(push) ; 12
; [else-branch: 787 | !(0 <= q$a@1143@01 && q$a@1143@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1144@01 && q$b@1144@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1143@01)
    (and
      (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1144@01)
        (<= q$b@1144@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1143@01)
    (and
      (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1144@01)
        (<= q$b@1144@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1143@01)
    (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1144@01)
    (<= q$b@1144@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1143@01)
      (and
        (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1144@01)
          (<= q$b@1144@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1143@01)
    (and
      (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1144@01)
        (<= q$b@1144@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 10
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1143@01 Int) (q$b@1144@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1143@01)
      (and
        (<= 0 q$a@1143@01)
        (=>
          (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1144@01) (not (<= 0 q$b@1144@01)))))
        (or
          (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1143@01) (not (<= 0 q$a@1143@01)))
    (=>
      (and
        (<= 0 q$a@1143@01)
        (and
          (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1144@01)
            (<= q$b@1144@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1143@01)
        (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1144@01)
        (<= q$b@1144@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1143@01)
          (and
            (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1144@01)
              (<= q$b@1144@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1143@01)
        (and
          (<= q$a@1143@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1144@01)
            (<= q$b@1144@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1143@01) q$b@1144@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1953@17@1953@847-aux|)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@1145@01 $Snap)
(assert (= $t@1145@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@1066@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@1146@01 $Struct)
(assert (=
  self@1146@01
  ($struct_set<$Struct> self@1052@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 7))
    l$havoc@1066@01))))
; [exec]
; $contracts := l$havoc$1
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 10
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1146@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1146@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 10
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1146@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1146@01 3))))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1146@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1146@01 3)))))
(pop) ; 9
(pop) ; 8
(push) ; 8
; [else-branch: 769 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1138@01, 3)), l$_to@1045@01))) - $unwrap[Int](l$_value@1046@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1138@01 3)) l$_to@1045@01)))
      ($unwrap<Int> l$_value@1046@01))
    0)))
(pop) ; 8
; [eval] !($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) < 0)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) < 0
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$i0$_value)
(push) ; 8
(set-option :timeout 10)
(assert (not (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1138@01 3)) l$_to@1045@01)))
    ($unwrap<Int> l$_value@1046@01))
  0)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1138@01 3)) l$_to@1045@01)))
      ($unwrap<Int> l$_value@1046@01))
    0))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [then-branch: 789 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1138@01, 3)), l$_to@1045@01))) - $unwrap[Int](l$_value@1046@01) < 0) | live]
; [else-branch: 789 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1138@01, 3)), l$_to@1045@01))) - $unwrap[Int](l$_value@1046@01) < 0 | live]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 789 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1138@01, 3)), l$_to@1045@01))) - $unwrap[Int](l$_value@1046@01) < 0)]
(assert (not
  (<
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1138@01 3)) l$_to@1045@01)))
      ($unwrap<Int> l$_value@1046@01))
    0)))
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$i0$_value)
(push) ; 9
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1138@01 3)) l$_to@1045@01)))
      ($unwrap<Int> l$_value@1046@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 790 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1138@01, 3)), l$_to@1045@01))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
; [else-branch: 790 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1138@01, 3)), l$_to@1045@01))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
(set-option :timeout 0)
(push) ; 9
; [else-branch: 790 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1138@01, 3)), l$_to@1045@01))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1138@01 3)) l$_to@1045@01)))
      ($unwrap<Int> l$_value@1046@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(pop) ; 9
; [eval] !($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$i0$_value)
(push) ; 9
(set-option :timeout 10)
(assert (not (>
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1138@01 3)) l$_to@1045@01)))
    ($unwrap<Int> l$_value@1046@01))
  115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1138@01 3)) l$_to@1045@01)))
      ($unwrap<Int> l$_value@1046@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [then-branch: 791 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1138@01, 3)), l$_to@1045@01))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) | live]
; [else-branch: 791 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1138@01, 3)), l$_to@1045@01))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935 | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 791 | !($unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1138@01, 3)), l$_to@1045@01))) - $unwrap[Int](l$_value@1046@01) > 115792089237316195423570985008687907853269984665640564039457584007913129639935)]
(assert (not
  (>
    (-
      ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1138@01 3)) l$_to@1045@01)))
      ($unwrap<Int> l$_value@1046@01))
    115792089237316195423570985008687907853269984665640564039457584007913129639935)))
; [exec]
; self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;   l$i0$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;   l$i0$_to): Int))) -
;   $unwrap(l$i0$_value)): $Map[Int, Int])): $Struct)
; [eval] ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)): $Map[Int, Int])): $Struct)
; [eval] ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)
; [eval] $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)))
; [eval] $wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] $unwrap(l$i0$_value)
(declare-const self@1147@01 $Struct)
(assert (=
  self@1147@01
  ($struct_set<$Struct> self@1138@01 3 ($map_set<$Map<Int~_Int>> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1138@01 3)) l$_to@1045@01 (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1138@01 3)) l$_to@1045@01)))
    ($unwrap<Int> l$_value@1046@01))))))
; [exec]
; inhale acc(e$Transfer(l$i0$_to, 0, $unwrap(l$i0$_value)), write)
; [eval] $unwrap(l$i0$_value)
(declare-const $t@1148@01 $Snap)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label i0$return
; [exec]
; label return
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (not $out_of_gas@1065@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not $out_of_gas@1065@01))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 792 | $out_of_gas@1065@01 | live]
; [else-branch: 792 | !($out_of_gas@1065@01) | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 792 | $out_of_gas@1065@01]
(assert $out_of_gas@1065@01)
; [exec]
; label revert
; [exec]
; $succ := false
; [exec]
; self := $pre_self
; [exec]
; $contracts := $pre_$contracts
; [exec]
; $old_self := $pre_self
; [exec]
; $old_$contracts := $pre_$contracts
; [exec]
; label end
; [then-branch: 793 | False | dead]
; [else-branch: 793 | True | live]
(push) ; 11
; [else-branch: 793 | True]
(pop) ; 11
; [eval] !$succ
(push) ; 11
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 794 | True | live]
; [else-branch: 794 | False | dead]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 794 | True]
; [exec]
; assert old(($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int))
; [eval] old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 12
(push) ; 13
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 795 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) != $struct_get[Int]($struct_loc[Int](self@1052@01, 6)) | live]
; [else-branch: 795 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) == $struct_get[Int]($struct_loc[Int](self@1052@01, 6)) | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 795 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) != $struct_get[Int]($struct_loc[Int](self@1052@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 13
(push) ; 13
; [else-branch: 795 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) == $struct_get[Int]($struct_loc[Int](self@1052@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1149@01 Int)
(declare-const q$b@1150@01 Int)
(push) ; 12
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 13
; [then-branch: 796 | !(0 <= q$a@1149@01) | live]
; [else-branch: 796 | 0 <= q$a@1149@01 | live]
(push) ; 14
; [then-branch: 796 | !(0 <= q$a@1149@01)]
(assert (not (<= 0 q$a@1149@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 796 | 0 <= q$a@1149@01]
(assert (<= 0 q$a@1149@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 15
; [then-branch: 797 | !(q$a@1149@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 797 | q$a@1149@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 16
; [then-branch: 797 | !(q$a@1149@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 16
(push) ; 16
; [else-branch: 797 | q$a@1149@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1149@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 17
; [then-branch: 798 | !(0 <= q$b@1150@01) | live]
; [else-branch: 798 | 0 <= q$b@1150@01 | live]
(push) ; 18
; [then-branch: 798 | !(0 <= q$b@1150@01)]
(assert (not (<= 0 q$b@1150@01)))
(pop) ; 18
(push) ; 18
; [else-branch: 798 | 0 <= q$b@1150@01]
(assert (<= 0 q$b@1150@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 18
(pop) ; 17
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1150@01) (not (<= 0 q$b@1150@01))))
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1150@01) (not (<= 0 q$b@1150@01))))))
(assert (or
  (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1149@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1149@01)
  (and
    (<= 0 q$a@1149@01)
    (=>
      (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1150@01) (not (<= 0 q$b@1150@01)))))
    (or
      (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1149@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1149@01) (not (<= 0 q$a@1149@01))))
(push) ; 13
; [then-branch: 799 | 0 <= q$a@1149@01 && q$a@1149@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1150@01 && q$b@1150@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 799 | !(0 <= q$a@1149@01 && q$a@1149@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1150@01 && q$b@1150@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 14
; [then-branch: 799 | 0 <= q$a@1149@01 && q$a@1149@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1150@01 && q$b@1150@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1149@01)
  (and
    (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1150@01)
      (<= q$b@1150@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 15
; [then-branch: 800 | False | dead]
; [else-branch: 800 | True | live]
(push) ; 16
; [else-branch: 800 | True]
(pop) ; 16
(pop) ; 15
; Joined path conditions
(pop) ; 14
(push) ; 14
; [else-branch: 799 | !(0 <= q$a@1149@01 && q$a@1149@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1150@01 && q$b@1150@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1149@01)
    (and
      (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1150@01)
        (<= q$b@1150@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1149@01)
    (and
      (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1150@01)
        (<= q$b@1150@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1149@01)
    (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1150@01)
    (<= q$b@1150@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1149@01)
      (and
        (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1150@01)
          (<= q$b@1150@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1149@01)
    (and
      (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1150@01)
        (<= q$b@1150@01 1461501637330902918203684832716283019655932542975))))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(pop) ; 12
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1149@01 Int) (q$b@1150@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1149@01)
      (and
        (<= 0 q$a@1149@01)
        (=>
          (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1150@01) (not (<= 0 q$b@1150@01)))))
        (or
          (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1149@01) (not (<= 0 q$a@1149@01)))
    (=>
      (and
        (<= 0 q$a@1149@01)
        (and
          (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1150@01)
            (<= q$b@1150@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1149@01)
        (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1150@01)
        (<= q$b@1150@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1149@01)
          (and
            (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1150@01)
              (<= q$b@1150@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1149@01)
        (and
          (<= q$a@1149@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1150@01)
            (<= q$b@1150@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1149@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1150@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1950@17@1950@857-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1151@01 Int)
(push) ; 12
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 13
; [then-branch: 801 | !(0 <= q$a@1151@01) | live]
; [else-branch: 801 | 0 <= q$a@1151@01 | live]
(push) ; 14
; [then-branch: 801 | !(0 <= q$a@1151@01)]
(assert (not (<= 0 q$a@1151@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 801 | 0 <= q$a@1151@01]
(assert (<= 0 q$a@1151@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1151@01) (not (<= 0 q$a@1151@01))))
(push) ; 13
; [then-branch: 802 | 0 <= q$a@1151@01 && q$a@1151@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 802 | !(0 <= q$a@1151@01 && q$a@1151@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 14
; [then-branch: 802 | 0 <= q$a@1151@01 && q$a@1151@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1151@01)
  (<= q$a@1151@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 15
; [then-branch: 803 | False | dead]
; [else-branch: 803 | True | live]
(push) ; 16
; [else-branch: 803 | True]
(pop) ; 16
(pop) ; 15
; Joined path conditions
(pop) ; 14
(push) ; 14
; [else-branch: 802 | !(0 <= q$a@1151@01 && q$a@1151@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1151@01)
    (<= q$a@1151@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1151@01)
      (<= q$a@1151@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1151@01)
    (<= q$a@1151@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1151@01 Int)) (!
  (and
    (or (<= 0 q$a@1151@01) (not (<= 0 q$a@1151@01)))
    (or
      (not
        (and
          (<= 0 q$a@1151@01)
          (<= q$a@1151@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1151@01)
        (<= q$a@1151@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1151@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1951@17@1951@1051-aux|)))
; [exec]
; assert old((forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1152@01 Int)
(push) ; 12
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 13
; [then-branch: 804 | !(0 <= q$a@1152@01) | live]
; [else-branch: 804 | 0 <= q$a@1152@01 | live]
(push) ; 14
; [then-branch: 804 | !(0 <= q$a@1152@01)]
(assert (not (<= 0 q$a@1152@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 804 | 0 <= q$a@1152@01]
(assert (<= 0 q$a@1152@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1152@01) (not (<= 0 q$a@1152@01))))
(push) ; 13
; [then-branch: 805 | 0 <= q$a@1152@01 && q$a@1152@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 805 | !(0 <= q$a@1152@01 && q$a@1152@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 14
; [then-branch: 805 | 0 <= q$a@1152@01 && q$a@1152@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1152@01)
  (<= q$a@1152@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 15
; [then-branch: 806 | False | dead]
; [else-branch: 806 | True | live]
(push) ; 16
; [else-branch: 806 | True]
(pop) ; 16
(pop) ; 15
; Joined path conditions
(pop) ; 14
(push) ; 14
; [else-branch: 805 | !(0 <= q$a@1152@01 && q$a@1152@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1152@01)
    (<= q$a@1152@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1152@01)
      (<= q$a@1152@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1152@01)
    (<= q$a@1152@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1152@01 Int)) (!
  (and
    (or (<= 0 q$a@1152@01) (not (<= 0 q$a@1152@01)))
    (or
      (not
        (and
          (<= 0 q$a@1152@01)
          (<= q$a@1152@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1152@01)
        (<= q$a@1152@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1152@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1952@17@1952@1051-aux|)))
; [exec]
; assert old((forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write))
; [eval] old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@1153@01 Int)
(declare-const q$b@1154@01 Int)
(push) ; 12
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 13
; [then-branch: 807 | !(0 <= q$a@1153@01) | live]
; [else-branch: 807 | 0 <= q$a@1153@01 | live]
(push) ; 14
; [then-branch: 807 | !(0 <= q$a@1153@01)]
(assert (not (<= 0 q$a@1153@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 807 | 0 <= q$a@1153@01]
(assert (<= 0 q$a@1153@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 15
; [then-branch: 808 | !(q$a@1153@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 808 | q$a@1153@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 16
; [then-branch: 808 | !(q$a@1153@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 16
(push) ; 16
; [else-branch: 808 | q$a@1153@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1153@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 17
; [then-branch: 809 | !(0 <= q$b@1154@01) | live]
; [else-branch: 809 | 0 <= q$b@1154@01 | live]
(push) ; 18
; [then-branch: 809 | !(0 <= q$b@1154@01)]
(assert (not (<= 0 q$b@1154@01)))
(pop) ; 18
(push) ; 18
; [else-branch: 809 | 0 <= q$b@1154@01]
(assert (<= 0 q$b@1154@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 18
(pop) ; 17
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1154@01) (not (<= 0 q$b@1154@01))))
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1154@01) (not (<= 0 q$b@1154@01))))))
(assert (or
  (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1153@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1153@01)
  (and
    (<= 0 q$a@1153@01)
    (=>
      (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1154@01) (not (<= 0 q$b@1154@01)))))
    (or
      (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1153@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1153@01) (not (<= 0 q$a@1153@01))))
(push) ; 13
; [then-branch: 810 | 0 <= q$a@1153@01 && q$a@1153@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1154@01 && q$b@1154@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 810 | !(0 <= q$a@1153@01 && q$a@1153@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1154@01 && q$b@1154@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 14
; [then-branch: 810 | 0 <= q$a@1153@01 && q$a@1153@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1154@01 && q$b@1154@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1153@01)
  (and
    (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1154@01)
      (<= q$b@1154@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 15
; [then-branch: 811 | False | dead]
; [else-branch: 811 | True | live]
(push) ; 16
; [else-branch: 811 | True]
(pop) ; 16
(pop) ; 15
; Joined path conditions
(pop) ; 14
(push) ; 14
; [else-branch: 810 | !(0 <= q$a@1153@01 && q$a@1153@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1154@01 && q$b@1154@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1153@01)
    (and
      (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1154@01)
        (<= q$b@1154@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1153@01)
    (and
      (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1154@01)
        (<= q$b@1154@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1153@01)
    (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1154@01)
    (<= q$b@1154@01 1461501637330902918203684832716283019655932542975))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1153@01)
      (and
        (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1154@01)
          (<= q$b@1154@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1153@01)
    (and
      (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1154@01)
        (<= q$b@1154@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 12
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1153@01 Int) (q$b@1154@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1153@01)
      (and
        (<= 0 q$a@1153@01)
        (=>
          (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1154@01) (not (<= 0 q$b@1154@01)))))
        (or
          (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1153@01) (not (<= 0 q$a@1153@01)))
    (=>
      (and
        (<= 0 q$a@1153@01)
        (and
          (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1154@01)
            (<= q$b@1154@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1153@01)
        (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1154@01)
        (<= q$b@1154@01 1461501637330902918203684832716283019655932542975)))
    (or
      (not
        (and
          (<= 0 q$a@1153@01)
          (and
            (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1154@01)
              (<= q$b@1154@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1153@01)
        (and
          (<= q$a@1153@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1154@01)
            (<= q$b@1154@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1153@01) q$b@1154@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1953@17@1953@847-aux|)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@1155@01 $Snap)
(assert (= $t@1155@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@1066@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@1156@01 $Struct)
(assert (=
  self@1156@01
  ($struct_set<$Struct> self@1052@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 7))
    l$havoc@1066@01))))
; [exec]
; $contracts := l$havoc$1
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 12
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1156@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1156@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 12
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1156@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1156@01 3))))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1156@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1156@01 3)))))
(pop) ; 11
(pop) ; 10
(push) ; 10
; [else-branch: 792 | !($out_of_gas@1065@01)]
(assert (not $out_of_gas@1065@01))
(pop) ; 10
; [eval] !$out_of_gas
(push) ; 10
(set-option :timeout 10)
(assert (not $out_of_gas@1065@01))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (not $out_of_gas@1065@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [then-branch: 812 | !($out_of_gas@1065@01) | live]
; [else-branch: 812 | $out_of_gas@1065@01 | live]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 812 | !($out_of_gas@1065@01)]
(assert (not $out_of_gas@1065@01))
; [exec]
; label end
(push) ; 11
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [then-branch: 813 | True | live]
; [else-branch: 813 | False | dead]
(set-option :timeout 0)
(push) ; 11
; [then-branch: 813 | True]
; [exec]
; assert ($struct_get($struct_loc(msg, 0)): Int) !=
;   ($struct_get($struct_loc(self, 6)): Int) ==>
;   ($struct_get($struct_loc($old_self, 5)): Int) >=
;   ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int)
; [eval] ($struct_get($struct_loc(msg, 0)): Int)
; [eval] $struct_loc(msg, 0)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
(push) ; 12
(push) ; 13
(set-option :timeout 10)
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@1147@01 6)))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(set-option :timeout 10)
(assert (not (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1147@01 6))))))
(check-sat)
; unknown
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [then-branch: 814 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) != $struct_get[Int]($struct_loc[Int](self@1147@01, 6)) | live]
; [else-branch: 814 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) == $struct_get[Int]($struct_loc[Int](self@1147@01, 6)) | live]
(set-option :timeout 0)
(push) ; 13
; [then-branch: 814 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) != $struct_get[Int]($struct_loc[Int](self@1147@01, 6))]
(assert (not
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1147@01 6)))))
; [eval] ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
; [eval] ($struct_get($struct_loc($old_self, 5)): Int)
; [eval] $struct_loc($old_self, 5)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
(pop) ; 13
(push) ; 13
; [else-branch: 814 | $struct_get[Int]($struct_loc[Int](msg@1048@01, 0)) == $struct_get[Int]($struct_loc[Int](self@1147@01, 6))]
(assert (=
  ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
  ($struct_get<Int> ($struct_loc<Int> self@1147@01 6))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or
  (=
    ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
    ($struct_get<Int> ($struct_loc<Int> self@1147@01 6)))
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@1147@01 6))))))
(push) ; 12
(assert (not (=>
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@1147@01 6))))
  (>=
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 5))
    ($struct_get<Int> ($struct_loc<Int> self@1147@01 5))))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (=>
  (not
    (=
      ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0))
      ($struct_get<Int> ($struct_loc<Int> self@1147@01 6))))
  (>=
    ($struct_get<Int> ($struct_loc<Int> self@1052@01 5))
    ($struct_get<Int> ($struct_loc<Int> self@1147@01 5)))))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) &&
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int), ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1157@01 Int)
(declare-const q$b@1158@01 Int)
(push) ; 12
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 13
; [then-branch: 815 | !(0 <= q$a@1157@01) | live]
; [else-branch: 815 | 0 <= q$a@1157@01 | live]
(push) ; 14
; [then-branch: 815 | !(0 <= q$a@1157@01)]
(assert (not (<= 0 q$a@1157@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 815 | 0 <= q$a@1157@01]
(assert (<= 0 q$a@1157@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 15
; [then-branch: 816 | !(q$a@1157@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 816 | q$a@1157@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 16
; [then-branch: 816 | !(q$a@1157@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 16
(push) ; 16
; [else-branch: 816 | q$a@1157@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1157@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 17
; [then-branch: 817 | !(0 <= q$b@1158@01) | live]
; [else-branch: 817 | 0 <= q$b@1158@01 | live]
(push) ; 18
; [then-branch: 817 | !(0 <= q$b@1158@01)]
(assert (not (<= 0 q$b@1158@01)))
(pop) ; 18
(push) ; 18
; [else-branch: 817 | 0 <= q$b@1158@01]
(assert (<= 0 q$b@1158@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 18
(pop) ; 17
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1158@01) (not (<= 0 q$b@1158@01))))
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1158@01) (not (<= 0 q$b@1158@01))))))
(assert (or
  (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1157@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1157@01)
  (and
    (<= 0 q$a@1157@01)
    (=>
      (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1158@01) (not (<= 0 q$b@1158@01)))))
    (or
      (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1157@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1157@01) (not (<= 0 q$a@1157@01))))
(push) ; 13
; [then-branch: 818 | 0 <= q$a@1157@01 && q$a@1157@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1158@01 && q$b@1158@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 818 | !(0 <= q$a@1157@01 && q$a@1157@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1158@01 && q$b@1158@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 14
; [then-branch: 818 | 0 <= q$a@1157@01 && q$a@1157@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1158@01 && q$b@1158@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1157@01)
  (and
    (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1158@01)
      (<= q$b@1158@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(push) ; 15
; [then-branch: 819 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1157@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1157@01)) | live]
; [else-branch: 819 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1157@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1157@01) | live]
(push) ; 16
; [then-branch: 819 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1157@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1157@01))]
(assert (not
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))))
(pop) ; 16
(push) ; 16
; [else-branch: 819 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1157@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1157@01)]
(assert (>
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))
  (not
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01)))))
(push) ; 15
; [then-branch: 820 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1157@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1157@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$b@1158@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$b@1158@01) | live]
; [else-branch: 820 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1157@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1157@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$b@1158@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$b@1158@01)) | live]
(push) ; 16
; [then-branch: 820 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1157@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1157@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$b@1158@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$b@1158@01)]
(assert (and
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1158@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1158@01))))
; [eval] perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] 1 * write
(pop) ; 16
(push) ; 16
; [else-branch: 820 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1157@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1157@01) && $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$b@1158@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$b@1158@01))]
(assert (not
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1158@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1158@01)))))
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1158@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1158@01))))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1158@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1158@01)))))
(pop) ; 14
(push) ; 14
; [else-branch: 818 | !(0 <= q$a@1157@01 && q$a@1157@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1158@01 && q$b@1158@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1157@01)
    (and
      (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1158@01)
        (<= q$b@1158@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1157@01)
    (and
      (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1158@01)
        (<= q$b@1158@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1157@01)
    (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1158@01)
    (<= q$b@1158@01 1461501637330902918203684832716283019655932542975)
    (or
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))
      (not
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))))
    (or
      (not
        (and
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1158@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1158@01))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1158@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1158@01)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1157@01)
      (and
        (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1158@01)
          (<= q$b@1158@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1157@01)
    (and
      (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1158@01)
        (<= q$b@1158@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 12
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1157@01 Int) (q$b@1158@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1157@01)
      (and
        (<= 0 q$a@1157@01)
        (=>
          (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1158@01) (not (<= 0 q$b@1158@01)))))
        (or
          (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1157@01) (not (<= 0 q$a@1157@01)))
    (=>
      (and
        (<= 0 q$a@1157@01)
        (and
          (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1158@01)
            (<= q$b@1158@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1157@01)
        (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1158@01)
        (<= q$b@1158@01 1461501637330902918203684832716283019655932542975)
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1158@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1158@01))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1158@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1158@01))))))
    (or
      (not
        (and
          (<= 0 q$a@1157@01)
          (and
            (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1158@01)
              (<= q$b@1158@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1157@01)
        (and
          (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1158@01)
            (<= q$b@1158@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1158@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1944@13@1944@853-aux|)))
(push) ; 12
(assert (not (forall ((q$a@1157@01 Int) (q$b@1158@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1157@01)
        (and
          (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1158@01)
            (<= q$b@1158@01 1461501637330902918203684832716283019655932542975))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1158@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1158@01))))
    (=
      (ite
        (and
          (= q$b@1158@01 l$_to@1045@01)
          (= q$a@1157@01 0)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))
            ($unwrap<Int> l$_value@1046@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1158@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1944@13@1944@853|))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@1157@01 Int) (q$b@1158@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1157@01)
        (and
          (<= q$a@1157@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1158@01)
            (<= q$b@1158@01 1461501637330902918203684832716283019655932542975))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1158@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1158@01))))
    (=
      (ite
        (and
          (= q$b@1158@01 l$_to@1045@01)
          (= q$a@1157@01 0)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1157@01))
            ($unwrap<Int> l$_value@1046@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1157@01) ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1158@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1944@13@1944@853|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) >
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1159@01 Int)
(push) ; 12
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 13
; [then-branch: 821 | !(0 <= q$a@1159@01) | live]
; [else-branch: 821 | 0 <= q$a@1159@01 | live]
(push) ; 14
; [then-branch: 821 | !(0 <= q$a@1159@01)]
(assert (not (<= 0 q$a@1159@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 821 | 0 <= q$a@1159@01]
(assert (<= 0 q$a@1159@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1159@01) (not (<= 0 q$a@1159@01))))
(push) ; 13
; [then-branch: 822 | 0 <= q$a@1159@01 && q$a@1159@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 822 | !(0 <= q$a@1159@01 && q$a@1159@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 14
; [then-branch: 822 | 0 <= q$a@1159@01 && q$a@1159@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1159@01)
  (<= q$a@1159@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 15
; [then-branch: 823 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1159@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1159@01)) | live]
; [else-branch: 823 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1159@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1159@01) | live]
(push) ; 16
; [then-branch: 823 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1159@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1159@01))]
(assert (not
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))))
(pop) ; 16
(push) ; 16
; [else-branch: 823 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1159@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1159@01)]
(assert (>
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01)))
; [eval] (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
(declare-const q$b@1160@01 Int)
(push) ; 17
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$b
(push) ; 18
; [then-branch: 824 | !(0 <= q$b@1160@01) | live]
; [else-branch: 824 | 0 <= q$b@1160@01 | live]
(push) ; 19
; [then-branch: 824 | !(0 <= q$b@1160@01)]
(assert (not (<= 0 q$b@1160@01)))
(pop) ; 19
(push) ; 19
; [else-branch: 824 | 0 <= q$b@1160@01]
(assert (<= 0 q$b@1160@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 19
(pop) ; 18
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1160@01) (not (<= 0 q$b@1160@01))))
(push) ; 18
; [then-branch: 825 | 0 <= q$b@1160@01 && q$b@1160@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 825 | !(0 <= q$b@1160@01 && q$b@1160@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 19
; [then-branch: 825 | 0 <= q$b@1160@01 && q$b@1160@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$b@1160@01)
  (<= q$b@1160@01 1461501637330902918203684832716283019655932542975)))
; [eval] q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] q$b != q$a
(push) ; 20
; [then-branch: 826 | q$b@1160@01 != q$a@1159@01 | live]
; [else-branch: 826 | q$b@1160@01 == q$a@1159@01 | live]
(push) ; 21
; [then-branch: 826 | q$b@1160@01 != q$a@1159@01]
(assert (not (= q$b@1160@01 q$a@1159@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 21
(push) ; 21
; [else-branch: 826 | q$b@1160@01 == q$a@1159@01]
(assert (= q$b@1160@01 q$a@1159@01))
(pop) ; 21
(pop) ; 20
; Joined path conditions
; Joined path conditions
(assert (or (= q$b@1160@01 q$a@1159@01) (not (= q$b@1160@01 q$a@1159@01))))
(pop) ; 19
(push) ; 19
; [else-branch: 825 | !(0 <= q$b@1160@01 && q$b@1160@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$b@1160@01)
    (<= q$b@1160@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 19
(pop) ; 18
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$b@1160@01)
    (<= q$b@1160@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$b@1160@01)
    (<= q$b@1160@01 1461501637330902918203684832716283019655932542975)
    (or (= q$b@1160@01 q$a@1159@01) (not (= q$b@1160@01 q$a@1159@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$b@1160@01)
      (<= q$b@1160@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$b@1160@01)
    (<= q$b@1160@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 17
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$b@1160@01 Int)) (!
  (and
    (or (<= 0 q$b@1160@01) (not (<= 0 q$b@1160@01)))
    (=>
      (and
        (<= 0 q$b@1160@01)
        (<= q$b@1160@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@1160@01)
        (<= q$b@1160@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@1160@01 q$a@1159@01) (not (= q$b@1160@01 q$a@1159@01)))))
    (or
      (not
        (and
          (<= 0 q$b@1160@01)
          (<= q$b@1160@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@1160@01)
        (<= q$b@1160@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848-aux|)))
(assert (forall ((q$b@1160@01 Int)) (!
  (and
    (or (<= 0 q$b@1160@01) (not (<= 0 q$b@1160@01)))
    (=>
      (and
        (<= 0 q$b@1160@01)
        (<= q$b@1160@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@1160@01)
        (<= q$b@1160@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@1160@01 q$a@1159@01) (not (= q$b@1160@01 q$a@1159@01)))))
    (or
      (not
        (and
          (<= 0 q$b@1160@01)
          (<= q$b@1160@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@1160@01)
        (<= q$b@1160@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848-aux|)))
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (=>
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
    (forall ((q$b@1160@01 Int)) (!
      (and
        (or (<= 0 q$b@1160@01) (not (<= 0 q$b@1160@01)))
        (=>
          (and
            (<= 0 q$b@1160@01)
            (<= q$b@1160@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@1160@01)
            (<= q$b@1160@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@1160@01 q$a@1159@01) (not (= q$b@1160@01 q$a@1159@01)))))
        (or
          (not
            (and
              (<= 0 q$b@1160@01)
              (<= q$b@1160@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@1160@01)
            (<= q$b@1160@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848-aux|))
    (forall ((q$b@1160@01 Int)) (!
      (and
        (or (<= 0 q$b@1160@01) (not (<= 0 q$b@1160@01)))
        (=>
          (and
            (<= 0 q$b@1160@01)
            (<= q$b@1160@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@1160@01)
            (<= q$b@1160@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@1160@01 q$a@1159@01) (not (= q$b@1160@01 q$a@1159@01)))))
        (or
          (not
            (and
              (<= 0 q$b@1160@01)
              (<= q$b@1160@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@1160@01)
            (<= q$b@1160@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848-aux|)))))
(assert (or
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
  (not
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01)))))
(push) ; 15
; [then-branch: 827 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1159@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1159@01) && QA q$b@1160@01 :: 0 <= q$b@1160@01 && q$b@1160@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1160@01 != q$a@1159@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$b@1160@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$b@1160@01) | live]
; [else-branch: 827 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1159@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1159@01) && QA q$b@1160@01 :: 0 <= q$b@1160@01 && q$b@1160@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1160@01 != q$a@1159@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$b@1160@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$b@1160@01)) | live]
(push) ; 16
; [then-branch: 827 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1159@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1159@01) && QA q$b@1160@01 :: 0 <= q$b@1160@01 && q$b@1160@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1160@01 != q$a@1159@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$b@1160@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$b@1160@01)]
(assert (and
  (>
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
  (forall ((q$b@1160@01 Int)) (!
    (=>
      (and
        (and
          (<= 0 q$b@1160@01)
          (<= q$b@1160@01 1461501637330902918203684832716283019655932542975))
        (not (= q$b@1160@01 q$a@1159@01)))
      (=
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01)))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848|))))
; [eval] perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] 1 * write
(pop) ; 16
(push) ; 16
; [else-branch: 827 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1159@01) > $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1159@01) && QA q$b@1160@01 :: 0 <= q$b@1160@01 && q$b@1160@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1160@01 != q$a@1159@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$b@1160@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$b@1160@01))]
(assert (not
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
    (forall ((q$b@1160@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@1160@01)
            (<= q$b@1160@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@1160@01 q$a@1159@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848|)))))
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
      (forall ((q$b@1160@01 Int)) (!
        (=>
          (and
            (and
              (<= 0 q$b@1160@01)
              (<= q$b@1160@01 1461501637330902918203684832716283019655932542975))
            (not (= q$b@1160@01 q$a@1159@01)))
          (=
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01)))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848|))))
  (and
    (>
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
    (forall ((q$b@1160@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@1160@01)
            (<= q$b@1160@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@1160@01 q$a@1159@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848|)))))
(pop) ; 14
(push) ; 14
; [else-branch: 822 | !(0 <= q$a@1159@01 && q$a@1159@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1159@01)
    (<= q$a@1159@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1159@01)
    (<= q$a@1159@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$a@1159@01)
    (<= q$a@1159@01 1461501637330902918203684832716283019655932542975)
    (=>
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
        (forall ((q$b@1160@01 Int)) (!
          (and
            (or (<= 0 q$b@1160@01) (not (<= 0 q$b@1160@01)))
            (=>
              (and
                (<= 0 q$b@1160@01)
                (<=
                  q$b@1160@01
                  1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@1160@01)
                (<=
                  q$b@1160@01
                  1461501637330902918203684832716283019655932542975)
                (or
                  (= q$b@1160@01 q$a@1159@01)
                  (not (= q$b@1160@01 q$a@1159@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@1160@01)
                  (<=
                    q$b@1160@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@1160@01)
                (<=
                  q$b@1160@01
                  1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848-aux|))
        (forall ((q$b@1160@01 Int)) (!
          (and
            (or (<= 0 q$b@1160@01) (not (<= 0 q$b@1160@01)))
            (=>
              (and
                (<= 0 q$b@1160@01)
                (<=
                  q$b@1160@01
                  1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@1160@01)
                (<=
                  q$b@1160@01
                  1461501637330902918203684832716283019655932542975)
                (or
                  (= q$b@1160@01 q$a@1159@01)
                  (not (= q$b@1160@01 q$a@1159@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@1160@01)
                  (<=
                    q$b@1160@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@1160@01)
                (<=
                  q$b@1160@01
                  1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848-aux|))))
    (or
      (>
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
      (not
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))))
    (or
      (not
        (and
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
          (forall ((q$b@1160@01 Int)) (!
            (=>
              (and
                (and
                  (<= 0 q$b@1160@01)
                  (<=
                    q$b@1160@01
                    1461501637330902918203684832716283019655932542975))
                (not (= q$b@1160@01 q$a@1159@01)))
              (=
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01)))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848|))))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
        (forall ((q$b@1160@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@1160@01)
                (<=
                  q$b@1160@01
                  1461501637330902918203684832716283019655932542975))
              (not (= q$b@1160@01 q$a@1159@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848|)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1159@01)
      (<= q$a@1159@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1159@01)
    (<= q$a@1159@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1159@01 Int)) (!
  (and
    (or (<= 0 q$a@1159@01) (not (<= 0 q$a@1159@01)))
    (=>
      (and
        (<= 0 q$a@1159@01)
        (<= q$a@1159@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@1159@01)
        (<= q$a@1159@01 1461501637330902918203684832716283019655932542975)
        (=>
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
            (forall ((q$b@1160@01 Int)) (!
              (and
                (or (<= 0 q$b@1160@01) (not (<= 0 q$b@1160@01)))
                (=>
                  (and
                    (<= 0 q$b@1160@01)
                    (<=
                      q$b@1160@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1160@01)
                    (<=
                      q$b@1160@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1160@01 q$a@1159@01)
                      (not (= q$b@1160@01 q$a@1159@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1160@01)
                      (<=
                        q$b@1160@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1160@01)
                    (<=
                      q$b@1160@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848-aux|))
            (forall ((q$b@1160@01 Int)) (!
              (and
                (or (<= 0 q$b@1160@01) (not (<= 0 q$b@1160@01)))
                (=>
                  (and
                    (<= 0 q$b@1160@01)
                    (<=
                      q$b@1160@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1160@01)
                    (<=
                      q$b@1160@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1160@01 q$a@1159@01)
                      (not (= q$b@1160@01 q$a@1159@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1160@01)
                      (<=
                        q$b@1160@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1160@01)
                    (<=
                      q$b@1160@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848-aux|))))
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
              (forall ((q$b@1160@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@1160@01)
                      (<=
                        q$b@1160@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@1160@01 q$a@1159@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848|))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
            (forall ((q$b@1160@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@1160@01)
                    (<=
                      q$b@1160@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@1160@01 q$a@1159@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@1159@01)
          (<= q$a@1159@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1159@01)
        (<= q$a@1159@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@13@1945@1047-aux|)))
(assert (forall ((q$a@1159@01 Int)) (!
  (and
    (or (<= 0 q$a@1159@01) (not (<= 0 q$a@1159@01)))
    (=>
      (and
        (<= 0 q$a@1159@01)
        (<= q$a@1159@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@1159@01)
        (<= q$a@1159@01 1461501637330902918203684832716283019655932542975)
        (=>
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
            (forall ((q$b@1160@01 Int)) (!
              (and
                (or (<= 0 q$b@1160@01) (not (<= 0 q$b@1160@01)))
                (=>
                  (and
                    (<= 0 q$b@1160@01)
                    (<=
                      q$b@1160@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1160@01)
                    (<=
                      q$b@1160@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1160@01 q$a@1159@01)
                      (not (= q$b@1160@01 q$a@1159@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1160@01)
                      (<=
                        q$b@1160@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1160@01)
                    (<=
                      q$b@1160@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848-aux|))
            (forall ((q$b@1160@01 Int)) (!
              (and
                (or (<= 0 q$b@1160@01) (not (<= 0 q$b@1160@01)))
                (=>
                  (and
                    (<= 0 q$b@1160@01)
                    (<=
                      q$b@1160@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1160@01)
                    (<=
                      q$b@1160@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1160@01 q$a@1159@01)
                      (not (= q$b@1160@01 q$a@1159@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1160@01)
                      (<=
                        q$b@1160@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1160@01)
                    (<=
                      q$b@1160@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848-aux|))))
        (or
          (>
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
          (not
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))))
        (or
          (not
            (and
              (>
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
              (forall ((q$b@1160@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@1160@01)
                      (<=
                        q$b@1160@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@1160@01 q$a@1159@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848|))))
          (and
            (>
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
            (forall ((q$b@1160@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@1160@01)
                    (<=
                      q$b@1160@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@1160@01 q$a@1159@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@1159@01)
          (<= q$a@1159@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1159@01)
        (<= q$a@1159@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@13@1945@1047-aux|)))
(push) ; 12
(assert (not (forall ((q$a@1159@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1159@01)
        (<= q$a@1159@01 1461501637330902918203684832716283019655932542975))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
        (forall ((q$b@1160@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@1160@01)
                (<=
                  q$b@1160@01
                  1461501637330902918203684832716283019655932542975))
              (not (= q$b@1160@01 q$a@1159@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848|))))
    (=
      (ite
        (and
          (= q$a@1159@01 l$_to@1045@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
            ($unwrap<Int> l$_value@1046@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@13@1945@1047|))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@1159@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1159@01)
        (<= q$a@1159@01 1461501637330902918203684832716283019655932542975))
      (and
        (>
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
        (forall ((q$b@1160@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@1160@01)
                (<=
                  q$b@1160@01
                  1461501637330902918203684832716283019655932542975))
              (not (= q$b@1160@01 q$a@1159@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1160@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1160@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@425@1945@848|))))
    (=
      (ite
        (and
          (= q$a@1159@01 l$_to@1045@01)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
            ($unwrap<Int> l$_value@1046@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1159@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1159@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1945@13@1945@1047|)))
; [exec]
; assert (forall q$a: Int ::
;     { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) }
;     { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) }
;     0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==>
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) <
;     ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) &&
;     (forall q$b: Int ::
;       { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) }
;       { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]),
;       q$b): Int) }
;       0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==>
;       q$b != q$a ==>
;       ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) ==
;       ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==>
;     perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]),
;     q$a): Int) -
;     ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
(declare-const q$a@1161@01 Int)
(push) ; 12
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$a
(push) ; 13
; [then-branch: 828 | !(0 <= q$a@1161@01) | live]
; [else-branch: 828 | 0 <= q$a@1161@01 | live]
(push) ; 14
; [then-branch: 828 | !(0 <= q$a@1161@01)]
(assert (not (<= 0 q$a@1161@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 828 | 0 <= q$a@1161@01]
(assert (<= 0 q$a@1161@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$a@1161@01) (not (<= 0 q$a@1161@01))))
(push) ; 13
; [then-branch: 829 | 0 <= q$a@1161@01 && q$a@1161@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 829 | !(0 <= q$a@1161@01 && q$a@1161@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 14
; [then-branch: 829 | 0 <= q$a@1161@01 && q$a@1161@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1161@01)
  (<= q$a@1161@01 1461501637330902918203684832716283019655932542975)))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 15
; [then-branch: 830 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1161@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1161@01)) | live]
; [else-branch: 830 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1161@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1161@01) | live]
(push) ; 16
; [then-branch: 830 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1161@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1161@01))]
(assert (not
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))))
(pop) ; 16
(push) ; 16
; [else-branch: 830 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1161@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1161@01)]
(assert (<
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01)))
; [eval] (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int))
(declare-const q$b@1162@01 Int)
(push) ; 17
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975
; [eval] 0 <= q$b
(push) ; 18
; [then-branch: 831 | !(0 <= q$b@1162@01) | live]
; [else-branch: 831 | 0 <= q$b@1162@01 | live]
(push) ; 19
; [then-branch: 831 | !(0 <= q$b@1162@01)]
(assert (not (<= 0 q$b@1162@01)))
(pop) ; 19
(push) ; 19
; [else-branch: 831 | 0 <= q$b@1162@01]
(assert (<= 0 q$b@1162@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 19
(pop) ; 18
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1162@01) (not (<= 0 q$b@1162@01))))
(push) ; 18
; [then-branch: 832 | 0 <= q$b@1162@01 && q$b@1162@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 832 | !(0 <= q$b@1162@01 && q$b@1162@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 19
; [then-branch: 832 | 0 <= q$b@1162@01 && q$b@1162@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$b@1162@01)
  (<= q$b@1162@01 1461501637330902918203684832716283019655932542975)))
; [eval] q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] q$b != q$a
(push) ; 20
; [then-branch: 833 | q$b@1162@01 != q$a@1161@01 | live]
; [else-branch: 833 | q$b@1162@01 == q$a@1161@01 | live]
(push) ; 21
; [then-branch: 833 | q$b@1162@01 != q$a@1161@01]
(assert (not (= q$b@1162@01 q$a@1161@01)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
(pop) ; 21
(push) ; 21
; [else-branch: 833 | q$b@1162@01 == q$a@1161@01]
(assert (= q$b@1162@01 q$a@1161@01))
(pop) ; 21
(pop) ; 20
; Joined path conditions
; Joined path conditions
(assert (or (= q$b@1162@01 q$a@1161@01) (not (= q$b@1162@01 q$a@1161@01))))
(pop) ; 19
(push) ; 19
; [else-branch: 832 | !(0 <= q$b@1162@01 && q$b@1162@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$b@1162@01)
    (<= q$b@1162@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 19
(pop) ; 18
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$b@1162@01)
    (<= q$b@1162@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$b@1162@01)
    (<= q$b@1162@01 1461501637330902918203684832716283019655932542975)
    (or (= q$b@1162@01 q$a@1161@01) (not (= q$b@1162@01 q$a@1161@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$b@1162@01)
      (<= q$b@1162@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$b@1162@01)
    (<= q$b@1162@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 17
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$b@1162@01 Int)) (!
  (and
    (or (<= 0 q$b@1162@01) (not (<= 0 q$b@1162@01)))
    (=>
      (and
        (<= 0 q$b@1162@01)
        (<= q$b@1162@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@1162@01)
        (<= q$b@1162@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@1162@01 q$a@1161@01) (not (= q$b@1162@01 q$a@1161@01)))))
    (or
      (not
        (and
          (<= 0 q$b@1162@01)
          (<= q$b@1162@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@1162@01)
        (<= q$b@1162@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848-aux|)))
(assert (forall ((q$b@1162@01 Int)) (!
  (and
    (or (<= 0 q$b@1162@01) (not (<= 0 q$b@1162@01)))
    (=>
      (and
        (<= 0 q$b@1162@01)
        (<= q$b@1162@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$b@1162@01)
        (<= q$b@1162@01 1461501637330902918203684832716283019655932542975)
        (or (= q$b@1162@01 q$a@1161@01) (not (= q$b@1162@01 q$a@1161@01)))))
    (or
      (not
        (and
          (<= 0 q$b@1162@01)
          (<= q$b@1162@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$b@1162@01)
        (<= q$b@1162@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848-aux|)))
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
    (forall ((q$b@1162@01 Int)) (!
      (and
        (or (<= 0 q$b@1162@01) (not (<= 0 q$b@1162@01)))
        (=>
          (and
            (<= 0 q$b@1162@01)
            (<= q$b@1162@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@1162@01)
            (<= q$b@1162@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@1162@01 q$a@1161@01) (not (= q$b@1162@01 q$a@1161@01)))))
        (or
          (not
            (and
              (<= 0 q$b@1162@01)
              (<= q$b@1162@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@1162@01)
            (<= q$b@1162@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848-aux|))
    (forall ((q$b@1162@01 Int)) (!
      (and
        (or (<= 0 q$b@1162@01) (not (<= 0 q$b@1162@01)))
        (=>
          (and
            (<= 0 q$b@1162@01)
            (<= q$b@1162@01 1461501637330902918203684832716283019655932542975))
          (and
            (<= 0 q$b@1162@01)
            (<= q$b@1162@01 1461501637330902918203684832716283019655932542975)
            (or (= q$b@1162@01 q$a@1161@01) (not (= q$b@1162@01 q$a@1161@01)))))
        (or
          (not
            (and
              (<= 0 q$b@1162@01)
              (<= q$b@1162@01 1461501637330902918203684832716283019655932542975)))
          (and
            (<= 0 q$b@1162@01)
            (<= q$b@1162@01 1461501637330902918203684832716283019655932542975))))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848-aux|)))))
(assert (or
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
  (not
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01)))))
(push) ; 15
; [then-branch: 834 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1161@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1161@01) && QA q$b@1162@01 :: 0 <= q$b@1162@01 && q$b@1162@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1162@01 != q$a@1161@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$b@1162@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$b@1162@01) | live]
; [else-branch: 834 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1161@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1161@01) && QA q$b@1162@01 :: 0 <= q$b@1162@01 && q$b@1162@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1162@01 != q$a@1161@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$b@1162@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$b@1162@01)) | live]
(push) ; 16
; [then-branch: 834 | $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1161@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1161@01) && QA q$b@1162@01 :: 0 <= q$b@1162@01 && q$b@1162@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1162@01 != q$a@1161@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$b@1162@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$b@1162@01)]
(assert (and
  (<
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
  (forall ((q$b@1162@01 Int)) (!
    (=>
      (and
        (and
          (<= 0 q$b@1162@01)
          (<= q$b@1162@01 1461501637330902918203684832716283019655932542975))
        (not (= q$b@1162@01 q$a@1161@01)))
      (=
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01)))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
    :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848|))))
; [eval] perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write
; [eval] perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)))
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int)
; [eval] ($struct_get($struct_loc($old_self, 3)): $Map[Int, Int])
; [eval] $struct_loc($old_self, 3)
; [eval] 1 * write
(pop) ; 16
(push) ; 16
; [else-branch: 834 | !($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$a@1161@01) < $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$a@1161@01) && QA q$b@1162@01 :: 0 <= q$b@1162@01 && q$b@1162@01 <= 1461501637330902918203684832716283019655932542975 && q$b@1162@01 != q$a@1161@01 ==> $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1147@01, 3)), q$b@1162@01) == $map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1052@01, 3)), q$b@1162@01))]
(assert (not
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
    (forall ((q$b@1162@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@1162@01)
            (<= q$b@1162@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@1162@01 q$a@1161@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848|)))))
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (and
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
      (forall ((q$b@1162@01 Int)) (!
        (=>
          (and
            (and
              (<= 0 q$b@1162@01)
              (<= q$b@1162@01 1461501637330902918203684832716283019655932542975))
            (not (= q$b@1162@01 q$a@1161@01)))
          (=
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01)))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
        :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848|))))
  (and
    (<
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
      ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
    (forall ((q$b@1162@01 Int)) (!
      (=>
        (and
          (and
            (<= 0 q$b@1162@01)
            (<= q$b@1162@01 1461501637330902918203684832716283019655932542975))
          (not (= q$b@1162@01 q$a@1161@01)))
        (=
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01)))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
      :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848|)))))
(pop) ; 14
(push) ; 14
; [else-branch: 829 | !(0 <= q$a@1161@01 && q$a@1161@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1161@01)
    (<= q$a@1161@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1161@01)
    (<= q$a@1161@01 1461501637330902918203684832716283019655932542975))
  (and
    (<= 0 q$a@1161@01)
    (<= q$a@1161@01 1461501637330902918203684832716283019655932542975)
    (=>
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
        (forall ((q$b@1162@01 Int)) (!
          (and
            (or (<= 0 q$b@1162@01) (not (<= 0 q$b@1162@01)))
            (=>
              (and
                (<= 0 q$b@1162@01)
                (<=
                  q$b@1162@01
                  1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@1162@01)
                (<=
                  q$b@1162@01
                  1461501637330902918203684832716283019655932542975)
                (or
                  (= q$b@1162@01 q$a@1161@01)
                  (not (= q$b@1162@01 q$a@1161@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@1162@01)
                  (<=
                    q$b@1162@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@1162@01)
                (<=
                  q$b@1162@01
                  1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848-aux|))
        (forall ((q$b@1162@01 Int)) (!
          (and
            (or (<= 0 q$b@1162@01) (not (<= 0 q$b@1162@01)))
            (=>
              (and
                (<= 0 q$b@1162@01)
                (<=
                  q$b@1162@01
                  1461501637330902918203684832716283019655932542975))
              (and
                (<= 0 q$b@1162@01)
                (<=
                  q$b@1162@01
                  1461501637330902918203684832716283019655932542975)
                (or
                  (= q$b@1162@01 q$a@1161@01)
                  (not (= q$b@1162@01 q$a@1161@01)))))
            (or
              (not
                (and
                  (<= 0 q$b@1162@01)
                  (<=
                    q$b@1162@01
                    1461501637330902918203684832716283019655932542975)))
              (and
                (<= 0 q$b@1162@01)
                (<=
                  q$b@1162@01
                  1461501637330902918203684832716283019655932542975))))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848-aux|))))
    (or
      (<
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
        ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
      (not
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))))
    (or
      (not
        (and
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
          (forall ((q$b@1162@01 Int)) (!
            (=>
              (and
                (and
                  (<= 0 q$b@1162@01)
                  (<=
                    q$b@1162@01
                    1461501637330902918203684832716283019655932542975))
                (not (= q$b@1162@01 q$a@1161@01)))
              (=
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01)))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
            :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848|))))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
        (forall ((q$b@1162@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@1162@01)
                (<=
                  q$b@1162@01
                  1461501637330902918203684832716283019655932542975))
              (not (= q$b@1162@01 q$a@1161@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848|)))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1161@01)
      (<= q$a@1161@01 1461501637330902918203684832716283019655932542975)))
  (and
    (<= 0 q$a@1161@01)
    (<= q$a@1161@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 12
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1161@01 Int)) (!
  (and
    (or (<= 0 q$a@1161@01) (not (<= 0 q$a@1161@01)))
    (=>
      (and
        (<= 0 q$a@1161@01)
        (<= q$a@1161@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@1161@01)
        (<= q$a@1161@01 1461501637330902918203684832716283019655932542975)
        (=>
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
            (forall ((q$b@1162@01 Int)) (!
              (and
                (or (<= 0 q$b@1162@01) (not (<= 0 q$b@1162@01)))
                (=>
                  (and
                    (<= 0 q$b@1162@01)
                    (<=
                      q$b@1162@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1162@01)
                    (<=
                      q$b@1162@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1162@01 q$a@1161@01)
                      (not (= q$b@1162@01 q$a@1161@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1162@01)
                      (<=
                        q$b@1162@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1162@01)
                    (<=
                      q$b@1162@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848-aux|))
            (forall ((q$b@1162@01 Int)) (!
              (and
                (or (<= 0 q$b@1162@01) (not (<= 0 q$b@1162@01)))
                (=>
                  (and
                    (<= 0 q$b@1162@01)
                    (<=
                      q$b@1162@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1162@01)
                    (<=
                      q$b@1162@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1162@01 q$a@1161@01)
                      (not (= q$b@1162@01 q$a@1161@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1162@01)
                      (<=
                        q$b@1162@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1162@01)
                    (<=
                      q$b@1162@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848-aux|))))
        (or
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
          (not
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))))
        (or
          (not
            (and
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
              (forall ((q$b@1162@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@1162@01)
                      (<=
                        q$b@1162@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@1162@01 q$a@1161@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848|))))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
            (forall ((q$b@1162@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@1162@01)
                    (<=
                      q$b@1162@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@1162@01 q$a@1161@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@1161@01)
          (<= q$a@1161@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1161@01)
        (<= q$a@1161@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@13@1946@1047-aux|)))
(assert (forall ((q$a@1161@01 Int)) (!
  (and
    (or (<= 0 q$a@1161@01) (not (<= 0 q$a@1161@01)))
    (=>
      (and
        (<= 0 q$a@1161@01)
        (<= q$a@1161@01 1461501637330902918203684832716283019655932542975))
      (and
        (<= 0 q$a@1161@01)
        (<= q$a@1161@01 1461501637330902918203684832716283019655932542975)
        (=>
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
            (forall ((q$b@1162@01 Int)) (!
              (and
                (or (<= 0 q$b@1162@01) (not (<= 0 q$b@1162@01)))
                (=>
                  (and
                    (<= 0 q$b@1162@01)
                    (<=
                      q$b@1162@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1162@01)
                    (<=
                      q$b@1162@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1162@01 q$a@1161@01)
                      (not (= q$b@1162@01 q$a@1161@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1162@01)
                      (<=
                        q$b@1162@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1162@01)
                    (<=
                      q$b@1162@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848-aux|))
            (forall ((q$b@1162@01 Int)) (!
              (and
                (or (<= 0 q$b@1162@01) (not (<= 0 q$b@1162@01)))
                (=>
                  (and
                    (<= 0 q$b@1162@01)
                    (<=
                      q$b@1162@01
                      1461501637330902918203684832716283019655932542975))
                  (and
                    (<= 0 q$b@1162@01)
                    (<=
                      q$b@1162@01
                      1461501637330902918203684832716283019655932542975)
                    (or
                      (= q$b@1162@01 q$a@1161@01)
                      (not (= q$b@1162@01 q$a@1161@01)))))
                (or
                  (not
                    (and
                      (<= 0 q$b@1162@01)
                      (<=
                        q$b@1162@01
                        1461501637330902918203684832716283019655932542975)))
                  (and
                    (<= 0 q$b@1162@01)
                    (<=
                      q$b@1162@01
                      1461501637330902918203684832716283019655932542975))))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848-aux|))))
        (or
          (<
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
            ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
          (not
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))))
        (or
          (not
            (and
              (<
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
                ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
              (forall ((q$b@1162@01 Int)) (!
                (=>
                  (and
                    (and
                      (<= 0 q$b@1162@01)
                      (<=
                        q$b@1162@01
                        1461501637330902918203684832716283019655932542975))
                    (not (= q$b@1162@01 q$a@1161@01)))
                  (=
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01)
                    ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01)))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
                :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848|))))
          (and
            (<
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
            (forall ((q$b@1162@01 Int)) (!
              (=>
                (and
                  (and
                    (<= 0 q$b@1162@01)
                    (<=
                      q$b@1162@01
                      1461501637330902918203684832716283019655932542975))
                  (not (= q$b@1162@01 q$a@1161@01)))
                (=
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01)
                  ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01)))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
              :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848|))))))
    (or
      (not
        (and
          (<= 0 q$a@1161@01)
          (<= q$a@1161@01 1461501637330902918203684832716283019655932542975)))
      (and
        (<= 0 q$a@1161@01)
        (<= q$a@1161@01 1461501637330902918203684832716283019655932542975))))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@13@1946@1047-aux|)))
(push) ; 12
(assert (not (forall ((q$a@1161@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1161@01)
        (<= q$a@1161@01 1461501637330902918203684832716283019655932542975))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
        (forall ((q$b@1162@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@1162@01)
                (<=
                  q$b@1162@01
                  1461501637330902918203684832716283019655932542975))
              (not (= q$b@1162@01 q$a@1161@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848|))))
    (=
      (ite
        (and
          (= 0 l$_to@1045@01)
          (= q$a@1161@01 0)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01))
            ($unwrap<Int> l$_value@1046@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@13@1946@1047|))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@1161@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1161@01)
        (<= q$a@1161@01 1461501637330902918203684832716283019655932542975))
      (and
        (<
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01)
          ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
        (forall ((q$b@1162@01 Int)) (!
          (=>
            (and
              (and
                (<= 0 q$b@1162@01)
                (<=
                  q$b@1162@01
                  1461501637330902918203684832716283019655932542975))
              (not (= q$b@1162@01 q$a@1161@01)))
            (=
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01)))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$b@1162@01))
          :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$b@1162@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@425@1946@848|))))
    (=
      (ite
        (and
          (= 0 l$_to@1045@01)
          (= q$a@1161@01 0)
          (=
            (-
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01)
              ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01))
            ($unwrap<Int> l$_value@1046@01)))
        $Perm.Write
        $Perm.No)
      $Perm.Write))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1147@01 3)) q$a@1161@01))
  :pattern (($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1052@01 3)) q$a@1161@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1946@13@1946@1047|)))
; [exec]
; assert (forall q$a: Int, q$b: Int ::
;     { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) }
;     0 <= q$a &&
;     (q$a <= 1461501637330902918203684832716283019655932542975 &&
;     (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==>
;     ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) <
;     ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]),
;     q$a): $Map[Int, Int]), q$b): Int) ==>
;     perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self,
;     4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) ==
;     1 * write)
; [eval] (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
(declare-const q$a@1163@01 Int)
(declare-const q$b@1164@01 Int)
(push) ; 12
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975)) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] 0 <= q$a && (q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$a
(push) ; 13
; [then-branch: 835 | !(0 <= q$a@1163@01) | live]
; [else-branch: 835 | 0 <= q$a@1163@01 | live]
(push) ; 14
; [then-branch: 835 | !(0 <= q$a@1163@01)]
(assert (not (<= 0 q$a@1163@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 835 | 0 <= q$a@1163@01]
(assert (<= 0 q$a@1163@01))
; [eval] q$a <= 1461501637330902918203684832716283019655932542975
(push) ; 15
; [then-branch: 836 | !(q$a@1163@01 <= 1461501637330902918203684832716283019655932542975) | live]
; [else-branch: 836 | q$a@1163@01 <= 1461501637330902918203684832716283019655932542975 | live]
(push) ; 16
; [then-branch: 836 | !(q$a@1163@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)))
(pop) ; 16
(push) ; 16
; [else-branch: 836 | q$a@1163@01 <= 1461501637330902918203684832716283019655932542975]
(assert (<= q$a@1163@01 1461501637330902918203684832716283019655932542975))
; [eval] 0 <= q$b
(push) ; 17
; [then-branch: 837 | !(0 <= q$b@1164@01) | live]
; [else-branch: 837 | 0 <= q$b@1164@01 | live]
(push) ; 18
; [then-branch: 837 | !(0 <= q$b@1164@01)]
(assert (not (<= 0 q$b@1164@01)))
(pop) ; 18
(push) ; 18
; [else-branch: 837 | 0 <= q$b@1164@01]
(assert (<= 0 q$b@1164@01))
; [eval] q$b <= 1461501637330902918203684832716283019655932542975
(pop) ; 18
(pop) ; 17
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 q$b@1164@01) (not (<= 0 q$b@1164@01))))
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
  (and
    (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
    (or (<= 0 q$b@1164@01) (not (<= 0 q$b@1164@01))))))
(assert (or
  (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
  (not (<= q$a@1163@01 1461501637330902918203684832716283019655932542975))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 q$a@1163@01)
  (and
    (<= 0 q$a@1163@01)
    (=>
      (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
        (or (<= 0 q$b@1164@01) (not (<= 0 q$b@1164@01)))))
    (or
      (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
      (not (<= q$a@1163@01 1461501637330902918203684832716283019655932542975))))))
(assert (or (<= 0 q$a@1163@01) (not (<= 0 q$a@1163@01))))
(push) ; 13
; [then-branch: 838 | 0 <= q$a@1163@01 && q$a@1163@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1164@01 && q$b@1164@01 <= 1461501637330902918203684832716283019655932542975 | live]
; [else-branch: 838 | !(0 <= q$a@1163@01 && q$a@1163@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1164@01 && q$b@1164@01 <= 1461501637330902918203684832716283019655932542975) | live]
(push) ; 14
; [then-branch: 838 | 0 <= q$a@1163@01 && q$a@1163@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1164@01 && q$b@1164@01 <= 1461501637330902918203684832716283019655932542975]
(assert (and
  (<= 0 q$a@1163@01)
  (and
    (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
    (and
      (<= 0 q$b@1164@01)
      (<= q$b@1164@01 1461501637330902918203684832716283019655932542975)))))
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc($old_self, 4)
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
(push) ; 15
; [then-branch: 839 | $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), q$a@1163@01), q$b@1164@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1147@01, 4)), q$a@1163@01), q$b@1164@01) | live]
; [else-branch: 839 | !($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), q$a@1163@01), q$b@1164@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1147@01, 4)), q$a@1163@01), q$b@1164@01)) | live]
(push) ; 16
; [then-branch: 839 | $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), q$a@1163@01), q$b@1164@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1147@01, 4)), q$a@1163@01), q$b@1164@01)]
(assert (<
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1163@01) q$b@1164@01)
  ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1147@01 4)) q$a@1163@01) q$b@1164@01)))
; [eval] perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write
; [eval] perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)))
; [eval] ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int)
; [eval] ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int])
; [eval] ($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]])
; [eval] $struct_loc(self, 4)
; [eval] 1 * write
(pop) ; 16
(push) ; 16
; [else-branch: 839 | !($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), q$a@1163@01), q$b@1164@01) < $map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1147@01, 4)), q$a@1163@01), q$b@1164@01))]
(assert (not
  (<
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1163@01) q$b@1164@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1147@01 4)) q$a@1163@01) q$b@1164@01))))
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (or
  (not
    (<
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1163@01) q$b@1164@01)
      ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1147@01 4)) q$a@1163@01) q$b@1164@01)))
  (<
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1163@01) q$b@1164@01)
    ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1147@01 4)) q$a@1163@01) q$b@1164@01))))
(pop) ; 14
(push) ; 14
; [else-branch: 838 | !(0 <= q$a@1163@01 && q$a@1163@01 <= 1461501637330902918203684832716283019655932542975 && 0 <= q$b@1164@01 && q$b@1164@01 <= 1461501637330902918203684832716283019655932542975)]
(assert (not
  (and
    (<= 0 q$a@1163@01)
    (and
      (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1164@01)
        (<= q$b@1164@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
(assert (=>
  (and
    (<= 0 q$a@1163@01)
    (and
      (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1164@01)
        (<= q$b@1164@01 1461501637330902918203684832716283019655932542975))))
  (and
    (<= 0 q$a@1163@01)
    (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
    (<= 0 q$b@1164@01)
    (<= q$b@1164@01 1461501637330902918203684832716283019655932542975)
    (or
      (not
        (<
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1163@01) q$b@1164@01)
          ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1147@01 4)) q$a@1163@01) q$b@1164@01)))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1163@01) q$b@1164@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1147@01 4)) q$a@1163@01) q$b@1164@01))))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 q$a@1163@01)
      (and
        (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
        (and
          (<= 0 q$b@1164@01)
          (<= q$b@1164@01 1461501637330902918203684832716283019655932542975)))))
  (and
    (<= 0 q$a@1163@01)
    (and
      (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
      (and
        (<= 0 q$b@1164@01)
        (<= q$b@1164@01 1461501637330902918203684832716283019655932542975))))))
(pop) ; 12
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((q$a@1163@01 Int) (q$b@1164@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1163@01)
      (and
        (<= 0 q$a@1163@01)
        (=>
          (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1164@01) (not (<= 0 q$b@1164@01)))))
        (or
          (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1163@01) (not (<= 0 q$a@1163@01)))
    (=>
      (and
        (<= 0 q$a@1163@01)
        (and
          (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1164@01)
            (<= q$b@1164@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1163@01)
        (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1164@01)
        (<= q$b@1164@01 1461501637330902918203684832716283019655932542975)
        (or
          (not
            (<
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1163@01) q$b@1164@01)
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1147@01 4)) q$a@1163@01) q$b@1164@01)))
          (<
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1163@01) q$b@1164@01)
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1147@01 4)) q$a@1163@01) q$b@1164@01)))))
    (or
      (not
        (and
          (<= 0 q$a@1163@01)
          (and
            (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1164@01)
              (<= q$b@1164@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1163@01)
        (and
          (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1164@01)
            (<= q$b@1164@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1147@01 4)) q$a@1163@01) q$b@1164@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1947@13@1947@843-aux|)))
(assert (forall ((q$a@1163@01 Int) (q$b@1164@01 Int)) (!
  (and
    (=>
      (<= 0 q$a@1163@01)
      (and
        (<= 0 q$a@1163@01)
        (=>
          (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
            (or (<= 0 q$b@1164@01) (not (<= 0 q$b@1164@01)))))
        (or
          (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
          (not
            (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)))))
    (or (<= 0 q$a@1163@01) (not (<= 0 q$a@1163@01)))
    (=>
      (and
        (<= 0 q$a@1163@01)
        (and
          (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1164@01)
            (<= q$b@1164@01 1461501637330902918203684832716283019655932542975))))
      (and
        (<= 0 q$a@1163@01)
        (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
        (<= 0 q$b@1164@01)
        (<= q$b@1164@01 1461501637330902918203684832716283019655932542975)
        (or
          (not
            (<
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1163@01) q$b@1164@01)
              ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1147@01 4)) q$a@1163@01) q$b@1164@01)))
          (<
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1163@01) q$b@1164@01)
            ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1147@01 4)) q$a@1163@01) q$b@1164@01)))))
    (or
      (not
        (and
          (<= 0 q$a@1163@01)
          (and
            (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
            (and
              (<= 0 q$b@1164@01)
              (<= q$b@1164@01 1461501637330902918203684832716283019655932542975)))))
      (and
        (<= 0 q$a@1163@01)
        (and
          (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1164@01)
            (<= q$b@1164@01 1461501637330902918203684832716283019655932542975))))))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1163@01) q$b@1164@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1947@13@1947@843-aux|)))
(push) ; 12
(assert (not (forall ((q$a@1163@01 Int) (q$b@1164@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1163@01)
        (and
          (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1164@01)
            (<= q$b@1164@01 1461501637330902918203684832716283019655932542975))))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1163@01) q$b@1164@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1147@01 4)) q$a@1163@01) q$b@1164@01)))
    false)
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1147@01 4)) q$a@1163@01) q$b@1164@01))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1163@01) q$b@1164@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1947@13@1947@843|))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (forall ((q$a@1163@01 Int) (q$b@1164@01 Int)) (!
  (=>
    (and
      (and
        (<= 0 q$a@1163@01)
        (and
          (<= q$a@1163@01 1461501637330902918203684832716283019655932542975)
          (and
            (<= 0 q$b@1164@01)
            (<= q$b@1164@01 1461501637330902918203684832716283019655932542975))))
      (<
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1163@01) q$b@1164@01)
        ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1147@01 4)) q$a@1163@01) q$b@1164@01)))
    false)
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1147@01 4)) q$a@1163@01) q$b@1164@01))
  :pattern (($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) q$a@1163@01) q$b@1164@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/vyper/testsresourcesexamplesERC20.vy.vpr@1947@13@1947@843|)))
; [exec]
; inhale l$havoc >= 0
(declare-const $t@1165@01 $Snap)
(assert (= $t@1165@01 $Snap.unit))
; [eval] l$havoc >= 0
(assert (>= l$havoc@1066@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) +
;   l$havoc): $Struct)
; [eval] ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
; [eval] ($struct_get($struct_loc(self, 7)): Int) + l$havoc
; [eval] ($struct_get($struct_loc(self, 7)): Int)
; [eval] $struct_loc(self, 7)
(declare-const self@1166@01 $Struct)
(assert (=
  self@1166@01
  ($struct_set<$Struct> self@1147@01 7 (+
    ($struct_get<Int> ($struct_loc<Int> self@1147@01 7))
    l$havoc@1066@01))))
; [exec]
; $contracts := l$havoc$1
; [exec]
; assert ($struct_get($struct_loc(self, 6)): Int) ==
;   ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] ($struct_get($struct_loc(self, 6)): Int)
; [eval] $struct_loc(self, 6)
; [eval] ($struct_get($struct_loc($old_self, 6)): Int)
; [eval] $struct_loc($old_self, 6)
(set-option :timeout 0)
(push) ; 12
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1166@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1166@01 6))
  ($struct_get<Int> ($struct_loc<Int> self@1052@01 6))))
; [exec]
; assert ($struct_get($struct_loc(self, 5)): Int) ==
;   ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 5)): Int)
; [eval] $struct_loc(self, 5)
; [eval] ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
; [eval] ($struct_get($struct_loc(self, 3)): $Map[Int, Int])
; [eval] $struct_loc(self, 3)
(push) ; 12
(assert (not (=
  ($struct_get<Int> ($struct_loc<Int> self@1166@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1166@01 3))))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($struct_get<Int> ($struct_loc<Int> self@1166@01 5))
  ($map_sum<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1166@01 3)))))
(pop) ; 11
; [eval] !$succ
; [then-branch: 840 | False | dead]
; [else-branch: 840 | True | live]
(push) ; 11
; [else-branch: 840 | True]
(pop) ; 11
(pop) ; 10
(push) ; 10
; [else-branch: 812 | $out_of_gas@1065@01]
(assert $out_of_gas@1065@01)
(pop) ; 10
(pop) ; 9
(pop) ; 8
(push) ; 8
; [else-branch: 789 | $unwrap[Int]($wrap[$Int]($map_get[Int]($struct_get[$Map[Int, Int]]($struct_loc[Int](self@1138@01, 3)), l$_to@1045@01))) - $unwrap[Int](l$_value@1046@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($struct_get<$Map<Int~_Int>> ($struct_loc<Int> self@1138@01 3)) l$_to@1045@01)))
    ($unwrap<Int> l$_value@1046@01))
  0))
(pop) ; 8
(pop) ; 7
(pop) ; 6
(push) ; 6
; [else-branch: 766 | $unwrap[Int]($wrap[$Int]($struct_get[Int]($struct_loc[Int](self@1121@01, 5)))) - $unwrap[Int](l$_value@1046@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($struct_get<Int> ($struct_loc<Int> self@1121@01 5))))
    ($unwrap<Int> l$_value@1046@01))
  0))
(pop) ; 6
(pop) ; 5
(push) ; 5
; [else-branch: 745 | l$_to@1045@01 == 0]
(assert (= l$_to@1045@01 0))
(pop) ; 5
(pop) ; 4
(pop) ; 3
(push) ; 3
; [else-branch: 722 | $unwrap[Int]($wrap[$Int]($map_get[Int]($map_get[$Map[Int, Int]]($struct_get[$Map[Int, $Map[Int, Int]]]($struct_loc[Int](self@1052@01, 4)), l$_to@1045@01), $struct_get[Int]($struct_loc[Int](msg@1048@01, 0))))) - $unwrap[Int](l$_value@1046@01) < 0]
(assert (<
  (-
    ($unwrap<Int> ($wrap<$Int> ($map_get<Int> ($map_get<$Map<Int~_Int>> ($struct_get<$Map<Int~_$Map<Int~_Int>>> ($struct_loc<Int> self@1052@01 4)) l$_to@1045@01) ($struct_get<Int> ($struct_loc<Int> msg@1048@01 0)))))
    ($unwrap<Int> l$_value@1046@01))
  0))
(pop) ; 3
(pop) ; 2
(pop) ; 1
