(get-info :version)
; (:version "4.12.1")
; Started: 2024-12-29 14:41:41
; Silicon.version: 1.1-SNAPSHOT (457c6eca@(detached))
; Input file: <unknown>
; Verifier id: 00
; ------------------------------------------------------------
; Begin preamble
; ////////// Static preamble
; 
; ; /z3config.smt2
(set-option :print-success true) ; Boogie: false
(set-option :global-decls true) ; Necessary for push pop mode
(set-option :auto_config false)
(set-option :smt.case_split 3)
(set-option :smt.delay_units true)
(set-option :type_check true)
(set-option :smt.mbqi false)
(set-option :pp.bv_literals false)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.arith.solver 2)
(set-option :model.v2 true)
(set-option :smt.qi.max_multi_patterns 1000)
; 
; ; /preamble.smt2
(declare-datatypes (($Snap 0)) ((
    ($Snap.unit)
    ($Snap.combine ($Snap.first $Snap) ($Snap.second $Snap)))))
(declare-sort $Ref 0)
(declare-const $Ref.null $Ref)
(declare-sort $FPM 0)
(declare-sort $PPM 0)
(define-sort $Perm () Real)
(define-const $Perm.Write $Perm 1.0)
(define-const $Perm.No $Perm 0.0)
(define-fun $Perm.isValidVar ((p $Perm)) Bool
	(<= $Perm.No p))
(define-fun $Perm.isReadVar ((p $Perm)) Bool
    (and ($Perm.isValidVar p)
         (not (= p $Perm.No))))
(define-fun $Perm.min ((p1 $Perm) (p2 $Perm)) Real
    (ite (<= p1 p2) p1 p2))
(define-fun $Math.min ((a Int) (b Int)) Int
    (ite (<= a b) a b))
(define-fun $Math.clip ((a Int)) Int
    (ite (< a 0) 0 a))
; ////////// Sorts
(declare-sort Set<$Ref> 0)
(declare-sort Set<Bool> 0)
(declare-sort Set<Int> 0)
(declare-sort Set<$Snap> 0)
(declare-sort $SnapshotMirrors$ 0)
(declare-sort $FVF<val_ref> 0)
(declare-sort $MWSF 0)
; ////////// Sort wrappers
; Declaring additional sort wrappers
(declare-fun $SortWrappers.IntTo$Snap (Int) $Snap)
(declare-fun $SortWrappers.$SnapToInt ($Snap) Int)
(assert (forall ((x Int)) (!
    (= x ($SortWrappers.$SnapToInt($SortWrappers.IntTo$Snap x)))
    :pattern (($SortWrappers.IntTo$Snap x))
    :qid |$Snap.$SnapToIntTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.IntTo$Snap($SortWrappers.$SnapToInt x)))
    :pattern (($SortWrappers.$SnapToInt x))
    :qid |$Snap.IntTo$SnapToInt|
    )))
(declare-fun $SortWrappers.BoolTo$Snap (Bool) $Snap)
(declare-fun $SortWrappers.$SnapToBool ($Snap) Bool)
(assert (forall ((x Bool)) (!
    (= x ($SortWrappers.$SnapToBool($SortWrappers.BoolTo$Snap x)))
    :pattern (($SortWrappers.BoolTo$Snap x))
    :qid |$Snap.$SnapToBoolTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.BoolTo$Snap($SortWrappers.$SnapToBool x)))
    :pattern (($SortWrappers.$SnapToBool x))
    :qid |$Snap.BoolTo$SnapToBool|
    )))
(declare-fun $SortWrappers.$RefTo$Snap ($Ref) $Snap)
(declare-fun $SortWrappers.$SnapTo$Ref ($Snap) $Ref)
(assert (forall ((x $Ref)) (!
    (= x ($SortWrappers.$SnapTo$Ref($SortWrappers.$RefTo$Snap x)))
    :pattern (($SortWrappers.$RefTo$Snap x))
    :qid |$Snap.$SnapTo$RefTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$RefTo$Snap($SortWrappers.$SnapTo$Ref x)))
    :pattern (($SortWrappers.$SnapTo$Ref x))
    :qid |$Snap.$RefTo$SnapTo$Ref|
    )))
(declare-fun $SortWrappers.$PermTo$Snap ($Perm) $Snap)
(declare-fun $SortWrappers.$SnapTo$Perm ($Snap) $Perm)
(assert (forall ((x $Perm)) (!
    (= x ($SortWrappers.$SnapTo$Perm($SortWrappers.$PermTo$Snap x)))
    :pattern (($SortWrappers.$PermTo$Snap x))
    :qid |$Snap.$SnapTo$PermTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$PermTo$Snap($SortWrappers.$SnapTo$Perm x)))
    :pattern (($SortWrappers.$SnapTo$Perm x))
    :qid |$Snap.$PermTo$SnapTo$Perm|
    )))
; Declaring additional sort wrappers
(declare-fun $SortWrappers.Set<$Ref>To$Snap (Set<$Ref>) $Snap)
(declare-fun $SortWrappers.$SnapToSet<$Ref> ($Snap) Set<$Ref>)
(assert (forall ((x Set<$Ref>)) (!
    (= x ($SortWrappers.$SnapToSet<$Ref>($SortWrappers.Set<$Ref>To$Snap x)))
    :pattern (($SortWrappers.Set<$Ref>To$Snap x))
    :qid |$Snap.$SnapToSet<$Ref>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.Set<$Ref>To$Snap($SortWrappers.$SnapToSet<$Ref> x)))
    :pattern (($SortWrappers.$SnapToSet<$Ref> x))
    :qid |$Snap.Set<$Ref>To$SnapToSet<$Ref>|
    )))
(declare-fun $SortWrappers.Set<Bool>To$Snap (Set<Bool>) $Snap)
(declare-fun $SortWrappers.$SnapToSet<Bool> ($Snap) Set<Bool>)
(assert (forall ((x Set<Bool>)) (!
    (= x ($SortWrappers.$SnapToSet<Bool>($SortWrappers.Set<Bool>To$Snap x)))
    :pattern (($SortWrappers.Set<Bool>To$Snap x))
    :qid |$Snap.$SnapToSet<Bool>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.Set<Bool>To$Snap($SortWrappers.$SnapToSet<Bool> x)))
    :pattern (($SortWrappers.$SnapToSet<Bool> x))
    :qid |$Snap.Set<Bool>To$SnapToSet<Bool>|
    )))
(declare-fun $SortWrappers.Set<Int>To$Snap (Set<Int>) $Snap)
(declare-fun $SortWrappers.$SnapToSet<Int> ($Snap) Set<Int>)
(assert (forall ((x Set<Int>)) (!
    (= x ($SortWrappers.$SnapToSet<Int>($SortWrappers.Set<Int>To$Snap x)))
    :pattern (($SortWrappers.Set<Int>To$Snap x))
    :qid |$Snap.$SnapToSet<Int>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.Set<Int>To$Snap($SortWrappers.$SnapToSet<Int> x)))
    :pattern (($SortWrappers.$SnapToSet<Int> x))
    :qid |$Snap.Set<Int>To$SnapToSet<Int>|
    )))
(declare-fun $SortWrappers.Set<$Snap>To$Snap (Set<$Snap>) $Snap)
(declare-fun $SortWrappers.$SnapToSet<$Snap> ($Snap) Set<$Snap>)
(assert (forall ((x Set<$Snap>)) (!
    (= x ($SortWrappers.$SnapToSet<$Snap>($SortWrappers.Set<$Snap>To$Snap x)))
    :pattern (($SortWrappers.Set<$Snap>To$Snap x))
    :qid |$Snap.$SnapToSet<$Snap>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.Set<$Snap>To$Snap($SortWrappers.$SnapToSet<$Snap> x)))
    :pattern (($SortWrappers.$SnapToSet<$Snap> x))
    :qid |$Snap.Set<$Snap>To$SnapToSet<$Snap>|
    )))
; Declaring additional sort wrappers
(declare-fun $SortWrappers.$SnapshotMirrors$To$Snap ($SnapshotMirrors$) $Snap)
(declare-fun $SortWrappers.$SnapTo$SnapshotMirrors$ ($Snap) $SnapshotMirrors$)
(assert (forall ((x $SnapshotMirrors$)) (!
    (= x ($SortWrappers.$SnapTo$SnapshotMirrors$($SortWrappers.$SnapshotMirrors$To$Snap x)))
    :pattern (($SortWrappers.$SnapshotMirrors$To$Snap x))
    :qid |$Snap.$SnapTo$SnapshotMirrors$To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$SnapshotMirrors$To$Snap($SortWrappers.$SnapTo$SnapshotMirrors$ x)))
    :pattern (($SortWrappers.$SnapTo$SnapshotMirrors$ x))
    :qid |$Snap.$SnapshotMirrors$To$SnapTo$SnapshotMirrors$|
    )))
; Declaring additional sort wrappers
(declare-fun $SortWrappers.$FVF<val_ref>To$Snap ($FVF<val_ref>) $Snap)
(declare-fun $SortWrappers.$SnapTo$FVF<val_ref> ($Snap) $FVF<val_ref>)
(assert (forall ((x $FVF<val_ref>)) (!
    (= x ($SortWrappers.$SnapTo$FVF<val_ref>($SortWrappers.$FVF<val_ref>To$Snap x)))
    :pattern (($SortWrappers.$FVF<val_ref>To$Snap x))
    :qid |$Snap.$SnapTo$FVF<val_ref>To$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$FVF<val_ref>To$Snap($SortWrappers.$SnapTo$FVF<val_ref> x)))
    :pattern (($SortWrappers.$SnapTo$FVF<val_ref> x))
    :qid |$Snap.$FVF<val_ref>To$SnapTo$FVF<val_ref>|
    )))
; Declaring additional sort wrappers
(declare-fun $SortWrappers.$MWSFTo$Snap ($MWSF) $Snap)
(declare-fun $SortWrappers.$SnapTo$MWSF ($Snap) $MWSF)
(assert (forall ((x $MWSF)) (!
    (= x ($SortWrappers.$SnapTo$MWSF($SortWrappers.$MWSFTo$Snap x)))
    :pattern (($SortWrappers.$MWSFTo$Snap x))
    :qid |$Snap.$SnapTo$MWSFTo$Snap|
    )))
(assert (forall ((x $Snap)) (!
    (= x ($SortWrappers.$MWSFTo$Snap($SortWrappers.$SnapTo$MWSF x)))
    :pattern (($SortWrappers.$SnapTo$MWSF x))
    :qid |$Snap.$MWSFTo$SnapTo$MWSF|
    )))
; ////////// Symbols
(declare-fun Set_card (Set<$Ref>) Int)
(declare-const Set_empty Set<$Ref>)
(declare-fun Set_in ($Ref Set<$Ref>) Bool)
(declare-fun Set_singleton ($Ref) Set<$Ref>)
(declare-fun Set_unionone (Set<$Ref> $Ref) Set<$Ref>)
(declare-fun Set_union (Set<$Ref> Set<$Ref>) Set<$Ref>)
(declare-fun Set_intersection (Set<$Ref> Set<$Ref>) Set<$Ref>)
(declare-fun Set_difference (Set<$Ref> Set<$Ref>) Set<$Ref>)
(declare-fun Set_subset (Set<$Ref> Set<$Ref>) Bool)
(declare-fun Set_equal (Set<$Ref> Set<$Ref>) Bool)
(declare-fun Set_skolem_diff (Set<$Ref> Set<$Ref>) $Ref)
(declare-fun Set_card (Set<Bool>) Int)
(declare-const Set_empty Set<Bool>)
(declare-fun Set_in (Bool Set<Bool>) Bool)
(declare-fun Set_singleton (Bool) Set<Bool>)
(declare-fun Set_unionone (Set<Bool> Bool) Set<Bool>)
(declare-fun Set_union (Set<Bool> Set<Bool>) Set<Bool>)
(declare-fun Set_intersection (Set<Bool> Set<Bool>) Set<Bool>)
(declare-fun Set_difference (Set<Bool> Set<Bool>) Set<Bool>)
(declare-fun Set_subset (Set<Bool> Set<Bool>) Bool)
(declare-fun Set_equal (Set<Bool> Set<Bool>) Bool)
(declare-fun Set_skolem_diff (Set<Bool> Set<Bool>) Bool)
(declare-fun Set_card (Set<Int>) Int)
(declare-const Set_empty Set<Int>)
(declare-fun Set_in (Int Set<Int>) Bool)
(declare-fun Set_singleton (Int) Set<Int>)
(declare-fun Set_unionone (Set<Int> Int) Set<Int>)
(declare-fun Set_union (Set<Int> Set<Int>) Set<Int>)
(declare-fun Set_intersection (Set<Int> Set<Int>) Set<Int>)
(declare-fun Set_difference (Set<Int> Set<Int>) Set<Int>)
(declare-fun Set_subset (Set<Int> Set<Int>) Bool)
(declare-fun Set_equal (Set<Int> Set<Int>) Bool)
(declare-fun Set_skolem_diff (Set<Int> Set<Int>) Int)
(declare-fun Set_card (Set<$Snap>) Int)
(declare-const Set_empty Set<$Snap>)
(declare-fun Set_in ($Snap Set<$Snap>) Bool)
(declare-fun Set_singleton ($Snap) Set<$Snap>)
(declare-fun Set_unionone (Set<$Snap> $Snap) Set<$Snap>)
(declare-fun Set_union (Set<$Snap> Set<$Snap>) Set<$Snap>)
(declare-fun Set_intersection (Set<$Snap> Set<$Snap>) Set<$Snap>)
(declare-fun Set_difference (Set<$Snap> Set<$Snap>) Set<$Snap>)
(declare-fun Set_subset (Set<$Snap> Set<$Snap>) Bool)
(declare-fun Set_equal (Set<$Snap> Set<$Snap>) Bool)
(declare-fun Set_skolem_diff (Set<$Snap> Set<$Snap>) $Snap)
(declare-fun mirror$m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$__$TY$__$int$$$int$$$int$<Int> (Int Int) Int)
; /field_value_functions_declarations.smt2 [val_ref: Ref]
(declare-fun $FVF.domain_val_ref ($FVF<val_ref>) Set<$Ref>)
(declare-fun $FVF.lookup_val_ref ($FVF<val_ref> $Ref) $Ref)
(declare-fun $FVF.after_val_ref ($FVF<val_ref> $FVF<val_ref>) Bool)
(declare-fun $FVF.loc_val_ref ($Ref $Ref) Bool)
(declare-fun $FVF.perm_val_ref ($FPM $Ref) $Perm)
(declare-const $fvfTOP_val_ref $FVF<val_ref>)
(declare-fun MWSF_apply ($MWSF $Snap) $Snap)
; Declaring symbols related to program functions (from program analysis)
(declare-fun read$ ($Snap) $Perm)
(declare-fun read$%limited ($Snap) $Perm)
(declare-const read$%stateless Bool)
(declare-fun read$%precondition ($Snap) Bool)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap $Ref) Int)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%limited ($Snap $Ref) Int)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%stateless ($Ref) Bool)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap $Ref) Bool)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap $Ref Int) Int)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited ($Snap $Ref Int) Int)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%stateless ($Ref Int) Bool)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap $Ref Int) Bool)
(declare-fun m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$ ($Snap Int Int) Int)
(declare-fun m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%limited ($Snap Int Int) Int)
(declare-fun m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%stateless (Int Int) Bool)
(declare-fun m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%precondition ($Snap Int Int) Bool)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap $Ref Int) Int)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited ($Snap $Ref Int) Int)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%stateless ($Ref Int) Bool)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap $Ref Int) Bool)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap $Ref) Int)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited ($Snap $Ref) Int)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%stateless ($Ref) Bool)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap $Ref) Bool)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap $Ref) Int)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited ($Snap $Ref) Int)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%stateless ($Ref) Bool)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap $Ref) Bool)
(declare-fun builtin$undef_int__$TY$__$int$ ($Snap) Int)
(declare-fun builtin$undef_int__$TY$__$int$%limited ($Snap) Int)
(declare-const builtin$undef_int__$TY$__$int$%stateless Bool)
(declare-fun builtin$undef_int__$TY$__$int$%precondition ($Snap) Bool)
(declare-fun builtin$unreach_bool__$TY$__$bool$ ($Snap) Bool)
(declare-fun builtin$unreach_bool__$TY$__$bool$%limited ($Snap) Bool)
(declare-const builtin$unreach_bool__$TY$__$bool$%stateless Bool)
(declare-fun builtin$unreach_bool__$TY$__$bool$%precondition ($Snap) Bool)
(declare-fun m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap $Ref Int Int Int) Int)
(declare-fun m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap $Ref Int Int Int) Int)
(declare-fun m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%stateless ($Ref Int Int Int) Bool)
(declare-fun m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap $Ref Int Int Int) Bool)
(declare-fun builtin$unreach_int__$TY$__$int$ ($Snap) Int)
(declare-fun builtin$unreach_int__$TY$__$int$%limited ($Snap) Int)
(declare-const builtin$unreach_int__$TY$__$int$%stateless Bool)
(declare-fun builtin$unreach_int__$TY$__$int$%precondition ($Snap) Bool)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap $Ref Int Int) Int)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap $Ref Int Int) Int)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%stateless ($Ref Int Int) Bool)
(declare-fun m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap $Ref Int Int) Bool)
; Snapshot variable to be used during function verification
(declare-fun s@$ () $Snap)
; Declaring predicate trigger functions
(declare-fun DeadBorrowToken$%trigger ($Snap Int) Bool)
(declare-fun bool%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_100$4$2195313935860504854%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_101$4$5862168304557534146%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_102$4$7055538125904070218%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_103$3$5908759128992239862%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_104$4$655325752977662787%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_105$5$10720279634398355214%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_106$5$5785012495171046632%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_107$7$3462205868504671540%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_108$3$3804200177793084958%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_109$3$14226160748629873244%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_110$3$16447901152793631719%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_13$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_14$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_15$4$3019757418362490378%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_16$3$16447901152793631719%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_17$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_18$4$3019757418362490378%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_19$3$16447901152793631719%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_20$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_21$4$3019757418362490378%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_22$5$6510375280720503266%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_23$5$17696661897062230695%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_28$4$1379368399982250115%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_29$4$11125728586529045342%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_30$4$11519300149002759943%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_31$5$16247953084744144268%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_32$6$4200987767610412049%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_33$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_34$4$12241145444245808880%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_35$3$16447901152793631719%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_36$4$9545962858690430688%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_37$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_38$4$12241145444245808880%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_39$3$16447901152793631719%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_40$4$9545962858690430688%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_41$6$1713151830142718656%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_42$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_43$4$442424761796586614%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_44$3$16447901152793631719%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_45$4$10492355745979528584%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_46$2$2892970999346878380%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_47$3$11535950475478036422%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_48$3$6113093944180928149%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_49$6$2569152856942703315%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_50$5$6372327013426961719%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_51$7$14066288598670814946%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_52$5$3865647478775746238%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_53$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_54$4$3019757418362490378%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_55$3$16447901152793631719%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_56$4$11667997092962627586%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_57$2$9630802733628619285%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_58$4$14990714798109641575%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_59$4$14039387590360964198%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_60$4$13611395894795617782%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_61$3$17019613836727644117%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_62$4$2684447020299436106%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_63$3$4320649005197402516%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_64$3$4090206497854741622%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_65$3$4815615749651602420%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_66$5$17113822432526561541%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_67$5$11036083759241935507%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_68$3$4206495023824529454%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_69$4$15663320775239368138%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_70$4$15880083695680546704%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_71$6$16168149984730846501%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_72$6$11789420810021538926%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_73$7$11191460349121278873%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_74$2$9630802733628619285%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_75$4$5451673049719120757%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_76$4$1653348676580717959%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_77$4$6160479198151006000%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_78$3$16190996979099018254%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_79$4$10404347298705202397%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_80$3$17205348727208653730%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_81$4$12662612786647554877%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_82$3$17304772845091837241%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_83$3$4574539313362100690%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_84$5$6434387996512040629%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_85$5$9743516861100899679%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_86$3$10646314070471925050%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_87$5$774418865505664056%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_88$5$14157422564092725854%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_89$6$16642461879638198135%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_90$6$12796450423676955260%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_91$7$4558122606232013319%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_92$7$17160947742008149928%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_93$4$8785311375718005381%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_94$7$4559234867040711331%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_95$3$7300043387549119486%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_96$4$4813799757810956159%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_97$4$13420012870477854736%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_98$2$9630802733628619285%trigger ($Snap $Ref) Bool)
(declare-fun closure$0_1_99$3$2733645309818104258%trigger ($Snap $Ref) Bool)
(declare-fun m_alloc$$alloc$opensqu$0$closesqu$$$Global$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun m_alloc$$raw_vec$opensqu$0$closesqu$$$RawVec$opensqu$0$closesqu$$_beg_$m_alloc$$vec$opensqu$0$closesqu$$$Vec$opensqu$0$closesqu$$_beg_$usize$_end_$_sep_$m_alloc$$alloc$opensqu$0$closesqu$$$Global$opensqu$0$closesqu$$_beg_$_end_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun m_alloc$$raw_vec$opensqu$0$closesqu$$$RawVec$opensqu$0$closesqu$$_beg_$m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_$_sep_$m_alloc$$alloc$opensqu$0$closesqu$$$Global$opensqu$0$closesqu$$_beg_$_end_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun m_alloc$$raw_vec$opensqu$0$closesqu$$$RawVec$opensqu$0$closesqu$$_beg_$usize$_sep_$m_alloc$$alloc$opensqu$0$closesqu$$$Global$opensqu$0$closesqu$$_beg_$_end_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun m_alloc$$vec$opensqu$0$closesqu$$$Vec$opensqu$0$closesqu$$_beg_$m_alloc$$vec$opensqu$0$closesqu$$$Vec$opensqu$0$closesqu$$_beg_$usize$_end_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun m_alloc$$vec$opensqu$0$closesqu$$$Vec$opensqu$0$closesqu$$_beg_$m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun m_alloc$$vec$opensqu$0$closesqu$$$Vec$opensqu$0$closesqu$$_beg_$usize$_end_%trigger ($Snap $Ref) Bool)
(declare-fun m_core$$ptr$opensqu$0$closesqu$$$Unique$opensqu$0$closesqu$$_beg_$m_alloc$$vec$opensqu$0$closesqu$$$Vec$opensqu$0$closesqu$$_beg_$usize$_end_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun m_core$$ptr$opensqu$0$closesqu$$$Unique$opensqu$0$closesqu$$_beg_$m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun m_core$$ptr$opensqu$0$closesqu$$$Unique$opensqu$0$closesqu$$_beg_$usize$_end_%trigger ($Snap $Ref) Bool)
(declare-fun m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun m_knapsack$$ItemIndices$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_100$4$2195313935860504854%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_101$4$5862168304557534146%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_102$4$7055538125904070218%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_103$3$5908759128992239862%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_104$4$655325752977662787%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_105$5$10720279634398355214%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_106$5$5785012495171046632%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_107$7$3462205868504671540%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_108$3$3804200177793084958%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_109$3$14226160748629873244%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_110$3$16447901152793631719%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_13$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_14$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_15$4$3019757418362490378%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_16$3$16447901152793631719%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_17$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_18$4$3019757418362490378%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_19$3$16447901152793631719%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_20$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_21$4$3019757418362490378%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_22$5$6510375280720503266%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_23$5$17696661897062230695%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_28$4$1379368399982250115%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_29$4$11125728586529045342%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_30$4$11519300149002759943%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_31$5$16247953084744144268%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_32$6$4200987767610412049%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_33$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_34$4$12241145444245808880%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_35$3$16447901152793631719%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_36$4$9545962858690430688%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_37$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_38$4$12241145444245808880%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_39$3$16447901152793631719%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_40$4$9545962858690430688%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_41$6$1713151830142718656%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_42$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_43$4$442424761796586614%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_44$3$16447901152793631719%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_45$4$10492355745979528584%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_46$2$2892970999346878380%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_47$3$11535950475478036422%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_48$3$6113093944180928149%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_49$6$2569152856942703315%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_50$5$6372327013426961719%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_51$7$14066288598670814946%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_52$5$3865647478775746238%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_53$3$7176179547503835236%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_54$4$3019757418362490378%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_55$3$16447901152793631719%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_56$4$11667997092962627586%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_58$4$14990714798109641575%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_59$4$14039387590360964198%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_60$4$13611395894795617782%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_61$3$17019613836727644117%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_62$4$2684447020299436106%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_63$3$4320649005197402516%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_64$3$4090206497854741622%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_65$3$4815615749651602420%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_66$5$17113822432526561541%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_67$5$11036083759241935507%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_68$3$4206495023824529454%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_69$4$15663320775239368138%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_70$4$15880083695680546704%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_71$6$16168149984730846501%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_72$6$11789420810021538926%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_73$7$11191460349121278873%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_75$4$5451673049719120757%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_76$4$1653348676580717959%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_77$4$6160479198151006000%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_78$3$16190996979099018254%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_79$4$10404347298705202397%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_80$3$17205348727208653730%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_81$4$12662612786647554877%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_82$3$17304772845091837241%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_83$3$4574539313362100690%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_84$5$6434387996512040629%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_85$5$9743516861100899679%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_86$3$10646314070471925050%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_87$5$774418865505664056%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_88$5$14157422564092725854%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_89$6$16642461879638198135%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_90$6$12796450423676955260%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_91$7$4558122606232013319%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_92$7$17160947742008149928%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_93$4$8785311375718005381%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_94$7$4559234867040711331%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_95$3$7300043387549119486%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_96$4$4813799757810956159%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_97$4$13420012870477854736%trigger ($Snap $Ref) Bool)
(declare-fun ref$closure$0_1_99$3$2733645309818104258%trigger ($Snap $Ref) Bool)
(declare-fun ref$m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun ref$m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun ref$m_knapsack$$ItemIndices$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun ref$m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun ref$ref$m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun ref$ref$m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun ref$ref$m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap $Ref) Bool)
(declare-fun ref$ref$usize%trigger ($Snap $Ref) Bool)
(declare-fun ref$tuple2$usize$usize%trigger ($Snap $Ref) Bool)
(declare-fun ref$usize%trigger ($Snap $Ref) Bool)
(declare-fun tuple0$%trigger ($Snap $Ref) Bool)
(declare-fun tuple2$usize$bool%trigger ($Snap $Ref) Bool)
(declare-fun tuple2$usize$usize%trigger ($Snap $Ref) Bool)
(declare-fun u8%trigger ($Snap $Ref) Bool)
(declare-fun usize%trigger ($Snap $Ref) Bool)
; ////////// Uniqueness assumptions from domains
; ////////// Axioms
(assert (forall ((s Set<$Ref>)) (!
  (<= 0 (Set_card s))
  :pattern ((Set_card s))
  )))
(assert (forall ((o $Ref)) (!
  (not (Set_in o (as Set_empty  Set<$Ref>)))
  :pattern ((Set_in o (as Set_empty  Set<$Ref>)))
  )))
(assert (forall ((s Set<$Ref>)) (!
  (and
    (=> (= (Set_card s) 0) (= s (as Set_empty  Set<$Ref>)))
    (=> (not (= (Set_card s) 0)) (exists ((x $Ref))  (Set_in x s))))
  :pattern ((Set_card s))
  )))
(assert (forall ((r $Ref)) (!
  (Set_in r (Set_singleton r))
  :pattern ((Set_singleton r))
  )))
(assert (forall ((r $Ref) (o $Ref)) (!
  (= (Set_in o (Set_singleton r)) (= r o))
  :pattern ((Set_in o (Set_singleton r)))
  )))
(assert (forall ((r $Ref)) (!
  (= (Set_card (Set_singleton r)) 1)
  :pattern ((Set_card (Set_singleton r)))
  )))
(assert (forall ((a Set<$Ref>) (x $Ref) (o $Ref)) (!
  (= (Set_in o (Set_unionone a x)) (or (= o x) (Set_in o a)))
  :pattern ((Set_in o (Set_unionone a x)))
  )))
(assert (forall ((a Set<$Ref>) (x $Ref)) (!
  (Set_in x (Set_unionone a x))
  :pattern ((Set_unionone a x))
  )))
(assert (forall ((a Set<$Ref>) (x $Ref) (y $Ref)) (!
  (=> (Set_in y a) (Set_in y (Set_unionone a x)))
  :pattern ((Set_unionone a x) (Set_in y a))
  )))
(assert (forall ((a Set<$Ref>) (x $Ref)) (!
  (=> (Set_in x a) (= (Set_card (Set_unionone a x)) (Set_card a)))
  :pattern ((Set_card (Set_unionone a x)))
  )))
(assert (forall ((a Set<$Ref>) (x $Ref)) (!
  (=> (not (Set_in x a)) (= (Set_card (Set_unionone a x)) (+ (Set_card a) 1)))
  :pattern ((Set_card (Set_unionone a x)))
  )))
(assert (forall ((a Set<$Ref>) (b Set<$Ref>) (o $Ref)) (!
  (= (Set_in o (Set_union a b)) (or (Set_in o a) (Set_in o b)))
  :pattern ((Set_in o (Set_union a b)))
  )))
(assert (forall ((a Set<$Ref>) (b Set<$Ref>) (y $Ref)) (!
  (=> (Set_in y a) (Set_in y (Set_union a b)))
  :pattern ((Set_union a b) (Set_in y a))
  )))
(assert (forall ((a Set<$Ref>) (b Set<$Ref>) (y $Ref)) (!
  (=> (Set_in y b) (Set_in y (Set_union a b)))
  :pattern ((Set_union a b) (Set_in y b))
  )))
(assert (forall ((a Set<$Ref>) (b Set<$Ref>) (o $Ref)) (!
  (= (Set_in o (Set_intersection a b)) (and (Set_in o a) (Set_in o b)))
  :pattern ((Set_in o (Set_intersection a b)))
  :pattern ((Set_intersection a b) (Set_in o a))
  :pattern ((Set_intersection a b) (Set_in o b))
  )))
(assert (forall ((a Set<$Ref>) (b Set<$Ref>)) (!
  (= (Set_union (Set_union a b) b) (Set_union a b))
  :pattern ((Set_union (Set_union a b) b))
  )))
(assert (forall ((a Set<$Ref>) (b Set<$Ref>)) (!
  (= (Set_union a (Set_union a b)) (Set_union a b))
  :pattern ((Set_union a (Set_union a b)))
  )))
(assert (forall ((a Set<$Ref>) (b Set<$Ref>)) (!
  (= (Set_intersection (Set_intersection a b) b) (Set_intersection a b))
  :pattern ((Set_intersection (Set_intersection a b) b))
  )))
(assert (forall ((a Set<$Ref>) (b Set<$Ref>)) (!
  (= (Set_intersection a (Set_intersection a b)) (Set_intersection a b))
  :pattern ((Set_intersection a (Set_intersection a b)))
  )))
(assert (forall ((a Set<$Ref>) (b Set<$Ref>)) (!
  (=
    (+ (Set_card (Set_union a b)) (Set_card (Set_intersection a b)))
    (+ (Set_card a) (Set_card b)))
  :pattern ((Set_card (Set_union a b)))
  :pattern ((Set_card (Set_intersection a b)))
  )))
(assert (forall ((a Set<$Ref>) (b Set<$Ref>) (o $Ref)) (!
  (= (Set_in o (Set_difference a b)) (and (Set_in o a) (not (Set_in o b))))
  :pattern ((Set_in o (Set_difference a b)))
  :pattern ((Set_difference a b) (Set_in o a))
  )))
(assert (forall ((a Set<$Ref>) (b Set<$Ref>) (y $Ref)) (!
  (=> (Set_in y b) (not (Set_in y (Set_difference a b))))
  :pattern ((Set_difference a b) (Set_in y b))
  )))
(assert (forall ((a Set<$Ref>) (b Set<$Ref>)) (!
  (and
    (=
      (+
        (+ (Set_card (Set_difference a b)) (Set_card (Set_difference b a)))
        (Set_card (Set_intersection a b)))
      (Set_card (Set_union a b)))
    (=
      (Set_card (Set_difference a b))
      (- (Set_card a) (Set_card (Set_intersection a b)))))
  :pattern ((Set_card (Set_difference a b)))
  )))
(assert (forall ((a Set<$Ref>) (b Set<$Ref>)) (!
  (=
    (Set_subset a b)
    (forall ((o $Ref)) (!
      (=> (Set_in o a) (Set_in o b))
      :pattern ((Set_in o a))
      :pattern ((Set_in o b))
      )))
  :pattern ((Set_subset a b))
  )))
(assert (forall ((a Set<$Ref>) (b Set<$Ref>)) (!
  (or
    (and (Set_equal a b) (= a b))
    (and
      (not (Set_equal a b))
      (and
        (not (= a b))
        (and
          (= (Set_skolem_diff a b) (Set_skolem_diff b a))
          (not
            (= (Set_in (Set_skolem_diff a b) a) (Set_in (Set_skolem_diff a b) b)))))))
  :pattern ((Set_equal a b))
  )))
(assert (forall ((a Set<$Ref>) (b Set<$Ref>)) (!
  (=> (Set_equal a b) (= a b))
  :pattern ((Set_equal a b))
  )))
(assert (forall ((s Set<Bool>)) (!
  (<= 0 (Set_card s))
  :pattern ((Set_card s))
  )))
(assert (forall ((o Bool)) (!
  (not (Set_in o (as Set_empty  Set<Bool>)))
  :pattern ((Set_in o (as Set_empty  Set<Bool>)))
  )))
(assert (forall ((s Set<Bool>)) (!
  (and
    (=> (= (Set_card s) 0) (= s (as Set_empty  Set<Bool>)))
    (=> (not (= (Set_card s) 0)) (exists ((x Bool))  (Set_in x s))))
  :pattern ((Set_card s))
  )))
(assert (forall ((r Bool)) (!
  (Set_in r (Set_singleton r))
  :pattern ((Set_singleton r))
  )))
(assert (forall ((r Bool) (o Bool)) (!
  (= (Set_in o (Set_singleton r)) (= r o))
  :pattern ((Set_in o (Set_singleton r)))
  )))
(assert (forall ((r Bool)) (!
  (= (Set_card (Set_singleton r)) 1)
  :pattern ((Set_card (Set_singleton r)))
  )))
(assert (forall ((a Set<Bool>) (x Bool) (o Bool)) (!
  (= (Set_in o (Set_unionone a x)) (or (= o x) (Set_in o a)))
  :pattern ((Set_in o (Set_unionone a x)))
  )))
(assert (forall ((a Set<Bool>) (x Bool)) (!
  (Set_in x (Set_unionone a x))
  :pattern ((Set_unionone a x))
  )))
(assert (forall ((a Set<Bool>) (x Bool) (y Bool)) (!
  (=> (Set_in y a) (Set_in y (Set_unionone a x)))
  :pattern ((Set_unionone a x) (Set_in y a))
  )))
(assert (forall ((a Set<Bool>) (x Bool)) (!
  (=> (Set_in x a) (= (Set_card (Set_unionone a x)) (Set_card a)))
  :pattern ((Set_card (Set_unionone a x)))
  )))
(assert (forall ((a Set<Bool>) (x Bool)) (!
  (=> (not (Set_in x a)) (= (Set_card (Set_unionone a x)) (+ (Set_card a) 1)))
  :pattern ((Set_card (Set_unionone a x)))
  )))
(assert (forall ((a Set<Bool>) (b Set<Bool>) (o Bool)) (!
  (= (Set_in o (Set_union a b)) (or (Set_in o a) (Set_in o b)))
  :pattern ((Set_in o (Set_union a b)))
  )))
(assert (forall ((a Set<Bool>) (b Set<Bool>) (y Bool)) (!
  (=> (Set_in y a) (Set_in y (Set_union a b)))
  :pattern ((Set_union a b) (Set_in y a))
  )))
(assert (forall ((a Set<Bool>) (b Set<Bool>) (y Bool)) (!
  (=> (Set_in y b) (Set_in y (Set_union a b)))
  :pattern ((Set_union a b) (Set_in y b))
  )))
(assert (forall ((a Set<Bool>) (b Set<Bool>) (o Bool)) (!
  (= (Set_in o (Set_intersection a b)) (and (Set_in o a) (Set_in o b)))
  :pattern ((Set_in o (Set_intersection a b)))
  :pattern ((Set_intersection a b) (Set_in o a))
  :pattern ((Set_intersection a b) (Set_in o b))
  )))
(assert (forall ((a Set<Bool>) (b Set<Bool>)) (!
  (= (Set_union (Set_union a b) b) (Set_union a b))
  :pattern ((Set_union (Set_union a b) b))
  )))
(assert (forall ((a Set<Bool>) (b Set<Bool>)) (!
  (= (Set_union a (Set_union a b)) (Set_union a b))
  :pattern ((Set_union a (Set_union a b)))
  )))
(assert (forall ((a Set<Bool>) (b Set<Bool>)) (!
  (= (Set_intersection (Set_intersection a b) b) (Set_intersection a b))
  :pattern ((Set_intersection (Set_intersection a b) b))
  )))
(assert (forall ((a Set<Bool>) (b Set<Bool>)) (!
  (= (Set_intersection a (Set_intersection a b)) (Set_intersection a b))
  :pattern ((Set_intersection a (Set_intersection a b)))
  )))
(assert (forall ((a Set<Bool>) (b Set<Bool>)) (!
  (=
    (+ (Set_card (Set_union a b)) (Set_card (Set_intersection a b)))
    (+ (Set_card a) (Set_card b)))
  :pattern ((Set_card (Set_union a b)))
  :pattern ((Set_card (Set_intersection a b)))
  )))
(assert (forall ((a Set<Bool>) (b Set<Bool>) (o Bool)) (!
  (= (Set_in o (Set_difference a b)) (and (Set_in o a) (not (Set_in o b))))
  :pattern ((Set_in o (Set_difference a b)))
  :pattern ((Set_difference a b) (Set_in o a))
  )))
(assert (forall ((a Set<Bool>) (b Set<Bool>) (y Bool)) (!
  (=> (Set_in y b) (not (Set_in y (Set_difference a b))))
  :pattern ((Set_difference a b) (Set_in y b))
  )))
(assert (forall ((a Set<Bool>) (b Set<Bool>)) (!
  (and
    (=
      (+
        (+ (Set_card (Set_difference a b)) (Set_card (Set_difference b a)))
        (Set_card (Set_intersection a b)))
      (Set_card (Set_union a b)))
    (=
      (Set_card (Set_difference a b))
      (- (Set_card a) (Set_card (Set_intersection a b)))))
  :pattern ((Set_card (Set_difference a b)))
  )))
(assert (forall ((a Set<Bool>) (b Set<Bool>)) (!
  (=
    (Set_subset a b)
    (forall ((o Bool)) (!
      (=> (Set_in o a) (Set_in o b))
      :pattern ((Set_in o a))
      :pattern ((Set_in o b))
      )))
  :pattern ((Set_subset a b))
  )))
(assert (forall ((a Set<Bool>) (b Set<Bool>)) (!
  (or
    (and (Set_equal a b) (= a b))
    (and
      (not (Set_equal a b))
      (and
        (not (= a b))
        (and
          (= (Set_skolem_diff a b) (Set_skolem_diff b a))
          (not
            (= (Set_in (Set_skolem_diff a b) a) (Set_in (Set_skolem_diff a b) b)))))))
  :pattern ((Set_equal a b))
  )))
(assert (forall ((a Set<Bool>) (b Set<Bool>)) (!
  (=> (Set_equal a b) (= a b))
  :pattern ((Set_equal a b))
  )))
(assert (forall ((s Set<Int>)) (!
  (<= 0 (Set_card s))
  :pattern ((Set_card s))
  )))
(assert (forall ((o Int)) (!
  (not (Set_in o (as Set_empty  Set<Int>)))
  :pattern ((Set_in o (as Set_empty  Set<Int>)))
  )))
(assert (forall ((s Set<Int>)) (!
  (and
    (=> (= (Set_card s) 0) (= s (as Set_empty  Set<Int>)))
    (=> (not (= (Set_card s) 0)) (exists ((x Int))  (Set_in x s))))
  :pattern ((Set_card s))
  )))
(assert (forall ((r Int)) (!
  (Set_in r (Set_singleton r))
  :pattern ((Set_singleton r))
  )))
(assert (forall ((r Int) (o Int)) (!
  (= (Set_in o (Set_singleton r)) (= r o))
  :pattern ((Set_in o (Set_singleton r)))
  )))
(assert (forall ((r Int)) (!
  (= (Set_card (Set_singleton r)) 1)
  :pattern ((Set_card (Set_singleton r)))
  )))
(assert (forall ((a Set<Int>) (x Int) (o Int)) (!
  (= (Set_in o (Set_unionone a x)) (or (= o x) (Set_in o a)))
  :pattern ((Set_in o (Set_unionone a x)))
  )))
(assert (forall ((a Set<Int>) (x Int)) (!
  (Set_in x (Set_unionone a x))
  :pattern ((Set_unionone a x))
  )))
(assert (forall ((a Set<Int>) (x Int) (y Int)) (!
  (=> (Set_in y a) (Set_in y (Set_unionone a x)))
  :pattern ((Set_unionone a x) (Set_in y a))
  )))
(assert (forall ((a Set<Int>) (x Int)) (!
  (=> (Set_in x a) (= (Set_card (Set_unionone a x)) (Set_card a)))
  :pattern ((Set_card (Set_unionone a x)))
  )))
(assert (forall ((a Set<Int>) (x Int)) (!
  (=> (not (Set_in x a)) (= (Set_card (Set_unionone a x)) (+ (Set_card a) 1)))
  :pattern ((Set_card (Set_unionone a x)))
  )))
(assert (forall ((a Set<Int>) (b Set<Int>) (o Int)) (!
  (= (Set_in o (Set_union a b)) (or (Set_in o a) (Set_in o b)))
  :pattern ((Set_in o (Set_union a b)))
  )))
(assert (forall ((a Set<Int>) (b Set<Int>) (y Int)) (!
  (=> (Set_in y a) (Set_in y (Set_union a b)))
  :pattern ((Set_union a b) (Set_in y a))
  )))
(assert (forall ((a Set<Int>) (b Set<Int>) (y Int)) (!
  (=> (Set_in y b) (Set_in y (Set_union a b)))
  :pattern ((Set_union a b) (Set_in y b))
  )))
(assert (forall ((a Set<Int>) (b Set<Int>) (o Int)) (!
  (= (Set_in o (Set_intersection a b)) (and (Set_in o a) (Set_in o b)))
  :pattern ((Set_in o (Set_intersection a b)))
  :pattern ((Set_intersection a b) (Set_in o a))
  :pattern ((Set_intersection a b) (Set_in o b))
  )))
(assert (forall ((a Set<Int>) (b Set<Int>)) (!
  (= (Set_union (Set_union a b) b) (Set_union a b))
  :pattern ((Set_union (Set_union a b) b))
  )))
(assert (forall ((a Set<Int>) (b Set<Int>)) (!
  (= (Set_union a (Set_union a b)) (Set_union a b))
  :pattern ((Set_union a (Set_union a b)))
  )))
(assert (forall ((a Set<Int>) (b Set<Int>)) (!
  (= (Set_intersection (Set_intersection a b) b) (Set_intersection a b))
  :pattern ((Set_intersection (Set_intersection a b) b))
  )))
(assert (forall ((a Set<Int>) (b Set<Int>)) (!
  (= (Set_intersection a (Set_intersection a b)) (Set_intersection a b))
  :pattern ((Set_intersection a (Set_intersection a b)))
  )))
(assert (forall ((a Set<Int>) (b Set<Int>)) (!
  (=
    (+ (Set_card (Set_union a b)) (Set_card (Set_intersection a b)))
    (+ (Set_card a) (Set_card b)))
  :pattern ((Set_card (Set_union a b)))
  :pattern ((Set_card (Set_intersection a b)))
  )))
(assert (forall ((a Set<Int>) (b Set<Int>) (o Int)) (!
  (= (Set_in o (Set_difference a b)) (and (Set_in o a) (not (Set_in o b))))
  :pattern ((Set_in o (Set_difference a b)))
  :pattern ((Set_difference a b) (Set_in o a))
  )))
(assert (forall ((a Set<Int>) (b Set<Int>) (y Int)) (!
  (=> (Set_in y b) (not (Set_in y (Set_difference a b))))
  :pattern ((Set_difference a b) (Set_in y b))
  )))
(assert (forall ((a Set<Int>) (b Set<Int>)) (!
  (and
    (=
      (+
        (+ (Set_card (Set_difference a b)) (Set_card (Set_difference b a)))
        (Set_card (Set_intersection a b)))
      (Set_card (Set_union a b)))
    (=
      (Set_card (Set_difference a b))
      (- (Set_card a) (Set_card (Set_intersection a b)))))
  :pattern ((Set_card (Set_difference a b)))
  )))
(assert (forall ((a Set<Int>) (b Set<Int>)) (!
  (=
    (Set_subset a b)
    (forall ((o Int)) (!
      (=> (Set_in o a) (Set_in o b))
      :pattern ((Set_in o a))
      :pattern ((Set_in o b))
      )))
  :pattern ((Set_subset a b))
  )))
(assert (forall ((a Set<Int>) (b Set<Int>)) (!
  (or
    (and (Set_equal a b) (= a b))
    (and
      (not (Set_equal a b))
      (and
        (not (= a b))
        (and
          (= (Set_skolem_diff a b) (Set_skolem_diff b a))
          (not
            (= (Set_in (Set_skolem_diff a b) a) (Set_in (Set_skolem_diff a b) b)))))))
  :pattern ((Set_equal a b))
  )))
(assert (forall ((a Set<Int>) (b Set<Int>)) (!
  (=> (Set_equal a b) (= a b))
  :pattern ((Set_equal a b))
  )))
(assert (forall ((s Set<$Snap>)) (!
  (<= 0 (Set_card s))
  :pattern ((Set_card s))
  )))
(assert (forall ((o $Snap)) (!
  (not (Set_in o (as Set_empty  Set<$Snap>)))
  :pattern ((Set_in o (as Set_empty  Set<$Snap>)))
  )))
(assert (forall ((s Set<$Snap>)) (!
  (and
    (=> (= (Set_card s) 0) (= s (as Set_empty  Set<$Snap>)))
    (=> (not (= (Set_card s) 0)) (exists ((x $Snap))  (Set_in x s))))
  :pattern ((Set_card s))
  )))
(assert (forall ((r $Snap)) (!
  (Set_in r (Set_singleton r))
  :pattern ((Set_singleton r))
  )))
(assert (forall ((r $Snap) (o $Snap)) (!
  (= (Set_in o (Set_singleton r)) (= r o))
  :pattern ((Set_in o (Set_singleton r)))
  )))
(assert (forall ((r $Snap)) (!
  (= (Set_card (Set_singleton r)) 1)
  :pattern ((Set_card (Set_singleton r)))
  )))
(assert (forall ((a Set<$Snap>) (x $Snap) (o $Snap)) (!
  (= (Set_in o (Set_unionone a x)) (or (= o x) (Set_in o a)))
  :pattern ((Set_in o (Set_unionone a x)))
  )))
(assert (forall ((a Set<$Snap>) (x $Snap)) (!
  (Set_in x (Set_unionone a x))
  :pattern ((Set_unionone a x))
  )))
(assert (forall ((a Set<$Snap>) (x $Snap) (y $Snap)) (!
  (=> (Set_in y a) (Set_in y (Set_unionone a x)))
  :pattern ((Set_unionone a x) (Set_in y a))
  )))
(assert (forall ((a Set<$Snap>) (x $Snap)) (!
  (=> (Set_in x a) (= (Set_card (Set_unionone a x)) (Set_card a)))
  :pattern ((Set_card (Set_unionone a x)))
  )))
(assert (forall ((a Set<$Snap>) (x $Snap)) (!
  (=> (not (Set_in x a)) (= (Set_card (Set_unionone a x)) (+ (Set_card a) 1)))
  :pattern ((Set_card (Set_unionone a x)))
  )))
(assert (forall ((a Set<$Snap>) (b Set<$Snap>) (o $Snap)) (!
  (= (Set_in o (Set_union a b)) (or (Set_in o a) (Set_in o b)))
  :pattern ((Set_in o (Set_union a b)))
  )))
(assert (forall ((a Set<$Snap>) (b Set<$Snap>) (y $Snap)) (!
  (=> (Set_in y a) (Set_in y (Set_union a b)))
  :pattern ((Set_union a b) (Set_in y a))
  )))
(assert (forall ((a Set<$Snap>) (b Set<$Snap>) (y $Snap)) (!
  (=> (Set_in y b) (Set_in y (Set_union a b)))
  :pattern ((Set_union a b) (Set_in y b))
  )))
(assert (forall ((a Set<$Snap>) (b Set<$Snap>) (o $Snap)) (!
  (= (Set_in o (Set_intersection a b)) (and (Set_in o a) (Set_in o b)))
  :pattern ((Set_in o (Set_intersection a b)))
  :pattern ((Set_intersection a b) (Set_in o a))
  :pattern ((Set_intersection a b) (Set_in o b))
  )))
(assert (forall ((a Set<$Snap>) (b Set<$Snap>)) (!
  (= (Set_union (Set_union a b) b) (Set_union a b))
  :pattern ((Set_union (Set_union a b) b))
  )))
(assert (forall ((a Set<$Snap>) (b Set<$Snap>)) (!
  (= (Set_union a (Set_union a b)) (Set_union a b))
  :pattern ((Set_union a (Set_union a b)))
  )))
(assert (forall ((a Set<$Snap>) (b Set<$Snap>)) (!
  (= (Set_intersection (Set_intersection a b) b) (Set_intersection a b))
  :pattern ((Set_intersection (Set_intersection a b) b))
  )))
(assert (forall ((a Set<$Snap>) (b Set<$Snap>)) (!
  (= (Set_intersection a (Set_intersection a b)) (Set_intersection a b))
  :pattern ((Set_intersection a (Set_intersection a b)))
  )))
(assert (forall ((a Set<$Snap>) (b Set<$Snap>)) (!
  (=
    (+ (Set_card (Set_union a b)) (Set_card (Set_intersection a b)))
    (+ (Set_card a) (Set_card b)))
  :pattern ((Set_card (Set_union a b)))
  :pattern ((Set_card (Set_intersection a b)))
  )))
(assert (forall ((a Set<$Snap>) (b Set<$Snap>) (o $Snap)) (!
  (= (Set_in o (Set_difference a b)) (and (Set_in o a) (not (Set_in o b))))
  :pattern ((Set_in o (Set_difference a b)))
  :pattern ((Set_difference a b) (Set_in o a))
  )))
(assert (forall ((a Set<$Snap>) (b Set<$Snap>) (y $Snap)) (!
  (=> (Set_in y b) (not (Set_in y (Set_difference a b))))
  :pattern ((Set_difference a b) (Set_in y b))
  )))
(assert (forall ((a Set<$Snap>) (b Set<$Snap>)) (!
  (and
    (=
      (+
        (+ (Set_card (Set_difference a b)) (Set_card (Set_difference b a)))
        (Set_card (Set_intersection a b)))
      (Set_card (Set_union a b)))
    (=
      (Set_card (Set_difference a b))
      (- (Set_card a) (Set_card (Set_intersection a b)))))
  :pattern ((Set_card (Set_difference a b)))
  )))
(assert (forall ((a Set<$Snap>) (b Set<$Snap>)) (!
  (=
    (Set_subset a b)
    (forall ((o $Snap)) (!
      (=> (Set_in o a) (Set_in o b))
      :pattern ((Set_in o a))
      :pattern ((Set_in o b))
      )))
  :pattern ((Set_subset a b))
  )))
(assert (forall ((a Set<$Snap>) (b Set<$Snap>)) (!
  (or
    (and (Set_equal a b) (= a b))
    (and
      (not (Set_equal a b))
      (and
        (not (= a b))
        (and
          (= (Set_skolem_diff a b) (Set_skolem_diff b a))
          (not
            (= (Set_in (Set_skolem_diff a b) a) (Set_in (Set_skolem_diff a b) b)))))))
  :pattern ((Set_equal a b))
  )))
(assert (forall ((a Set<$Snap>) (b Set<$Snap>)) (!
  (=> (Set_equal a b) (= a b))
  :pattern ((Set_equal a b))
  )))
; /field_value_functions_axioms.smt2 [val_ref: Ref]
(assert (forall ((vs $FVF<val_ref>) (ws $FVF<val_ref>)) (!
    (=>
      (and
        (Set_equal ($FVF.domain_val_ref vs) ($FVF.domain_val_ref ws))
        (forall ((x $Ref)) (!
          (=>
            (Set_in x ($FVF.domain_val_ref vs))
            (= ($FVF.lookup_val_ref vs x) ($FVF.lookup_val_ref ws x)))
          :pattern (($FVF.lookup_val_ref vs x) ($FVF.lookup_val_ref ws x))
          :qid |qp.$FVF<val_ref>-eq-inner|
          )))
      (= vs ws))
    :pattern (($SortWrappers.$FVF<val_ref>To$Snap vs)
              ($SortWrappers.$FVF<val_ref>To$Snap ws)
              )
    :qid |qp.$FVF<val_ref>-eq-outer|
    )))
(assert (forall ((r $Ref) (pm $FPM)) (!
    ($Perm.isValidVar ($FVF.perm_val_ref pm r))
    :pattern (($FVF.perm_val_ref pm r)))))
(assert (forall ((r $Ref) (f $Ref)) (!
    (= ($FVF.loc_val_ref f r) true)
    :pattern (($FVF.loc_val_ref f r)))))
; End preamble
; ------------------------------------------------------------
; State saturation: after preamble
(set-option :timeout 100)
(check-sat)
; unknown
; ------------------------------------------------------------
; Begin function- and predicate-related preamble
; Declaring symbols related to program functions (from verification)
(assert (forall ((s@$ $Snap)) (!
  (= (read$%limited s@$) (read$ s@$))
  :pattern ((read$ s@$))
  :qid |quant-u-47|)))
(assert (forall ((s@$ $Snap)) (!
  (as read$%stateless  Bool)
  :pattern ((read$%limited s@$))
  :qid |quant-u-48|)))
(assert (forall ((s@$ $Snap)) (!
  (let ((result@0@00 (read$%limited s@$))) (=>
    (read$%precondition s@$)
    (and (< $Perm.No result@0@00) (< result@0@00 $Perm.Write))))
  :pattern ((read$%limited s@$))
  :qid |quant-u-71|)))
(assert (forall ((s@$ $Snap)) (!
  (let ((result@0@00 (read$%limited s@$))) true)
  :pattern ((read$%limited s@$))
  :qid |quant-u-72|)))
(assert (forall ((s@$ $Snap)) (!
  (let ((result@0@00 (read$%limited s@$))) true)
  :pattern ((read$%limited s@$))
  :qid |quant-u-73|)))
(assert (forall ((s@$ $Snap) (_pure_1@1@00 $Ref)) (!
  (=
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@1@00)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ s@$ _pure_1@1@00))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ s@$ _pure_1@1@00))
  :qid |quant-u-49|)))
(assert (forall ((s@$ $Snap) (_pure_1@1@00 $Ref)) (!
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%stateless _pure_1@1@00)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@1@00))
  :qid |quant-u-50|)))
(assert (forall ((s@$ $Snap) (_pure_1@1@00 $Ref)) (!
  (let ((result@2@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@1@00))) (=>
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition s@$ _pure_1@1@00)
    (and (>= result@2@00 0) (<= 0 result@2@00))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@1@00))
  :qid |quant-u-74|)))
(assert (forall ((s@$ $Snap) (_pure_1@1@00 $Ref)) (!
  (let ((result@2@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@1@00))) true)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@1@00))
  :qid |quant-u-75|)))
(assert (forall ((s@$ $Snap) (_pure_1@1@00 $Ref)) (!
  (let ((result@2@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@1@00))) true)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@1@00))
  :qid |quant-u-76|)))
(assert (forall ((s@$ $Snap) (_pure_1@3@00 $Ref) (_pure_2@4@00 Int)) (!
  (=
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@3@00 _pure_2@4@00)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ s@$ _pure_1@3@00 _pure_2@4@00))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ s@$ _pure_1@3@00 _pure_2@4@00))
  :qid |quant-u-51|)))
(assert (forall ((s@$ $Snap) (_pure_1@3@00 $Ref) (_pure_2@4@00 Int)) (!
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%stateless _pure_1@3@00 _pure_2@4@00)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@3@00 _pure_2@4@00))
  :qid |quant-u-52|)))
(assert (forall ((s@$ $Snap) (_pure_1@3@00 $Ref) (_pure_2@4@00 Int)) (!
  (let ((result@5@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@3@00 _pure_2@4@00))) (=>
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition s@$ _pure_1@3@00 _pure_2@4@00)
    (and (>= result@5@00 0) (<= 0 result@5@00))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@3@00 _pure_2@4@00))
  :qid |quant-u-77|)))
(assert (forall ((s@$ $Snap) (_pure_1@3@00 $Ref) (_pure_2@4@00 Int)) (!
  (let ((result@5@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@3@00 _pure_2@4@00))) true)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@3@00 _pure_2@4@00))
  :qid |quant-u-78|)))
(assert (forall ((s@$ $Snap) (_pure_1@3@00 $Ref) (_pure_2@4@00 Int)) (!
  (let ((result@5@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@3@00 _pure_2@4@00))) true)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@3@00 _pure_2@4@00))
  :qid |quant-u-79|)))
(assert (forall ((s@$ $Snap) (_pure_1@6@00 Int) (_pure_2@7@00 Int)) (!
  (=
    (m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%limited s@$ _pure_1@6@00 _pure_2@7@00)
    (m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$ s@$ _pure_1@6@00 _pure_2@7@00))
  :pattern ((m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$ s@$ _pure_1@6@00 _pure_2@7@00))
  :qid |quant-u-53|)))
(assert (forall ((s@$ $Snap) (_pure_1@6@00 Int) (_pure_2@7@00 Int)) (!
  (m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%stateless _pure_1@6@00 _pure_2@7@00)
  :pattern ((m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%limited s@$ _pure_1@6@00 _pure_2@7@00))
  :qid |quant-u-54|)))
(assert (forall ((s@$ $Snap) (_pure_1@6@00 Int) (_pure_2@7@00 Int)) (!
  (let ((result@8@00 (m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%limited s@$ _pure_1@6@00 _pure_2@7@00))) (=>
    (m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%precondition s@$ _pure_1@6@00 _pure_2@7@00)
    (and
      (<= 0 result@8@00)
      (=
        result@8@00
        (mirror$m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$__$TY$__$int$$$int$$$int$<Int> _pure_1@6@00 _pure_2@7@00)))))
  :pattern ((m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%limited s@$ _pure_1@6@00 _pure_2@7@00))
  :qid |quant-u-80|)))
(assert (forall ((s@$ $Snap) (_pure_1@6@00 Int) (_pure_2@7@00 Int)) (!
  (let ((result@8@00 (m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%limited s@$ _pure_1@6@00 _pure_2@7@00))) true)
  :pattern ((m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%limited s@$ _pure_1@6@00 _pure_2@7@00))
  :qid |quant-u-81|)))
(assert (forall ((s@$ $Snap) (_pure_1@6@00 Int) (_pure_2@7@00 Int)) (!
  (let ((result@8@00 (m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%limited s@$ _pure_1@6@00 _pure_2@7@00))) true)
  :pattern ((m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%limited s@$ _pure_1@6@00 _pure_2@7@00))
  :qid |quant-u-82|)))
(assert (forall ((s@$ $Snap) (_pure_1@6@00 Int) (_pure_2@7@00 Int)) (!
  (let ((result@8@00 (m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%limited s@$ _pure_1@6@00 _pure_2@7@00))) true)
  :pattern ((m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%limited s@$ _pure_1@6@00 _pure_2@7@00))
  :qid |quant-u-83|)))
(assert (forall ((s@$ $Snap) (_pure_1@6@00 Int) (_pure_2@7@00 Int)) (!
  (=>
    (m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%precondition s@$ _pure_1@6@00 _pure_2@7@00)
    (=
      (m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$ s@$ _pure_1@6@00 _pure_2@7@00)
      (ite (not (< _pure_1@6@00 _pure_2@7@00)) _pure_1@6@00 _pure_2@7@00)))
  :pattern ((m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$ s@$ _pure_1@6@00 _pure_2@7@00))
  :qid |quant-u-84|)))
(assert (forall ((s@$ $Snap) (_pure_1@6@00 Int) (_pure_2@7@00 Int)) (!
  true
  :pattern ((m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$ s@$ _pure_1@6@00 _pure_2@7@00))
  :qid |quant-u-85|)))
(assert (forall ((s@$ $Snap) (_pure_1@9@00 $Ref) (_pure_2@10@00 Int)) (!
  (=
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@9@00 _pure_2@10@00)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ s@$ _pure_1@9@00 _pure_2@10@00))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ s@$ _pure_1@9@00 _pure_2@10@00))
  :qid |quant-u-55|)))
(assert (forall ((s@$ $Snap) (_pure_1@9@00 $Ref) (_pure_2@10@00 Int)) (!
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%stateless _pure_1@9@00 _pure_2@10@00)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@9@00 _pure_2@10@00))
  :qid |quant-u-56|)))
(assert (forall ((s@$ $Snap) (_pure_1@9@00 $Ref) (_pure_2@10@00 Int)) (!
  (let ((result@11@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@9@00 _pure_2@10@00))) (=>
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition s@$ _pure_1@9@00 _pure_2@10@00)
    (and (> result@11@00 0) (<= 0 result@11@00))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@9@00 _pure_2@10@00))
  :qid |quant-u-86|)))
(assert (forall ((s@$ $Snap) (_pure_1@9@00 $Ref) (_pure_2@10@00 Int)) (!
  (let ((result@11@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@9@00 _pure_2@10@00))) true)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@9@00 _pure_2@10@00))
  :qid |quant-u-87|)))
(assert (forall ((s@$ $Snap) (_pure_1@9@00 $Ref) (_pure_2@10@00 Int)) (!
  (let ((result@11@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@9@00 _pure_2@10@00))) true)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%limited s@$ _pure_1@9@00 _pure_2@10@00))
  :qid |quant-u-88|)))
(assert (forall ((s@$ $Snap) (_pure_1@12@00 $Ref)) (!
  (=
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@12@00)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ s@$ _pure_1@12@00))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ s@$ _pure_1@12@00))
  :qid |quant-u-57|)))
(assert (forall ((s@$ $Snap) (_pure_1@12@00 $Ref)) (!
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%stateless _pure_1@12@00)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@12@00))
  :qid |quant-u-58|)))
(assert (forall ((s@$ $Snap) (_pure_1@12@00 $Ref)) (!
  (let ((result@13@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@12@00))) (=>
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition s@$ _pure_1@12@00)
    (<= 0 result@13@00)))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@12@00))
  :qid |quant-u-89|)))
(assert (forall ((s@$ $Snap) (_pure_1@12@00 $Ref)) (!
  (let ((result@13@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@12@00))) true)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@12@00))
  :qid |quant-u-90|)))
(assert (forall ((s@$ $Snap) (_pure_1@12@00 $Ref)) (!
  (let ((result@13@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@12@00))) true)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@12@00))
  :qid |quant-u-91|)))
(assert (forall ((s@$ $Snap) (_pure_1@12@00 $Ref)) (!
  (=>
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition s@$ _pure_1@12@00)
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ s@$ _pure_1@12@00)
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.first s@$)))))))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ s@$ _pure_1@12@00))
  :qid |quant-u-92|)))
(assert (forall ((s@$ $Snap) (_pure_1@12@00 $Ref)) (!
  true
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ s@$ _pure_1@12@00))
  :qid |quant-u-93|)))
(assert (forall ((s@$ $Snap) (_pure_1@14@00 $Ref)) (!
  (=
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@14@00)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ s@$ _pure_1@14@00))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ s@$ _pure_1@14@00))
  :qid |quant-u-59|)))
(assert (forall ((s@$ $Snap) (_pure_1@14@00 $Ref)) (!
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%stateless _pure_1@14@00)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@14@00))
  :qid |quant-u-60|)))
(assert (forall ((s@$ $Snap) (_pure_1@14@00 $Ref)) (!
  (let ((result@15@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@14@00))) (=>
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition s@$ _pure_1@14@00)
    (<= 0 result@15@00)))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@14@00))
  :qid |quant-u-94|)))
(assert (forall ((s@$ $Snap) (_pure_1@14@00 $Ref)) (!
  (let ((result@15@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@14@00))) true)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@14@00))
  :qid |quant-u-95|)))
(assert (forall ((s@$ $Snap) (_pure_1@14@00 $Ref)) (!
  (let ((result@15@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@14@00))) true)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%limited s@$ _pure_1@14@00))
  :qid |quant-u-96|)))
(assert (forall ((s@$ $Snap) (_pure_1@14@00 $Ref)) (!
  (=>
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition s@$ _pure_1@14@00)
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ s@$ _pure_1@14@00)
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.first s@$)))))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ s@$ _pure_1@14@00))
  :qid |quant-u-97|)))
(assert (forall ((s@$ $Snap) (_pure_1@14@00 $Ref)) (!
  true
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ s@$ _pure_1@14@00))
  :qid |quant-u-98|)))
(assert (forall ((s@$ $Snap)) (!
  (=
    (builtin$undef_int__$TY$__$int$%limited s@$)
    (builtin$undef_int__$TY$__$int$ s@$))
  :pattern ((builtin$undef_int__$TY$__$int$ s@$))
  :qid |quant-u-61|)))
(assert (forall ((s@$ $Snap)) (!
  (as builtin$undef_int__$TY$__$int$%stateless  Bool)
  :pattern ((builtin$undef_int__$TY$__$int$%limited s@$))
  :qid |quant-u-62|)))
(assert (forall ((s@$ $Snap)) (!
  (=
    (builtin$unreach_bool__$TY$__$bool$%limited s@$)
    (builtin$unreach_bool__$TY$__$bool$ s@$))
  :pattern ((builtin$unreach_bool__$TY$__$bool$ s@$))
  :qid |quant-u-63|)))
(assert (forall ((s@$ $Snap)) (!
  (as builtin$unreach_bool__$TY$__$bool$%stateless  Bool)
  :pattern ((builtin$unreach_bool__$TY$__$bool$%limited s@$))
  :qid |quant-u-64|)))
(assert (forall ((s@$ $Snap) (_pure_1@18@00 $Ref) (_pure_2@19@00 Int) (_pure_3@20@00 Int) (_pure_4@21@00 Int)) (!
  (=
    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00)
    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00))
  :qid |quant-u-65|)))
(assert (forall ((s@$ $Snap) (_pure_1@18@00 $Ref) (_pure_2@19@00 Int) (_pure_3@20@00 Int) (_pure_4@21@00 Int)) (!
  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%stateless _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00)
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00))
  :qid |quant-u-66|)))
(assert (forall ((s@$ $Snap) (_pure_1@18@00 $Ref) (_pure_2@19@00 Int) (_pure_3@20@00 Int) (_pure_4@21@00 Int)) (!
  (let ((result@22@00 (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00))) (=>
    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00)
    (<= 0 result@22@00)))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00))
  :qid |quant-u-99|)))
(assert (forall ((s@$ $Snap) (_pure_1@18@00 $Ref) (_pure_2@19@00 Int) (_pure_3@20@00 Int) (_pure_4@21@00 Int)) (!
  (let ((result@22@00 (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00))) true)
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00))
  :qid |quant-u-100|)))
(assert (forall ((s@$ $Snap) (_pure_1@18@00 $Ref) (_pure_2@19@00 Int) (_pure_3@20@00 Int) (_pure_4@21@00 Int)) (!
  (let ((result@22@00 (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00))) true)
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00))
  :qid |quant-u-101|)))
(assert (forall ((s@$ $Snap) (_pure_1@18@00 $Ref) (_pure_2@19@00 Int) (_pure_3@20@00 Int) (_pure_4@21@00 Int)) (!
  (=>
    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00)
    (=
      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00)
      (ite
        (= _pure_2@19@00 0)
        0
        (ite
          (not
            (>
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                ($Snap.first s@$)
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) _pure_1@18@00 (-
                _pure_2@19@00
                1))
              _pure_3@20@00))
          (m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$ ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first s@$)
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) _pure_1@18@00 (-
            _pure_2@19@00
            1) _pure_3@20@00 _pure_4@21@00) (+
            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
              ($Snap.first s@$)
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) _pure_1@18@00 (-
              _pure_2@19@00
              1) (-
              _pure_3@20@00
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                ($Snap.first s@$)
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) _pure_1@18@00 (-
                _pure_2@19@00
                1))) _pure_4@21@00)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
              ($Snap.first s@$)
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) _pure_1@18@00 (-
              _pure_2@19@00
              1))))
          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first s@$)
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) _pure_1@18@00 (-
            _pure_2@19@00
            1) _pure_3@20@00 _pure_4@21@00)))))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00))
  :qid |quant-u-102|)))
(assert (forall ((s@$ $Snap) (_pure_1@18@00 $Ref) (_pure_2@19@00 Int) (_pure_3@20@00 Int) (_pure_4@21@00 Int)) (!
  (=>
    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00)
    (ite
      (= _pure_2@19@00 0)
      true
      (and
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
          ($Snap.first s@$)
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) _pure_1@18@00 (-
          _pure_2@19@00
          1))
        (ite
          (not
            (>
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                ($Snap.first s@$)
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) _pure_1@18@00 (-
                _pure_2@19@00
                1))
              _pure_3@20@00))
          (and
            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
              ($Snap.first s@$)
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) _pure_1@18@00 (-
              _pure_2@19@00
              1) _pure_3@20@00 _pure_4@21@00)
            (and
              (and
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                  ($Snap.first s@$)
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))) _pure_1@18@00 (-
                  _pure_2@19@00
                  1))
                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                  ($Snap.first s@$)
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))))))) _pure_1@18@00 (-
                  _pure_2@19@00
                  1) (-
                  _pure_3@20@00
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                    ($Snap.first s@$)
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))) _pure_1@18@00 (-
                    _pure_2@19@00
                    1))) _pure_4@21@00))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                ($Snap.first s@$)
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) _pure_1@18@00 (-
                _pure_2@19@00
                1)))
            (m_knapsack$$max$opensqu$0$closesqu$__$TY$__$int$$$int$$$int$%precondition ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
              ($Snap.first s@$)
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) _pure_1@18@00 (-
              _pure_2@19@00
              1) _pure_3@20@00 _pure_4@21@00) (+
              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                ($Snap.first s@$)
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit))))))) _pure_1@18@00 (-
                _pure_2@19@00
                1) (-
                _pure_3@20@00
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                  ($Snap.first s@$)
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))) _pure_1@18@00 (-
                  _pure_2@19@00
                  1))) _pure_4@21@00)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                ($Snap.first s@$)
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) _pure_1@18@00 (-
                _pure_2@19@00
                1)))))
          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
            ($Snap.first s@$)
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) _pure_1@18@00 (-
            _pure_2@19@00
            1) _pure_3@20@00 _pure_4@21@00)))))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ s@$ _pure_1@18@00 _pure_2@19@00 _pure_3@20@00 _pure_4@21@00))
  :qid |quant-u-103|)))
(assert (forall ((s@$ $Snap)) (!
  (=
    (builtin$unreach_int__$TY$__$int$%limited s@$)
    (builtin$unreach_int__$TY$__$int$ s@$))
  :pattern ((builtin$unreach_int__$TY$__$int$ s@$))
  :qid |quant-u-67|)))
(assert (forall ((s@$ $Snap)) (!
  (as builtin$unreach_int__$TY$__$int$%stateless  Bool)
  :pattern ((builtin$unreach_int__$TY$__$int$%limited s@$))
  :qid |quant-u-68|)))
(assert (forall ((s@$ $Snap) (_pure_1@24@00 $Ref) (_pure_2@25@00 Int) (_pure_3@26@00 Int)) (!
  (=
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited s@$ _pure_1@24@00 _pure_2@25@00 _pure_3@26@00)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ s@$ _pure_1@24@00 _pure_2@25@00 _pure_3@26@00))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ s@$ _pure_1@24@00 _pure_2@25@00 _pure_3@26@00))
  :qid |quant-u-69|)))
(assert (forall ((s@$ $Snap) (_pure_1@24@00 $Ref) (_pure_2@25@00 Int) (_pure_3@26@00 Int)) (!
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%stateless _pure_1@24@00 _pure_2@25@00 _pure_3@26@00)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited s@$ _pure_1@24@00 _pure_2@25@00 _pure_3@26@00))
  :qid |quant-u-70|)))
(assert (forall ((s@$ $Snap) (_pure_1@24@00 $Ref) (_pure_2@25@00 Int) (_pure_3@26@00 Int)) (!
  (let ((result@27@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited s@$ _pure_1@24@00 _pure_2@25@00 _pure_3@26@00))) (=>
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition s@$ _pure_1@24@00 _pure_2@25@00 _pure_3@26@00)
    (<= 0 result@27@00)))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited s@$ _pure_1@24@00 _pure_2@25@00 _pure_3@26@00))
  :qid |quant-u-104|)))
(assert (forall ((s@$ $Snap) (_pure_1@24@00 $Ref) (_pure_2@25@00 Int) (_pure_3@26@00 Int)) (!
  (let ((result@27@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited s@$ _pure_1@24@00 _pure_2@25@00 _pure_3@26@00))) true)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited s@$ _pure_1@24@00 _pure_2@25@00 _pure_3@26@00))
  :qid |quant-u-105|)))
(assert (forall ((s@$ $Snap) (_pure_1@24@00 $Ref) (_pure_2@25@00 Int) (_pure_3@26@00 Int)) (!
  (let ((result@27@00 (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited s@$ _pure_1@24@00 _pure_2@25@00 _pure_3@26@00))) true)
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited s@$ _pure_1@24@00 _pure_2@25@00 _pure_3@26@00))
  :qid |quant-u-106|)))
; End function- and predicate-related preamble
; ------------------------------------------------------------
; ---------- m_knapsack$$main$opensqu$0$closesqu$ ----------
(declare-const _0@0@01 $Ref)
(declare-const _0@1@01 $Ref)
(set-option :timeout 0)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var __t0: Bool
(declare-const __t0@2@01 Bool)
; [exec]
; label start
; [exec]
; __t0 := false
; [exec]
; inhale true
(declare-const $t@3@01 $Snap)
(assert (= $t@3@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@4@01 $Snap)
(assert (= $t@4@01 $Snap.unit))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@5@01 $Snap)
(assert (= $t@5@01 $Snap.unit))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@6@01 $Snap)
(assert (= $t@6@01 $Snap.unit))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; label pre
; [exec]
; label bb0
; [exec]
; __t0 := true
; [exec]
; _0 := builtin$havoc_ref()
(declare-const ret@7@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(tuple0$(_0), write)
(declare-const $t@8@01 $Snap)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label return
; [exec]
; assert true
; [exec]
; exhale acc(tuple0$(_0), write)
; [exec]
; label end_of_method
(pop) ; 2
(pop) ; 1
; ---------- m_knapsack$$knapsack01_dyn$opensqu$0$closesqu$ ----------
(declare-const _0@9@01 $Ref)
(declare-const _0@10@01 $Ref)
(set-option :timeout 0)
(push) ; 1
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 2
(pop) ; 2
(push) ; 2
; [exec]
; var __t0: Bool
(declare-const __t0@11@01 Bool)
; [exec]
; var __t1: Bool
(declare-const __t1@12@01 Bool)
; [exec]
; var __t2: Bool
(declare-const __t2@13@01 Bool)
; [exec]
; var __t3: Bool
(declare-const __t3@14@01 Bool)
; [exec]
; var __t4: Bool
(declare-const __t4@15@01 Bool)
; [exec]
; var __t5: Bool
(declare-const __t5@16@01 Bool)
; [exec]
; var __t6: Bool
(declare-const __t6@17@01 Bool)
; [exec]
; var __t7: Bool
(declare-const __t7@18@01 Bool)
; [exec]
; var __t8: Bool
(declare-const __t8@19@01 Bool)
; [exec]
; var __t9: Bool
(declare-const __t9@20@01 Bool)
; [exec]
; var __t10: Bool
(declare-const __t10@21@01 Bool)
; [exec]
; var __t11: Bool
(declare-const __t11@22@01 Bool)
; [exec]
; var __t12: Bool
(declare-const __t12@23@01 Bool)
; [exec]
; var __t13: Bool
(declare-const __t13@24@01 Bool)
; [exec]
; var __t14: Bool
(declare-const __t14@25@01 Bool)
; [exec]
; var __t15: Bool
(declare-const __t15@26@01 Bool)
; [exec]
; var __t16: Bool
(declare-const __t16@27@01 Bool)
; [exec]
; var __t17: Bool
(declare-const __t17@28@01 Bool)
; [exec]
; var __t18: Bool
(declare-const __t18@29@01 Bool)
; [exec]
; var __t19: Bool
(declare-const __t19@30@01 Bool)
; [exec]
; var __t20: Bool
(declare-const __t20@31@01 Bool)
; [exec]
; var __t21: Bool
(declare-const __t21@32@01 Bool)
; [exec]
; var __t22: Bool
(declare-const __t22@33@01 Bool)
; [exec]
; var __t23: Bool
(declare-const __t23@34@01 Bool)
; [exec]
; var __t24: Bool
(declare-const __t24@35@01 Bool)
; [exec]
; var __t25: Bool
(declare-const __t25@36@01 Bool)
; [exec]
; var __t26: Bool
(declare-const __t26@37@01 Bool)
; [exec]
; var __t27: Bool
(declare-const __t27@38@01 Bool)
; [exec]
; var __t28: Bool
(declare-const __t28@39@01 Bool)
; [exec]
; var __t29: Bool
(declare-const __t29@40@01 Bool)
; [exec]
; var __t30: Bool
(declare-const __t30@41@01 Bool)
; [exec]
; var __t31: Bool
(declare-const __t31@42@01 Bool)
; [exec]
; var __t32: Bool
(declare-const __t32@43@01 Bool)
; [exec]
; var __t33: Bool
(declare-const __t33@44@01 Bool)
; [exec]
; var __t34: Bool
(declare-const __t34@45@01 Bool)
; [exec]
; var __t35: Bool
(declare-const __t35@46@01 Bool)
; [exec]
; var __t36: Bool
(declare-const __t36@47@01 Bool)
; [exec]
; var __t37: Bool
(declare-const __t37@48@01 Bool)
; [exec]
; var __t38: Bool
(declare-const __t38@49@01 Bool)
; [exec]
; var __t39: Bool
(declare-const __t39@50@01 Bool)
; [exec]
; var __t40: Bool
(declare-const __t40@51@01 Bool)
; [exec]
; var __t41: Bool
(declare-const __t41@52@01 Bool)
; [exec]
; var __t42: Bool
(declare-const __t42@53@01 Bool)
; [exec]
; var __t43: Bool
(declare-const __t43@54@01 Bool)
; [exec]
; var __t44: Bool
(declare-const __t44@55@01 Bool)
; [exec]
; var __t45: Bool
(declare-const __t45@56@01 Bool)
; [exec]
; var __t46: Bool
(declare-const __t46@57@01 Bool)
; [exec]
; var __t47: Bool
(declare-const __t47@58@01 Bool)
; [exec]
; var __t48: Bool
(declare-const __t48@59@01 Bool)
; [exec]
; var __t49: Bool
(declare-const __t49@60@01 Bool)
; [exec]
; var __t50: Bool
(declare-const __t50@61@01 Bool)
; [exec]
; var __t51: Bool
(declare-const __t51@62@01 Bool)
; [exec]
; var __t52: Bool
(declare-const __t52@63@01 Bool)
; [exec]
; var __t53: Bool
(declare-const __t53@64@01 Bool)
; [exec]
; var __t54: Bool
(declare-const __t54@65@01 Bool)
; [exec]
; var __t55: Bool
(declare-const __t55@66@01 Bool)
; [exec]
; var _preserve$0: Ref
(declare-const _preserve$0@67@01 $Ref)
; [exec]
; var _old$l18$0: Ref
(declare-const _old$l18$0@68@01 $Ref)
; [exec]
; var __t56: Bool
(declare-const __t56@69@01 Bool)
; [exec]
; var __t57: Bool
(declare-const __t57@70@01 Bool)
; [exec]
; var _preserve$1: Ref
(declare-const _preserve$1@71@01 $Ref)
; [exec]
; var _preserve$2: Ref
(declare-const _preserve$2@72@01 $Ref)
; [exec]
; var __t58: Bool
(declare-const __t58@73@01 Bool)
; [exec]
; var _old$l31$0: Ref
(declare-const _old$l31$0@74@01 $Ref)
; [exec]
; var _old$l38$0: Ref
(declare-const _old$l38$0@75@01 $Ref)
; [exec]
; var __t59: Bool
(declare-const __t59@76@01 Bool)
; [exec]
; var _old$l46$0: Ref
(declare-const _old$l46$0@77@01 $Ref)
; [exec]
; var __t60: Bool
(declare-const __t60@78@01 Bool)
; [exec]
; var __t61: Bool
(declare-const __t61@79@01 Bool)
; [exec]
; var _old$l56$0: Ref
(declare-const _old$l56$0@80@01 $Ref)
; [exec]
; var __t62: Bool
(declare-const __t62@81@01 Bool)
; [exec]
; var __t63: Bool
(declare-const __t63@82@01 Bool)
; [exec]
; var __t64: Bool
(declare-const __t64@83@01 Bool)
; [exec]
; var __t65: Bool
(declare-const __t65@84@01 Bool)
; [exec]
; var __t66: Bool
(declare-const __t66@85@01 Bool)
; [exec]
; var __t67: Bool
(declare-const __t67@86@01 Bool)
; [exec]
; var __t68: Bool
(declare-const __t68@87@01 Bool)
; [exec]
; var __t69: Bool
(declare-const __t69@88@01 Bool)
; [exec]
; var _preserve$3: Ref
(declare-const _preserve$3@89@01 $Ref)
; [exec]
; var __t70: Bool
(declare-const __t70@90@01 Bool)
; [exec]
; var _old$l89$0: Ref
(declare-const _old$l89$0@91@01 $Ref)
; [exec]
; var __t71: Bool
(declare-const __t71@92@01 Bool)
; [exec]
; var _old$l95$0: Ref
(declare-const _old$l95$0@93@01 $Ref)
; [exec]
; var _old$l101$0: Ref
(declare-const _old$l101$0@94@01 $Ref)
; [exec]
; var __t72: Bool
(declare-const __t72@95@01 Bool)
; [exec]
; var __t73: Bool
(declare-const __t73@96@01 Bool)
; [exec]
; var __t74: Bool
(declare-const __t74@97@01 Bool)
; [exec]
; var __t75: Bool
(declare-const __t75@98@01 Bool)
; [exec]
; var _old$pre$0: Ref
(declare-const _old$pre$0@99@01 $Ref)
; [exec]
; var _1: Ref
(declare-const _1@100@01 $Ref)
; [exec]
; var _2: Int
(declare-const _2@101@01 Int)
; [exec]
; var _3: Ref
(declare-const _3@102@01 $Ref)
; [exec]
; var _4: Ref
(declare-const _4@103@01 $Ref)
; [exec]
; var _5: Int
(declare-const _5@104@01 Int)
; [exec]
; var _6: Ref
(declare-const _6@105@01 $Ref)
; [exec]
; var _7: Ref
(declare-const _7@106@01 $Ref)
; [exec]
; var _8: Int
(declare-const _8@107@01 Int)
; [exec]
; var _9: Ref
(declare-const _9@108@01 $Ref)
; [exec]
; var _10: Ref
(declare-const _10@109@01 $Ref)
; [exec]
; var _11: Ref
(declare-const _11@110@01 $Ref)
; [exec]
; var _12: Ref
(declare-const _12@111@01 $Ref)
; [exec]
; var _13: Int
(declare-const _13@112@01 Int)
; [exec]
; var _14: Int
(declare-const _14@113@01 Int)
; [exec]
; var _15: Ref
(declare-const _15@114@01 $Ref)
; [exec]
; var _16: Ref
(declare-const _16@115@01 $Ref)
; [exec]
; var _17: Ref
(declare-const _17@116@01 $Ref)
; [exec]
; var _18: Ref
(declare-const _18@117@01 $Ref)
; [exec]
; var _19: Ref
(declare-const _19@118@01 $Ref)
; [exec]
; var _48: Ref
(declare-const _48@119@01 $Ref)
; [exec]
; var _49: Ref
(declare-const _49@120@01 $Ref)
; [exec]
; var _50: Int
(declare-const _50@121@01 Int)
; [exec]
; var _51: Ref
(declare-const _51@122@01 $Ref)
; [exec]
; var _52: Ref
(declare-const _52@123@01 $Ref)
; [exec]
; var _53: Ref
(declare-const _53@124@01 $Ref)
; [exec]
; var _54: Int
(declare-const _54@125@01 Int)
; [exec]
; var _55: Int
(declare-const _55@126@01 Int)
; [exec]
; var _56: Ref
(declare-const _56@127@01 $Ref)
; [exec]
; var _104: Ref
(declare-const _104@128@01 $Ref)
; [exec]
; var _105: Ref
(declare-const _105@129@01 $Ref)
; [exec]
; var _106: Int
(declare-const _106@130@01 Int)
; [exec]
; var _107: Int
(declare-const _107@131@01 Int)
; [exec]
; var _108: Ref
(declare-const _108@132@01 $Ref)
; [exec]
; var _109: Ref
(declare-const _109@133@01 $Ref)
; [exec]
; var _110: Ref
(declare-const _110@134@01 $Ref)
; [exec]
; var _111: Int
(declare-const _111@135@01 Int)
; [exec]
; var _112: Int
(declare-const _112@136@01 Int)
; [exec]
; var _113: Int
(declare-const _113@137@01 Int)
; [exec]
; var _114: Ref
(declare-const _114@138@01 $Ref)
; [exec]
; var _115: Ref
(declare-const _115@139@01 $Ref)
; [exec]
; var _116: Int
(declare-const _116@140@01 Int)
; [exec]
; var _117: Int
(declare-const _117@141@01 Int)
; [exec]
; var _118: Ref
(declare-const _118@142@01 $Ref)
; [exec]
; var _119: Int
(declare-const _119@143@01 Int)
; [exec]
; var _120: Ref
(declare-const _120@144@01 $Ref)
; [exec]
; var _121: Ref
(declare-const _121@145@01 $Ref)
; [exec]
; var _122: Int
(declare-const _122@146@01 Int)
; [exec]
; var _123: Ref
(declare-const _123@147@01 $Ref)
; [exec]
; var _124: Int
(declare-const _124@148@01 Int)
; [exec]
; var _125: Int
(declare-const _125@149@01 Int)
; [exec]
; var _126: Ref
(declare-const _126@150@01 $Ref)
; [exec]
; var _127: Int
(declare-const _127@151@01 Int)
; [exec]
; var _128: Ref
(declare-const _128@152@01 $Ref)
; [exec]
; var _129: Ref
(declare-const _129@153@01 $Ref)
; [exec]
; var _130: Ref
(declare-const _130@154@01 $Ref)
; [exec]
; var _131: Ref
(declare-const _131@155@01 $Ref)
; [exec]
; var _132: Int
(declare-const _132@156@01 Int)
; [exec]
; var _133: Ref
(declare-const _133@157@01 $Ref)
; [exec]
; var _134: Int
(declare-const _134@158@01 Int)
; [exec]
; var _135: Ref
(declare-const _135@159@01 $Ref)
; [exec]
; var _136: Ref
(declare-const _136@160@01 $Ref)
; [exec]
; var _137: Ref
(declare-const _137@161@01 $Ref)
; [exec]
; var _138: Int
(declare-const _138@162@01 Int)
; [exec]
; var _139: Int
(declare-const _139@163@01 Int)
; [exec]
; var _140: Ref
(declare-const _140@164@01 $Ref)
; [exec]
; var _141: Ref
(declare-const _141@165@01 $Ref)
; [exec]
; var _142: Int
(declare-const _142@166@01 Int)
; [exec]
; var _143: Ref
(declare-const _143@167@01 $Ref)
; [exec]
; var _144: Ref
(declare-const _144@168@01 $Ref)
; [exec]
; var _145: Ref
(declare-const _145@169@01 $Ref)
; [exec]
; var _146: Ref
(declare-const _146@170@01 $Ref)
; [exec]
; var _147: Ref
(declare-const _147@171@01 $Ref)
; [exec]
; var _148: Ref
(declare-const _148@172@01 $Ref)
; [exec]
; var _149: Ref
(declare-const _149@173@01 $Ref)
; [exec]
; var _150: Int
(declare-const _150@174@01 Int)
; [exec]
; var _151: Ref
(declare-const _151@175@01 $Ref)
; [exec]
; var _173: Ref
(declare-const _173@176@01 $Ref)
; [exec]
; var _174: Ref
(declare-const _174@177@01 $Ref)
; [exec]
; var _175: Ref
(declare-const _175@178@01 $Ref)
; [exec]
; var _176: Int
(declare-const _176@179@01 Int)
; [exec]
; var _177: Ref
(declare-const _177@180@01 $Ref)
; [exec]
; var _178: Int
(declare-const _178@181@01 Int)
; [exec]
; var _179: Ref
(declare-const _179@182@01 $Ref)
; [exec]
; var _180: Ref
(declare-const _180@183@01 $Ref)
; [exec]
; var _181: Ref
(declare-const _181@184@01 $Ref)
; [exec]
; var _182: Int
(declare-const _182@185@01 Int)
; [exec]
; var _183: Ref
(declare-const _183@186@01 $Ref)
; [exec]
; var _184: Int
(declare-const _184@187@01 Int)
; [exec]
; var _185: Int
(declare-const _185@188@01 Int)
; [exec]
; var _186: Ref
(declare-const _186@189@01 $Ref)
; [exec]
; var _187: Ref
(declare-const _187@190@01 $Ref)
; [exec]
; var _188: Int
(declare-const _188@191@01 Int)
; [exec]
; var _189: Int
(declare-const _189@192@01 Int)
; [exec]
; var _190: Ref
(declare-const _190@193@01 $Ref)
; [exec]
; var _191: Ref
(declare-const _191@194@01 $Ref)
; [exec]
; var _192: Int
(declare-const _192@195@01 Int)
; [exec]
; var _193: Int
(declare-const _193@196@01 Int)
; [exec]
; var _194: Ref
(declare-const _194@197@01 $Ref)
; [exec]
; var _195: Ref
(declare-const _195@198@01 $Ref)
; [exec]
; var _t196: Int
(declare-const _t196@199@01 Int)
; [exec]
; label start
; [exec]
; __t0 := false
; [exec]
; __t1 := false
; [exec]
; __t2 := false
; [exec]
; __t3 := false
; [exec]
; __t4 := false
; [exec]
; __t5 := false
; [exec]
; __t6 := false
; [exec]
; __t7 := false
; [exec]
; __t8 := false
; [exec]
; __t9 := false
; [exec]
; __t10 := false
; [exec]
; __t11 := false
; [exec]
; __t12 := false
; [exec]
; __t13 := false
; [exec]
; __t14 := false
; [exec]
; __t15 := false
; [exec]
; __t16 := false
; [exec]
; __t17 := false
; [exec]
; __t18 := false
; [exec]
; __t19 := false
; [exec]
; __t20 := false
; [exec]
; __t21 := false
; [exec]
; __t22 := false
; [exec]
; __t23 := false
; [exec]
; __t24 := false
; [exec]
; __t25 := false
; [exec]
; __t26 := false
; [exec]
; __t27 := false
; [exec]
; __t28 := false
; [exec]
; __t29 := false
; [exec]
; __t30 := false
; [exec]
; __t31 := false
; [exec]
; __t32 := false
; [exec]
; __t33 := false
; [exec]
; __t34 := false
; [exec]
; __t35 := false
; [exec]
; __t36 := false
; [exec]
; __t37 := false
; [exec]
; __t38 := false
; [exec]
; __t39 := false
; [exec]
; __t40 := false
; [exec]
; __t41 := false
; [exec]
; __t42 := false
; [exec]
; __t43 := false
; [exec]
; __t44 := false
; [exec]
; __t45 := false
; [exec]
; __t46 := false
; [exec]
; __t47 := false
; [exec]
; __t48 := false
; [exec]
; __t49 := false
; [exec]
; __t50 := false
; [exec]
; __t51 := false
; [exec]
; inhale acc(_1.val_ref, write) &&
;   (acc(m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_(_1.val_ref), read$()) &&
;   _2 >= 0)
(declare-const $t@200@01 $Snap)
(assert (= $t@200@01 ($Snap.combine ($Snap.first $t@200@01) ($Snap.second $t@200@01))))
(assert (not (= _1@100@01 $Ref.null)))
(assert (=
  ($Snap.second $t@200@01)
  ($Snap.combine
    ($Snap.first ($Snap.second $t@200@01))
    ($Snap.second ($Snap.second $t@200@01)))))
; [eval] read$()
(push) ; 3
(assert (read$%precondition $Snap.unit))
(pop) ; 3
; Joined path conditions
(assert (read$%precondition $Snap.unit))
(push) ; 3
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(assert (<= $Perm.No (read$ $Snap.unit)))
(assert (= ($Snap.second ($Snap.second $t@200@01)) $Snap.unit))
; [eval] _2 >= 0
(assert (>= _2@101@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@201@01 $Snap)
(assert (= $t@201@01 $Snap.unit))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@202@01 $Snap)
(assert (= $t@202@01 $Snap.unit))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) <
;   18446744073709551615 &&
;   (2 <= _2 && _2 < 18446744073709551615)
(declare-const $t@203@01 $Snap)
(assert (= $t@203@01 ($Snap.combine ($Snap.first $t@203@01) ($Snap.second $t@203@01))))
(assert (= ($Snap.first $t@203@01) $Snap.unit))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) < 18446744073709551615
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
(set-option :timeout 0)
(push) ; 3
; [eval] read$()
(push) ; 4
(pop) ; 4
; Joined path conditions
(push) ; 4
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(push) ; 4
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second $t@200@01))
  $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))
(pop) ; 3
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second $t@200@01))
  $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))
(assert (<
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second $t@200@01))
    $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)))
  18446744073709551615))
(assert (=
  ($Snap.second $t@203@01)
  ($Snap.combine
    ($Snap.first ($Snap.second $t@203@01))
    ($Snap.second ($Snap.second $t@203@01)))))
(assert (= ($Snap.first ($Snap.second $t@203@01)) $Snap.unit))
; [eval] 2 <= _2
(assert (<= 2 _2@101@01))
(assert (= ($Snap.second ($Snap.second $t@203@01)) $Snap.unit))
; [eval] _2 < 18446744073709551615
(assert (< _2@101@01 18446744073709551615))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label pre
; [exec]
; label bb0
; [exec]
; __t0 := true
; [exec]
; _5 := builtin$havoc_int()
(declare-const ret@204@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@205@01 $Snap)
(assert (= $t@205@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale _2 >= 0
(declare-const $t@206@01 $Snap)
(assert (= $t@206@01 $Snap.unit))
; [eval] _2 >= 0
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; _5 := _2
; [exec]
; label l0
; [exec]
; _6 := builtin$havoc_ref()
(declare-const ret@207@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_6.tuple_0, write)
(declare-const $t@208@01 $Ref)
(assert (not (= ret@207@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale acc(_6.tuple_0.val_int, write)
(declare-const $t@209@01 Int)
(assert (not (= $t@208@01 $Ref.null)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale acc(_6.tuple_1, write)
(declare-const $t@210@01 $Ref)
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale acc(_6.tuple_1.val_bool, write)
(declare-const $t@211@01 Bool)
(assert (not (= $t@210@01 $Ref.null)))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; _6.tuple_0.val_int := _5 + 1
; [eval] _5 + 1
(declare-const val_int@212@01 Int)
(assert (= val_int@212@01 (+ _2@101@01 1)))
; [exec]
; _6.tuple_1.val_bool := false
; [exec]
; __t52 := _6.tuple_1.val_bool
; [exec]
; assert !__t52
; [eval] !__t52
; [exec]
; label bb2
; [exec]
; __t1 := true
; [exec]
; _4 := _6.tuple_0
; [exec]
; label l1
; [exec]
; _9 := builtin$havoc_ref()
(declare-const ret@213@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_9.val_ref, write)
(declare-const $t@214@01 $Ref)
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(assert (not (= ret@213@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _9.val_ref := _1.val_ref
(declare-const val_ref@215@01 $Ref)
(assert (= val_ref@215@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))
(set-option :timeout 0)
(push) ; 3
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [exec]
; inhale acc(m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_(_9.val_ref), read$())
; [eval] read$()
(set-option :timeout 0)
(push) ; 3
(pop) ; 3
; Joined path conditions
(push) ; 3
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(declare-const $t@216@01 $Snap)
(push) ; 3
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) val_ref@215@01)))
(check-sat)
; unsat
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
(declare-const $t@217@01 $Snap)
(assert (and
  (=>
    (< $Perm.No (read$ $Snap.unit))
    (= $t@217@01 ($Snap.first ($Snap.second $t@200@01))))
  (=> (< $Perm.No (read$ $Snap.unit)) (= $t@217@01 $t@216@01))))
(assert (<= $Perm.No (+ (read$ $Snap.unit) (read$ $Snap.unit))))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label l2
; [exec]
; label l3
; [exec]
; _8 := builtin$havoc_int()
(declare-const ret@218@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale _8 >= 0
(declare-const $t@219@01 $Snap)
(assert (= $t@219@01 $Snap.unit))
; [eval] _8 >= 0
(assert (>= ret@218@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale _8 >= 0
(declare-const $t@220@01 $Snap)
(assert (= $t@220@01 $Snap.unit))
; [eval] _8 >= 0
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale _8 ==
;   m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_9.val_ref)
(declare-const $t@221@01 $Snap)
(assert (= $t@221@01 $Snap.unit))
; [eval] _8 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_9.val_ref)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_9.val_ref)
(set-option :timeout 0)
(push) ; 3
; [eval] read$()
(push) ; 4
(pop) ; 4
; Joined path conditions
(push) ; 4
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(push) ; 4
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) val_ref@215@01)))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (< $Perm.No (+ (read$ $Snap.unit) (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(push) ; 4
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@217@01
  $Snap.unit) val_ref@215@01))
(pop) ; 3
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@217@01
  $Snap.unit) val_ref@215@01))
(assert (=
  ret@218@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@217@01
    $Snap.unit) val_ref@215@01)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label l4
; [eval] __t1 && __t1
(set-option :timeout 0)
(push) ; 3
; [then-branch: 0 | False | live]
; [else-branch: 0 | True | live]
(push) ; 4
; [then-branch: 0 | False]
(assert false)
(pop) ; 4
(push) ; 4
; [else-branch: 0 | True]
(pop) ; 4
(pop) ; 3
; Joined path conditions
; Joined path conditions
(push) ; 3
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 3
; 0.00s
; (get-info :all-statistics)
; [then-branch: 1 | True | live]
; [else-branch: 1 | False | dead]
(set-option :timeout 0)
(push) ; 3
; [then-branch: 1 | True]
; [exec]
; exhale acc(m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_(old[l2](_9.val_ref)), read$())
; [eval] read$()
(push) ; 4
(pop) ; 4
; Joined path conditions
; [eval] old[l2](_9.val_ref)
(push) ; 4
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(push) ; 4
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) val_ref@215@01)))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (=
  (-
    (+ (read$ $Snap.unit) (read$ $Snap.unit))
    ($Perm.min (+ (read$ $Snap.unit) (read$ $Snap.unit)) (read$ $Snap.unit)))
  $Perm.No)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(assert (<=
  $Perm.No
  (-
    (+ (read$ $Snap.unit) (read$ $Snap.unit))
    ($Perm.min (+ (read$ $Snap.unit) (read$ $Snap.unit)) (read$ $Snap.unit)))))
(set-option :timeout 0)
(push) ; 4
(assert (not (or
  (=
    (-
      (read$ $Snap.unit)
      ($Perm.min (+ (read$ $Snap.unit) (read$ $Snap.unit)) (read$ $Snap.unit)))
    $Perm.No)
  (<
    (-
      (read$ $Snap.unit)
      ($Perm.min (+ (read$ $Snap.unit) (read$ $Snap.unit)) (read$ $Snap.unit)))
    $Perm.No))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [exec]
; label bb3
; [exec]
; __t2 := true
; [exec]
; _10 := builtin$havoc_ref()
(declare-const ret@222@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_10.tuple_0, write)
(declare-const $t@223@01 $Ref)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (= ret@207@01 ret@222@01)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(assert (not (= ret@222@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale acc(_10.tuple_0.val_int, write)
(declare-const $t@224@01 Int)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (= $t@208@01 $t@223@01)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(assert (not (= $t@223@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale acc(_10.tuple_1, write)
(declare-const $t@225@01 $Ref)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (= ret@207@01 ret@222@01)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale acc(_10.tuple_1.val_bool, write)
(declare-const $t@226@01 Bool)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (= $t@210@01 $t@225@01)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(assert (not (= $t@225@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _10.tuple_0.val_int := _8 + 1
; [eval] _8 + 1
(declare-const val_int@227@01 Int)
(assert (= val_int@227@01 (+ ret@218@01 1)))
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (= $t@208@01 $t@223@01)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [exec]
; _10.tuple_1.val_bool := false
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (= $t@210@01 $t@225@01)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [exec]
; __t53 := _10.tuple_1.val_bool
; [exec]
; assert !__t53
; [eval] !__t53
; [exec]
; label bb4
; [exec]
; __t3 := true
; [exec]
; _7 := _10.tuple_0
; [exec]
; label l5
; [exec]
; label l6
; [exec]
; _t196 := builtin$havoc_int()
(declare-const ret@228@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale _t196 >= 0
(declare-const $t@229@01 $Snap)
(assert (= $t@229@01 $Snap.unit))
; [eval] _t196 >= 0
(assert (>= ret@228@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; fold acc(usize(_7), write)
; [eval] 0 <= self.val_int
(set-option :timeout 0)
(push) ; 4
(assert (not (<= 0 val_int@227@01)))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 val_int@227@01))
(assert (usize%trigger ($Snap.combine
  ($SortWrappers.IntTo$Snap val_int@227@01)
  $Snap.unit) $t@223@01))
; [exec]
; fold acc(usize(_4), write)
; [eval] 0 <= self.val_int
(push) ; 4
(assert (not (<= 0 val_int@212@01)))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 val_int@212@01))
(assert (usize%trigger ($Snap.combine
  ($SortWrappers.IntTo$Snap val_int@212@01)
  $Snap.unit) $t@208@01))
(push) ; 4
(set-option :timeout 10)
(assert (not (= $t@223@01 $t@208@01)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [exec]
; assert true
; [exec]
; exhale _t196 >= 0 && (acc(usize(_4), write) && acc(usize(_7), write))
; [eval] _t196 >= 0
; [exec]
; _3 := builtin$havoc_ref()
(declare-const ret@230@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@231@01 $Snap)
(assert (= $t@231@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale acc(m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_(_3), write)
(declare-const $t@232@01 $Snap)
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@233@01 $Snap)
(assert (= $t@233@01 $Snap.unit))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==
;   old[l6](_7.val_int) &&
;   (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==
;   old[l6](_4.val_int) &&
;   (forall ii: Int, wi: Int ::
;     { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;     ii, wi) }
;     0 <= ii &&
;     (ii <
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) &&
;     (0 <= wi &&
;     wi <
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==>
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;     ii, wi) ==
;     old[l6](0)))
(declare-const $t@234@01 $Snap)
(assert (= $t@234@01 ($Snap.combine ($Snap.first $t@234@01) ($Snap.second $t@234@01))))
(assert (= ($Snap.first $t@234@01) $Snap.unit))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) == old[l6](_7.val_int)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(set-option :timeout 0)
(push) ; 4
; [eval] read$()
(push) ; 5
(pop) ; 5
; Joined path conditions
(push) ; 5
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(push) ; 5
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@232@01
  $Snap.unit) ret@230@01))
(pop) ; 4
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@232@01
  $Snap.unit) ret@230@01))
; [eval] old[l6](_7.val_int)
(assert (=
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@232@01
    $Snap.unit) ret@230@01)
  val_int@227@01))
(assert (=
  ($Snap.second $t@234@01)
  ($Snap.combine
    ($Snap.first ($Snap.second $t@234@01))
    ($Snap.second ($Snap.second $t@234@01)))))
(assert (= ($Snap.first ($Snap.second $t@234@01)) $Snap.unit))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) == old[l6](_4.val_int)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(set-option :timeout 0)
(push) ; 4
; [eval] read$()
(push) ; 5
(pop) ; 5
; Joined path conditions
(push) ; 5
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(push) ; 5
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@232@01
  $Snap.unit) ret@230@01))
(pop) ; 4
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@232@01
  $Snap.unit) ret@230@01))
; [eval] old[l6](_4.val_int)
(assert (=
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@232@01
    $Snap.unit) ret@230@01)
  val_int@212@01))
(assert (= ($Snap.second ($Snap.second $t@234@01)) $Snap.unit))
; [eval] (forall ii: Int, wi: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) == old[l6](0))
(declare-const ii@235@01 Int)
(declare-const wi@236@01 Int)
(set-option :timeout 0)
(push) ; 4
; [eval] 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) == old[l6](0)
; [eval] 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)))
; [eval] 0 <= ii
(push) ; 5
; [then-branch: 2 | !(0 <= ii@235@01) | live]
; [else-branch: 2 | 0 <= ii@235@01 | live]
(push) ; 6
; [then-branch: 2 | !(0 <= ii@235@01)]
(assert (not (<= 0 ii@235@01)))
(pop) ; 6
(push) ; 6
; [else-branch: 2 | 0 <= ii@235@01]
(assert (<= 0 ii@235@01))
; [eval] ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 7
; [eval] read$()
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(pop) ; 7
; Joined path conditions
(set-option :timeout 0)
(push) ; 7
; [then-branch: 3 | !(ii@235@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01)) | live]
; [else-branch: 3 | ii@235@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01) | live]
(push) ; 8
; [then-branch: 3 | !(ii@235@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01))]
(assert (not
  (<
    ii@235@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@232@01
      $Snap.unit) ret@230@01))))
(pop) ; 8
(push) ; 8
; [else-branch: 3 | ii@235@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01)]
(assert (<
  ii@235@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@232@01
    $Snap.unit) ret@230@01)))
; [eval] 0 <= wi
(push) ; 9
; [then-branch: 4 | !(0 <= wi@236@01) | live]
; [else-branch: 4 | 0 <= wi@236@01 | live]
(push) ; 10
; [then-branch: 4 | !(0 <= wi@236@01)]
(assert (not (<= 0 wi@236@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 4 | 0 <= wi@236@01]
(assert (<= 0 wi@236@01))
; [eval] wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(pop) ; 11
; Joined path conditions
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 wi@236@01) (not (<= 0 wi@236@01))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    ii@235@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@232@01
      $Snap.unit) ret@230@01))
  (and
    (<
      ii@235@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01))
    (or (<= 0 wi@236@01) (not (<= 0 wi@236@01))))))
(assert (or
  (<
    ii@235@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@232@01
      $Snap.unit) ret@230@01))
  (not
    (<
      ii@235@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01)))))
(pop) ; 6
(pop) ; 5
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 ii@235@01)
  (and
    (<= 0 ii@235@01)
    (=>
      (<
        ii@235@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01))
      (and
        (<
          ii@235@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (or (<= 0 wi@236@01) (not (<= 0 wi@236@01)))))
    (or
      (<
        ii@235@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01))
      (not
        (<
          ii@235@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01)))))))
(assert (or (<= 0 ii@235@01) (not (<= 0 ii@235@01))))
(set-option :timeout 0)
(push) ; 5
; [then-branch: 5 | 0 <= ii@235@01 && ii@235@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01) && 0 <= wi@236@01 && wi@236@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01) | live]
; [else-branch: 5 | !(0 <= ii@235@01 && ii@235@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01) && 0 <= wi@236@01 && wi@236@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01)) | live]
(push) ; 6
; [then-branch: 5 | 0 <= ii@235@01 && ii@235@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01) && 0 <= wi@236@01 && wi@236@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01)]
(assert (and
  (<= 0 ii@235@01)
  (and
    (<
      ii@235@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01))
    (and
      (<= 0 wi@236@01)
      (<
        wi@236@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01))))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) == old[l6](0)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
(push) ; 7
; [eval] read$()
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 8
; [eval] read$()
(push) ; 9
(pop) ; 9
; Joined path conditions
(push) ; 9
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(pop) ; 8
; Joined path conditions
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 8
; [eval] read$()
(push) ; 9
(pop) ; 9
; Joined path conditions
(push) ; 9
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(pop) ; 8
; Joined path conditions
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  $t@232@01
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@235@01 wi@236@01))
(pop) ; 7
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  $t@232@01
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@235@01 wi@236@01))
; [eval] old[l6](0)
(pop) ; 6
(set-option :timeout 0)
(push) ; 6
; [else-branch: 5 | !(0 <= ii@235@01 && ii@235@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01) && 0 <= wi@236@01 && wi@236@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01))]
(assert (not
  (and
    (<= 0 ii@235@01)
    (and
      (<
        ii@235@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@236@01)
        (<
          wi@236@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01)))))))
(pop) ; 6
(pop) ; 5
; Joined path conditions
(assert (=>
  (and
    (<= 0 ii@235@01)
    (and
      (<
        ii@235@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@236@01)
        (<
          wi@236@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01)))))
  (and
    (<= 0 ii@235@01)
    (<
      ii@235@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01))
    (<= 0 wi@236@01)
    (<
      wi@236@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      $t@232@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@235@01 wi@236@01))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 ii@235@01)
      (and
        (<
          ii@235@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (and
          (<= 0 wi@236@01)
          (<
            wi@236@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))))))
  (and
    (<= 0 ii@235@01)
    (and
      (<
        ii@235@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@236@01)
        (<
          wi@236@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01)))))))
(pop) ; 4
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((ii@235@01 Int) (wi@236@01 Int)) (!
  (and
    (=>
      (<= 0 ii@235@01)
      (and
        (<= 0 ii@235@01)
        (=>
          (<
            ii@235@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))
          (and
            (<
              ii@235@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01))
            (or (<= 0 wi@236@01) (not (<= 0 wi@236@01)))))
        (or
          (<
            ii@235@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))
          (not
            (<
              ii@235@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01))))))
    (or (<= 0 ii@235@01) (not (<= 0 ii@235@01)))
    (=>
      (and
        (<= 0 ii@235@01)
        (and
          (<
            ii@235@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@236@01)
            (<
              wi@236@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01)))))
      (and
        (<= 0 ii@235@01)
        (<
          ii@235@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (<= 0 wi@236@01)
        (<
          wi@236@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          $t@232@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@235@01 wi@236@01)))
    (or
      (not
        (and
          (<= 0 ii@235@01)
          (and
            (<
              ii@235@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01))
            (and
              (<= 0 wi@236@01)
              (<
                wi@236@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@232@01
                  $Snap.unit) ret@230@01))))))
      (and
        (<= 0 ii@235@01)
        (and
          (<
            ii@235@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@236@01)
            (<
              wi@236@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01)))))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@235@01 wi@236@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@1263@420@1263@1054-aux|)))
(assert (forall ((ii@235@01 Int) (wi@236@01 Int)) (!
  (=>
    (and
      (<= 0 ii@235@01)
      (and
        (<
          ii@235@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (and
          (<= 0 wi@236@01)
          (<
            wi@236@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01)))))
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        $t@232@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@235@01 wi@236@01)
      0))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@235@01 wi@236@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@1263@420@1263@1054|)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label l7
; [exec]
; label bb5
; [exec]
; __t4 := true
; [exec]
; _11 := builtin$havoc_ref()
(declare-const ret@237@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_11.val_int, write)
(declare-const $t@238@01 Int)
(assert (not (= ret@237@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _11.val_int := 0
; [exec]
; _13 := builtin$havoc_int()
(declare-const ret@239@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@240@01 $Snap)
(assert (= $t@240@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _13 := _11.val_int
; [exec]
; label l8
; [exec]
; _15 := builtin$havoc_ref()
(declare-const ret@241@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_15.val_ref, write)
(declare-const $t@242@01 $Ref)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (= ret@213@01 ret@241@01)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@241@01)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(assert (not (= ret@241@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _15.val_ref := _1.val_ref
(declare-const val_ref@243@01 $Ref)
(assert (= val_ref@243@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (= ret@213@01 ret@241@01)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 4
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@241@01)))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [exec]
; inhale acc(m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_(_15.val_ref), read$())
; [eval] read$()
(set-option :timeout 0)
(push) ; 4
(pop) ; 4
; Joined path conditions
(push) ; 4
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(declare-const $t@244@01 $Snap)
(push) ; 4
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) val_ref@243@01)))
(check-sat)
; unsat
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
(declare-const $t@245@01 $Snap)
(assert (and
  (=>
    (<
      $Perm.No
      (-
        (+ (read$ $Snap.unit) (read$ $Snap.unit))
        ($Perm.min (+ (read$ $Snap.unit) (read$ $Snap.unit)) (read$ $Snap.unit))))
    (= $t@245@01 $t@217@01))
  (=> (< $Perm.No (read$ $Snap.unit)) (= $t@245@01 $t@244@01))))
(assert (<=
  $Perm.No
  (+
    (-
      (+ (read$ $Snap.unit) (read$ $Snap.unit))
      ($Perm.min (+ (read$ $Snap.unit) (read$ $Snap.unit)) (read$ $Snap.unit)))
    (read$ $Snap.unit))))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label l9
; [exec]
; label l10
; [exec]
; _14 := builtin$havoc_int()
(declare-const ret@246@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale _14 >= 0
(declare-const $t@247@01 $Snap)
(assert (= $t@247@01 $Snap.unit))
; [eval] _14 >= 0
(assert (>= ret@246@01 0))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale _14 >= 0
(declare-const $t@248@01 $Snap)
(assert (= $t@248@01 $Snap.unit))
; [eval] _14 >= 0
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale _14 ==
;   m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_15.val_ref)
(declare-const $t@249@01 $Snap)
(assert (= $t@249@01 $Snap.unit))
; [eval] _14 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_15.val_ref)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_15.val_ref)
(set-option :timeout 0)
(push) ; 4
; [eval] read$()
(push) ; 5
(pop) ; 5
; Joined path conditions
(push) ; 5
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(push) ; 5
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) val_ref@243@01)))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+ (read$ $Snap.unit) (read$ $Snap.unit))
        ($Perm.min (+ (read$ $Snap.unit) (read$ $Snap.unit)) (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(push) ; 5
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@245@01
  $Snap.unit) val_ref@243@01))
(pop) ; 4
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@245@01
  $Snap.unit) val_ref@243@01))
(assert (=
  ret@246@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@245@01
    $Snap.unit) val_ref@243@01)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label l11
; [eval] __t4 && __t4
(set-option :timeout 0)
(push) ; 4
; [then-branch: 6 | False | live]
; [else-branch: 6 | True | live]
(push) ; 5
; [then-branch: 6 | False]
(assert false)
(pop) ; 5
(push) ; 5
; [else-branch: 6 | True]
(pop) ; 5
(pop) ; 4
; Joined path conditions
; Joined path conditions
(push) ; 4
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 4
; 0.00s
; (get-info :all-statistics)
; [then-branch: 7 | True | live]
; [else-branch: 7 | False | dead]
(set-option :timeout 0)
(push) ; 4
; [then-branch: 7 | True]
; [exec]
; exhale acc(m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_(old[l9](_15.val_ref)), read$())
; [eval] read$()
(push) ; 5
(pop) ; 5
; Joined path conditions
; [eval] old[l9](_15.val_ref)
(push) ; 5
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(push) ; 5
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) val_ref@243@01)))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (=
  (-
    (+
      (-
        (+ (read$ $Snap.unit) (read$ $Snap.unit))
        ($Perm.min (+ (read$ $Snap.unit) (read$ $Snap.unit)) (read$ $Snap.unit)))
      (read$ $Snap.unit))
    ($Perm.min
      (+
        (-
          (+ (read$ $Snap.unit) (read$ $Snap.unit))
          ($Perm.min
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      (read$ $Snap.unit)))
  $Perm.No)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (<=
  $Perm.No
  (-
    (+
      (-
        (+ (read$ $Snap.unit) (read$ $Snap.unit))
        ($Perm.min (+ (read$ $Snap.unit) (read$ $Snap.unit)) (read$ $Snap.unit)))
      (read$ $Snap.unit))
    ($Perm.min
      (+
        (-
          (+ (read$ $Snap.unit) (read$ $Snap.unit))
          ($Perm.min
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      (read$ $Snap.unit)))))
(set-option :timeout 0)
(push) ; 5
(assert (not (or
  (=
    (-
      (read$ $Snap.unit)
      ($Perm.min
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    $Perm.No)
  (<
    (-
      (read$ $Snap.unit)
      ($Perm.min
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    $Perm.No))))
(check-sat)
; unsat
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [exec]
; label bb6
; [exec]
; __t5 := true
; [exec]
; _12 := builtin$havoc_ref()
(declare-const ret@250@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_12.val_bool, write)
(declare-const $t@251@01 Bool)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (= $t@225@01 ret@250@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (= $t@210@01 ret@250@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (not (= ret@250@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _12.val_bool := _13 < _14
; [eval] _13 < _14
(declare-const val_bool@252@01 Bool)
(assert (= val_bool@252@01 (< 0 ret@246@01)))
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (= $t@225@01 ret@250@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (= $t@210@01 ret@250@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [exec]
; label loop9_start
; [exec]
; label loop9_group1_bb9
; [exec]
; __t6 := true
; [exec]
; _17 := builtin$havoc_ref()
(declare-const ret@253@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_17.val_bool, write)
(declare-const $t@254@01 Bool)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (= ret@250@01 ret@253@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (= $t@225@01 ret@253@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (= $t@210@01 ret@253@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(assert (not (= ret@253@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _17.val_bool := _12.val_bool
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (= ret@250@01 ret@253@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (= $t@225@01 ret@253@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (= $t@210@01 ret@253@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [exec]
; label l12
; [exec]
; __t54 := _17.val_bool
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not (not val_bool@252@01)))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 5
(set-option :timeout 10)
(assert (not val_bool@252@01))
(check-sat)
; unknown
(pop) ; 5
; 0.00s
; (get-info :all-statistics)
; [then-branch: 8 | val_bool@252@01 | live]
; [else-branch: 8 | !(val_bool@252@01) | live]
(set-option :timeout 0)
(push) ; 5
; [then-branch: 8 | val_bool@252@01]
(assert val_bool@252@01)
; [exec]
; label l14
; [exec]
; label loop9_group2_bb11
; [exec]
; __t7 := true
; [exec]
; __t55 := false
; [exec]
; label loop9_inv_pre
; [exec]
; _preserve$0 := _1.val_ref
(declare-const _preserve$0@255@01 $Ref)
(assert (= _preserve$0@255@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))
; [exec]
; fold acc(usize(_11), write)
; [eval] 0 <= self.val_int
(assert (usize%trigger ($Snap.combine ($SortWrappers.IntTo$Snap 0) $Snap.unit) ret@237@01))
; [exec]
; fold acc(bool(_12), write)
(assert (bool%trigger ($SortWrappers.BoolTo$Snap val_bool@252@01) ret@250@01))
; [exec]
; assert _2 >= 0
; [eval] _2 >= 0
; [exec]
; assert m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) +
;   1 ==
;   m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) &&
;   (_2 + 1 ==
;   m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) &&
;   ((unfolding acc(usize(_11), write) in _11.val_int) <
;   m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) &&
;   (0 <= (unfolding acc(usize(_11), write) in _11.val_int) &&
;   ((unfolding acc(usize(_11), write) in _11.val_int) <
;   m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) &&
;   (2 <= _2 &&
;   (_2 < 18446744073709551615 &&
;   ((forall ii: Int, wi: Int ::
;     { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;     ii, wi) }
;     0 <= ii &&
;     (ii <
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) &&
;     (0 <= wi &&
;     wi <
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==>
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;     ii, wi) >=
;     0) &&
;   ((forall ii: Int ::
;     { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;     ii, 0) }
;     0 <= ii &&
;     ii <
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==>
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;     ii, 0) ==
;     0) &&
;   (unfolding acc(usize(_11), write) in
;     (forall ii: Int, wi: Int ::
;       { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref,
;       ii, wi, _2) }
;       { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;       ii, wi) }
;       0 <= ii &&
;       (ii <= _11.val_int &&
;       (0 <= wi &&
;       wi <
;       m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==>
;       m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref,
;       ii, wi, _2) ==
;       m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;       ii, wi)))))))))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
(push) ; 6
; [eval] read$()
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+ (read$ $Snap.unit) (read$ $Snap.unit))
          ($Perm.min
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@245@01
  $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))
(pop) ; 6
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@245@01
  $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(set-option :timeout 0)
(push) ; 6
; [eval] read$()
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(pop) ; 6
; Joined path conditions
(set-option :timeout 0)
(push) ; 6
(assert (not (=
  (+
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@245@01
      $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)))
    1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@232@01
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (=
  (+
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@245@01
      $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)))
    1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@232@01
    $Snap.unit) ret@230@01)))
; [eval] _2 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] _2 + 1
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 6
; [eval] read$()
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(pop) ; 6
; Joined path conditions
(set-option :timeout 0)
(push) ; 6
(assert (not (=
  (+ _2@101@01 1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@232@01
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (=
  (+ _2@101@01 1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@232@01
    $Snap.unit) ret@230@01)))
; [eval] (unfolding acc(usize(_11), write) in _11.val_int) < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
; [eval] (unfolding acc(usize(_11), write) in _11.val_int)
(push) ; 6
; [eval] 0 <= self.val_int
(pop) ; 6
; Joined path conditions
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
(push) ; 6
; [eval] read$()
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+ (read$ $Snap.unit) (read$ $Snap.unit))
          ($Perm.min
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(pop) ; 6
; Joined path conditions
(set-option :timeout 0)
(push) ; 6
(assert (not (<
  0
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@245@01
    $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (<
  0
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@245@01
    $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)))))
; [eval] 0 <= (unfolding acc(usize(_11), write) in _11.val_int)
; [eval] (unfolding acc(usize(_11), write) in _11.val_int)
(push) ; 6
; [eval] 0 <= self.val_int
(pop) ; 6
; Joined path conditions
; [eval] (unfolding acc(usize(_11), write) in _11.val_int) < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
; [eval] (unfolding acc(usize(_11), write) in _11.val_int)
(push) ; 6
; [eval] 0 <= self.val_int
(pop) ; 6
; Joined path conditions
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
(push) ; 6
; [eval] read$()
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+ (read$ $Snap.unit) (read$ $Snap.unit))
          ($Perm.min
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(pop) ; 6
; Joined path conditions
; [eval] 2 <= _2
; [eval] _2 < 18446744073709551615
; [eval] (forall ii: Int, wi: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0)
(declare-const ii@256@01 Int)
(declare-const wi@257@01 Int)
(set-option :timeout 0)
(push) ; 6
; [eval] 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0
; [eval] 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)))
; [eval] 0 <= ii
(push) ; 7
; [then-branch: 9 | !(0 <= ii@256@01) | live]
; [else-branch: 9 | 0 <= ii@256@01 | live]
(push) ; 8
; [then-branch: 9 | !(0 <= ii@256@01)]
(assert (not (<= 0 ii@256@01)))
(pop) ; 8
(push) ; 8
; [else-branch: 9 | 0 <= ii@256@01]
(assert (<= 0 ii@256@01))
; [eval] ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 9
; [eval] read$()
(push) ; 10
(pop) ; 10
; Joined path conditions
(push) ; 10
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(pop) ; 9
; Joined path conditions
(set-option :timeout 0)
(push) ; 9
; [then-branch: 10 | !(ii@256@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01)) | live]
; [else-branch: 10 | ii@256@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01) | live]
(push) ; 10
; [then-branch: 10 | !(ii@256@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01))]
(assert (not
  (<
    ii@256@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@232@01
      $Snap.unit) ret@230@01))))
(pop) ; 10
(push) ; 10
; [else-branch: 10 | ii@256@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01)]
(assert (<
  ii@256@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@232@01
    $Snap.unit) ret@230@01)))
; [eval] 0 <= wi
(push) ; 11
; [then-branch: 11 | !(0 <= wi@257@01) | live]
; [else-branch: 11 | 0 <= wi@257@01 | live]
(push) ; 12
; [then-branch: 11 | !(0 <= wi@257@01)]
(assert (not (<= 0 wi@257@01)))
(pop) ; 12
(push) ; 12
; [else-branch: 11 | 0 <= wi@257@01]
(assert (<= 0 wi@257@01))
; [eval] wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 13
; [eval] read$()
(push) ; 14
(pop) ; 14
; Joined path conditions
(push) ; 14
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(push) ; 14
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(pop) ; 13
; Joined path conditions
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 wi@257@01) (not (<= 0 wi@257@01))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    ii@256@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@232@01
      $Snap.unit) ret@230@01))
  (and
    (<
      ii@256@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01))
    (or (<= 0 wi@257@01) (not (<= 0 wi@257@01))))))
(assert (or
  (<
    ii@256@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@232@01
      $Snap.unit) ret@230@01))
  (not
    (<
      ii@256@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01)))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 ii@256@01)
  (and
    (<= 0 ii@256@01)
    (=>
      (<
        ii@256@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01))
      (and
        (<
          ii@256@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (or (<= 0 wi@257@01) (not (<= 0 wi@257@01)))))
    (or
      (<
        ii@256@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01))
      (not
        (<
          ii@256@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01)))))))
(assert (or (<= 0 ii@256@01) (not (<= 0 ii@256@01))))
(set-option :timeout 0)
(push) ; 7
; [then-branch: 12 | 0 <= ii@256@01 && ii@256@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01) && 0 <= wi@257@01 && wi@257@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01) | live]
; [else-branch: 12 | !(0 <= ii@256@01 && ii@256@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01) && 0 <= wi@257@01 && wi@257@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01)) | live]
(push) ; 8
; [then-branch: 12 | 0 <= ii@256@01 && ii@256@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01) && 0 <= wi@257@01 && wi@257@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01)]
(assert (and
  (<= 0 ii@256@01)
  (and
    (<
      ii@256@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01))
    (and
      (<= 0 wi@257@01)
      (<
        wi@257@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01))))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
(push) ; 9
; [eval] read$()
(push) ; 10
(pop) ; 10
; Joined path conditions
(push) ; 10
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(pop) ; 10
; Joined path conditions
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(pop) ; 10
; Joined path conditions
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  $t@232@01
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@256@01 wi@257@01))
(pop) ; 9
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  $t@232@01
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@256@01 wi@257@01))
(pop) ; 8
(set-option :timeout 0)
(push) ; 8
; [else-branch: 12 | !(0 <= ii@256@01 && ii@256@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01) && 0 <= wi@257@01 && wi@257@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01))]
(assert (not
  (and
    (<= 0 ii@256@01)
    (and
      (<
        ii@256@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@257@01)
        (<
          wi@257@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01)))))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
(assert (=>
  (and
    (<= 0 ii@256@01)
    (and
      (<
        ii@256@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@257@01)
        (<
          wi@257@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01)))))
  (and
    (<= 0 ii@256@01)
    (<
      ii@256@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01))
    (<= 0 wi@257@01)
    (<
      wi@257@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      $t@232@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@256@01 wi@257@01))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 ii@256@01)
      (and
        (<
          ii@256@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (and
          (<= 0 wi@257@01)
          (<
            wi@257@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))))))
  (and
    (<= 0 ii@256@01)
    (and
      (<
        ii@256@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@257@01)
        (<
          wi@257@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01)))))))
(pop) ; 6
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((ii@256@01 Int) (wi@257@01 Int)) (!
  (and
    (=>
      (<= 0 ii@256@01)
      (and
        (<= 0 ii@256@01)
        (=>
          (<
            ii@256@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))
          (and
            (<
              ii@256@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01))
            (or (<= 0 wi@257@01) (not (<= 0 wi@257@01)))))
        (or
          (<
            ii@256@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))
          (not
            (<
              ii@256@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01))))))
    (or (<= 0 ii@256@01) (not (<= 0 ii@256@01)))
    (=>
      (and
        (<= 0 ii@256@01)
        (and
          (<
            ii@256@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@257@01)
            (<
              wi@257@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01)))))
      (and
        (<= 0 ii@256@01)
        (<
          ii@256@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (<= 0 wi@257@01)
        (<
          wi@257@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          $t@232@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@256@01 wi@257@01)))
    (or
      (not
        (and
          (<= 0 ii@256@01)
          (and
            (<
              ii@256@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01))
            (and
              (<= 0 wi@257@01)
              (<
                wi@257@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@232@01
                  $Snap.unit) ret@230@01))))))
      (and
        (<= 0 ii@256@01)
        (and
          (<
            ii@256@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@257@01)
            (<
              wi@257@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01)))))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@256@01 wi@257@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3593@1128@3593@1753-aux|)))
(assert (forall ((ii@256@01 Int) (wi@257@01 Int)) (!
  (and
    (=>
      (<= 0 ii@256@01)
      (and
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01)
        (=>
          (and
            (<
              ii@256@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01))
            (<= 0 wi@257@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))))
    (=>
      (and
        (<= 0 ii@256@01)
        (and
          (<
            ii@256@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@257@01)
            (<
              wi@257@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01)))))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
        $t@232@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@256@01 wi@257@01)))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@256@01 wi@257@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3593@1128@3593@1753_precondition|)))
(push) ; 6
(assert (not (forall ((ii@256@01 Int) (wi@257@01 Int)) (!
  (=>
    (and
      (and
        (=>
          (<= 0 ii@256@01)
          (and
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01)
            (=>
              (and
                (<
                  ii@256@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    $t@232@01
                    $Snap.unit) ret@230@01))
                (<= 0 wi@257@01))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01))))
        (=>
          (and
            (<= 0 ii@256@01)
            (and
              (<
                ii@256@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@232@01
                  $Snap.unit) ret@230@01))
              (and
                (<= 0 wi@257@01)
                (<
                  wi@257@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    $t@232@01
                    $Snap.unit) ret@230@01)))))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
            $t@232@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@256@01 wi@257@01)))
      (and
        (<= 0 ii@256@01)
        (and
          (<
            ii@256@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@257@01)
            (<
              wi@257@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01))))))
    (>=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        $t@232@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@256@01 wi@257@01)
      0))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@256@01 wi@257@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3593@1128@3593@1753|))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (forall ((ii@256@01 Int) (wi@257@01 Int)) (!
  (=>
    (and
      (<= 0 ii@256@01)
      (and
        (<
          ii@256@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (and
          (<= 0 wi@257@01)
          (<
            wi@257@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01)))))
    (>=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        $t@232@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@256@01 wi@257@01)
      0))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@256@01 wi@257@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3593@1128@3593@1753|)))
; [eval] (forall ii: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) } 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0)
(declare-const ii@258@01 Int)
(push) ; 6
; [eval] 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0
; [eval] 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] 0 <= ii
(push) ; 7
; [then-branch: 13 | !(0 <= ii@258@01) | live]
; [else-branch: 13 | 0 <= ii@258@01 | live]
(push) ; 8
; [then-branch: 13 | !(0 <= ii@258@01)]
(assert (not (<= 0 ii@258@01)))
(pop) ; 8
(push) ; 8
; [else-branch: 13 | 0 <= ii@258@01]
(assert (<= 0 ii@258@01))
; [eval] ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 9
; [eval] read$()
(push) ; 10
(pop) ; 10
; Joined path conditions
(push) ; 10
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(pop) ; 9
; Joined path conditions
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 ii@258@01) (not (<= 0 ii@258@01))))
(set-option :timeout 0)
(push) ; 7
; [then-branch: 14 | 0 <= ii@258@01 && ii@258@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01) | live]
; [else-branch: 14 | !(0 <= ii@258@01 && ii@258@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01)) | live]
(push) ; 8
; [then-branch: 14 | 0 <= ii@258@01 && ii@258@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01)]
(assert (and
  (<= 0 ii@258@01)
  (<
    ii@258@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@232@01
      $Snap.unit) ret@230@01))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0)
(push) ; 9
; [eval] read$()
(push) ; 10
(pop) ; 10
; Joined path conditions
(push) ; 10
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(pop) ; 10
; Joined path conditions
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(pop) ; 10
; Joined path conditions
(set-option :timeout 0)
(push) ; 10
(assert (not (<
  0
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@232@01
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (<
  0
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@232@01
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  $t@232@01
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@258@01 0))
(pop) ; 9
; Joined path conditions
(assert (and
  (<
    0
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@232@01
      $Snap.unit) ret@230@01))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@258@01 0)))
(pop) ; 8
(push) ; 8
; [else-branch: 14 | !(0 <= ii@258@01 && ii@258@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01))]
(assert (not
  (and
    (<= 0 ii@258@01)
    (<
      ii@258@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01)))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
(assert (=>
  (and
    (<= 0 ii@258@01)
    (<
      ii@258@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01)))
  (and
    (<= 0 ii@258@01)
    (<
      ii@258@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01))
    (<
      0
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      $t@232@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@258@01 0))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 ii@258@01)
      (<
        ii@258@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01))))
  (and
    (<= 0 ii@258@01)
    (<
      ii@258@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01)))))
(pop) ; 6
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((ii@258@01 Int)) (!
  (and
    (or (<= 0 ii@258@01) (not (<= 0 ii@258@01)))
    (=>
      (and
        (<= 0 ii@258@01)
        (<
          ii@258@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01)))
      (and
        (<= 0 ii@258@01)
        (<
          ii@258@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (<
          0
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          $t@232@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@258@01 0)))
    (or
      (not
        (and
          (<= 0 ii@258@01)
          (<
            ii@258@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))))
      (and
        (<= 0 ii@258@01)
        (<
          ii@258@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01)))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@258@01 0))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3593@1760@3593@2173-aux|)))
(assert (forall ((ii@258@01 Int)) (!
  (and
    (=>
      (<= 0 ii@258@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01))
    (=>
      (and
        (<= 0 ii@258@01)
        (<
          ii@258@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01)))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
        $t@232@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@258@01 0)))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@258@01 0))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3593@1760@3593@2173_precondition|)))
(push) ; 6
(assert (not (forall ((ii@258@01 Int)) (!
  (=>
    (and
      (and
        (=>
          (<= 0 ii@258@01)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (=>
          (and
            (<= 0 ii@258@01)
            (<
              ii@258@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01)))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
            $t@232@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@258@01 0)))
      (and
        (<= 0 ii@258@01)
        (<
          ii@258@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))))
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        $t@232@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@258@01 0)
      0))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@258@01 0))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3593@1760@3593@2173|))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (forall ((ii@258@01 Int)) (!
  (=>
    (and
      (<= 0 ii@258@01)
      (<
        ii@258@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01)))
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        $t@232@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@258@01 0)
      0))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@258@01 0))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3593@1760@3593@2173|)))
; [eval] (unfolding acc(usize(_11), write) in (forall ii: Int, wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)))
(push) ; 6
; [eval] 0 <= self.val_int
; [eval] (forall ii: Int, wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi))
(declare-const ii@259@01 Int)
(declare-const wi@260@01 Int)
(push) ; 7
; [eval] 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
; [eval] 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)))
; [eval] 0 <= ii
(push) ; 8
; [then-branch: 15 | !(0 <= ii@259@01) | live]
; [else-branch: 15 | 0 <= ii@259@01 | live]
(push) ; 9
; [then-branch: 15 | !(0 <= ii@259@01)]
(assert (not (<= 0 ii@259@01)))
(pop) ; 9
(push) ; 9
; [else-branch: 15 | 0 <= ii@259@01]
(assert (<= 0 ii@259@01))
; [eval] ii <= _11.val_int
(push) ; 10
; [then-branch: 16 | !(ii@259@01 <= 0) | live]
; [else-branch: 16 | ii@259@01 <= 0 | live]
(push) ; 11
; [then-branch: 16 | !(ii@259@01 <= 0)]
(assert (not (<= ii@259@01 0)))
(pop) ; 11
(push) ; 11
; [else-branch: 16 | ii@259@01 <= 0]
(assert (<= ii@259@01 0))
; [eval] 0 <= wi
(push) ; 12
; [then-branch: 17 | !(0 <= wi@260@01) | live]
; [else-branch: 17 | 0 <= wi@260@01 | live]
(push) ; 13
; [then-branch: 17 | !(0 <= wi@260@01)]
(assert (not (<= 0 wi@260@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 17 | 0 <= wi@260@01]
(assert (<= 0 wi@260@01))
; [eval] wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 14
; [eval] read$()
(push) ; 15
(pop) ; 15
; Joined path conditions
(push) ; 15
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(push) ; 15
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(pop) ; 14
; Joined path conditions
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 wi@260@01) (not (<= 0 wi@260@01))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= ii@259@01 0)
  (and (<= ii@259@01 0) (or (<= 0 wi@260@01) (not (<= 0 wi@260@01))))))
(assert (or (<= ii@259@01 0) (not (<= ii@259@01 0))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 ii@259@01)
  (and
    (<= 0 ii@259@01)
    (=>
      (<= ii@259@01 0)
      (and (<= ii@259@01 0) (or (<= 0 wi@260@01) (not (<= 0 wi@260@01)))))
    (or (<= ii@259@01 0) (not (<= ii@259@01 0))))))
(assert (or (<= 0 ii@259@01) (not (<= 0 ii@259@01))))
(set-option :timeout 0)
(push) ; 8
; [then-branch: 18 | 0 <= ii@259@01 && ii@259@01 <= 0 && 0 <= wi@260@01 && wi@260@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01) | live]
; [else-branch: 18 | !(0 <= ii@259@01 && ii@259@01 <= 0 && 0 <= wi@260@01 && wi@260@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01)) | live]
(push) ; 9
; [then-branch: 18 | 0 <= ii@259@01 && ii@259@01 <= 0 && 0 <= wi@260@01 && wi@260@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01)]
(assert (and
  (<= 0 ii@259@01)
  (and
    (<= ii@259@01 0)
    (and
      (<= 0 wi@260@01)
      (<
        wi@260@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@232@01
          $Snap.unit) ret@230@01))))))
; [eval] m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
; [eval] m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+ (read$ $Snap.unit) (read$ $Snap.unit))
          ($Perm.min
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+ (read$ $Snap.unit) (read$ $Snap.unit))
          ($Perm.min
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(pop) ; 11
; Joined path conditions
(set-option :timeout 0)
(push) ; 11
(assert (not (<=
  ii@259@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@245@01
    $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (<=
  ii@259@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@245@01
    $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)))))
; [eval] 0 <= _pure_3
; [eval] _pure_3 <= _pure_4
(push) ; 11
(assert (not (<= wi@260@01 _2@101@01)))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (<= wi@260@01 _2@101@01))
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
; [eval] 0 <= _pure_4
(push) ; 11
(assert (not (<= 0 _2@101@01)))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 _2@101@01))
(assert (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
  $t@245@01
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01))
(pop) ; 10
; Joined path conditions
(assert (and
  (<=
    ii@259@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@245@01
      $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))
  (<= wi@260@01 _2@101@01)
  (<= 0 _2@101@01)
  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
    $t@245@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01)))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(pop) ; 11
; Joined path conditions
(set-option :timeout 0)
(push) ; 11
(assert (not (<
  ii@259@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@232@01
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (<
  ii@259@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@232@01
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(pop) ; 11
; Joined path conditions
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  $t@232@01
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01))
(pop) ; 10
; Joined path conditions
(assert (and
  (<
    ii@259@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@232@01
      $Snap.unit) ret@230@01))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01)))
(pop) ; 9
(set-option :timeout 0)
(push) ; 9
; [else-branch: 18 | !(0 <= ii@259@01 && ii@259@01 <= 0 && 0 <= wi@260@01 && wi@260@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@232@01, _), ret@230@01))]
(assert (not
  (and
    (<= 0 ii@259@01)
    (and
      (<= ii@259@01 0)
      (and
        (<= 0 wi@260@01)
        (<
          wi@260@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01)))))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
(assert (=>
  (and
    (<= 0 ii@259@01)
    (and
      (<= ii@259@01 0)
      (and
        (<= 0 wi@260@01)
        (<
          wi@260@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01)))))
  (and
    (<= 0 ii@259@01)
    (<= ii@259@01 0)
    (<= 0 wi@260@01)
    (<
      wi@260@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01))
    (<=
      ii@259@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@245@01
        $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))
    (<= wi@260@01 _2@101@01)
    (<= 0 _2@101@01)
    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
      $t@245@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01)
    (<
      ii@259@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      $t@232@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 ii@259@01)
      (and
        (<= ii@259@01 0)
        (and
          (<= 0 wi@260@01)
          (<
            wi@260@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))))))
  (and
    (<= 0 ii@259@01)
    (and
      (<= ii@259@01 0)
      (and
        (<= 0 wi@260@01)
        (<
          wi@260@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01)))))))
(pop) ; 7
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((ii@259@01 Int) (wi@260@01 Int)) (!
  (and
    (=>
      (<= 0 ii@259@01)
      (and
        (<= 0 ii@259@01)
        (=>
          (<= ii@259@01 0)
          (and (<= ii@259@01 0) (or (<= 0 wi@260@01) (not (<= 0 wi@260@01)))))
        (or (<= ii@259@01 0) (not (<= ii@259@01 0)))))
    (or (<= 0 ii@259@01) (not (<= 0 ii@259@01)))
    (=>
      (and
        (<= 0 ii@259@01)
        (and
          (<= ii@259@01 0)
          (and
            (<= 0 wi@260@01)
            (<
              wi@260@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01)))))
      (and
        (<= 0 ii@259@01)
        (<= ii@259@01 0)
        (<= 0 wi@260@01)
        (<
          wi@260@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (<=
          ii@259@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@245@01
            $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))
        (<= wi@260@01 _2@101@01)
        (<= 0 _2@101@01)
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
          $t@245@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01)
        (<
          ii@259@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          $t@232@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01)))
    (or
      (not
        (and
          (<= 0 ii@259@01)
          (and
            (<= ii@259@01 0)
            (and
              (<= 0 wi@260@01)
              (<
                wi@260@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@232@01
                  $Snap.unit) ret@230@01))))))
      (and
        (<= 0 ii@259@01)
        (and
          (<= ii@259@01 0)
          (and
            (<= 0 wi@260@01)
            (<
              wi@260@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01)))))))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
    $t@245@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3593@2216@3593@2814-aux|)))
(assert (forall ((ii@259@01 Int) (wi@260@01 Int)) (!
  (and
    (=>
      (<= 0 ii@259@01)
      (and
        (<= 0 ii@259@01)
        (=>
          (<= ii@259@01 0)
          (and (<= ii@259@01 0) (or (<= 0 wi@260@01) (not (<= 0 wi@260@01)))))
        (or (<= ii@259@01 0) (not (<= ii@259@01 0)))))
    (or (<= 0 ii@259@01) (not (<= 0 ii@259@01)))
    (=>
      (and
        (<= 0 ii@259@01)
        (and
          (<= ii@259@01 0)
          (and
            (<= 0 wi@260@01)
            (<
              wi@260@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01)))))
      (and
        (<= 0 ii@259@01)
        (<= ii@259@01 0)
        (<= 0 wi@260@01)
        (<
          wi@260@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (<=
          ii@259@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@245@01
            $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))
        (<= wi@260@01 _2@101@01)
        (<= 0 _2@101@01)
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
          $t@245@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01)
        (<
          ii@259@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          $t@232@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01)))
    (or
      (not
        (and
          (<= 0 ii@259@01)
          (and
            (<= ii@259@01 0)
            (and
              (<= 0 wi@260@01)
              (<
                wi@260@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@232@01
                  $Snap.unit) ret@230@01))))))
      (and
        (<= 0 ii@259@01)
        (and
          (<= ii@259@01 0)
          (and
            (<= 0 wi@260@01)
            (<
              wi@260@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01)))))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3593@2216@3593@2814-aux|)))
(pop) ; 6
; Joined path conditions
(assert (and
  (forall ((ii@259@01 Int) (wi@260@01 Int)) (!
    (and
      (=>
        (<= 0 ii@259@01)
        (and
          (<= 0 ii@259@01)
          (=>
            (<= ii@259@01 0)
            (and (<= ii@259@01 0) (or (<= 0 wi@260@01) (not (<= 0 wi@260@01)))))
          (or (<= ii@259@01 0) (not (<= ii@259@01 0)))))
      (or (<= 0 ii@259@01) (not (<= 0 ii@259@01)))
      (=>
        (and
          (<= 0 ii@259@01)
          (and
            (<= ii@259@01 0)
            (and
              (<= 0 wi@260@01)
              (<
                wi@260@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@232@01
                  $Snap.unit) ret@230@01)))))
        (and
          (<= 0 ii@259@01)
          (<= ii@259@01 0)
          (<= 0 wi@260@01)
          (<
            wi@260@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))
          (<=
            ii@259@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@245@01
              $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))
          (<= wi@260@01 _2@101@01)
          (<= 0 _2@101@01)
          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
            $t@245@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01)
          (<
            ii@259@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
            $t@232@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01)))
      (or
        (not
          (and
            (<= 0 ii@259@01)
            (and
              (<= ii@259@01 0)
              (and
                (<= 0 wi@260@01)
                (<
                  wi@260@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    $t@232@01
                    $Snap.unit) ret@230@01))))))
        (and
          (<= 0 ii@259@01)
          (and
            (<= ii@259@01 0)
            (and
              (<= 0 wi@260@01)
              (<
                wi@260@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@232@01
                  $Snap.unit) ret@230@01)))))))
    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
      $t@245@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3593@2216@3593@2814-aux|))
  (forall ((ii@259@01 Int) (wi@260@01 Int)) (!
    (and
      (=>
        (<= 0 ii@259@01)
        (and
          (<= 0 ii@259@01)
          (=>
            (<= ii@259@01 0)
            (and (<= ii@259@01 0) (or (<= 0 wi@260@01) (not (<= 0 wi@260@01)))))
          (or (<= ii@259@01 0) (not (<= ii@259@01 0)))))
      (or (<= 0 ii@259@01) (not (<= 0 ii@259@01)))
      (=>
        (and
          (<= 0 ii@259@01)
          (and
            (<= ii@259@01 0)
            (and
              (<= 0 wi@260@01)
              (<
                wi@260@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@232@01
                  $Snap.unit) ret@230@01)))))
        (and
          (<= 0 ii@259@01)
          (<= ii@259@01 0)
          (<= 0 wi@260@01)
          (<
            wi@260@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))
          (<=
            ii@259@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@245@01
              $Snap.unit) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))
          (<= wi@260@01 _2@101@01)
          (<= 0 _2@101@01)
          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
            $t@245@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01)
          (<
            ii@259@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
            $t@232@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01)))
      (or
        (not
          (and
            (<= 0 ii@259@01)
            (and
              (<= ii@259@01 0)
              (and
                (<= 0 wi@260@01)
                (<
                  wi@260@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    $t@232@01
                    $Snap.unit) ret@230@01))))))
        (and
          (<= 0 ii@259@01)
          (and
            (<= ii@259@01 0)
            (and
              (<= 0 wi@260@01)
              (<
                wi@260@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@232@01
                  $Snap.unit) ret@230@01)))))))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      $t@232@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3593@2216@3593@2814-aux|))))
(assert (forall ((ii@259@01 Int) (wi@260@01 Int)) (!
  (and
    (=>
      (and (<= 0 ii@259@01) (and (<= ii@259@01 0) (<= 0 wi@260@01)))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
        $t@232@01
        $Snap.unit) ret@230@01))
    (=>
      (and
        (<= 0 ii@259@01)
        (and
          (<= ii@259@01 0)
          (and
            (<= 0 wi@260@01)
            (<
              wi@260@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01)))))
      (and
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
          $t@245@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          $t@232@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01))))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
    $t@245@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3593@2216@3593@2814_precondition|)))
(push) ; 6
(assert (not (forall ((ii@259@01 Int) (wi@260@01 Int)) (!
  (=>
    (and
      (and
        (=>
          (and (<= 0 ii@259@01) (and (<= ii@259@01 0) (<= 0 wi@260@01)))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
            $t@232@01
            $Snap.unit) ret@230@01))
        (=>
          (and
            (<= 0 ii@259@01)
            (and
              (<= ii@259@01 0)
              (and
                (<= 0 wi@260@01)
                (<
                  wi@260@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    $t@232@01
                    $Snap.unit) ret@230@01)))))
          (and
            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
              $t@245@01
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
              $t@232@01
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01))))
      (and
        (<= 0 ii@259@01)
        (and
          (<= ii@259@01 0)
          (and
            (<= 0 wi@260@01)
            (<
              wi@260@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@232@01
                $Snap.unit) ret@230@01))))))
    (=
      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
        $t@245@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        $t@232@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01)))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
    $t@245@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3593@2216@3593@2814|))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (forall ((ii@259@01 Int) (wi@260@01 Int)) (!
  (=>
    (and
      (<= 0 ii@259@01)
      (and
        (<= ii@259@01 0)
        (and
          (<= 0 wi@260@01)
          (<
            wi@260@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@232@01
              $Snap.unit) ret@230@01)))))
    (=
      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
        $t@245@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        $t@232@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01)))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
    $t@245@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) ii@259@01 wi@260@01 _2@101@01))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@232@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@259@01 wi@260@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3593@2216@3593@2814|)))
; [exec]
; assert _preserve$0 == _1.val_ref
; [eval] _preserve$0 == _1.val_ref
; [exec]
; exhale acc(usize(_11), write) &&
;   (acc(bool(_12), write) &&
;   (acc(m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_(_3), write) &&
;   (acc(_1.val_ref, read$()) && _2 >= 0)))
; [eval] read$()
(push) ; 6
(pop) ; 6
; Joined path conditions
(push) ; 6
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(push) ; 6
(set-option :timeout 10)
(assert (not (= (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit))) $Perm.No)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (<= $Perm.No (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))))
(assert (<= (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit))) $Perm.Write))
(assert (=>
  (< $Perm.No (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit))))
  (not (= _1@100@01 $Ref.null))))
(set-option :timeout 0)
(push) ; 6
(assert (not (or
  (= (- (read$ $Snap.unit) ($Perm.min $Perm.Write (read$ $Snap.unit))) $Perm.No)
  (< (- (read$ $Snap.unit) ($Perm.min $Perm.Write (read$ $Snap.unit))) $Perm.No))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [eval] _2 >= 0
; [exec]
; _112 := builtin$havoc_int()
(declare-const ret@261@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; __t13 := builtin$havoc_bool()
(declare-const ret@262@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _132 := builtin$havoc_int()
(declare-const ret@263@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _123 := builtin$havoc_ref()
(declare-const ret@264@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _49 := builtin$havoc_ref()
(declare-const ret@265@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _110 := builtin$havoc_ref()
(declare-const ret@266@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _138 := builtin$havoc_int()
(declare-const ret@267@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _131 := builtin$havoc_ref()
(declare-const ret@268@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t61 := builtin$havoc_bool()
(declare-const ret@269@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _50 := builtin$havoc_int()
(declare-const ret@270@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t60 := builtin$havoc_bool()
(declare-const ret@271@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _129 := builtin$havoc_ref()
(declare-const ret@272@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _108 := builtin$havoc_ref()
(declare-const ret@273@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _114 := builtin$havoc_ref()
(declare-const ret@274@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _115 := builtin$havoc_ref()
(declare-const ret@275@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t18 := builtin$havoc_bool()
(declare-const ret@276@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t10 := builtin$havoc_bool()
(declare-const ret@277@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t26 := builtin$havoc_bool()
(declare-const ret@278@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _135 := builtin$havoc_ref()
(declare-const ret@279@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t27 := builtin$havoc_bool()
(declare-const ret@280@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _56 := builtin$havoc_ref()
(declare-const ret@281@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _55 := builtin$havoc_int()
(declare-const ret@282@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _53 := builtin$havoc_ref()
(declare-const ret@283@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _111 := builtin$havoc_int()
(declare-const ret@284@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t9 := builtin$havoc_bool()
(declare-const ret@285@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _130 := builtin$havoc_ref()
(declare-const ret@286@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t65 := builtin$havoc_bool()
(declare-const ret@287@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t6 := builtin$havoc_bool()
(declare-const ret@288@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _11 := builtin$havoc_ref()
(declare-const ret@289@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _140 := builtin$havoc_ref()
(declare-const ret@290@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t22 := builtin$havoc_bool()
(declare-const ret@291@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _118 := builtin$havoc_ref()
(declare-const ret@292@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t11 := builtin$havoc_bool()
(declare-const ret@293@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _104 := builtin$havoc_ref()
(declare-const ret@294@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t21 := builtin$havoc_bool()
(declare-const ret@295@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _51 := builtin$havoc_ref()
(declare-const ret@296@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _116 := builtin$havoc_int()
(declare-const ret@297@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _105 := builtin$havoc_ref()
(declare-const ret@298@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t14 := builtin$havoc_bool()
(declare-const ret@299@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t29 := builtin$havoc_bool()
(declare-const ret@300@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t56 := builtin$havoc_bool()
(declare-const ret@301@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _125 := builtin$havoc_int()
(declare-const ret@302@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _109 := builtin$havoc_ref()
(declare-const ret@303@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t59 := builtin$havoc_bool()
(declare-const ret@304@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t19 := builtin$havoc_bool()
(declare-const ret@305@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _126 := builtin$havoc_ref()
(declare-const ret@306@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t63 := builtin$havoc_bool()
(declare-const ret@307@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _113 := builtin$havoc_int()
(declare-const ret@308@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t62 := builtin$havoc_bool()
(declare-const ret@309@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _120 := builtin$havoc_ref()
(declare-const ret@310@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t28 := builtin$havoc_bool()
(declare-const ret@311@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _137 := builtin$havoc_ref()
(declare-const ret@312@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _128 := builtin$havoc_ref()
(declare-const ret@313@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _106 := builtin$havoc_int()
(declare-const ret@314@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _134 := builtin$havoc_int()
(declare-const ret@315@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _17 := builtin$havoc_ref()
(declare-const ret@316@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t7 := builtin$havoc_bool()
(declare-const ret@317@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t66 := builtin$havoc_bool()
(declare-const ret@318@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t15 := builtin$havoc_bool()
(declare-const ret@319@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t25 := builtin$havoc_bool()
(declare-const ret@320@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t23 := builtin$havoc_bool()
(declare-const ret@321@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t12 := builtin$havoc_bool()
(declare-const ret@322@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t57 := builtin$havoc_bool()
(declare-const ret@323@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _119 := builtin$havoc_int()
(declare-const ret@324@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _124 := builtin$havoc_int()
(declare-const ret@325@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _48 := builtin$havoc_ref()
(declare-const ret@326@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t8 := builtin$havoc_bool()
(declare-const ret@327@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _preserve$2 := builtin$havoc_ref()
(declare-const ret@328@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t67 := builtin$havoc_bool()
(declare-const ret@329@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _122 := builtin$havoc_int()
(declare-const ret@330@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t17 := builtin$havoc_bool()
(declare-const ret@331@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t20 := builtin$havoc_bool()
(declare-const ret@332@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _121 := builtin$havoc_ref()
(declare-const ret@333@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _18 := builtin$havoc_ref()
(declare-const ret@334@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _127 := builtin$havoc_int()
(declare-const ret@335@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t64 := builtin$havoc_bool()
(declare-const ret@336@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _52 := builtin$havoc_ref()
(declare-const ret@337@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _19 := builtin$havoc_ref()
(declare-const ret@338@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _136 := builtin$havoc_ref()
(declare-const ret@339@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t24 := builtin$havoc_bool()
(declare-const ret@340@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _117 := builtin$havoc_int()
(declare-const ret@341@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t16 := builtin$havoc_bool()
(declare-const ret@342@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _139 := builtin$havoc_int()
(declare-const ret@343@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _preserve$1 := builtin$havoc_ref()
(declare-const ret@344@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _107 := builtin$havoc_int()
(declare-const ret@345@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t58 := builtin$havoc_bool()
(declare-const ret@346@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _54 := builtin$havoc_int()
(declare-const ret@347@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _133 := builtin$havoc_ref()
(declare-const ret@348@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; label loop9_inv_post
; [exec]
; inhale acc(usize(_11), write) &&
;   (acc(bool(_12), write) &&
;   (acc(m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_(_3), write) &&
;   (acc(_1.val_ref, read$()) && _2 >= 0)))
(declare-const $t@349@01 $Snap)
(assert (= $t@349@01 ($Snap.combine ($Snap.first $t@349@01) ($Snap.second $t@349@01))))
(assert (=
  ($Snap.second $t@349@01)
  ($Snap.combine
    ($Snap.first ($Snap.second $t@349@01))
    ($Snap.second ($Snap.second $t@349@01)))))
(assert (=
  ($Snap.second ($Snap.second $t@349@01))
  ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.second ($Snap.second ($Snap.second $t@349@01))))))
(assert (=
  ($Snap.second ($Snap.second ($Snap.second $t@349@01)))
  ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@349@01))))
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@349@01)))))))
; [eval] read$()
(set-option :timeout 0)
(push) ; 6
(pop) ; 6
; Joined path conditions
(push) ; 6
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(declare-const $t@350@01 $Ref)
(assert (and
  (=>
    (< $Perm.No (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit))))
    (= $t@350@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01))))
  (=>
    (< $Perm.No (read$ $Snap.unit))
    (=
      $t@350@01
      ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@349@01)))))))))
(assert (<=
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit))))
(assert (<=
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit))
  $Perm.Write))
(assert (=>
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= _1@100@01 $Ref.null))))
(assert (=
  ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@349@01))))
  $Snap.unit))
; [eval] _2 >= 0
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale _preserve$0 == _1.val_ref
(declare-const $t@351@01 $Snap)
(assert (= $t@351@01 $Snap.unit))
; [eval] _preserve$0 == _1.val_ref
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (= _preserve$0@255@01 $t@350@01))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (unfolding acc(usize(_11), write) in
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) +
;     1 ==
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) &&
;     (_2 + 1 ==
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) &&
;     (_11.val_int <
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) &&
;     (0 <= _11.val_int &&
;     (_11.val_int <
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) &&
;     (2 <= _2 &&
;     (_2 < 18446744073709551615 &&
;     ((forall ii: Int, wi: Int ::
;       { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;       ii, wi) }
;       0 <= ii &&
;       (ii <
;       m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) &&
;       (0 <= wi &&
;       wi <
;       m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==>
;       m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;       ii, wi) >=
;       0) &&
;     ((forall ii: Int ::
;       { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;       ii, 0) }
;       0 <= ii &&
;       ii <
;       m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==>
;       m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;       ii, 0) ==
;       0) &&
;     (forall ii: Int, wi: Int ::
;       { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref,
;       ii, wi, _2) }
;       { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;       ii, wi) }
;       0 <= ii &&
;       (ii <= _11.val_int &&
;       (0 <= wi &&
;       wi <
;       m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==>
;       m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref,
;       ii, wi, _2) ==
;       m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;       ii, wi)))))))))))
(declare-const $t@352@01 $Snap)
(assert (= $t@352@01 $Snap.unit))
; [eval] (unfolding acc(usize(_11), write) in m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (_2 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (_11.val_int < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) && (0 <= _11.val_int && (_11.val_int < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) && (2 <= _2 && (_2 < 18446744073709551615 && ((forall ii: Int, wi: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0) && ((forall ii: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) } 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0) && (forall ii: Int, wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)))))))))))
(set-option :timeout 0)
(push) ; 6
(assert (usize%trigger ($Snap.first $t@349@01) ret@289@01))
(assert (=
  ($Snap.first $t@349@01)
  ($Snap.combine
    ($Snap.first ($Snap.first $t@349@01))
    ($Snap.second ($Snap.first $t@349@01)))))
(assert (not (= ret@289@01 $Ref.null)))
(assert (= ($Snap.second ($Snap.first $t@349@01)) $Snap.unit))
; [eval] 0 <= self.val_int
(assert (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (_2 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (_11.val_int < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) && (0 <= _11.val_int && (_11.val_int < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) && (2 <= _2 && (_2 < 18446744073709551615 && ((forall ii: Int, wi: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0) && ((forall ii: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) } 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0) && (forall ii: Int, wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi))))))))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
(push) ; 7
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
; [eval] read$()
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+ (read$ $Snap.unit) (read$ $Snap.unit))
          ($Perm.min
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@245@01
  $Snap.unit) $t@350@01))
(pop) ; 7
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@245@01
  $Snap.unit) $t@350@01))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(set-option :timeout 0)
(push) ; 7
; [eval] read$()
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
  $Snap.unit) ret@230@01))
(pop) ; 7
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
  $Snap.unit) ret@230@01))
(set-option :timeout 0)
(push) ; 7
; [then-branch: 19 | m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@245@01, _), $t@350@01) + 1 != m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) | live]
; [else-branch: 19 | m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@245@01, _), $t@350@01) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) | live]
(push) ; 8
; [then-branch: 19 | m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@245@01, _), $t@350@01) + 1 != m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)]
(assert (not
  (=
    (+
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@245@01
        $Snap.unit) $t@350@01)
      1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))))
(pop) ; 8
(push) ; 8
; [else-branch: 19 | m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@245@01, _), $t@350@01) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)]
(assert (=
  (+
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@245@01
      $Snap.unit) $t@350@01)
    1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01)))
; [eval] _2 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] _2 + 1
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 9
; [eval] read$()
(push) ; 10
(pop) ; 10
; Joined path conditions
(push) ; 10
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
  $Snap.unit) ret@230@01))
(pop) ; 9
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
  $Snap.unit) ret@230@01))
(set-option :timeout 0)
(push) ; 9
; [then-branch: 20 | _2@101@01 + 1 != m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) | live]
; [else-branch: 20 | _2@101@01 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) | live]
(push) ; 10
; [then-branch: 20 | _2@101@01 + 1 != m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)]
(assert (not
  (=
    (+ _2@101@01 1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))))
(pop) ; 10
(push) ; 10
; [else-branch: 20 | _2@101@01 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)]
(assert (=
  (+ _2@101@01 1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01)))
; [eval] _11.val_int < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+ (read$ $Snap.unit) (read$ $Snap.unit))
          ($Perm.min
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(pop) ; 11
; Joined path conditions
(set-option :timeout 0)
(push) ; 11
; [then-branch: 21 | !(First:(First:($t@349@01)) < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@245@01, _), $t@350@01)) | live]
; [else-branch: 21 | First:(First:($t@349@01)) < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@245@01, _), $t@350@01) | live]
(push) ; 12
; [then-branch: 21 | !(First:(First:($t@349@01)) < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@245@01, _), $t@350@01))]
(assert (not
  (<
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@245@01
      $Snap.unit) $t@350@01))))
(pop) ; 12
(push) ; 12
; [else-branch: 21 | First:(First:($t@349@01)) < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@245@01, _), $t@350@01)]
(assert (<
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@245@01
    $Snap.unit) $t@350@01)))
; [eval] 0 <= _11.val_int
(push) ; 13
; [then-branch: 22 | !(0 <= First:(First:($t@349@01))) | live]
; [else-branch: 22 | 0 <= First:(First:($t@349@01)) | live]
(push) ; 14
; [then-branch: 22 | !(0 <= First:(First:($t@349@01)))]
(assert (not (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))
(pop) ; 14
(push) ; 14
; [else-branch: 22 | 0 <= First:(First:($t@349@01))]
; [eval] _11.val_int < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
(push) ; 15
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
; [eval] read$()
(push) ; 16
(pop) ; 16
; Joined path conditions
(push) ; 16
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(push) ; 16
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 16
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+ (read$ $Snap.unit) (read$ $Snap.unit))
          ($Perm.min
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(push) ; 16
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(pop) ; 15
; Joined path conditions
(set-option :timeout 0)
(push) ; 15
; [then-branch: 23 | !(First:(First:($t@349@01)) < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@245@01, _), $t@350@01)) | live]
; [else-branch: 23 | First:(First:($t@349@01)) < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@245@01, _), $t@350@01) | live]
(push) ; 16
; [then-branch: 23 | !(First:(First:($t@349@01)) < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@245@01, _), $t@350@01))]
(assert (not
  (<
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@245@01
      $Snap.unit) $t@350@01))))
(pop) ; 16
(push) ; 16
; [else-branch: 23 | First:(First:($t@349@01)) < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@245@01, _), $t@350@01)]
; [eval] 2 <= _2
(push) ; 17
; [then-branch: 24 | !(2 <= _2@101@01) | live]
; [else-branch: 24 | 2 <= _2@101@01 | live]
(push) ; 18
; [then-branch: 24 | !(2 <= _2@101@01)]
(assert (not (<= 2 _2@101@01)))
(pop) ; 18
(push) ; 18
; [else-branch: 24 | 2 <= _2@101@01]
; [eval] _2 < 18446744073709551615
(push) ; 19
; [then-branch: 25 | !(_2@101@01 < 18446744073709551615) | live]
; [else-branch: 25 | _2@101@01 < 18446744073709551615 | live]
(push) ; 20
; [then-branch: 25 | !(_2@101@01 < 18446744073709551615)]
(assert (not (< _2@101@01 18446744073709551615)))
(pop) ; 20
(push) ; 20
; [else-branch: 25 | _2@101@01 < 18446744073709551615]
; [eval] (forall ii: Int, wi: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0)
(declare-const ii@353@01 Int)
(declare-const wi@354@01 Int)
(push) ; 21
; [eval] 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0
; [eval] 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)))
; [eval] 0 <= ii
(push) ; 22
; [then-branch: 26 | !(0 <= ii@353@01) | live]
; [else-branch: 26 | 0 <= ii@353@01 | live]
(push) ; 23
; [then-branch: 26 | !(0 <= ii@353@01)]
(assert (not (<= 0 ii@353@01)))
(pop) ; 23
(push) ; 23
; [else-branch: 26 | 0 <= ii@353@01]
(assert (<= 0 ii@353@01))
; [eval] ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 24
; [eval] read$()
(push) ; 25
(pop) ; 25
; Joined path conditions
(push) ; 25
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 25
; 0.00s
; (get-info :all-statistics)
(push) ; 25
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 25
; 0.00s
; (get-info :all-statistics)
(pop) ; 24
; Joined path conditions
(set-option :timeout 0)
(push) ; 24
; [then-branch: 27 | !(ii@353@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)) | live]
; [else-branch: 27 | ii@353@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) | live]
(push) ; 25
; [then-branch: 27 | !(ii@353@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01))]
(assert (not
  (<
    ii@353@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))))
(pop) ; 25
(push) ; 25
; [else-branch: 27 | ii@353@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)]
(assert (<
  ii@353@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= wi
(push) ; 26
; [then-branch: 28 | !(0 <= wi@354@01) | live]
; [else-branch: 28 | 0 <= wi@354@01 | live]
(push) ; 27
; [then-branch: 28 | !(0 <= wi@354@01)]
(assert (not (<= 0 wi@354@01)))
(pop) ; 27
(push) ; 27
; [else-branch: 28 | 0 <= wi@354@01]
(assert (<= 0 wi@354@01))
; [eval] wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 28
; [eval] read$()
(push) ; 29
(pop) ; 29
; Joined path conditions
(push) ; 29
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 29
; 0.00s
; (get-info :all-statistics)
(push) ; 29
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 29
; 0.00s
; (get-info :all-statistics)
(pop) ; 28
; Joined path conditions
(pop) ; 27
(pop) ; 26
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 wi@354@01) (not (<= 0 wi@354@01))))
(pop) ; 25
(pop) ; 24
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    ii@353@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))
  (and
    (<
      ii@353@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (or (<= 0 wi@354@01) (not (<= 0 wi@354@01))))))
(assert (or
  (<
    ii@353@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))
  (not
    (<
      ii@353@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01)))))
(pop) ; 23
(pop) ; 22
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 ii@353@01)
  (and
    (<= 0 ii@353@01)
    (=>
      (<
        ii@353@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))
      (and
        (<
          ii@353@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (or (<= 0 wi@354@01) (not (<= 0 wi@354@01)))))
    (or
      (<
        ii@353@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))
      (not
        (<
          ii@353@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))))
(assert (or (<= 0 ii@353@01) (not (<= 0 ii@353@01))))
(set-option :timeout 0)
(push) ; 22
; [then-branch: 29 | 0 <= ii@353@01 && ii@353@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) && 0 <= wi@354@01 && wi@354@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) | live]
; [else-branch: 29 | !(0 <= ii@353@01 && ii@353@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) && 0 <= wi@354@01 && wi@354@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)) | live]
(push) ; 23
; [then-branch: 29 | 0 <= ii@353@01 && ii@353@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) && 0 <= wi@354@01 && wi@354@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)]
(assert (and
  (<= 0 ii@353@01)
  (and
    (<
      ii@353@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (and
      (<= 0 wi@354@01)
      (<
        wi@354@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
(push) ; 24
; [eval] read$()
(push) ; 25
(pop) ; 25
; Joined path conditions
(push) ; 25
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 25
; 0.00s
; (get-info :all-statistics)
(push) ; 25
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 25
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 25
; [eval] read$()
(push) ; 26
(pop) ; 26
; Joined path conditions
(push) ; 26
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 26
; 0.00s
; (get-info :all-statistics)
(push) ; 26
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 26
; 0.00s
; (get-info :all-statistics)
(pop) ; 25
; Joined path conditions
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 25
; [eval] read$()
(push) ; 26
(pop) ; 26
; Joined path conditions
(push) ; 26
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 26
; 0.00s
; (get-info :all-statistics)
(push) ; 26
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 26
; 0.00s
; (get-info :all-statistics)
(pop) ; 25
; Joined path conditions
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
(pop) ; 24
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
(pop) ; 23
(set-option :timeout 0)
(push) ; 23
; [else-branch: 29 | !(0 <= ii@353@01 && ii@353@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) && 0 <= wi@354@01 && wi@354@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01))]
(assert (not
  (and
    (<= 0 ii@353@01)
    (and
      (<
        ii@353@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@354@01)
        (<
          wi@354@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))))
(pop) ; 23
(pop) ; 22
; Joined path conditions
(assert (=>
  (and
    (<= 0 ii@353@01)
    (and
      (<
        ii@353@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@354@01)
        (<
          wi@354@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))
  (and
    (<= 0 ii@353@01)
    (<
      ii@353@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (<= 0 wi@354@01)
    (<
      wi@354@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 ii@353@01)
      (and
        (<
          ii@353@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (and
          (<= 0 wi@354@01)
          (<
            wi@354@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))))))
  (and
    (<= 0 ii@353@01)
    (and
      (<
        ii@353@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@354@01)
        (<
          wi@354@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))))
(pop) ; 21
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
  (and
    (=>
      (<= 0 ii@353@01)
      (and
        (<= 0 ii@353@01)
        (=>
          (<
            ii@353@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (and
            (<
              ii@353@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))
            (or (<= 0 wi@354@01) (not (<= 0 wi@354@01)))))
        (or
          (<
            ii@353@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (not
            (<
              ii@353@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))))))
    (or (<= 0 ii@353@01) (not (<= 0 ii@353@01)))
    (=>
      (and
        (<= 0 ii@353@01)
        (and
          (<
            ii@353@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@354@01)
            (<
              wi@354@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))
      (and
        (<= 0 ii@353@01)
        (<
          ii@353@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (<= 0 wi@354@01)
        (<
          wi@354@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)))
    (or
      (not
        (and
          (<= 0 ii@353@01)
          (and
            (<
              ii@353@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))
            (and
              (<= 0 wi@354@01)
              (<
                wi@354@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01))))))
      (and
        (<= 0 ii@353@01)
        (and
          (<
            ii@353@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@354@01)
            (<
              wi@354@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676-aux|)))
(push) ; 21
; [then-branch: 30 | !(QA ii@353@01,wi@354@01 :: 0 <= ii@353@01 && ii@353@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) && 0 <= wi@354@01 && wi@354@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:(Second:($t@349@01))), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@353@01, wi@354@01) >= 0) | live]
; [else-branch: 30 | QA ii@353@01,wi@354@01 :: 0 <= ii@353@01 && ii@353@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) && 0 <= wi@354@01 && wi@354@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:(Second:($t@349@01))), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@353@01, wi@354@01) >= 0 | live]
(push) ; 22
; [then-branch: 30 | !(QA ii@353@01,wi@354@01 :: 0 <= ii@353@01 && ii@353@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) && 0 <= wi@354@01 && wi@354@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:(Second:($t@349@01))), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@353@01, wi@354@01) >= 0)]
(assert (not
  (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
    (=>
      (and
        (<= 0 ii@353@01)
        (and
          (<
            ii@353@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@354@01)
            (<
              wi@354@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))
      (>=
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
        0))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))))
(pop) ; 22
(push) ; 22
; [else-branch: 30 | QA ii@353@01,wi@354@01 :: 0 <= ii@353@01 && ii@353@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) && 0 <= wi@354@01 && wi@354@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:(Second:($t@349@01))), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@353@01, wi@354@01) >= 0]
(assert (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
  (=>
    (and
      (<= 0 ii@353@01)
      (and
        (<
          ii@353@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (and
          (<= 0 wi@354@01)
          (<
            wi@354@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01)))))
    (>=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
      0))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|)))
; [eval] (forall ii: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) } 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0)
(declare-const ii@355@01 Int)
(push) ; 23
; [eval] 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0
; [eval] 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] 0 <= ii
(push) ; 24
; [then-branch: 31 | !(0 <= ii@355@01) | live]
; [else-branch: 31 | 0 <= ii@355@01 | live]
(push) ; 25
; [then-branch: 31 | !(0 <= ii@355@01)]
(assert (not (<= 0 ii@355@01)))
(pop) ; 25
(push) ; 25
; [else-branch: 31 | 0 <= ii@355@01]
(assert (<= 0 ii@355@01))
; [eval] ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 26
; [eval] read$()
(push) ; 27
(pop) ; 27
; Joined path conditions
(push) ; 27
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 27
; 0.00s
; (get-info :all-statistics)
(push) ; 27
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 27
; 0.00s
; (get-info :all-statistics)
(pop) ; 26
; Joined path conditions
(pop) ; 25
(pop) ; 24
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 ii@355@01) (not (<= 0 ii@355@01))))
(set-option :timeout 0)
(push) ; 24
; [then-branch: 32 | 0 <= ii@355@01 && ii@355@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) | live]
; [else-branch: 32 | !(0 <= ii@355@01 && ii@355@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)) | live]
(push) ; 25
; [then-branch: 32 | 0 <= ii@355@01 && ii@355@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)]
(assert (and
  (<= 0 ii@355@01)
  (<
    ii@355@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0)
(push) ; 26
; [eval] read$()
(push) ; 27
(pop) ; 27
; Joined path conditions
(push) ; 27
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 27
; 0.00s
; (get-info :all-statistics)
(push) ; 27
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 27
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 27
; [eval] read$()
(push) ; 28
(pop) ; 28
; Joined path conditions
(push) ; 28
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 28
; 0.00s
; (get-info :all-statistics)
(push) ; 28
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 28
; 0.00s
; (get-info :all-statistics)
(pop) ; 27
; Joined path conditions
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 27
; [eval] read$()
(push) ; 28
(pop) ; 28
; Joined path conditions
(push) ; 28
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 28
; 0.00s
; (get-info :all-statistics)
(push) ; 28
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 28
; 0.00s
; (get-info :all-statistics)
(pop) ; 27
; Joined path conditions
(set-option :timeout 0)
(push) ; 27
(assert (not (<
  0
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 27
; 0.00s
; (get-info :all-statistics)
(assert (<
  0
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
(pop) ; 26
; Joined path conditions
(assert (and
  (<
    0
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)))
(pop) ; 25
(push) ; 25
; [else-branch: 32 | !(0 <= ii@355@01 && ii@355@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01))]
(assert (not
  (and
    (<= 0 ii@355@01)
    (<
      ii@355@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01)))))
(pop) ; 25
(pop) ; 24
; Joined path conditions
(assert (=>
  (and
    (<= 0 ii@355@01)
    (<
      ii@355@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01)))
  (and
    (<= 0 ii@355@01)
    (<
      ii@355@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (<
      0
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 ii@355@01)
      (<
        ii@355@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))))
  (and
    (<= 0 ii@355@01)
    (<
      ii@355@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01)))))
(pop) ; 23
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((ii@355@01 Int)) (!
  (and
    (or (<= 0 ii@355@01) (not (<= 0 ii@355@01)))
    (=>
      (and
        (<= 0 ii@355@01)
        (<
          ii@355@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))
      (and
        (<= 0 ii@355@01)
        (<
          ii@355@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (<
          0
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)))
    (or
      (not
        (and
          (<= 0 ii@355@01)
          (<
            ii@355@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))))
      (and
        (<= 0 ii@355@01)
        (<
          ii@355@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096-aux|)))
(push) ; 23
; [then-branch: 33 | !(QA ii@355@01 :: 0 <= ii@355@01 && ii@355@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:(Second:($t@349@01))), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@355@01, 0) == 0) | live]
; [else-branch: 33 | QA ii@355@01 :: 0 <= ii@355@01 && ii@355@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:(Second:($t@349@01))), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@355@01, 0) == 0 | live]
(push) ; 24
; [then-branch: 33 | !(QA ii@355@01 :: 0 <= ii@355@01 && ii@355@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:(Second:($t@349@01))), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@355@01, 0) == 0)]
(assert (not
  (forall ((ii@355@01 Int)) (!
    (=>
      (and
        (<= 0 ii@355@01)
        (<
          ii@355@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))
      (=
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
        0))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))))
(pop) ; 24
(push) ; 24
; [else-branch: 33 | QA ii@355@01 :: 0 <= ii@355@01 && ii@355@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:(Second:($t@349@01))), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@355@01, 0) == 0]
(assert (forall ((ii@355@01 Int)) (!
  (=>
    (and
      (<= 0 ii@355@01)
      (<
        ii@355@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01)))
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
      0))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|)))
; [eval] (forall ii: Int, wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi))
(declare-const ii@356@01 Int)
(declare-const wi@357@01 Int)
(push) ; 25
; [eval] 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
; [eval] 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)))
; [eval] 0 <= ii
(push) ; 26
; [then-branch: 34 | !(0 <= ii@356@01) | live]
; [else-branch: 34 | 0 <= ii@356@01 | live]
(push) ; 27
; [then-branch: 34 | !(0 <= ii@356@01)]
(assert (not (<= 0 ii@356@01)))
(pop) ; 27
(push) ; 27
; [else-branch: 34 | 0 <= ii@356@01]
(assert (<= 0 ii@356@01))
; [eval] ii <= _11.val_int
(push) ; 28
; [then-branch: 35 | !(ii@356@01 <= First:(First:($t@349@01))) | live]
; [else-branch: 35 | ii@356@01 <= First:(First:($t@349@01)) | live]
(push) ; 29
; [then-branch: 35 | !(ii@356@01 <= First:(First:($t@349@01)))]
(assert (not
  (<= ii@356@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))
(pop) ; 29
(push) ; 29
; [else-branch: 35 | ii@356@01 <= First:(First:($t@349@01))]
(assert (<= ii@356@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))
; [eval] 0 <= wi
(push) ; 30
; [then-branch: 36 | !(0 <= wi@357@01) | live]
; [else-branch: 36 | 0 <= wi@357@01 | live]
(push) ; 31
; [then-branch: 36 | !(0 <= wi@357@01)]
(assert (not (<= 0 wi@357@01)))
(pop) ; 31
(push) ; 31
; [else-branch: 36 | 0 <= wi@357@01]
(assert (<= 0 wi@357@01))
; [eval] wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 32
; [eval] read$()
(push) ; 33
(pop) ; 33
; Joined path conditions
(push) ; 33
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 33
; 0.00s
; (get-info :all-statistics)
(push) ; 33
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 33
; 0.00s
; (get-info :all-statistics)
(pop) ; 32
; Joined path conditions
(pop) ; 31
(pop) ; 30
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 wi@357@01) (not (<= 0 wi@357@01))))
(pop) ; 29
(pop) ; 28
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= ii@356@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
  (and
    (<=
      ii@356@01
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
    (or (<= 0 wi@357@01) (not (<= 0 wi@357@01))))))
(assert (or
  (<= ii@356@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
  (not
    (<=
      ii@356@01
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))))
(pop) ; 27
(pop) ; 26
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 ii@356@01)
  (and
    (<= 0 ii@356@01)
    (=>
      (<=
        ii@356@01
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
      (and
        (<=
          ii@356@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
        (or (<= 0 wi@357@01) (not (<= 0 wi@357@01)))))
    (or
      (<=
        ii@356@01
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
      (not
        (<=
          ii@356@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))))))
(assert (or (<= 0 ii@356@01) (not (<= 0 ii@356@01))))
(set-option :timeout 0)
(push) ; 26
; [then-branch: 37 | 0 <= ii@356@01 && ii@356@01 <= First:(First:($t@349@01)) && 0 <= wi@357@01 && wi@357@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) | live]
; [else-branch: 37 | !(0 <= ii@356@01 && ii@356@01 <= First:(First:($t@349@01)) && 0 <= wi@357@01 && wi@357@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)) | live]
(push) ; 27
; [then-branch: 37 | 0 <= ii@356@01 && ii@356@01 <= First:(First:($t@349@01)) && 0 <= wi@357@01 && wi@357@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)]
(assert (and
  (<= 0 ii@356@01)
  (and
    (<=
      ii@356@01
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
    (and
      (<= 0 wi@357@01)
      (<
        wi@357@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))))))
; [eval] m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
; [eval] m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2)
(push) ; 28
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 28
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 28
; [eval] read$()
(push) ; 29
(pop) ; 29
; Joined path conditions
(push) ; 29
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 29
; 0.00s
; (get-info :all-statistics)
(push) ; 29
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 29
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 29
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+ (read$ $Snap.unit) (read$ $Snap.unit))
          ($Perm.min
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 29
; 0.00s
; (get-info :all-statistics)
(push) ; 29
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 29
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 29
; [eval] read$()
(push) ; 30
(pop) ; 30
; Joined path conditions
(push) ; 30
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 30
; 0.00s
; (get-info :all-statistics)
(push) ; 30
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 30
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 30
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+ (read$ $Snap.unit) (read$ $Snap.unit))
          ($Perm.min
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 30
; 0.00s
; (get-info :all-statistics)
(push) ; 30
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 30
; 0.00s
; (get-info :all-statistics)
(pop) ; 29
; Joined path conditions
(set-option :timeout 0)
(push) ; 29
(assert (not (<=
  ii@356@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@245@01
    $Snap.unit) $t@350@01))))
(check-sat)
; unsat
(pop) ; 29
; 0.00s
; (get-info :all-statistics)
(assert (<=
  ii@356@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@245@01
    $Snap.unit) $t@350@01)))
; [eval] 0 <= _pure_3
; [eval] _pure_3 <= _pure_4
(push) ; 29
(assert (not (<= wi@357@01 _2@101@01)))
(check-sat)
; unsat
(pop) ; 29
; 0.00s
; (get-info :all-statistics)
(assert (<= wi@357@01 _2@101@01))
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
; [eval] 0 <= _pure_4
(push) ; 29
(assert (not (<= 0 _2@101@01)))
(check-sat)
; unsat
(pop) ; 29
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 _2@101@01))
(assert (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
  $t@245@01
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01))
(pop) ; 28
; Joined path conditions
(assert (and
  (<=
    ii@356@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@245@01
      $Snap.unit) $t@350@01))
  (<= wi@357@01 _2@101@01)
  (<= 0 _2@101@01)
  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
    $t@245@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
(push) ; 28
; [eval] read$()
(push) ; 29
(pop) ; 29
; Joined path conditions
(push) ; 29
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 29
; 0.00s
; (get-info :all-statistics)
(push) ; 29
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 29
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 29
; [eval] read$()
(push) ; 30
(pop) ; 30
; Joined path conditions
(push) ; 30
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 30
; 0.00s
; (get-info :all-statistics)
(push) ; 30
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 30
; 0.00s
; (get-info :all-statistics)
(pop) ; 29
; Joined path conditions
(set-option :timeout 0)
(push) ; 29
(assert (not (<
  ii@356@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 29
; 0.00s
; (get-info :all-statistics)
(assert (<
  ii@356@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(push) ; 29
; [eval] read$()
(push) ; 30
(pop) ; 30
; Joined path conditions
(push) ; 30
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 30
; 0.00s
; (get-info :all-statistics)
(push) ; 30
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 30
; 0.00s
; (get-info :all-statistics)
(pop) ; 29
; Joined path conditions
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01))
(pop) ; 28
; Joined path conditions
(assert (and
  (<
    ii@356@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
(pop) ; 27
(set-option :timeout 0)
(push) ; 27
; [else-branch: 37 | !(0 <= ii@356@01 && ii@356@01 <= First:(First:($t@349@01)) && 0 <= wi@357@01 && wi@357@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01))]
(assert (not
  (and
    (<= 0 ii@356@01)
    (and
      (<=
        ii@356@01
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
      (and
        (<= 0 wi@357@01)
        (<
          wi@357@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))))
(pop) ; 27
(pop) ; 26
; Joined path conditions
(assert (=>
  (and
    (<= 0 ii@356@01)
    (and
      (<=
        ii@356@01
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
      (and
        (<= 0 wi@357@01)
        (<
          wi@357@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))
  (and
    (<= 0 ii@356@01)
    (<=
      ii@356@01
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
    (<= 0 wi@357@01)
    (<
      wi@357@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (<=
      ii@356@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@245@01
        $Snap.unit) $t@350@01))
    (<= wi@357@01 _2@101@01)
    (<= 0 _2@101@01)
    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
      $t@245@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
    (<
      ii@356@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 ii@356@01)
      (and
        (<=
          ii@356@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
        (and
          (<= 0 wi@357@01)
          (<
            wi@357@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))))))
  (and
    (<= 0 ii@356@01)
    (and
      (<=
        ii@356@01
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
      (and
        (<= 0 wi@357@01)
        (<
          wi@357@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))))
(pop) ; 25
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
  (and
    (=>
      (<= 0 ii@356@01)
      (and
        (<= 0 ii@356@01)
        (=>
          (<=
            ii@356@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (and
            (<=
              ii@356@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (or (<= 0 wi@357@01) (not (<= 0 wi@357@01)))))
        (or
          (<=
            ii@356@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (not
            (<=
              ii@356@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
    (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
    (=>
      (and
        (<= 0 ii@356@01)
        (and
          (<=
            ii@356@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (and
            (<= 0 wi@357@01)
            (<
              wi@357@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))
      (and
        (<= 0 ii@356@01)
        (<=
          ii@356@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
        (<= 0 wi@357@01)
        (<
          wi@357@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (<=
          ii@356@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@245@01
            $Snap.unit) $t@350@01))
        (<= wi@357@01 _2@101@01)
        (<= 0 _2@101@01)
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
          $t@245@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
        (<
          ii@356@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
    (or
      (not
        (and
          (<= 0 ii@356@01)
          (and
            (<=
              ii@356@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (and
              (<= 0 wi@357@01)
              (<
                wi@357@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01))))))
      (and
        (<= 0 ii@356@01)
        (and
          (<=
            ii@356@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (and
            (<= 0 wi@357@01)
            (<
              wi@357@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
    $t@245@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|)))
(assert (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
  (and
    (=>
      (<= 0 ii@356@01)
      (and
        (<= 0 ii@356@01)
        (=>
          (<=
            ii@356@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (and
            (<=
              ii@356@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (or (<= 0 wi@357@01) (not (<= 0 wi@357@01)))))
        (or
          (<=
            ii@356@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (not
            (<=
              ii@356@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
    (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
    (=>
      (and
        (<= 0 ii@356@01)
        (and
          (<=
            ii@356@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (and
            (<= 0 wi@357@01)
            (<
              wi@357@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))
      (and
        (<= 0 ii@356@01)
        (<=
          ii@356@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
        (<= 0 wi@357@01)
        (<
          wi@357@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (<=
          ii@356@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@245@01
            $Snap.unit) $t@350@01))
        (<= wi@357@01 _2@101@01)
        (<= 0 _2@101@01)
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
          $t@245@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
        (<
          ii@356@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
    (or
      (not
        (and
          (<= 0 ii@356@01)
          (and
            (<=
              ii@356@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (and
              (<= 0 wi@357@01)
              (<
                wi@357@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01))))))
      (and
        (<= 0 ii@356@01)
        (and
          (<=
            ii@356@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (and
            (<= 0 wi@357@01)
            (<
              wi@357@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|)))
(pop) ; 24
(pop) ; 23
; Joined path conditions
; Joined path conditions
(assert (=>
  (forall ((ii@355@01 Int)) (!
    (=>
      (and
        (<= 0 ii@355@01)
        (<
          ii@355@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))
      (=
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
        0))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
  (and
    (forall ((ii@355@01 Int)) (!
      (=>
        (and
          (<= 0 ii@355@01)
          (<
            ii@355@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01)))
        (=
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
          0))
      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
    (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
      (and
        (=>
          (<= 0 ii@356@01)
          (and
            (<= 0 ii@356@01)
            (=>
              (<=
                ii@356@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (and
                (<=
                  ii@356@01
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                (or (<= 0 wi@357@01) (not (<= 0 wi@357@01)))))
            (or
              (<=
                ii@356@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (not
                (<=
                  ii@356@01
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
        (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
        (=>
          (and
            (<= 0 ii@356@01)
            (and
              (<=
                ii@356@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (and
                (<= 0 wi@357@01)
                (<
                  wi@357@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01)))))
          (and
            (<= 0 ii@356@01)
            (<=
              ii@356@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (<= 0 wi@357@01)
            (<
              wi@357@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))
            (<=
              ii@356@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@245@01
                $Snap.unit) $t@350@01))
            (<= wi@357@01 _2@101@01)
            (<= 0 _2@101@01)
            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
              $t@245@01
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
            (<
              ii@356@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
        (or
          (not
            (and
              (<= 0 ii@356@01)
              (and
                (<=
                  ii@356@01
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                (and
                  (<= 0 wi@357@01)
                  (<
                    wi@357@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      $Snap.unit) ret@230@01))))))
          (and
            (<= 0 ii@356@01)
            (and
              (<=
                ii@356@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (and
                (<= 0 wi@357@01)
                (<
                  wi@357@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01)))))))
      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
        $t@245@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))
    (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
      (and
        (=>
          (<= 0 ii@356@01)
          (and
            (<= 0 ii@356@01)
            (=>
              (<=
                ii@356@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (and
                (<=
                  ii@356@01
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                (or (<= 0 wi@357@01) (not (<= 0 wi@357@01)))))
            (or
              (<=
                ii@356@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (not
                (<=
                  ii@356@01
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
        (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
        (=>
          (and
            (<= 0 ii@356@01)
            (and
              (<=
                ii@356@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (and
                (<= 0 wi@357@01)
                (<
                  wi@357@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01)))))
          (and
            (<= 0 ii@356@01)
            (<=
              ii@356@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (<= 0 wi@357@01)
            (<
              wi@357@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))
            (<=
              ii@356@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@245@01
                $Snap.unit) $t@350@01))
            (<= wi@357@01 _2@101@01)
            (<= 0 _2@101@01)
            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
              $t@245@01
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
            (<
              ii@356@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
        (or
          (not
            (and
              (<= 0 ii@356@01)
              (and
                (<=
                  ii@356@01
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                (and
                  (<= 0 wi@357@01)
                  (<
                    wi@357@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      $Snap.unit) ret@230@01))))))
          (and
            (<= 0 ii@356@01)
            (and
              (<=
                ii@356@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (and
                (<= 0 wi@357@01)
                (<
                  wi@357@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01)))))))
      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|)))))
(assert (or
  (forall ((ii@355@01 Int)) (!
    (=>
      (and
        (<= 0 ii@355@01)
        (<
          ii@355@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))
      (=
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
        0))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
  (not
    (forall ((ii@355@01 Int)) (!
      (=>
        (and
          (<= 0 ii@355@01)
          (<
            ii@355@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01)))
        (=
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
          0))
      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|)))))
(pop) ; 22
(pop) ; 21
; Joined path conditions
; Joined path conditions
(assert (=>
  (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
    (=>
      (and
        (<= 0 ii@353@01)
        (and
          (<
            ii@353@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@354@01)
            (<
              wi@354@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))
      (>=
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
        0))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
  (and
    (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
      (=>
        (and
          (<= 0 ii@353@01)
          (and
            (<
              ii@353@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))
            (and
              (<= 0 wi@354@01)
              (<
                wi@354@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01)))))
        (>=
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
          0))
      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
    (forall ((ii@355@01 Int)) (!
      (and
        (or (<= 0 ii@355@01) (not (<= 0 ii@355@01)))
        (=>
          (and
            (<= 0 ii@355@01)
            (<
              ii@355@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))
          (and
            (<= 0 ii@355@01)
            (<
              ii@355@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))
            (<
              0
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)))
        (or
          (not
            (and
              (<= 0 ii@355@01)
              (<
                ii@355@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01))))
          (and
            (<= 0 ii@355@01)
            (<
              ii@355@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))
      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096-aux|))
    (=>
      (forall ((ii@355@01 Int)) (!
        (=>
          (and
            (<= 0 ii@355@01)
            (<
              ii@355@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))
          (=
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
            0))
        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
      (and
        (forall ((ii@355@01 Int)) (!
          (=>
            (and
              (<= 0 ii@355@01)
              (<
                ii@355@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01)))
            (=
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
              0))
          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
        (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
          (and
            (=>
              (<= 0 ii@356@01)
              (and
                (<= 0 ii@356@01)
                (=>
                  (<=
                    ii@356@01
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                  (and
                    (<=
                      ii@356@01
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                    (or (<= 0 wi@357@01) (not (<= 0 wi@357@01)))))
                (or
                  (<=
                    ii@356@01
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                  (not
                    (<=
                      ii@356@01
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
            (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
            (=>
              (and
                (<= 0 ii@356@01)
                (and
                  (<=
                    ii@356@01
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                  (and
                    (<= 0 wi@357@01)
                    (<
                      wi@357@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01)))))
              (and
                (<= 0 ii@356@01)
                (<=
                  ii@356@01
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                (<= 0 wi@357@01)
                (<
                  wi@357@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))
                (<=
                  ii@356@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    $t@245@01
                    $Snap.unit) $t@350@01))
                (<= wi@357@01 _2@101@01)
                (<= 0 _2@101@01)
                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                  $t@245@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                (<
                  ii@356@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
            (or
              (not
                (and
                  (<= 0 ii@356@01)
                  (and
                    (<=
                      ii@356@01
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                    (and
                      (<= 0 wi@357@01)
                      (<
                        wi@357@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          $Snap.unit) ret@230@01))))))
              (and
                (<= 0 ii@356@01)
                (and
                  (<=
                    ii@356@01
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                  (and
                    (<= 0 wi@357@01)
                    (<
                      wi@357@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01)))))))
          :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
            $t@245@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))
        (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
          (and
            (=>
              (<= 0 ii@356@01)
              (and
                (<= 0 ii@356@01)
                (=>
                  (<=
                    ii@356@01
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                  (and
                    (<=
                      ii@356@01
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                    (or (<= 0 wi@357@01) (not (<= 0 wi@357@01)))))
                (or
                  (<=
                    ii@356@01
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                  (not
                    (<=
                      ii@356@01
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
            (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
            (=>
              (and
                (<= 0 ii@356@01)
                (and
                  (<=
                    ii@356@01
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                  (and
                    (<= 0 wi@357@01)
                    (<
                      wi@357@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01)))))
              (and
                (<= 0 ii@356@01)
                (<=
                  ii@356@01
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                (<= 0 wi@357@01)
                (<
                  wi@357@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))
                (<=
                  ii@356@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    $t@245@01
                    $Snap.unit) $t@350@01))
                (<= wi@357@01 _2@101@01)
                (<= 0 _2@101@01)
                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                  $t@245@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                (<
                  ii@356@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
            (or
              (not
                (and
                  (<= 0 ii@356@01)
                  (and
                    (<=
                      ii@356@01
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                    (and
                      (<= 0 wi@357@01)
                      (<
                        wi@357@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          $Snap.unit) ret@230@01))))))
              (and
                (<= 0 ii@356@01)
                (and
                  (<=
                    ii@356@01
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                  (and
                    (<= 0 wi@357@01)
                    (<
                      wi@357@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01)))))))
          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))))
    (or
      (forall ((ii@355@01 Int)) (!
        (=>
          (and
            (<= 0 ii@355@01)
            (<
              ii@355@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))
          (=
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
            0))
        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
      (not
        (forall ((ii@355@01 Int)) (!
          (=>
            (and
              (<= 0 ii@355@01)
              (<
                ii@355@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01)))
            (=
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
              0))
          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|)))))))
(assert (or
  (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
    (=>
      (and
        (<= 0 ii@353@01)
        (and
          (<
            ii@353@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@354@01)
            (<
              wi@354@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))
      (>=
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
        0))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
  (not
    (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
      (=>
        (and
          (<= 0 ii@353@01)
          (and
            (<
              ii@353@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))
            (and
              (<= 0 wi@354@01)
              (<
                wi@354@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01)))))
        (>=
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
          0))
      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|)))))
(pop) ; 20
(pop) ; 19
; Joined path conditions
; Joined path conditions
(assert (=>
  (< _2@101@01 18446744073709551615)
  (and
    (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
      (and
        (=>
          (<= 0 ii@353@01)
          (and
            (<= 0 ii@353@01)
            (=>
              (<
                ii@353@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01))
              (and
                (<
                  ii@353@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))
                (or (<= 0 wi@354@01) (not (<= 0 wi@354@01)))))
            (or
              (<
                ii@353@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01))
              (not
                (<
                  ii@353@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))))))
        (or (<= 0 ii@353@01) (not (<= 0 ii@353@01)))
        (=>
          (and
            (<= 0 ii@353@01)
            (and
              (<
                ii@353@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01))
              (and
                (<= 0 wi@354@01)
                (<
                  wi@354@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01)))))
          (and
            (<= 0 ii@353@01)
            (<
              ii@353@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))
            (<= 0 wi@354@01)
            (<
              wi@354@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)))
        (or
          (not
            (and
              (<= 0 ii@353@01)
              (and
                (<
                  ii@353@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))
                (and
                  (<= 0 wi@354@01)
                  (<
                    wi@354@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      $Snap.unit) ret@230@01))))))
          (and
            (<= 0 ii@353@01)
            (and
              (<
                ii@353@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01))
              (and
                (<= 0 wi@354@01)
                (<
                  wi@354@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01)))))))
      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676-aux|))
    (=>
      (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
        (=>
          (and
            (<= 0 ii@353@01)
            (and
              (<
                ii@353@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01))
              (and
                (<= 0 wi@354@01)
                (<
                  wi@354@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01)))))
          (>=
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
            0))
        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
      (and
        (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
          (=>
            (and
              (<= 0 ii@353@01)
              (and
                (<
                  ii@353@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))
                (and
                  (<= 0 wi@354@01)
                  (<
                    wi@354@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      $Snap.unit) ret@230@01)))))
            (>=
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
              0))
          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
        (forall ((ii@355@01 Int)) (!
          (and
            (or (<= 0 ii@355@01) (not (<= 0 ii@355@01)))
            (=>
              (and
                (<= 0 ii@355@01)
                (<
                  ii@355@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01)))
              (and
                (<= 0 ii@355@01)
                (<
                  ii@355@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))
                (<
                  0
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)))
            (or
              (not
                (and
                  (<= 0 ii@355@01)
                  (<
                    ii@355@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      $Snap.unit) ret@230@01))))
              (and
                (<= 0 ii@355@01)
                (<
                  ii@355@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01)))))
          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096-aux|))
        (=>
          (forall ((ii@355@01 Int)) (!
            (=>
              (and
                (<= 0 ii@355@01)
                (<
                  ii@355@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01)))
              (=
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                0))
            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
          (and
            (forall ((ii@355@01 Int)) (!
              (=>
                (and
                  (<= 0 ii@355@01)
                  (<
                    ii@355@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      $Snap.unit) ret@230@01)))
                (=
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                  0))
              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
            (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
              (and
                (=>
                  (<= 0 ii@356@01)
                  (and
                    (<= 0 ii@356@01)
                    (=>
                      (<=
                        ii@356@01
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                      (and
                        (<=
                          ii@356@01
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                        (or (<= 0 wi@357@01) (not (<= 0 wi@357@01)))))
                    (or
                      (<=
                        ii@356@01
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                      (not
                        (<=
                          ii@356@01
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
                (=>
                  (and
                    (<= 0 ii@356@01)
                    (and
                      (<=
                        ii@356@01
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                      (and
                        (<= 0 wi@357@01)
                        (<
                          wi@357@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01)))))
                  (and
                    (<= 0 ii@356@01)
                    (<=
                      ii@356@01
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                    (<= 0 wi@357@01)
                    (<
                      wi@357@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01))
                    (<=
                      ii@356@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        $t@245@01
                        $Snap.unit) $t@350@01))
                    (<= wi@357@01 _2@101@01)
                    (<= 0 _2@101@01)
                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                      $t@245@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                    (<
                      ii@356@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                (or
                  (not
                    (and
                      (<= 0 ii@356@01)
                      (and
                        (<=
                          ii@356@01
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                        (and
                          (<= 0 wi@357@01)
                          (<
                            wi@357@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              $Snap.unit) ret@230@01))))))
                  (and
                    (<= 0 ii@356@01)
                    (and
                      (<=
                        ii@356@01
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                      (and
                        (<= 0 wi@357@01)
                        (<
                          wi@357@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01)))))))
              :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                $t@245@01
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))
            (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
              (and
                (=>
                  (<= 0 ii@356@01)
                  (and
                    (<= 0 ii@356@01)
                    (=>
                      (<=
                        ii@356@01
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                      (and
                        (<=
                          ii@356@01
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                        (or (<= 0 wi@357@01) (not (<= 0 wi@357@01)))))
                    (or
                      (<=
                        ii@356@01
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                      (not
                        (<=
                          ii@356@01
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
                (=>
                  (and
                    (<= 0 ii@356@01)
                    (and
                      (<=
                        ii@356@01
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                      (and
                        (<= 0 wi@357@01)
                        (<
                          wi@357@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01)))))
                  (and
                    (<= 0 ii@356@01)
                    (<=
                      ii@356@01
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                    (<= 0 wi@357@01)
                    (<
                      wi@357@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01))
                    (<=
                      ii@356@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        $t@245@01
                        $Snap.unit) $t@350@01))
                    (<= wi@357@01 _2@101@01)
                    (<= 0 _2@101@01)
                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                      $t@245@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                    (<
                      ii@356@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                (or
                  (not
                    (and
                      (<= 0 ii@356@01)
                      (and
                        (<=
                          ii@356@01
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                        (and
                          (<= 0 wi@357@01)
                          (<
                            wi@357@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              $Snap.unit) ret@230@01))))))
                  (and
                    (<= 0 ii@356@01)
                    (and
                      (<=
                        ii@356@01
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                      (and
                        (<= 0 wi@357@01)
                        (<
                          wi@357@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01)))))))
              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))))
        (or
          (forall ((ii@355@01 Int)) (!
            (=>
              (and
                (<= 0 ii@355@01)
                (<
                  ii@355@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01)))
              (=
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                0))
            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
          (not
            (forall ((ii@355@01 Int)) (!
              (=>
                (and
                  (<= 0 ii@355@01)
                  (<
                    ii@355@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      $Snap.unit) ret@230@01)))
                (=
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                  0))
              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))))))
    (or
      (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
        (=>
          (and
            (<= 0 ii@353@01)
            (and
              (<
                ii@353@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01))
              (and
                (<= 0 wi@354@01)
                (<
                  wi@354@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01)))))
          (>=
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
            0))
        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
      (not
        (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
          (=>
            (and
              (<= 0 ii@353@01)
              (and
                (<
                  ii@353@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))
                (and
                  (<= 0 wi@354@01)
                  (<
                    wi@354@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      $Snap.unit) ret@230@01)))))
            (>=
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
              0))
          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|)))))))
(assert (or (< _2@101@01 18446744073709551615) (not (< _2@101@01 18446744073709551615))))
(pop) ; 18
(pop) ; 17
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 2 _2@101@01)
  (and
    (=>
      (< _2@101@01 18446744073709551615)
      (and
        (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
          (and
            (=>
              (<= 0 ii@353@01)
              (and
                (<= 0 ii@353@01)
                (=>
                  (<
                    ii@353@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      $Snap.unit) ret@230@01))
                  (and
                    (<
                      ii@353@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01))
                    (or (<= 0 wi@354@01) (not (<= 0 wi@354@01)))))
                (or
                  (<
                    ii@353@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      $Snap.unit) ret@230@01))
                  (not
                    (<
                      ii@353@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01))))))
            (or (<= 0 ii@353@01) (not (<= 0 ii@353@01)))
            (=>
              (and
                (<= 0 ii@353@01)
                (and
                  (<
                    ii@353@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      $Snap.unit) ret@230@01))
                  (and
                    (<= 0 wi@354@01)
                    (<
                      wi@354@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01)))))
              (and
                (<= 0 ii@353@01)
                (<
                  ii@353@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))
                (<= 0 wi@354@01)
                (<
                  wi@354@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)))
            (or
              (not
                (and
                  (<= 0 ii@353@01)
                  (and
                    (<
                      ii@353@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01))
                    (and
                      (<= 0 wi@354@01)
                      (<
                        wi@354@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          $Snap.unit) ret@230@01))))))
              (and
                (<= 0 ii@353@01)
                (and
                  (<
                    ii@353@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      $Snap.unit) ret@230@01))
                  (and
                    (<= 0 wi@354@01)
                    (<
                      wi@354@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01)))))))
          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676-aux|))
        (=>
          (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
            (=>
              (and
                (<= 0 ii@353@01)
                (and
                  (<
                    ii@353@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      $Snap.unit) ret@230@01))
                  (and
                    (<= 0 wi@354@01)
                    (<
                      wi@354@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01)))))
              (>=
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                0))
            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
          (and
            (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
              (=>
                (and
                  (<= 0 ii@353@01)
                  (and
                    (<
                      ii@353@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01))
                    (and
                      (<= 0 wi@354@01)
                      (<
                        wi@354@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          $Snap.unit) ret@230@01)))))
                (>=
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                  0))
              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
            (forall ((ii@355@01 Int)) (!
              (and
                (or (<= 0 ii@355@01) (not (<= 0 ii@355@01)))
                (=>
                  (and
                    (<= 0 ii@355@01)
                    (<
                      ii@355@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01)))
                  (and
                    (<= 0 ii@355@01)
                    (<
                      ii@355@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01))
                    (<
                      0
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)))
                (or
                  (not
                    (and
                      (<= 0 ii@355@01)
                      (<
                        ii@355@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          $Snap.unit) ret@230@01))))
                  (and
                    (<= 0 ii@355@01)
                    (<
                      ii@355@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01)))))
              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096-aux|))
            (=>
              (forall ((ii@355@01 Int)) (!
                (=>
                  (and
                    (<= 0 ii@355@01)
                    (<
                      ii@355@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01)))
                  (=
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                    0))
                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
              (and
                (forall ((ii@355@01 Int)) (!
                  (=>
                    (and
                      (<= 0 ii@355@01)
                      (<
                        ii@355@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          $Snap.unit) ret@230@01)))
                    (=
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                      0))
                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
                  (and
                    (=>
                      (<= 0 ii@356@01)
                      (and
                        (<= 0 ii@356@01)
                        (=>
                          (<=
                            ii@356@01
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                          (and
                            (<=
                              ii@356@01
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                            (or (<= 0 wi@357@01) (not (<= 0 wi@357@01)))))
                        (or
                          (<=
                            ii@356@01
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                          (not
                            (<=
                              ii@356@01
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                    (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
                    (=>
                      (and
                        (<= 0 ii@356@01)
                        (and
                          (<=
                            ii@356@01
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                          (and
                            (<= 0 wi@357@01)
                            (<
                              wi@357@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01)))))
                      (and
                        (<= 0 ii@356@01)
                        (<=
                          ii@356@01
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                        (<= 0 wi@357@01)
                        (<
                          wi@357@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01))
                        (<=
                          ii@356@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            $t@245@01
                            $Snap.unit) $t@350@01))
                        (<= wi@357@01 _2@101@01)
                        (<= 0 _2@101@01)
                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                          $t@245@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                        (<
                          ii@356@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                    (or
                      (not
                        (and
                          (<= 0 ii@356@01)
                          (and
                            (<=
                              ii@356@01
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                            (and
                              (<= 0 wi@357@01)
                              (<
                                wi@357@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  $Snap.unit) ret@230@01))))))
                      (and
                        (<= 0 ii@356@01)
                        (and
                          (<=
                            ii@356@01
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                          (and
                            (<= 0 wi@357@01)
                            (<
                              wi@357@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01)))))))
                  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                    $t@245@01
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))
                (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
                  (and
                    (=>
                      (<= 0 ii@356@01)
                      (and
                        (<= 0 ii@356@01)
                        (=>
                          (<=
                            ii@356@01
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                          (and
                            (<=
                              ii@356@01
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                            (or (<= 0 wi@357@01) (not (<= 0 wi@357@01)))))
                        (or
                          (<=
                            ii@356@01
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                          (not
                            (<=
                              ii@356@01
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                    (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
                    (=>
                      (and
                        (<= 0 ii@356@01)
                        (and
                          (<=
                            ii@356@01
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                          (and
                            (<= 0 wi@357@01)
                            (<
                              wi@357@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01)))))
                      (and
                        (<= 0 ii@356@01)
                        (<=
                          ii@356@01
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                        (<= 0 wi@357@01)
                        (<
                          wi@357@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01))
                        (<=
                          ii@356@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            $t@245@01
                            $Snap.unit) $t@350@01))
                        (<= wi@357@01 _2@101@01)
                        (<= 0 _2@101@01)
                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                          $t@245@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                        (<
                          ii@356@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                    (or
                      (not
                        (and
                          (<= 0 ii@356@01)
                          (and
                            (<=
                              ii@356@01
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                            (and
                              (<= 0 wi@357@01)
                              (<
                                wi@357@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  $Snap.unit) ret@230@01))))))
                      (and
                        (<= 0 ii@356@01)
                        (and
                          (<=
                            ii@356@01
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                          (and
                            (<= 0 wi@357@01)
                            (<
                              wi@357@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01)))))))
                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))))
            (or
              (forall ((ii@355@01 Int)) (!
                (=>
                  (and
                    (<= 0 ii@355@01)
                    (<
                      ii@355@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01)))
                  (=
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                    0))
                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
              (not
                (forall ((ii@355@01 Int)) (!
                  (=>
                    (and
                      (<= 0 ii@355@01)
                      (<
                        ii@355@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          $Snap.unit) ret@230@01)))
                    (=
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                      0))
                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))))))
        (or
          (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
            (=>
              (and
                (<= 0 ii@353@01)
                (and
                  (<
                    ii@353@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      $Snap.unit) ret@230@01))
                  (and
                    (<= 0 wi@354@01)
                    (<
                      wi@354@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01)))))
              (>=
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                0))
            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
          (not
            (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
              (=>
                (and
                  (<= 0 ii@353@01)
                  (and
                    (<
                      ii@353@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01))
                    (and
                      (<= 0 wi@354@01)
                      (<
                        wi@354@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          $Snap.unit) ret@230@01)))))
                (>=
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                  0))
              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))))))
    (or
      (< _2@101@01 18446744073709551615)
      (not (< _2@101@01 18446744073709551615))))))
(assert (or (<= 2 _2@101@01) (not (<= 2 _2@101@01))))
(pop) ; 16
(pop) ; 15
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@245@01
      $Snap.unit) $t@350@01))
  (and
    (=>
      (<= 2 _2@101@01)
      (and
        (=>
          (< _2@101@01 18446744073709551615)
          (and
            (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
              (and
                (=>
                  (<= 0 ii@353@01)
                  (and
                    (<= 0 ii@353@01)
                    (=>
                      (<
                        ii@353@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          $Snap.unit) ret@230@01))
                      (and
                        (<
                          ii@353@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01))
                        (or (<= 0 wi@354@01) (not (<= 0 wi@354@01)))))
                    (or
                      (<
                        ii@353@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          $Snap.unit) ret@230@01))
                      (not
                        (<
                          ii@353@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01))))))
                (or (<= 0 ii@353@01) (not (<= 0 ii@353@01)))
                (=>
                  (and
                    (<= 0 ii@353@01)
                    (and
                      (<
                        ii@353@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          $Snap.unit) ret@230@01))
                      (and
                        (<= 0 wi@354@01)
                        (<
                          wi@354@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01)))))
                  (and
                    (<= 0 ii@353@01)
                    (<
                      ii@353@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01))
                    (<= 0 wi@354@01)
                    (<
                      wi@354@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        $Snap.unit) ret@230@01))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)))
                (or
                  (not
                    (and
                      (<= 0 ii@353@01)
                      (and
                        (<
                          ii@353@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01))
                        (and
                          (<= 0 wi@354@01)
                          (<
                            wi@354@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              $Snap.unit) ret@230@01))))))
                  (and
                    (<= 0 ii@353@01)
                    (and
                      (<
                        ii@353@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          $Snap.unit) ret@230@01))
                      (and
                        (<= 0 wi@354@01)
                        (<
                          wi@354@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01)))))))
              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676-aux|))
            (=>
              (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                (=>
                  (and
                    (<= 0 ii@353@01)
                    (and
                      (<
                        ii@353@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          $Snap.unit) ret@230@01))
                      (and
                        (<= 0 wi@354@01)
                        (<
                          wi@354@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01)))))
                  (>=
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                    0))
                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
              (and
                (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                  (=>
                    (and
                      (<= 0 ii@353@01)
                      (and
                        (<
                          ii@353@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01))
                        (and
                          (<= 0 wi@354@01)
                          (<
                            wi@354@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              $Snap.unit) ret@230@01)))))
                    (>=
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                      0))
                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                (forall ((ii@355@01 Int)) (!
                  (and
                    (or (<= 0 ii@355@01) (not (<= 0 ii@355@01)))
                    (=>
                      (and
                        (<= 0 ii@355@01)
                        (<
                          ii@355@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01)))
                      (and
                        (<= 0 ii@355@01)
                        (<
                          ii@355@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01))
                        (<
                          0
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)))
                    (or
                      (not
                        (and
                          (<= 0 ii@355@01)
                          (<
                            ii@355@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              $Snap.unit) ret@230@01))))
                      (and
                        (<= 0 ii@355@01)
                        (<
                          ii@355@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01)))))
                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096-aux|))
                (=>
                  (forall ((ii@355@01 Int)) (!
                    (=>
                      (and
                        (<= 0 ii@355@01)
                        (<
                          ii@355@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01)))
                      (=
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                        0))
                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                  (and
                    (forall ((ii@355@01 Int)) (!
                      (=>
                        (and
                          (<= 0 ii@355@01)
                          (<
                            ii@355@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              $Snap.unit) ret@230@01)))
                        (=
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                          0))
                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                    (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
                      (and
                        (=>
                          (<= 0 ii@356@01)
                          (and
                            (<= 0 ii@356@01)
                            (=>
                              (<=
                                ii@356@01
                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                              (and
                                (<=
                                  ii@356@01
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                (or (<= 0 wi@357@01) (not (<= 0 wi@357@01)))))
                            (or
                              (<=
                                ii@356@01
                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                              (not
                                (<=
                                  ii@356@01
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                        (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
                        (=>
                          (and
                            (<= 0 ii@356@01)
                            (and
                              (<=
                                ii@356@01
                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                              (and
                                (<= 0 wi@357@01)
                                (<
                                  wi@357@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01)))))
                          (and
                            (<= 0 ii@356@01)
                            (<=
                              ii@356@01
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                            (<= 0 wi@357@01)
                            (<
                              wi@357@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01))
                            (<=
                              ii@356@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@245@01
                                $Snap.unit) $t@350@01))
                            (<= wi@357@01 _2@101@01)
                            (<= 0 _2@101@01)
                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                              $t@245@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                            (<
                              ii@356@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                        (or
                          (not
                            (and
                              (<= 0 ii@356@01)
                              (and
                                (<=
                                  ii@356@01
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                (and
                                  (<= 0 wi@357@01)
                                  (<
                                    wi@357@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      $Snap.unit) ret@230@01))))))
                          (and
                            (<= 0 ii@356@01)
                            (and
                              (<=
                                ii@356@01
                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                              (and
                                (<= 0 wi@357@01)
                                (<
                                  wi@357@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01)))))))
                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                        $t@245@01
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))
                    (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
                      (and
                        (=>
                          (<= 0 ii@356@01)
                          (and
                            (<= 0 ii@356@01)
                            (=>
                              (<=
                                ii@356@01
                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                              (and
                                (<=
                                  ii@356@01
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                (or (<= 0 wi@357@01) (not (<= 0 wi@357@01)))))
                            (or
                              (<=
                                ii@356@01
                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                              (not
                                (<=
                                  ii@356@01
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                        (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
                        (=>
                          (and
                            (<= 0 ii@356@01)
                            (and
                              (<=
                                ii@356@01
                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                              (and
                                (<= 0 wi@357@01)
                                (<
                                  wi@357@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01)))))
                          (and
                            (<= 0 ii@356@01)
                            (<=
                              ii@356@01
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                            (<= 0 wi@357@01)
                            (<
                              wi@357@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01))
                            (<=
                              ii@356@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@245@01
                                $Snap.unit) $t@350@01))
                            (<= wi@357@01 _2@101@01)
                            (<= 0 _2@101@01)
                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                              $t@245@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                            (<
                              ii@356@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                        (or
                          (not
                            (and
                              (<= 0 ii@356@01)
                              (and
                                (<=
                                  ii@356@01
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                (and
                                  (<= 0 wi@357@01)
                                  (<
                                    wi@357@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      $Snap.unit) ret@230@01))))))
                          (and
                            (<= 0 ii@356@01)
                            (and
                              (<=
                                ii@356@01
                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                              (and
                                (<= 0 wi@357@01)
                                (<
                                  wi@357@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01)))))))
                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))))
                (or
                  (forall ((ii@355@01 Int)) (!
                    (=>
                      (and
                        (<= 0 ii@355@01)
                        (<
                          ii@355@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01)))
                      (=
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                        0))
                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                  (not
                    (forall ((ii@355@01 Int)) (!
                      (=>
                        (and
                          (<= 0 ii@355@01)
                          (<
                            ii@355@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              $Snap.unit) ret@230@01)))
                        (=
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                          0))
                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))))))
            (or
              (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                (=>
                  (and
                    (<= 0 ii@353@01)
                    (and
                      (<
                        ii@353@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          $Snap.unit) ret@230@01))
                      (and
                        (<= 0 wi@354@01)
                        (<
                          wi@354@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01)))))
                  (>=
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                    0))
                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
              (not
                (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                  (=>
                    (and
                      (<= 0 ii@353@01)
                      (and
                        (<
                          ii@353@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01))
                        (and
                          (<= 0 wi@354@01)
                          (<
                            wi@354@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              $Snap.unit) ret@230@01)))))
                    (>=
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                      0))
                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))))))
        (or
          (< _2@101@01 18446744073709551615)
          (not (< _2@101@01 18446744073709551615)))))
    (or (<= 2 _2@101@01) (not (<= 2 _2@101@01))))))
(assert (or
  (<
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@245@01
      $Snap.unit) $t@350@01))
  (not
    (<
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@245@01
        $Snap.unit) $t@350@01)))))
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
  (and
    (=>
      (<
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@245@01
          $Snap.unit) $t@350@01))
      (and
        (=>
          (<= 2 _2@101@01)
          (and
            (=>
              (< _2@101@01 18446744073709551615)
              (and
                (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                  (and
                    (=>
                      (<= 0 ii@353@01)
                      (and
                        (<= 0 ii@353@01)
                        (=>
                          (<
                            ii@353@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              $Snap.unit) ret@230@01))
                          (and
                            (<
                              ii@353@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01))
                            (or (<= 0 wi@354@01) (not (<= 0 wi@354@01)))))
                        (or
                          (<
                            ii@353@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              $Snap.unit) ret@230@01))
                          (not
                            (<
                              ii@353@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01))))))
                    (or (<= 0 ii@353@01) (not (<= 0 ii@353@01)))
                    (=>
                      (and
                        (<= 0 ii@353@01)
                        (and
                          (<
                            ii@353@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              $Snap.unit) ret@230@01))
                          (and
                            (<= 0 wi@354@01)
                            (<
                              wi@354@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01)))))
                      (and
                        (<= 0 ii@353@01)
                        (<
                          ii@353@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01))
                        (<= 0 wi@354@01)
                        (<
                          wi@354@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)))
                    (or
                      (not
                        (and
                          (<= 0 ii@353@01)
                          (and
                            (<
                              ii@353@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01))
                            (and
                              (<= 0 wi@354@01)
                              (<
                                wi@354@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  $Snap.unit) ret@230@01))))))
                      (and
                        (<= 0 ii@353@01)
                        (and
                          (<
                            ii@353@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              $Snap.unit) ret@230@01))
                          (and
                            (<= 0 wi@354@01)
                            (<
                              wi@354@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01)))))))
                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676-aux|))
                (=>
                  (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                    (=>
                      (and
                        (<= 0 ii@353@01)
                        (and
                          (<
                            ii@353@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              $Snap.unit) ret@230@01))
                          (and
                            (<= 0 wi@354@01)
                            (<
                              wi@354@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01)))))
                      (>=
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                        0))
                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                  (and
                    (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                      (=>
                        (and
                          (<= 0 ii@353@01)
                          (and
                            (<
                              ii@353@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01))
                            (and
                              (<= 0 wi@354@01)
                              (<
                                wi@354@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  $Snap.unit) ret@230@01)))))
                        (>=
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                          0))
                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                    (forall ((ii@355@01 Int)) (!
                      (and
                        (or (<= 0 ii@355@01) (not (<= 0 ii@355@01)))
                        (=>
                          (and
                            (<= 0 ii@355@01)
                            (<
                              ii@355@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01)))
                          (and
                            (<= 0 ii@355@01)
                            (<
                              ii@355@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01))
                            (<
                              0
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)))
                        (or
                          (not
                            (and
                              (<= 0 ii@355@01)
                              (<
                                ii@355@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  $Snap.unit) ret@230@01))))
                          (and
                            (<= 0 ii@355@01)
                            (<
                              ii@355@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01)))))
                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096-aux|))
                    (=>
                      (forall ((ii@355@01 Int)) (!
                        (=>
                          (and
                            (<= 0 ii@355@01)
                            (<
                              ii@355@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01)))
                          (=
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                            0))
                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                      (and
                        (forall ((ii@355@01 Int)) (!
                          (=>
                            (and
                              (<= 0 ii@355@01)
                              (<
                                ii@355@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  $Snap.unit) ret@230@01)))
                            (=
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                              0))
                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                        (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
                          (and
                            (=>
                              (<= 0 ii@356@01)
                              (and
                                (<= 0 ii@356@01)
                                (=>
                                  (<=
                                    ii@356@01
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                  (and
                                    (<=
                                      ii@356@01
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                    (or (<= 0 wi@357@01) (not (<= 0 wi@357@01)))))
                                (or
                                  (<=
                                    ii@356@01
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                  (not
                                    (<=
                                      ii@356@01
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                            (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
                            (=>
                              (and
                                (<= 0 ii@356@01)
                                (and
                                  (<=
                                    ii@356@01
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                  (and
                                    (<= 0 wi@357@01)
                                    (<
                                      wi@357@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01)))))
                              (and
                                (<= 0 ii@356@01)
                                (<=
                                  ii@356@01
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                (<= 0 wi@357@01)
                                (<
                                  wi@357@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01))
                                (<=
                                  ii@356@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    $t@245@01
                                    $Snap.unit) $t@350@01))
                                (<= wi@357@01 _2@101@01)
                                (<= 0 _2@101@01)
                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                  $t@245@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                                (<
                                  ii@356@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                            (or
                              (not
                                (and
                                  (<= 0 ii@356@01)
                                  (and
                                    (<=
                                      ii@356@01
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                    (and
                                      (<= 0 wi@357@01)
                                      (<
                                        wi@357@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01))))))
                              (and
                                (<= 0 ii@356@01)
                                (and
                                  (<=
                                    ii@356@01
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                  (and
                                    (<= 0 wi@357@01)
                                    (<
                                      wi@357@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01)))))))
                          :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                            $t@245@01
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))
                        (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
                          (and
                            (=>
                              (<= 0 ii@356@01)
                              (and
                                (<= 0 ii@356@01)
                                (=>
                                  (<=
                                    ii@356@01
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                  (and
                                    (<=
                                      ii@356@01
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                    (or (<= 0 wi@357@01) (not (<= 0 wi@357@01)))))
                                (or
                                  (<=
                                    ii@356@01
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                  (not
                                    (<=
                                      ii@356@01
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                            (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
                            (=>
                              (and
                                (<= 0 ii@356@01)
                                (and
                                  (<=
                                    ii@356@01
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                  (and
                                    (<= 0 wi@357@01)
                                    (<
                                      wi@357@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01)))))
                              (and
                                (<= 0 ii@356@01)
                                (<=
                                  ii@356@01
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                (<= 0 wi@357@01)
                                (<
                                  wi@357@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01))
                                (<=
                                  ii@356@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    $t@245@01
                                    $Snap.unit) $t@350@01))
                                (<= wi@357@01 _2@101@01)
                                (<= 0 _2@101@01)
                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                  $t@245@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                                (<
                                  ii@356@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                            (or
                              (not
                                (and
                                  (<= 0 ii@356@01)
                                  (and
                                    (<=
                                      ii@356@01
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                    (and
                                      (<= 0 wi@357@01)
                                      (<
                                        wi@357@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01))))))
                              (and
                                (<= 0 ii@356@01)
                                (and
                                  (<=
                                    ii@356@01
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                  (and
                                    (<= 0 wi@357@01)
                                    (<
                                      wi@357@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01)))))))
                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))))
                    (or
                      (forall ((ii@355@01 Int)) (!
                        (=>
                          (and
                            (<= 0 ii@355@01)
                            (<
                              ii@355@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01)))
                          (=
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                            0))
                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                      (not
                        (forall ((ii@355@01 Int)) (!
                          (=>
                            (and
                              (<= 0 ii@355@01)
                              (<
                                ii@355@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  $Snap.unit) ret@230@01)))
                            (=
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                              0))
                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))))))
                (or
                  (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                    (=>
                      (and
                        (<= 0 ii@353@01)
                        (and
                          (<
                            ii@353@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              $Snap.unit) ret@230@01))
                          (and
                            (<= 0 wi@354@01)
                            (<
                              wi@354@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01)))))
                      (>=
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                        0))
                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                  (not
                    (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                      (=>
                        (and
                          (<= 0 ii@353@01)
                          (and
                            (<
                              ii@353@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01))
                            (and
                              (<= 0 wi@354@01)
                              (<
                                wi@354@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  $Snap.unit) ret@230@01)))))
                        (>=
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                          0))
                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))))))
            (or
              (< _2@101@01 18446744073709551615)
              (not (< _2@101@01 18446744073709551615)))))
        (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
    (or
      (<
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@245@01
          $Snap.unit) $t@350@01))
      (not
        (<
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@245@01
            $Snap.unit) $t@350@01)))))))
(assert (or
  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
  (not (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@245@01
      $Snap.unit) $t@350@01))
  (and
    (<
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@245@01
        $Snap.unit) $t@350@01))
    (=>
      (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
      (and
        (=>
          (<
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@245@01
              $Snap.unit) $t@350@01))
          (and
            (=>
              (<= 2 _2@101@01)
              (and
                (=>
                  (< _2@101@01 18446744073709551615)
                  (and
                    (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                      (and
                        (=>
                          (<= 0 ii@353@01)
                          (and
                            (<= 0 ii@353@01)
                            (=>
                              (<
                                ii@353@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  $Snap.unit) ret@230@01))
                              (and
                                (<
                                  ii@353@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01))
                                (or (<= 0 wi@354@01) (not (<= 0 wi@354@01)))))
                            (or
                              (<
                                ii@353@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  $Snap.unit) ret@230@01))
                              (not
                                (<
                                  ii@353@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01))))))
                        (or (<= 0 ii@353@01) (not (<= 0 ii@353@01)))
                        (=>
                          (and
                            (<= 0 ii@353@01)
                            (and
                              (<
                                ii@353@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  $Snap.unit) ret@230@01))
                              (and
                                (<= 0 wi@354@01)
                                (<
                                  wi@354@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01)))))
                          (and
                            (<= 0 ii@353@01)
                            (<
                              ii@353@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01))
                            (<= 0 wi@354@01)
                            (<
                              wi@354@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)))
                        (or
                          (not
                            (and
                              (<= 0 ii@353@01)
                              (and
                                (<
                                  ii@353@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01))
                                (and
                                  (<= 0 wi@354@01)
                                  (<
                                    wi@354@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      $Snap.unit) ret@230@01))))))
                          (and
                            (<= 0 ii@353@01)
                            (and
                              (<
                                ii@353@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  $Snap.unit) ret@230@01))
                              (and
                                (<= 0 wi@354@01)
                                (<
                                  wi@354@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01)))))))
                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676-aux|))
                    (=>
                      (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                        (=>
                          (and
                            (<= 0 ii@353@01)
                            (and
                              (<
                                ii@353@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  $Snap.unit) ret@230@01))
                              (and
                                (<= 0 wi@354@01)
                                (<
                                  wi@354@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01)))))
                          (>=
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                            0))
                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                      (and
                        (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                          (=>
                            (and
                              (<= 0 ii@353@01)
                              (and
                                (<
                                  ii@353@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01))
                                (and
                                  (<= 0 wi@354@01)
                                  (<
                                    wi@354@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      $Snap.unit) ret@230@01)))))
                            (>=
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                              0))
                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                        (forall ((ii@355@01 Int)) (!
                          (and
                            (or (<= 0 ii@355@01) (not (<= 0 ii@355@01)))
                            (=>
                              (and
                                (<= 0 ii@355@01)
                                (<
                                  ii@355@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01)))
                              (and
                                (<= 0 ii@355@01)
                                (<
                                  ii@355@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01))
                                (<
                                  0
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)))
                            (or
                              (not
                                (and
                                  (<= 0 ii@355@01)
                                  (<
                                    ii@355@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      $Snap.unit) ret@230@01))))
                              (and
                                (<= 0 ii@355@01)
                                (<
                                  ii@355@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01)))))
                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096-aux|))
                        (=>
                          (forall ((ii@355@01 Int)) (!
                            (=>
                              (and
                                (<= 0 ii@355@01)
                                (<
                                  ii@355@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01)))
                              (=
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                0))
                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                          (and
                            (forall ((ii@355@01 Int)) (!
                              (=>
                                (and
                                  (<= 0 ii@355@01)
                                  (<
                                    ii@355@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      $Snap.unit) ret@230@01)))
                                (=
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                  0))
                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                            (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
                              (and
                                (=>
                                  (<= 0 ii@356@01)
                                  (and
                                    (<= 0 ii@356@01)
                                    (=>
                                      (<=
                                        ii@356@01
                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                      (and
                                        (<=
                                          ii@356@01
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                        (or
                                          (<= 0 wi@357@01)
                                          (not (<= 0 wi@357@01)))))
                                    (or
                                      (<=
                                        ii@356@01
                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                      (not
                                        (<=
                                          ii@356@01
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                                (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
                                (=>
                                  (and
                                    (<= 0 ii@356@01)
                                    (and
                                      (<=
                                        ii@356@01
                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                      (and
                                        (<= 0 wi@357@01)
                                        (<
                                          wi@357@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01)))))
                                  (and
                                    (<= 0 ii@356@01)
                                    (<=
                                      ii@356@01
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                    (<= 0 wi@357@01)
                                    (<
                                      wi@357@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01))
                                    (<=
                                      ii@356@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        $t@245@01
                                        $Snap.unit) $t@350@01))
                                    (<= wi@357@01 _2@101@01)
                                    (<= 0 _2@101@01)
                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                      $t@245@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                                    (<
                                      ii@356@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01))
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                                (or
                                  (not
                                    (and
                                      (<= 0 ii@356@01)
                                      (and
                                        (<=
                                          ii@356@01
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                        (and
                                          (<= 0 wi@357@01)
                                          (<
                                            wi@357@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01))))))
                                  (and
                                    (<= 0 ii@356@01)
                                    (and
                                      (<=
                                        ii@356@01
                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                      (and
                                        (<= 0 wi@357@01)
                                        (<
                                          wi@357@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01)))))))
                              :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                $t@245@01
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))
                            (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
                              (and
                                (=>
                                  (<= 0 ii@356@01)
                                  (and
                                    (<= 0 ii@356@01)
                                    (=>
                                      (<=
                                        ii@356@01
                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                      (and
                                        (<=
                                          ii@356@01
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                        (or
                                          (<= 0 wi@357@01)
                                          (not (<= 0 wi@357@01)))))
                                    (or
                                      (<=
                                        ii@356@01
                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                      (not
                                        (<=
                                          ii@356@01
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                                (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
                                (=>
                                  (and
                                    (<= 0 ii@356@01)
                                    (and
                                      (<=
                                        ii@356@01
                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                      (and
                                        (<= 0 wi@357@01)
                                        (<
                                          wi@357@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01)))))
                                  (and
                                    (<= 0 ii@356@01)
                                    (<=
                                      ii@356@01
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                    (<= 0 wi@357@01)
                                    (<
                                      wi@357@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01))
                                    (<=
                                      ii@356@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        $t@245@01
                                        $Snap.unit) $t@350@01))
                                    (<= wi@357@01 _2@101@01)
                                    (<= 0 _2@101@01)
                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                      $t@245@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                                    (<
                                      ii@356@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01))
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                                (or
                                  (not
                                    (and
                                      (<= 0 ii@356@01)
                                      (and
                                        (<=
                                          ii@356@01
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                        (and
                                          (<= 0 wi@357@01)
                                          (<
                                            wi@357@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01))))))
                                  (and
                                    (<= 0 ii@356@01)
                                    (and
                                      (<=
                                        ii@356@01
                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                      (and
                                        (<= 0 wi@357@01)
                                        (<
                                          wi@357@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01)))))))
                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))))
                        (or
                          (forall ((ii@355@01 Int)) (!
                            (=>
                              (and
                                (<= 0 ii@355@01)
                                (<
                                  ii@355@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01)))
                              (=
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                0))
                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                          (not
                            (forall ((ii@355@01 Int)) (!
                              (=>
                                (and
                                  (<= 0 ii@355@01)
                                  (<
                                    ii@355@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      $Snap.unit) ret@230@01)))
                                (=
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                  0))
                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))))))
                    (or
                      (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                        (=>
                          (and
                            (<= 0 ii@353@01)
                            (and
                              (<
                                ii@353@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  $Snap.unit) ret@230@01))
                              (and
                                (<= 0 wi@354@01)
                                (<
                                  wi@354@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01)))))
                          (>=
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                            0))
                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                      (not
                        (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                          (=>
                            (and
                              (<= 0 ii@353@01)
                              (and
                                (<
                                  ii@353@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01))
                                (and
                                  (<= 0 wi@354@01)
                                  (<
                                    wi@354@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      $Snap.unit) ret@230@01)))))
                            (>=
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                              0))
                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))))))
                (or
                  (< _2@101@01 18446744073709551615)
                  (not (< _2@101@01 18446744073709551615)))))
            (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
        (or
          (<
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@245@01
              $Snap.unit) $t@350@01))
          (not
            (<
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@245@01
                $Snap.unit) $t@350@01))))))
    (or
      (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
      (not
        (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))))))
(assert (or
  (<
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@245@01
      $Snap.unit) $t@350@01))
  (not
    (<
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@245@01
        $Snap.unit) $t@350@01)))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (=
    (+ _2@101@01 1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))
  (and
    (=
      (+ _2@101@01 1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (=>
      (<
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@245@01
          $Snap.unit) $t@350@01))
      (and
        (<
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@245@01
            $Snap.unit) $t@350@01))
        (=>
          (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (and
            (=>
              (<
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@245@01
                  $Snap.unit) $t@350@01))
              (and
                (=>
                  (<= 2 _2@101@01)
                  (and
                    (=>
                      (< _2@101@01 18446744073709551615)
                      (and
                        (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                          (and
                            (=>
                              (<= 0 ii@353@01)
                              (and
                                (<= 0 ii@353@01)
                                (=>
                                  (<
                                    ii@353@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      $Snap.unit) ret@230@01))
                                  (and
                                    (<
                                      ii@353@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01))
                                    (or (<= 0 wi@354@01) (not (<= 0 wi@354@01)))))
                                (or
                                  (<
                                    ii@353@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      $Snap.unit) ret@230@01))
                                  (not
                                    (<
                                      ii@353@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01))))))
                            (or (<= 0 ii@353@01) (not (<= 0 ii@353@01)))
                            (=>
                              (and
                                (<= 0 ii@353@01)
                                (and
                                  (<
                                    ii@353@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      $Snap.unit) ret@230@01))
                                  (and
                                    (<= 0 wi@354@01)
                                    (<
                                      wi@354@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01)))))
                              (and
                                (<= 0 ii@353@01)
                                (<
                                  ii@353@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01))
                                (<= 0 wi@354@01)
                                (<
                                  wi@354@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    $Snap.unit) ret@230@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)))
                            (or
                              (not
                                (and
                                  (<= 0 ii@353@01)
                                  (and
                                    (<
                                      ii@353@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01))
                                    (and
                                      (<= 0 wi@354@01)
                                      (<
                                        wi@354@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01))))))
                              (and
                                (<= 0 ii@353@01)
                                (and
                                  (<
                                    ii@353@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      $Snap.unit) ret@230@01))
                                  (and
                                    (<= 0 wi@354@01)
                                    (<
                                      wi@354@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01)))))))
                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676-aux|))
                        (=>
                          (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                            (=>
                              (and
                                (<= 0 ii@353@01)
                                (and
                                  (<
                                    ii@353@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      $Snap.unit) ret@230@01))
                                  (and
                                    (<= 0 wi@354@01)
                                    (<
                                      wi@354@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01)))))
                              (>=
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                                0))
                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                          (and
                            (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                              (=>
                                (and
                                  (<= 0 ii@353@01)
                                  (and
                                    (<
                                      ii@353@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01))
                                    (and
                                      (<= 0 wi@354@01)
                                      (<
                                        wi@354@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01)))))
                                (>=
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                                  0))
                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                            (forall ((ii@355@01 Int)) (!
                              (and
                                (or (<= 0 ii@355@01) (not (<= 0 ii@355@01)))
                                (=>
                                  (and
                                    (<= 0 ii@355@01)
                                    (<
                                      ii@355@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01)))
                                  (and
                                    (<= 0 ii@355@01)
                                    (<
                                      ii@355@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01))
                                    (<
                                      0
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01))
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@355@01 0)))
                                (or
                                  (not
                                    (and
                                      (<= 0 ii@355@01)
                                      (<
                                        ii@355@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01))))
                                  (and
                                    (<= 0 ii@355@01)
                                    (<
                                      ii@355@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01)))))
                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096-aux|))
                            (=>
                              (forall ((ii@355@01 Int)) (!
                                (=>
                                  (and
                                    (<= 0 ii@355@01)
                                    (<
                                      ii@355@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01)))
                                  (=
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                    0))
                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                              (and
                                (forall ((ii@355@01 Int)) (!
                                  (=>
                                    (and
                                      (<= 0 ii@355@01)
                                      (<
                                        ii@355@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01)))
                                    (=
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                      0))
                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                                (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
                                  (and
                                    (=>
                                      (<= 0 ii@356@01)
                                      (and
                                        (<= 0 ii@356@01)
                                        (=>
                                          (<=
                                            ii@356@01
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                          (and
                                            (<=
                                              ii@356@01
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                            (or
                                              (<= 0 wi@357@01)
                                              (not (<= 0 wi@357@01)))))
                                        (or
                                          (<=
                                            ii@356@01
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                          (not
                                            (<=
                                              ii@356@01
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                                    (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
                                    (=>
                                      (and
                                        (<= 0 ii@356@01)
                                        (and
                                          (<=
                                            ii@356@01
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                          (and
                                            (<= 0 wi@357@01)
                                            (<
                                              wi@357@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                $Snap.unit) ret@230@01)))))
                                      (and
                                        (<= 0 ii@356@01)
                                        (<=
                                          ii@356@01
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                        (<= 0 wi@357@01)
                                        (<
                                          wi@357@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (<=
                                          ii@356@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            $t@245@01
                                            $Snap.unit) $t@350@01))
                                        (<= wi@357@01 _2@101@01)
                                        (<= 0 _2@101@01)
                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                          $t@245@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                                        (<
                                          ii@356@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                                    (or
                                      (not
                                        (and
                                          (<= 0 ii@356@01)
                                          (and
                                            (<=
                                              ii@356@01
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                            (and
                                              (<= 0 wi@357@01)
                                              (<
                                                wi@357@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                  $Snap.unit) ret@230@01))))))
                                      (and
                                        (<= 0 ii@356@01)
                                        (and
                                          (<=
                                            ii@356@01
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                          (and
                                            (<= 0 wi@357@01)
                                            (<
                                              wi@357@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                $Snap.unit) ret@230@01)))))))
                                  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                    $t@245@01
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))
                                (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
                                  (and
                                    (=>
                                      (<= 0 ii@356@01)
                                      (and
                                        (<= 0 ii@356@01)
                                        (=>
                                          (<=
                                            ii@356@01
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                          (and
                                            (<=
                                              ii@356@01
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                            (or
                                              (<= 0 wi@357@01)
                                              (not (<= 0 wi@357@01)))))
                                        (or
                                          (<=
                                            ii@356@01
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                          (not
                                            (<=
                                              ii@356@01
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                                    (or (<= 0 ii@356@01) (not (<= 0 ii@356@01)))
                                    (=>
                                      (and
                                        (<= 0 ii@356@01)
                                        (and
                                          (<=
                                            ii@356@01
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                          (and
                                            (<= 0 wi@357@01)
                                            (<
                                              wi@357@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                $Snap.unit) ret@230@01)))))
                                      (and
                                        (<= 0 ii@356@01)
                                        (<=
                                          ii@356@01
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                        (<= 0 wi@357@01)
                                        (<
                                          wi@357@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (<=
                                          ii@356@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            $t@245@01
                                            $Snap.unit) $t@350@01))
                                        (<= wi@357@01 _2@101@01)
                                        (<= 0 _2@101@01)
                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                          $t@245@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                                        (<
                                          ii@356@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                                    (or
                                      (not
                                        (and
                                          (<= 0 ii@356@01)
                                          (and
                                            (<=
                                              ii@356@01
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                            (and
                                              (<= 0 wi@357@01)
                                              (<
                                                wi@357@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                  $Snap.unit) ret@230@01))))))
                                      (and
                                        (<= 0 ii@356@01)
                                        (and
                                          (<=
                                            ii@356@01
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                          (and
                                            (<= 0 wi@357@01)
                                            (<
                                              wi@357@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                $Snap.unit) ret@230@01)))))))
                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))))
                            (or
                              (forall ((ii@355@01 Int)) (!
                                (=>
                                  (and
                                    (<= 0 ii@355@01)
                                    (<
                                      ii@355@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01)))
                                  (=
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                    0))
                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                              (not
                                (forall ((ii@355@01 Int)) (!
                                  (=>
                                    (and
                                      (<= 0 ii@355@01)
                                      (<
                                        ii@355@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01)))
                                    (=
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                      0))
                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))))))
                        (or
                          (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                            (=>
                              (and
                                (<= 0 ii@353@01)
                                (and
                                  (<
                                    ii@353@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      $Snap.unit) ret@230@01))
                                  (and
                                    (<= 0 wi@354@01)
                                    (<
                                      wi@354@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01)))))
                              (>=
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                                0))
                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                          (not
                            (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                              (=>
                                (and
                                  (<= 0 ii@353@01)
                                  (and
                                    (<
                                      ii@353@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01))
                                    (and
                                      (<= 0 wi@354@01)
                                      (<
                                        wi@354@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01)))))
                                (>=
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                                  0))
                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))))))
                    (or
                      (< _2@101@01 18446744073709551615)
                      (not (< _2@101@01 18446744073709551615)))))
                (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
            (or
              (<
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@245@01
                  $Snap.unit) $t@350@01))
              (not
                (<
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    $t@245@01
                    $Snap.unit) $t@350@01))))))
        (or
          (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (not
            (<=
              0
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
    (or
      (<
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@245@01
          $Snap.unit) $t@350@01))
      (not
        (<
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@245@01
            $Snap.unit) $t@350@01)))))))
(assert (or
  (=
    (+ _2@101@01 1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))
  (not
    (=
      (+ _2@101@01 1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01)))))
(pop) ; 8
(pop) ; 7
; Joined path conditions
; Joined path conditions
(assert (=>
  (=
    (+
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@245@01
        $Snap.unit) $t@350@01)
      1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))
  (and
    (=
      (+
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@245@01
          $Snap.unit) $t@350@01)
        1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01)
    (=>
      (=
        (+ _2@101@01 1)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))
      (and
        (=
          (+ _2@101@01 1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (=>
          (<
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@245@01
              $Snap.unit) $t@350@01))
          (and
            (<
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@245@01
                $Snap.unit) $t@350@01))
            (=>
              (<=
                0
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (and
                (=>
                  (<
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      $t@245@01
                      $Snap.unit) $t@350@01))
                  (and
                    (=>
                      (<= 2 _2@101@01)
                      (and
                        (=>
                          (< _2@101@01 18446744073709551615)
                          (and
                            (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                              (and
                                (=>
                                  (<= 0 ii@353@01)
                                  (and
                                    (<= 0 ii@353@01)
                                    (=>
                                      (<
                                        ii@353@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01))
                                      (and
                                        (<
                                          ii@353@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (or
                                          (<= 0 wi@354@01)
                                          (not (<= 0 wi@354@01)))))
                                    (or
                                      (<
                                        ii@353@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01))
                                      (not
                                        (<
                                          ii@353@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))))))
                                (or (<= 0 ii@353@01) (not (<= 0 ii@353@01)))
                                (=>
                                  (and
                                    (<= 0 ii@353@01)
                                    (and
                                      (<
                                        ii@353@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01))
                                      (and
                                        (<= 0 wi@354@01)
                                        (<
                                          wi@354@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01)))))
                                  (and
                                    (<= 0 ii@353@01)
                                    (<
                                      ii@353@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01))
                                    (<= 0 wi@354@01)
                                    (<
                                      wi@354@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        $Snap.unit) ret@230@01))
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)))
                                (or
                                  (not
                                    (and
                                      (<= 0 ii@353@01)
                                      (and
                                        (<
                                          ii@353@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (and
                                          (<= 0 wi@354@01)
                                          (<
                                            wi@354@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01))))))
                                  (and
                                    (<= 0 ii@353@01)
                                    (and
                                      (<
                                        ii@353@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01))
                                      (and
                                        (<= 0 wi@354@01)
                                        (<
                                          wi@354@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01)))))))
                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676-aux|))
                            (=>
                              (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                                (=>
                                  (and
                                    (<= 0 ii@353@01)
                                    (and
                                      (<
                                        ii@353@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01))
                                      (and
                                        (<= 0 wi@354@01)
                                        (<
                                          wi@354@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01)))))
                                  (>=
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                                    0))
                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                              (and
                                (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                                  (=>
                                    (and
                                      (<= 0 ii@353@01)
                                      (and
                                        (<
                                          ii@353@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (and
                                          (<= 0 wi@354@01)
                                          (<
                                            wi@354@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01)))))
                                    (>=
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                                      0))
                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                                (forall ((ii@355@01 Int)) (!
                                  (and
                                    (or (<= 0 ii@355@01) (not (<= 0 ii@355@01)))
                                    (=>
                                      (and
                                        (<= 0 ii@355@01)
                                        (<
                                          ii@355@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01)))
                                      (and
                                        (<= 0 ii@355@01)
                                        (<
                                          ii@355@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (<
                                          0
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@355@01 0)))
                                    (or
                                      (not
                                        (and
                                          (<= 0 ii@355@01)
                                          (<
                                            ii@355@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01))))
                                      (and
                                        (<= 0 ii@355@01)
                                        (<
                                          ii@355@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01)))))
                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096-aux|))
                                (=>
                                  (forall ((ii@355@01 Int)) (!
                                    (=>
                                      (and
                                        (<= 0 ii@355@01)
                                        (<
                                          ii@355@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01)))
                                      (=
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                        0))
                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@355@01 0))
                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                                  (and
                                    (forall ((ii@355@01 Int)) (!
                                      (=>
                                        (and
                                          (<= 0 ii@355@01)
                                          (<
                                            ii@355@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01)))
                                        (=
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                          0))
                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@355@01 0))
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                                    (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
                                      (and
                                        (=>
                                          (<= 0 ii@356@01)
                                          (and
                                            (<= 0 ii@356@01)
                                            (=>
                                              (<=
                                                ii@356@01
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                              (and
                                                (<=
                                                  ii@356@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                (or
                                                  (<= 0 wi@357@01)
                                                  (not (<= 0 wi@357@01)))))
                                            (or
                                              (<=
                                                ii@356@01
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                              (not
                                                (<=
                                                  ii@356@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                                        (or
                                          (<= 0 ii@356@01)
                                          (not (<= 0 ii@356@01)))
                                        (=>
                                          (and
                                            (<= 0 ii@356@01)
                                            (and
                                              (<=
                                                ii@356@01
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                              (and
                                                (<= 0 wi@357@01)
                                                (<
                                                  wi@357@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                    $Snap.unit) ret@230@01)))))
                                          (and
                                            (<= 0 ii@356@01)
                                            (<=
                                              ii@356@01
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                            (<= 0 wi@357@01)
                                            (<
                                              wi@357@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                $Snap.unit) ret@230@01))
                                            (<=
                                              ii@356@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                $t@245@01
                                                $Snap.unit) $t@350@01))
                                            (<= wi@357@01 _2@101@01)
                                            (<= 0 _2@101@01)
                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                              $t@245@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                                            (<
                                              ii@356@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                $Snap.unit) ret@230@01))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                                        (or
                                          (not
                                            (and
                                              (<= 0 ii@356@01)
                                              (and
                                                (<=
                                                  ii@356@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                (and
                                                  (<= 0 wi@357@01)
                                                  (<
                                                    wi@357@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                      $Snap.unit) ret@230@01))))))
                                          (and
                                            (<= 0 ii@356@01)
                                            (and
                                              (<=
                                                ii@356@01
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                              (and
                                                (<= 0 wi@357@01)
                                                (<
                                                  wi@357@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                    $Snap.unit) ret@230@01)))))))
                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                        $t@245@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01))
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))
                                    (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
                                      (and
                                        (=>
                                          (<= 0 ii@356@01)
                                          (and
                                            (<= 0 ii@356@01)
                                            (=>
                                              (<=
                                                ii@356@01
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                              (and
                                                (<=
                                                  ii@356@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                (or
                                                  (<= 0 wi@357@01)
                                                  (not (<= 0 wi@357@01)))))
                                            (or
                                              (<=
                                                ii@356@01
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                              (not
                                                (<=
                                                  ii@356@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                                        (or
                                          (<= 0 ii@356@01)
                                          (not (<= 0 ii@356@01)))
                                        (=>
                                          (and
                                            (<= 0 ii@356@01)
                                            (and
                                              (<=
                                                ii@356@01
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                              (and
                                                (<= 0 wi@357@01)
                                                (<
                                                  wi@357@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                    $Snap.unit) ret@230@01)))))
                                          (and
                                            (<= 0 ii@356@01)
                                            (<=
                                              ii@356@01
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                            (<= 0 wi@357@01)
                                            (<
                                              wi@357@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                $Snap.unit) ret@230@01))
                                            (<=
                                              ii@356@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                $t@245@01
                                                $Snap.unit) $t@350@01))
                                            (<= wi@357@01 _2@101@01)
                                            (<= 0 _2@101@01)
                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                              $t@245@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                                            (<
                                              ii@356@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                $Snap.unit) ret@230@01))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                                        (or
                                          (not
                                            (and
                                              (<= 0 ii@356@01)
                                              (and
                                                (<=
                                                  ii@356@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                (and
                                                  (<= 0 wi@357@01)
                                                  (<
                                                    wi@357@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                      $Snap.unit) ret@230@01))))))
                                          (and
                                            (<= 0 ii@356@01)
                                            (and
                                              (<=
                                                ii@356@01
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                              (and
                                                (<= 0 wi@357@01)
                                                (<
                                                  wi@357@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                    $Snap.unit) ret@230@01)))))))
                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01))
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))))
                                (or
                                  (forall ((ii@355@01 Int)) (!
                                    (=>
                                      (and
                                        (<= 0 ii@355@01)
                                        (<
                                          ii@355@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01)))
                                      (=
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                        0))
                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@355@01 0))
                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                                  (not
                                    (forall ((ii@355@01 Int)) (!
                                      (=>
                                        (and
                                          (<= 0 ii@355@01)
                                          (<
                                            ii@355@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01)))
                                        (=
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                          0))
                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@355@01 0))
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))))))
                            (or
                              (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                                (=>
                                  (and
                                    (<= 0 ii@353@01)
                                    (and
                                      (<
                                        ii@353@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01))
                                      (and
                                        (<= 0 wi@354@01)
                                        (<
                                          wi@354@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01)))))
                                  (>=
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                                    0))
                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                              (not
                                (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                                  (=>
                                    (and
                                      (<= 0 ii@353@01)
                                      (and
                                        (<
                                          ii@353@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (and
                                          (<= 0 wi@354@01)
                                          (<
                                            wi@354@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01)))))
                                    (>=
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                                      0))
                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))))))
                        (or
                          (< _2@101@01 18446744073709551615)
                          (not (< _2@101@01 18446744073709551615)))))
                    (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
                (or
                  (<
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      $t@245@01
                      $Snap.unit) $t@350@01))
                  (not
                    (<
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        $t@245@01
                        $Snap.unit) $t@350@01))))))
            (or
              (<=
                0
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (not
                (<=
                  0
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
        (or
          (<
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@245@01
              $Snap.unit) $t@350@01))
          (not
            (<
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@245@01
                $Snap.unit) $t@350@01))))))
    (or
      (=
        (+ _2@101@01 1)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))
      (not
        (=
          (+ _2@101@01 1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))))
(assert (or
  (=
    (+
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@245@01
        $Snap.unit) $t@350@01)
      1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))
  (not
    (=
      (+
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@245@01
          $Snap.unit) $t@350@01)
        1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01)))))
(pop) ; 6
; Joined path conditions
(assert (and
  (usize%trigger ($Snap.first $t@349@01) ret@289@01)
  (=
    ($Snap.first $t@349@01)
    ($Snap.combine
      ($Snap.first ($Snap.first $t@349@01))
      ($Snap.second ($Snap.first $t@349@01))))
  (not (= ret@289@01 $Ref.null))
  (= ($Snap.second ($Snap.first $t@349@01)) $Snap.unit)
  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
    $t@245@01
    $Snap.unit) $t@350@01)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01)
  (=>
    (=
      (+
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@245@01
          $Snap.unit) $t@350@01)
        1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (and
      (=
        (+
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@245@01
            $Snap.unit) $t@350@01)
          1)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01)
      (=>
        (=
          (+ _2@101@01 1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (and
          (=
            (+ _2@101@01 1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (=>
            (<
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@245@01
                $Snap.unit) $t@350@01))
            (and
              (<
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@245@01
                  $Snap.unit) $t@350@01))
              (=>
                (<=
                  0
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                (and
                  (=>
                    (<
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        $t@245@01
                        $Snap.unit) $t@350@01))
                    (and
                      (=>
                        (<= 2 _2@101@01)
                        (and
                          (=>
                            (< _2@101@01 18446744073709551615)
                            (and
                              (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                                (and
                                  (=>
                                    (<= 0 ii@353@01)
                                    (and
                                      (<= 0 ii@353@01)
                                      (=>
                                        (<
                                          ii@353@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (and
                                          (<
                                            ii@353@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01))
                                          (or
                                            (<= 0 wi@354@01)
                                            (not (<= 0 wi@354@01)))))
                                      (or
                                        (<
                                          ii@353@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (not
                                          (<
                                            ii@353@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01))))))
                                  (or (<= 0 ii@353@01) (not (<= 0 ii@353@01)))
                                  (=>
                                    (and
                                      (<= 0 ii@353@01)
                                      (and
                                        (<
                                          ii@353@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (and
                                          (<= 0 wi@354@01)
                                          (<
                                            wi@354@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01)))))
                                    (and
                                      (<= 0 ii@353@01)
                                      (<
                                        ii@353@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01))
                                      (<= 0 wi@354@01)
                                      (<
                                        wi@354@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          $Snap.unit) ret@230@01))
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)))
                                  (or
                                    (not
                                      (and
                                        (<= 0 ii@353@01)
                                        (and
                                          (<
                                            ii@353@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01))
                                          (and
                                            (<= 0 wi@354@01)
                                            (<
                                              wi@354@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                $Snap.unit) ret@230@01))))))
                                    (and
                                      (<= 0 ii@353@01)
                                      (and
                                        (<
                                          ii@353@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (and
                                          (<= 0 wi@354@01)
                                          (<
                                            wi@354@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01)))))))
                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676-aux|))
                              (=>
                                (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                                  (=>
                                    (and
                                      (<= 0 ii@353@01)
                                      (and
                                        (<
                                          ii@353@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (and
                                          (<= 0 wi@354@01)
                                          (<
                                            wi@354@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01)))))
                                    (>=
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                                      0))
                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                                (and
                                  (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                                    (=>
                                      (and
                                        (<= 0 ii@353@01)
                                        (and
                                          (<
                                            ii@353@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01))
                                          (and
                                            (<= 0 wi@354@01)
                                            (<
                                              wi@354@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                $Snap.unit) ret@230@01)))))
                                      (>=
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                                        0))
                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                                  (forall ((ii@355@01 Int)) (!
                                    (and
                                      (or
                                        (<= 0 ii@355@01)
                                        (not (<= 0 ii@355@01)))
                                      (=>
                                        (and
                                          (<= 0 ii@355@01)
                                          (<
                                            ii@355@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01)))
                                        (and
                                          (<= 0 ii@355@01)
                                          (<
                                            ii@355@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01))
                                          (<
                                            0
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@355@01 0)))
                                      (or
                                        (not
                                          (and
                                            (<= 0 ii@355@01)
                                            (<
                                              ii@355@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                $Snap.unit) ret@230@01))))
                                        (and
                                          (<= 0 ii@355@01)
                                          (<
                                            ii@355@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01)))))
                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@355@01 0))
                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096-aux|))
                                  (=>
                                    (forall ((ii@355@01 Int)) (!
                                      (=>
                                        (and
                                          (<= 0 ii@355@01)
                                          (<
                                            ii@355@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01)))
                                        (=
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                          0))
                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@355@01 0))
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                                    (and
                                      (forall ((ii@355@01 Int)) (!
                                        (=>
                                          (and
                                            (<= 0 ii@355@01)
                                            (<
                                              ii@355@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                $Snap.unit) ret@230@01)))
                                          (=
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                            0))
                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@355@01 0))
                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                                      (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
                                        (and
                                          (=>
                                            (<= 0 ii@356@01)
                                            (and
                                              (<= 0 ii@356@01)
                                              (=>
                                                (<=
                                                  ii@356@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                (and
                                                  (<=
                                                    ii@356@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                  (or
                                                    (<= 0 wi@357@01)
                                                    (not (<= 0 wi@357@01)))))
                                              (or
                                                (<=
                                                  ii@356@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                (not
                                                  (<=
                                                    ii@356@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                                          (or
                                            (<= 0 ii@356@01)
                                            (not (<= 0 ii@356@01)))
                                          (=>
                                            (and
                                              (<= 0 ii@356@01)
                                              (and
                                                (<=
                                                  ii@356@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                (and
                                                  (<= 0 wi@357@01)
                                                  (<
                                                    wi@357@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                      $Snap.unit) ret@230@01)))))
                                            (and
                                              (<= 0 ii@356@01)
                                              (<=
                                                ii@356@01
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                              (<= 0 wi@357@01)
                                              (<
                                                wi@357@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                  $Snap.unit) ret@230@01))
                                              (<=
                                                ii@356@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  $t@245@01
                                                  $Snap.unit) $t@350@01))
                                              (<= wi@357@01 _2@101@01)
                                              (<= 0 _2@101@01)
                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                $t@245@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                                              (<
                                                ii@356@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                  $Snap.unit) ret@230@01))
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                                          (or
                                            (not
                                              (and
                                                (<= 0 ii@356@01)
                                                (and
                                                  (<=
                                                    ii@356@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                  (and
                                                    (<= 0 wi@357@01)
                                                    (<
                                                      wi@357@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                        $Snap.unit) ret@230@01))))))
                                            (and
                                              (<= 0 ii@356@01)
                                              (and
                                                (<=
                                                  ii@356@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                (and
                                                  (<= 0 wi@357@01)
                                                  (<
                                                    wi@357@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                      $Snap.unit) ret@230@01)))))))
                                        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                          $t@245@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01))
                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))
                                      (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
                                        (and
                                          (=>
                                            (<= 0 ii@356@01)
                                            (and
                                              (<= 0 ii@356@01)
                                              (=>
                                                (<=
                                                  ii@356@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                (and
                                                  (<=
                                                    ii@356@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                  (or
                                                    (<= 0 wi@357@01)
                                                    (not (<= 0 wi@357@01)))))
                                              (or
                                                (<=
                                                  ii@356@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                (not
                                                  (<=
                                                    ii@356@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
                                          (or
                                            (<= 0 ii@356@01)
                                            (not (<= 0 ii@356@01)))
                                          (=>
                                            (and
                                              (<= 0 ii@356@01)
                                              (and
                                                (<=
                                                  ii@356@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                (and
                                                  (<= 0 wi@357@01)
                                                  (<
                                                    wi@357@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                      $Snap.unit) ret@230@01)))))
                                            (and
                                              (<= 0 ii@356@01)
                                              (<=
                                                ii@356@01
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                              (<= 0 wi@357@01)
                                              (<
                                                wi@357@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                  $Snap.unit) ret@230@01))
                                              (<=
                                                ii@356@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  $t@245@01
                                                  $Snap.unit) $t@350@01))
                                              (<= wi@357@01 _2@101@01)
                                              (<= 0 _2@101@01)
                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                $t@245@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                                              (<
                                                ii@356@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                  $Snap.unit) ret@230@01))
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                                          (or
                                            (not
                                              (and
                                                (<= 0 ii@356@01)
                                                (and
                                                  (<=
                                                    ii@356@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                  (and
                                                    (<= 0 wi@357@01)
                                                    (<
                                                      wi@357@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                        $Snap.unit) ret@230@01))))))
                                            (and
                                              (<= 0 ii@356@01)
                                              (and
                                                (<=
                                                  ii@356@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                                                (and
                                                  (<= 0 wi@357@01)
                                                  (<
                                                    wi@357@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                      $Snap.unit) ret@230@01)))))))
                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01))
                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700-aux|))))
                                  (or
                                    (forall ((ii@355@01 Int)) (!
                                      (=>
                                        (and
                                          (<= 0 ii@355@01)
                                          (<
                                            ii@355@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01)))
                                        (=
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                          0))
                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@355@01 0))
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                                    (not
                                      (forall ((ii@355@01 Int)) (!
                                        (=>
                                          (and
                                            (<= 0 ii@355@01)
                                            (<
                                              ii@355@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                $Snap.unit) ret@230@01)))
                                          (=
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@355@01 0)
                                            0))
                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@355@01 0))
                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))))))
                              (or
                                (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                                  (=>
                                    (and
                                      (<= 0 ii@353@01)
                                      (and
                                        (<
                                          ii@353@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                            $Snap.unit) ret@230@01))
                                        (and
                                          (<= 0 wi@354@01)
                                          (<
                                            wi@354@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01)))))
                                    (>=
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                                      0))
                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                                (not
                                  (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                                    (=>
                                      (and
                                        (<= 0 ii@353@01)
                                        (and
                                          (<
                                            ii@353@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                              $Snap.unit) ret@230@01))
                                          (and
                                            (<= 0 wi@354@01)
                                            (<
                                              wi@354@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                                $Snap.unit) ret@230@01)))))
                                      (>=
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                                        0))
                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))))))
                          (or
                            (< _2@101@01 18446744073709551615)
                            (not (< _2@101@01 18446744073709551615)))))
                      (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
                  (or
                    (<
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        $t@245@01
                        $Snap.unit) $t@350@01))
                    (not
                      (<
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          $t@245@01
                          $Snap.unit) $t@350@01))))))
              (or
                (<=
                  0
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                (not
                  (<=
                    0
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
          (or
            (<
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@245@01
                $Snap.unit) $t@350@01))
            (not
              (<
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@245@01
                  $Snap.unit) $t@350@01))))))
      (or
        (=
          (+ _2@101@01 1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (not
          (=
            (+ _2@101@01 1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))))))
  (or
    (=
      (+
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@245@01
          $Snap.unit) $t@350@01)
        1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (not
      (=
        (+
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@245@01
            $Snap.unit) $t@350@01)
          1)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))))))
(assert (and
  (=
    (+
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@245@01
        $Snap.unit) $t@350@01)
      1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))
  (and
    (=
      (+ _2@101@01 1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (and
      (<
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@245@01
          $Snap.unit) $t@350@01))
      (and
        (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
        (and
          (<
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@245@01
              $Snap.unit) $t@350@01))
          (and
            (<= 2 _2@101@01)
            (and
              (< _2@101@01 18446744073709551615)
              (and
                (forall ((ii@353@01 Int) (wi@354@01 Int)) (!
                  (=>
                    (and
                      (<= 0 ii@353@01)
                      (and
                        (<
                          ii@353@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01))
                        (and
                          (<= 0 wi@354@01)
                          (<
                            wi@354@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                              $Snap.unit) ret@230@01)))))
                    (>=
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01)
                      0))
                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@353@01 wi@354@01))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1051@3572@1676|))
                (and
                  (forall ((ii@355@01 Int)) (!
                    (=>
                      (and
                        (<= 0 ii@355@01)
                        (<
                          ii@355@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                            $Snap.unit) ret@230@01)))
                      (=
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0)
                        0))
                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@355@01 0))
                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@1683@3572@2096|))
                  (forall ((ii@356@01 Int) (wi@357@01 Int)) (!
                    (=>
                      (and
                        (<= 0 ii@356@01)
                        (and
                          (<=
                            ii@356@01
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
                          (and
                            (<= 0 wi@357@01)
                            (<
                              wi@357@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                                $Snap.unit) ret@230@01)))))
                      (=
                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                          $t@245@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01)
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01)))
                    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                      $t@245@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@356@01 wi@357@01 _2@101@01))
                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@356@01 wi@357@01))
                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3572@2102@3572@2700|))))))))))))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label loop9_group3_bb13
; [exec]
; __t8 := true
; [exec]
; _19 := builtin$havoc_ref()
(declare-const ret@358@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(tuple0$(_19), write)
(declare-const $t@359@01 $Snap)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label loop9_group3_bb14
; [exec]
; __t9 := true
; [exec]
; _49 := builtin$havoc_ref()
(declare-const ret@360@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_49.val_ref, write)
(declare-const $t@361@01 $Ref)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@360@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@360@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= ret@213@01 ret@360@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (not (= ret@360@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _49.val_ref := _1.val_ref
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@360@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@360@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= ret@213@01 ret@360@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [exec]
; inhale acc(m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_(_49.val_ref), read$())
; [eval] read$()
(set-option :timeout 0)
(push) ; 6
(pop) ; 6
; Joined path conditions
(push) ; 6
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(declare-const $t@362@01 $Snap)
(push) ; 6
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(declare-const $t@363@01 $Snap)
(assert (and
  (=>
    (<
      $Perm.No
      (-
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit))))
    (= $t@363@01 $t@245@01))
  (=> (< $Perm.No (read$ $Snap.unit)) (= $t@363@01 $t@362@01))))
(assert (<=
  $Perm.No
  (+
    (-
      (+
        (-
          (+ (read$ $Snap.unit) (read$ $Snap.unit))
          ($Perm.min
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    (read$ $Snap.unit))))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label l15
; [exec]
; _50 := builtin$havoc_int()
(declare-const ret@364@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@365@01 $Snap)
(assert (= $t@365@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; unfold acc(usize(_11), write)
; [eval] 0 <= self.val_int
; State saturation: after unfold
(set-option :timeout 40)
(check-sat)
; unknown
; [exec]
; _50 := _11.val_int
(declare-const _50@366@01 Int)
(assert (= _50@366@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))
; [exec]
; label l16
; [exec]
; label l17
; [exec]
; assert 0 <= _50 &&
;   _50 <
;   m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_49.val_ref)
; [eval] 0 <= _50
(set-option :timeout 0)
(push) ; 6
(assert (not (<= 0 _50@366@01)))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 _50@366@01))
; [eval] _50 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_49.val_ref)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_49.val_ref)
(push) ; 6
; [eval] read$()
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@363@01
  $Snap.unit) $t@350@01))
(pop) ; 6
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@363@01
  $Snap.unit) $t@350@01))
(set-option :timeout 0)
(push) ; 6
(assert (not (<
  _50@366@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@363@01
    $Snap.unit) $t@350@01))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (<
  _50@366@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@363@01
    $Snap.unit) $t@350@01)))
; [exec]
; assert _50 >= 0
; [eval] _50 >= 0
(push) ; 6
(assert (not (>= _50@366@01 0)))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (>= _50@366@01 0))
; [exec]
; assert true
; [exec]
; exhale acc(_49.val_ref, write) && _50 >= 0
; [eval] _50 >= 0
; [exec]
; _48 := builtin$havoc_ref()
(declare-const ret@367@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@368@01 $Snap)
(assert (= $t@368@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale acc(_48.val_ref, write) &&
;   acc(m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_(_48.val_ref), read$())
(declare-const $t@369@01 $Snap)
(assert (= $t@369@01 ($Snap.combine ($Snap.first $t@369@01) ($Snap.second $t@369@01))))
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@367@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@367@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= ret@213@01 ret@367@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (not (= ret@367@01 $Ref.null)))
; [eval] read$()
(set-option :timeout 0)
(push) ; 6
(pop) ; 6
; Joined path conditions
(push) ; 6
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@370@01 $Snap)
(assert (= $t@370@01 $Snap.unit))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (unfolding acc(m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_(_48.val_ref), read$()) in
;     (unfolding acc(usize(_48.val_ref.f$weight), read$()) in
;       (unfolding acc(usize(_48.val_ref.f$value), read$()) in
;         m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(old[l17](_49.val_ref),
;         old[l17](_50)) ==
;         _48.val_ref.f$weight.val_int &&
;         m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(old[l17](_49.val_ref),
;         old[l17](_50)) ==
;         _48.val_ref.f$value.val_int)))
(declare-const $t@371@01 $Snap)
(assert (= $t@371@01 $Snap.unit))
; [eval] (unfolding acc(m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_(_48.val_ref), read$()) in (unfolding acc(usize(_48.val_ref.f$weight), read$()) in (unfolding acc(usize(_48.val_ref.f$value), read$()) in m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(old[l17](_49.val_ref), old[l17](_50)) == _48.val_ref.f$weight.val_int && m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(old[l17](_49.val_ref), old[l17](_50)) == _48.val_ref.f$value.val_int)))
; [eval] read$()
(set-option :timeout 0)
(push) ; 6
(pop) ; 6
; Joined path conditions
(push) ; 6
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(push) ; 6
; [eval] read$()
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap.second $t@369@01) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@369@01))))
(assert (=
  ($Snap.second $t@369@01)
  ($Snap.combine
    ($Snap.first ($Snap.second $t@369@01))
    ($Snap.second ($Snap.second $t@369@01)))))
(assert (<= (read$ $Snap.unit) $Perm.Write))
(assert (=>
  (< $Perm.No (read$ $Snap.unit))
  (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@369@01)) $Ref.null))))
(assert (=
  ($Snap.second ($Snap.second $t@369@01))
  ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@369@01)))
    ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($Snap.second ($Snap.second ($Snap.second $t@369@01)))
  ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
(assert (=
  ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))
  ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01)))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01)))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [eval] (unfolding acc(usize(_48.val_ref.f$weight), read$()) in (unfolding acc(usize(_48.val_ref.f$value), read$()) in m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(old[l17](_49.val_ref), old[l17](_50)) == _48.val_ref.f$weight.val_int && m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(old[l17](_49.val_ref), old[l17](_50)) == _48.val_ref.f$value.val_int))
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [eval] read$()
(set-option :timeout 0)
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
; [eval] read$()
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (usize%trigger ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))) ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
(assert (=
  ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ($Snap.combine
    ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
    ($Snap.second ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (=>
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
      $Ref.null))))
(assert (=
  ($Snap.second ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
  $Snap.unit))
; [eval] 0 <= self.val_int
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (<=
  0
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))
; [eval] (unfolding acc(usize(_48.val_ref.f$value), read$()) in m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(old[l17](_49.val_ref), old[l17](_50)) == _48.val_ref.f$weight.val_int && m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(old[l17](_49.val_ref), old[l17](_50)) == _48.val_ref.f$value.val_int)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [eval] read$()
(set-option :timeout 0)
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
; [eval] read$()
(push) ; 9
(pop) ; 9
; Joined path conditions
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (usize%trigger ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))) ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))
(assert (=
  ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
  ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (=>
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      $Ref.null))))
(assert (=
  ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  $Snap.unit))
; [eval] 0 <= self.val_int
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (<=
  0
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(old[l17](_49.val_ref), old[l17](_50)) == _48.val_ref.f$weight.val_int && m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(old[l17](_49.val_ref), old[l17](_50)) == _48.val_ref.f$value.val_int
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(old[l17](_49.val_ref), old[l17](_50)) == _48.val_ref.f$weight.val_int
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(old[l17](_49.val_ref), old[l17](_50))
; [eval] old[l17](_49.val_ref)
; [eval] old[l17](_50)
(set-option :timeout 0)
(push) ; 9
; [eval] read$()
(push) ; 10
(pop) ; 10
; Joined path conditions
(push) ; 10
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(pop) ; 10
; Joined path conditions
; [eval] 0 <= _pure_2
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01))
(pop) ; 9
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01))
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
; [then-branch: 38 | m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(($t@363@01, (_, (_, _))), $t@350@01, _50@366@01) != First:(First:(Second:(Second:(Second:(Second:($t@369@01)))))) | live]
; [else-branch: 38 | m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(($t@363@01, (_, (_, _))), $t@350@01, _50@366@01) == First:(First:(Second:(Second:(Second:(Second:($t@369@01)))))) | live]
(push) ; 10
; [then-branch: 38 | m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(($t@363@01, (_, (_, _))), $t@350@01, _50@366@01) != First:(First:(Second:(Second:(Second:(Second:($t@369@01))))))]
(assert (not
  (=
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
      $t@363@01
      ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(pop) ; 10
(push) ; 10
; [else-branch: 38 | m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(($t@363@01, (_, (_, _))), $t@350@01, _50@366@01) == First:(First:(Second:(Second:(Second:(Second:($t@369@01))))))]
(assert (=
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
    $t@363@01
    ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(old[l17](_49.val_ref), old[l17](_50)) == _48.val_ref.f$value.val_int
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(old[l17](_49.val_ref), old[l17](_50))
; [eval] old[l17](_49.val_ref)
; [eval] old[l17](_50)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 12
; [eval] read$()
(push) ; 13
(pop) ; 13
; Joined path conditions
(push) ; 13
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(push) ; 13
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(push) ; 13
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(pop) ; 12
; Joined path conditions
; [eval] 0 <= _pure_2
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01))
(pop) ; 11
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01))
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (=
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
      $t@363@01
      ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
  (and
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
      $t@363@01
      ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01))))
(assert (or
  (=
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
      $t@363@01
      ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
  (not
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))
(pop) ; 8
; Joined path conditions
(assert (and
  (usize%trigger ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))) ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
  (=
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
    ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))
  (=>
    (< $Perm.No (read$ $Snap.unit))
    (not
      (=
        ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
        $Ref.null)))
  (=
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
    $Snap.unit)
  (<=
    0
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
    $t@363@01
    ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
  (=>
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
    (and
      (=
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
        $t@363@01
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)))
  (or
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
    (not
      (=
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(pop) ; 7
; Joined path conditions
(assert (and
  (usize%trigger ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))) ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
  (=
    ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
    ($Snap.combine
      ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
      ($Snap.second ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
  (=>
    (< $Perm.No (read$ $Snap.unit))
    (not
      (=
        ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
        $Ref.null)))
  (=
    ($Snap.second ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
    $Snap.unit)
  (<=
    0
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
  (usize%trigger ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))) ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
  (=
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
    ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))
  (=>
    (< $Perm.No (read$ $Snap.unit))
    (not
      (=
        ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
        $Ref.null)))
  (=
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
    $Snap.unit)
  (<=
    0
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
    $t@363@01
    ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
  (=>
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
    (and
      (=
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
        $t@363@01
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)))
  (or
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
    (not
      (=
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(pop) ; 6
; Joined path conditions
(assert (and
  (m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap.second $t@369@01) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@369@01)))
  (=
    ($Snap.second $t@369@01)
    ($Snap.combine
      ($Snap.first ($Snap.second $t@369@01))
      ($Snap.second ($Snap.second $t@369@01))))
  (<= (read$ $Snap.unit) $Perm.Write)
  (=>
    (< $Perm.No (read$ $Snap.unit))
    (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@369@01)) $Ref.null)))
  (=
    ($Snap.second ($Snap.second $t@369@01))
    ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@369@01)))
      ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  (=
    ($Snap.second ($Snap.second ($Snap.second $t@369@01)))
    ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))
      ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
  (=
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))
    ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
      ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  (=
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
    ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
      ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
  (usize%trigger ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))) ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
  (=
    ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
    ($Snap.combine
      ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
      ($Snap.second ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
  (=>
    (< $Perm.No (read$ $Snap.unit))
    (not
      (=
        ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
        $Ref.null)))
  (=
    ($Snap.second ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
    $Snap.unit)
  (<=
    0
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
  (usize%trigger ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))) ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
  (=
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
    ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))
  (=>
    (< $Perm.No (read$ $Snap.unit))
    (not
      (=
        ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
        $Ref.null)))
  (=
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
    $Snap.unit)
  (<=
    0
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
    $t@363@01
    ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
  (=>
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
    (and
      (=
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
        $t@363@01
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)))
  (or
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
    (not
      (=
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(assert (and
  (=
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
      $t@363@01
      ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
  (=
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
      $t@363@01
      ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 _50@366@01)
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; exhale acc(m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_(old[l17](_49.val_ref)), read$())
; [eval] read$()
(set-option :timeout 0)
(push) ; 6
(pop) ; 6
; Joined path conditions
; [eval] old[l17](_49.val_ref)
(push) ; 6
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(push) ; 6
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (=
  (-
    (+
      (-
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    ($Perm.min
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      (read$ $Snap.unit)))
  $Perm.No)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (<=
  $Perm.No
  (-
    (+
      (-
        (+
          (-
            (+ (read$ $Snap.unit) (read$ $Snap.unit))
            ($Perm.min
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    ($Perm.min
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      (read$ $Snap.unit)))))
(set-option :timeout 0)
(push) ; 6
(assert (not (or
  (=
    (-
      (read$ $Snap.unit)
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    $Perm.No)
  (<
    (-
      (read$ $Snap.unit)
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    $Perm.No))))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [exec]
; label l18
; [exec]
; label loop9_group3_bb15
; [exec]
; __t10 := true
; [exec]
; _51 := builtin$havoc_ref()
(declare-const ret@372@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_51.val_int, write)
(declare-const $t@373@01 Int)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= ret@289@01 ret@372@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (not (= ret@372@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _51.val_int := 1
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= ret@289@01 ret@372@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [exec]
; label loop9_group3_loop17_start
; [exec]
; label loop9_group3_loop17_group1_bb17
; [exec]
; __t11 := true
; [exec]
; _54 := builtin$havoc_int()
(declare-const ret@374@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@375@01 $Snap)
(assert (= $t@375@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _54 := _51.val_int
; [exec]
; label l19
; [exec]
; _55 := builtin$havoc_int()
(declare-const ret@376@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@377@01 $Snap)
(assert (= $t@377@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale _2 >= 0
(declare-const $t@378@01 $Snap)
(assert (= $t@378@01 $Snap.unit))
; [eval] _2 >= 0
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; _55 := _2
; [exec]
; label l20
; [exec]
; _53 := builtin$havoc_ref()
(declare-const ret@379@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_53.val_bool, write)
(declare-const $t@380@01 Bool)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= ret@253@01 ret@379@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= $t@225@01 ret@379@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= $t@210@01 ret@379@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(assert (not (= ret@379@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _53.val_bool := _54 <= _55
; [eval] _54 <= _55
(declare-const val_bool@381@01 Bool)
(assert (= val_bool@381@01 (<= 1 _2@101@01)))
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= ret@253@01 ret@379@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= $t@225@01 ret@379@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (= $t@210@01 ret@379@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [exec]
; __t56 := _53.val_bool
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not (not val_bool@381@01)))
(check-sat)
; unknown
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 6
(set-option :timeout 10)
(assert (not val_bool@381@01))
(check-sat)
; unsat
(pop) ; 6
; 0.00s
; (get-info :all-statistics)
; [then-branch: 39 | val_bool@381@01 | live]
; [else-branch: 39 | !(val_bool@381@01) | dead]
(set-option :timeout 0)
(push) ; 6
; [then-branch: 39 | val_bool@381@01]
(assert val_bool@381@01)
; [exec]
; label l22
; [exec]
; label loop9_group3_loop17_group2_bb19
; [exec]
; __t12 := true
; [exec]
; __t57 := false
; [exec]
; label loop9_group3_loop17_inv_pre
; [exec]
; _preserve$1 := _1.val_ref
(push) ; 7
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [exec]
; _preserve$2 := _48.val_ref
(declare-const _preserve$2@382@01 $Ref)
(assert (= _preserve$2@382@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@369@01))))
; [exec]
; fold acc(usize(_51), write)
; [eval] 0 <= self.val_int
(assert (usize%trigger ($Snap.combine ($SortWrappers.IntTo$Snap 1) $Snap.unit) ret@372@01))
; [exec]
; assert _2 >= 0
; [eval] _2 >= 0
; [exec]
; fold acc(usize(_11), write)
; [eval] 0 <= self.val_int
(assert (usize%trigger ($Snap.combine ($Snap.first ($Snap.first $t@349@01)) $Snap.unit) ret@289@01))
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (= ret@372@01 ret@289@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [exec]
; assert (unfolding acc(usize(_51), write) in _51.val_int) <= _2 &&
;   (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) +
;   1 ==
;   m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) &&
;   (_2 + 1 ==
;   m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) &&
;   (0 <= (unfolding acc(usize(_51), write) in _51.val_int) &&
;   ((unfolding acc(usize(_51), write) in _51.val_int) <=
;   m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) &&
;   (0 <= (unfolding acc(usize(_11), write) in _11.val_int) &&
;   ((unfolding acc(usize(_11), write) in _11.val_int) <
;   m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) &&
;   (2 <= _2 &&
;   (_2 < 18446744073709551615 &&
;   ((unfolding acc(m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_(_48.val_ref), read$()) in
;     (unfolding acc(usize(_48.val_ref.f$value), read$()) in
;       _48.val_ref.f$value.val_int)) ==
;   (unfolding acc(usize(_11), write) in
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref,
;     _11.val_int)) &&
;   ((unfolding acc(m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_(_48.val_ref), read$()) in
;     (unfolding acc(usize(_48.val_ref.f$weight), read$()) in
;       _48.val_ref.f$weight.val_int)) ==
;   (unfolding acc(usize(_11), write) in
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref,
;     _11.val_int)) &&
;   ((forall ii: Int, wi: Int ::
;     { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;     ii, wi) }
;     0 <= ii &&
;     (ii <
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) &&
;     (0 <= wi &&
;     wi <
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==>
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;     ii, wi) >=
;     0) &&
;   ((unfolding acc(usize(_11), write) in
;     (forall ii: Int, wi: Int ::
;       { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref,
;       ii, wi, _2) }
;       { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;       ii, wi) }
;       0 <= ii &&
;       (ii <= _11.val_int &&
;       (0 <= wi &&
;       wi <
;       m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==>
;       m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref,
;       ii, wi, _2) ==
;       m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;       ii, wi))) &&
;   ((unfolding acc(usize(_51), write) in
;     (unfolding acc(usize(_11), write) in
;       (let _LET_0 ==
;         (_11.val_int + 1) in
;         (forall wi: Int ::
;           { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref,
;           _LET_0, wi, _2) }
;           { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;           _LET_0, wi) }
;           0 <= wi && wi < _51.val_int ==>
;           m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref,
;           _LET_0, wi, _2) ==
;           m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;           _LET_0, wi))))) &&
;   (forall ii: Int ::
;     { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;     ii, 0) }
;     0 <= ii &&
;     ii <
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==>
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;     ii, 0) ==
;     0))))))))))))))
; [eval] (unfolding acc(usize(_51), write) in _51.val_int) <= _2
; [eval] (unfolding acc(usize(_51), write) in _51.val_int)
(set-option :timeout 0)
(push) ; 7
; [eval] 0 <= self.val_int
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (<= 1 _2@101@01)))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (<= 1 _2@101@01))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
(push) ; 7
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
; [eval] read$()
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(pop) ; 7
; Joined path conditions
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(set-option :timeout 0)
(push) ; 7
; [eval] read$()
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(pop) ; 7
; Joined path conditions
(set-option :timeout 0)
(push) ; 7
(assert (not (=
  (+
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@363@01
      $Snap.unit) $t@350@01)
    1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (=
  (+
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@363@01
      $Snap.unit) $t@350@01)
    1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01)))
; [eval] _2 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] _2 + 1
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 7
; [eval] read$()
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
  $Snap.unit) ret@230@01))
(pop) ; 7
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
  $Snap.unit) ret@230@01))
; [eval] 0 <= (unfolding acc(usize(_51), write) in _51.val_int)
; [eval] (unfolding acc(usize(_51), write) in _51.val_int)
(set-option :timeout 0)
(push) ; 7
; [eval] 0 <= self.val_int
(pop) ; 7
; Joined path conditions
; [eval] (unfolding acc(usize(_51), write) in _51.val_int) <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] (unfolding acc(usize(_51), write) in _51.val_int)
(push) ; 7
; [eval] 0 <= self.val_int
(pop) ; 7
; Joined path conditions
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 7
; [eval] read$()
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(pop) ; 7
; Joined path conditions
(set-option :timeout 0)
(push) ; 7
(assert (not (<=
  1
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (<=
  1
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= (unfolding acc(usize(_11), write) in _11.val_int)
; [eval] (unfolding acc(usize(_11), write) in _11.val_int)
(push) ; 7
; [eval] 0 <= self.val_int
(pop) ; 7
; Joined path conditions
; [eval] (unfolding acc(usize(_11), write) in _11.val_int) < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
; [eval] (unfolding acc(usize(_11), write) in _11.val_int)
(push) ; 7
; [eval] 0 <= self.val_int
(pop) ; 7
; Joined path conditions
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
(push) ; 7
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
; [eval] read$()
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(pop) ; 7
; Joined path conditions
(set-option :timeout 0)
(push) ; 7
(assert (not (<
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@363@01
    $Snap.unit) $t@350@01))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (<
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@363@01
    $Snap.unit) $t@350@01)))
; [eval] 2 <= _2
; [eval] _2 < 18446744073709551615
; [eval] (unfolding acc(m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_(_48.val_ref), read$()) in (unfolding acc(usize(_48.val_ref.f$value), read$()) in _48.val_ref.f$value.val_int)) == (unfolding acc(usize(_11), write) in m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int))
; [eval] (unfolding acc(m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_(_48.val_ref), read$()) in (unfolding acc(usize(_48.val_ref.f$value), read$()) in _48.val_ref.f$value.val_int))
; [eval] read$()
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
; [eval] read$()
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@289@01 ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@372@01 ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01)))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ret@372@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01)))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ret@372@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [eval] (unfolding acc(usize(_48.val_ref.f$value), read$()) in _48.val_ref.f$value.val_int)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [eval] read$()
(set-option :timeout 0)
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
; [eval] read$()
(push) ; 9
(pop) ; 9
; Joined path conditions
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= self.val_int
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(pop) ; 8
; Joined path conditions
(pop) ; 7
; Joined path conditions
; [eval] (unfolding acc(usize(_11), write) in m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int))
(set-option :timeout 0)
(push) ; 7
; [eval] 0 <= self.val_int
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int)
(push) ; 8
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
; [eval] read$()
(push) ; 9
(pop) ; 9
; Joined path conditions
(push) ; 9
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 9
; [eval] read$()
(push) ; 10
(pop) ; 10
; Joined path conditions
(push) ; 10
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(pop) ; 9
; Joined path conditions
; [eval] 0 <= _pure_2
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))
(pop) ; 8
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))
(pop) ; 7
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))
(set-option :timeout 0)
(push) ; 7
(assert (not (=
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
    $t@363@01
    ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
    $t@363@01
    ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))
; [eval] (unfolding acc(m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_(_48.val_ref), read$()) in (unfolding acc(usize(_48.val_ref.f$weight), read$()) in _48.val_ref.f$weight.val_int)) == (unfolding acc(usize(_11), write) in m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int))
; [eval] (unfolding acc(m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_(_48.val_ref), read$()) in (unfolding acc(usize(_48.val_ref.f$weight), read$()) in _48.val_ref.f$weight.val_int))
; [eval] read$()
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
; [eval] read$()
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@289@01 ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@372@01 ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01)))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ret@372@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01)))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ret@372@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [eval] (unfolding acc(usize(_48.val_ref.f$weight), read$()) in _48.val_ref.f$weight.val_int)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [eval] read$()
(set-option :timeout 0)
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
; [eval] read$()
(push) ; 9
(pop) ; 9
; Joined path conditions
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= self.val_int
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(pop) ; 8
; Joined path conditions
(pop) ; 7
; Joined path conditions
; [eval] (unfolding acc(usize(_11), write) in m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int))
(set-option :timeout 0)
(push) ; 7
; [eval] 0 <= self.val_int
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int)
(push) ; 8
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
; [eval] read$()
(push) ; 9
(pop) ; 9
; Joined path conditions
(push) ; 9
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 9
; [eval] read$()
(push) ; 10
(pop) ; 10
; Joined path conditions
(push) ; 10
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(pop) ; 9
; Joined path conditions
; [eval] 0 <= _pure_2
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))
(pop) ; 8
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))
(pop) ; 7
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))
(set-option :timeout 0)
(push) ; 7
(assert (not (=
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
    $t@363@01
    ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
    $t@363@01
    ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@350@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))
; [eval] (forall ii: Int, wi: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0)
(declare-const ii@383@01 Int)
(declare-const wi@384@01 Int)
(push) ; 7
; [eval] 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0
; [eval] 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)))
; [eval] 0 <= ii
(push) ; 8
; [then-branch: 40 | !(0 <= ii@383@01) | live]
; [else-branch: 40 | 0 <= ii@383@01 | live]
(push) ; 9
; [then-branch: 40 | !(0 <= ii@383@01)]
(assert (not (<= 0 ii@383@01)))
(pop) ; 9
(push) ; 9
; [else-branch: 40 | 0 <= ii@383@01]
(assert (<= 0 ii@383@01))
; [eval] ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(pop) ; 10
; Joined path conditions
(set-option :timeout 0)
(push) ; 10
; [then-branch: 41 | !(ii@383@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)) | live]
; [else-branch: 41 | ii@383@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) | live]
(push) ; 11
; [then-branch: 41 | !(ii@383@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01))]
(assert (not
  (<
    ii@383@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))))
(pop) ; 11
(push) ; 11
; [else-branch: 41 | ii@383@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)]
(assert (<
  ii@383@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= wi
(push) ; 12
; [then-branch: 42 | !(0 <= wi@384@01) | live]
; [else-branch: 42 | 0 <= wi@384@01 | live]
(push) ; 13
; [then-branch: 42 | !(0 <= wi@384@01)]
(assert (not (<= 0 wi@384@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 42 | 0 <= wi@384@01]
(assert (<= 0 wi@384@01))
; [eval] wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 14
; [eval] read$()
(push) ; 15
(pop) ; 15
; Joined path conditions
(push) ; 15
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(push) ; 15
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(pop) ; 14
; Joined path conditions
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 wi@384@01) (not (<= 0 wi@384@01))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    ii@383@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))
  (and
    (<
      ii@383@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (or (<= 0 wi@384@01) (not (<= 0 wi@384@01))))))
(assert (or
  (<
    ii@383@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))
  (not
    (<
      ii@383@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01)))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 ii@383@01)
  (and
    (<= 0 ii@383@01)
    (=>
      (<
        ii@383@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))
      (and
        (<
          ii@383@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (or (<= 0 wi@384@01) (not (<= 0 wi@384@01)))))
    (or
      (<
        ii@383@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))
      (not
        (<
          ii@383@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))))
(assert (or (<= 0 ii@383@01) (not (<= 0 ii@383@01))))
(set-option :timeout 0)
(push) ; 8
; [then-branch: 43 | 0 <= ii@383@01 && ii@383@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) && 0 <= wi@384@01 && wi@384@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) | live]
; [else-branch: 43 | !(0 <= ii@383@01 && ii@383@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) && 0 <= wi@384@01 && wi@384@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)) | live]
(push) ; 9
; [then-branch: 43 | 0 <= ii@383@01 && ii@383@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) && 0 <= wi@384@01 && wi@384@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)]
(assert (and
  (<= 0 ii@383@01)
  (and
    (<
      ii@383@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (and
      (<= 0 wi@384@01)
      (<
        wi@384@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(pop) ; 11
; Joined path conditions
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(pop) ; 11
; Joined path conditions
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@383@01 wi@384@01))
(pop) ; 10
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@383@01 wi@384@01))
(pop) ; 9
(set-option :timeout 0)
(push) ; 9
; [else-branch: 43 | !(0 <= ii@383@01 && ii@383@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) && 0 <= wi@384@01 && wi@384@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01))]
(assert (not
  (and
    (<= 0 ii@383@01)
    (and
      (<
        ii@383@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@384@01)
        (<
          wi@384@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
(assert (=>
  (and
    (<= 0 ii@383@01)
    (and
      (<
        ii@383@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@384@01)
        (<
          wi@384@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))
  (and
    (<= 0 ii@383@01)
    (<
      ii@383@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (<= 0 wi@384@01)
    (<
      wi@384@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@383@01 wi@384@01))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 ii@383@01)
      (and
        (<
          ii@383@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (and
          (<= 0 wi@384@01)
          (<
            wi@384@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))))))
  (and
    (<= 0 ii@383@01)
    (and
      (<
        ii@383@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@384@01)
        (<
          wi@384@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))))
(pop) ; 7
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((ii@383@01 Int) (wi@384@01 Int)) (!
  (and
    (=>
      (<= 0 ii@383@01)
      (and
        (<= 0 ii@383@01)
        (=>
          (<
            ii@383@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (and
            (<
              ii@383@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))
            (or (<= 0 wi@384@01) (not (<= 0 wi@384@01)))))
        (or
          (<
            ii@383@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (not
            (<
              ii@383@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))))))
    (or (<= 0 ii@383@01) (not (<= 0 ii@383@01)))
    (=>
      (and
        (<= 0 ii@383@01)
        (and
          (<
            ii@383@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@384@01)
            (<
              wi@384@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))
      (and
        (<= 0 ii@383@01)
        (<
          ii@383@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (<= 0 wi@384@01)
        (<
          wi@384@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@383@01 wi@384@01)))
    (or
      (not
        (and
          (<= 0 ii@383@01)
          (and
            (<
              ii@383@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))
            (and
              (<= 0 wi@384@01)
              (<
                wi@384@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01))))))
      (and
        (<= 0 ii@383@01)
        (and
          (<
            ii@383@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@384@01)
            (<
              wi@384@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@383@01 wi@384@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@2100@3464@2725-aux|)))
(assert (forall ((ii@383@01 Int) (wi@384@01 Int)) (!
  (and
    (=>
      (<= 0 ii@383@01)
      (and
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01)
        (=>
          (and
            (<
              ii@383@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))
            (<= 0 wi@384@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))))
    (=>
      (and
        (<= 0 ii@383@01)
        (and
          (<
            ii@383@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@384@01)
            (<
              wi@384@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@383@01 wi@384@01)))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@383@01 wi@384@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@2100@3464@2725_precondition|)))
(push) ; 7
(assert (not (forall ((ii@383@01 Int) (wi@384@01 Int)) (!
  (=>
    (and
      (and
        (=>
          (<= 0 ii@383@01)
          (and
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01)
            (=>
              (and
                (<
                  ii@383@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))
                (<= 0 wi@384@01))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))))
        (=>
          (and
            (<= 0 ii@383@01)
            (and
              (<
                ii@383@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01))
              (and
                (<= 0 wi@384@01)
                (<
                  wi@384@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01)))))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@383@01 wi@384@01)))
      (and
        (<= 0 ii@383@01)
        (and
          (<
            ii@383@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@384@01)
            (<
              wi@384@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))))))
    (>=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@383@01 wi@384@01)
      0))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@383@01 wi@384@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@2100@3464@2725|))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (forall ((ii@383@01 Int) (wi@384@01 Int)) (!
  (=>
    (and
      (<= 0 ii@383@01)
      (and
        (<
          ii@383@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (and
          (<= 0 wi@384@01)
          (<
            wi@384@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01)))))
    (>=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@383@01 wi@384@01)
      0))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@383@01 wi@384@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@2100@3464@2725|)))
; [eval] (unfolding acc(usize(_11), write) in (forall ii: Int, wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)))
(push) ; 7
; [eval] 0 <= self.val_int
; [eval] (forall ii: Int, wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi))
(declare-const ii@385@01 Int)
(declare-const wi@386@01 Int)
(push) ; 8
; [eval] 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
; [eval] 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)))
; [eval] 0 <= ii
(push) ; 9
; [then-branch: 44 | !(0 <= ii@385@01) | live]
; [else-branch: 44 | 0 <= ii@385@01 | live]
(push) ; 10
; [then-branch: 44 | !(0 <= ii@385@01)]
(assert (not (<= 0 ii@385@01)))
(pop) ; 10
(push) ; 10
; [else-branch: 44 | 0 <= ii@385@01]
(assert (<= 0 ii@385@01))
; [eval] ii <= _11.val_int
(push) ; 11
; [then-branch: 45 | !(ii@385@01 <= First:(First:($t@349@01))) | live]
; [else-branch: 45 | ii@385@01 <= First:(First:($t@349@01)) | live]
(push) ; 12
; [then-branch: 45 | !(ii@385@01 <= First:(First:($t@349@01)))]
(assert (not
  (<= ii@385@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))
(pop) ; 12
(push) ; 12
; [else-branch: 45 | ii@385@01 <= First:(First:($t@349@01))]
(assert (<= ii@385@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))
; [eval] 0 <= wi
(push) ; 13
; [then-branch: 46 | !(0 <= wi@386@01) | live]
; [else-branch: 46 | 0 <= wi@386@01 | live]
(push) ; 14
; [then-branch: 46 | !(0 <= wi@386@01)]
(assert (not (<= 0 wi@386@01)))
(pop) ; 14
(push) ; 14
; [else-branch: 46 | 0 <= wi@386@01]
(assert (<= 0 wi@386@01))
; [eval] wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 15
; [eval] read$()
(push) ; 16
(pop) ; 16
; Joined path conditions
(push) ; 16
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(push) ; 16
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(pop) ; 15
; Joined path conditions
(pop) ; 14
(pop) ; 13
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 wi@386@01) (not (<= 0 wi@386@01))))
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= ii@385@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
  (and
    (<=
      ii@385@01
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
    (or (<= 0 wi@386@01) (not (<= 0 wi@386@01))))))
(assert (or
  (<= ii@385@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
  (not
    (<=
      ii@385@01
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 ii@385@01)
  (and
    (<= 0 ii@385@01)
    (=>
      (<=
        ii@385@01
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
      (and
        (<=
          ii@385@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
        (or (<= 0 wi@386@01) (not (<= 0 wi@386@01)))))
    (or
      (<=
        ii@385@01
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
      (not
        (<=
          ii@385@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))))))))
(assert (or (<= 0 ii@385@01) (not (<= 0 ii@385@01))))
(set-option :timeout 0)
(push) ; 9
; [then-branch: 47 | 0 <= ii@385@01 && ii@385@01 <= First:(First:($t@349@01)) && 0 <= wi@386@01 && wi@386@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) | live]
; [else-branch: 47 | !(0 <= ii@385@01 && ii@385@01 <= First:(First:($t@349@01)) && 0 <= wi@386@01 && wi@386@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)) | live]
(push) ; 10
; [then-branch: 47 | 0 <= ii@385@01 && ii@385@01 <= First:(First:($t@349@01)) && 0 <= wi@386@01 && wi@386@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)]
(assert (and
  (<= 0 ii@385@01)
  (and
    (<=
      ii@385@01
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
    (and
      (<= 0 wi@386@01)
      (<
        wi@386@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))))))
; [eval] m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
; [eval] m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 12
; [eval] read$()
(push) ; 13
(pop) ; 13
; Joined path conditions
(push) ; 13
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(push) ; 13
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(push) ; 13
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(pop) ; 12
; Joined path conditions
(set-option :timeout 0)
(push) ; 12
(assert (not (<=
  ii@385@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@363@01
    $Snap.unit) $t@350@01))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (<=
  ii@385@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@363@01
    $Snap.unit) $t@350@01)))
; [eval] 0 <= _pure_3
; [eval] _pure_3 <= _pure_4
(push) ; 12
(assert (not (<= wi@386@01 _2@101@01)))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (<= wi@386@01 _2@101@01))
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
; [eval] 0 <= _pure_4
(push) ; 12
(assert (not (<= 0 _2@101@01)))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 _2@101@01))
(assert (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01))
(pop) ; 11
; Joined path conditions
(assert (and
  (<=
    ii@385@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@363@01
      $Snap.unit) $t@350@01))
  (<= wi@386@01 _2@101@01)
  (<= 0 _2@101@01)
  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
    $t@363@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01)))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 12
; [eval] read$()
(push) ; 13
(pop) ; 13
; Joined path conditions
(push) ; 13
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(push) ; 13
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(pop) ; 12
; Joined path conditions
(set-option :timeout 0)
(push) ; 12
(assert (not (<
  ii@385@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (<
  ii@385@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(push) ; 12
; [eval] read$()
(push) ; 13
(pop) ; 13
; Joined path conditions
(push) ; 13
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(push) ; 13
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(pop) ; 12
; Joined path conditions
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01))
(pop) ; 11
; Joined path conditions
(assert (and
  (<
    ii@385@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01)))
(pop) ; 10
(set-option :timeout 0)
(push) ; 10
; [else-branch: 47 | !(0 <= ii@385@01 && ii@385@01 <= First:(First:($t@349@01)) && 0 <= wi@386@01 && wi@386@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01))]
(assert (not
  (and
    (<= 0 ii@385@01)
    (and
      (<=
        ii@385@01
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
      (and
        (<= 0 wi@386@01)
        (<
          wi@386@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))))
(pop) ; 10
(pop) ; 9
; Joined path conditions
(assert (=>
  (and
    (<= 0 ii@385@01)
    (and
      (<=
        ii@385@01
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
      (and
        (<= 0 wi@386@01)
        (<
          wi@386@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))
  (and
    (<= 0 ii@385@01)
    (<=
      ii@385@01
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
    (<= 0 wi@386@01)
    (<
      wi@386@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (<=
      ii@385@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@363@01
        $Snap.unit) $t@350@01))
    (<= wi@386@01 _2@101@01)
    (<= 0 _2@101@01)
    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
      $t@363@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01)
    (<
      ii@385@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 ii@385@01)
      (and
        (<=
          ii@385@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
        (and
          (<= 0 wi@386@01)
          (<
            wi@386@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))))))
  (and
    (<= 0 ii@385@01)
    (and
      (<=
        ii@385@01
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
      (and
        (<= 0 wi@386@01)
        (<
          wi@386@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))))
(pop) ; 8
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((ii@385@01 Int) (wi@386@01 Int)) (!
  (and
    (=>
      (<= 0 ii@385@01)
      (and
        (<= 0 ii@385@01)
        (=>
          (<=
            ii@385@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (and
            (<=
              ii@385@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (or (<= 0 wi@386@01) (not (<= 0 wi@386@01)))))
        (or
          (<=
            ii@385@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (not
            (<=
              ii@385@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
    (or (<= 0 ii@385@01) (not (<= 0 ii@385@01)))
    (=>
      (and
        (<= 0 ii@385@01)
        (and
          (<=
            ii@385@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (and
            (<= 0 wi@386@01)
            (<
              wi@386@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))
      (and
        (<= 0 ii@385@01)
        (<=
          ii@385@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
        (<= 0 wi@386@01)
        (<
          wi@386@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (<=
          ii@385@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@363@01
            $Snap.unit) $t@350@01))
        (<= wi@386@01 _2@101@01)
        (<= 0 _2@101@01)
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01)
        (<
          ii@385@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01)))
    (or
      (not
        (and
          (<= 0 ii@385@01)
          (and
            (<=
              ii@385@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (and
              (<= 0 wi@386@01)
              (<
                wi@386@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01))))))
      (and
        (<= 0 ii@385@01)
        (and
          (<=
            ii@385@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (and
            (<= 0 wi@386@01)
            (<
              wi@386@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
    $t@363@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@2769@3464@3367-aux|)))
(assert (forall ((ii@385@01 Int) (wi@386@01 Int)) (!
  (and
    (=>
      (<= 0 ii@385@01)
      (and
        (<= 0 ii@385@01)
        (=>
          (<=
            ii@385@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (and
            (<=
              ii@385@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (or (<= 0 wi@386@01) (not (<= 0 wi@386@01)))))
        (or
          (<=
            ii@385@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (not
            (<=
              ii@385@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
    (or (<= 0 ii@385@01) (not (<= 0 ii@385@01)))
    (=>
      (and
        (<= 0 ii@385@01)
        (and
          (<=
            ii@385@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (and
            (<= 0 wi@386@01)
            (<
              wi@386@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))
      (and
        (<= 0 ii@385@01)
        (<=
          ii@385@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
        (<= 0 wi@386@01)
        (<
          wi@386@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (<=
          ii@385@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@363@01
            $Snap.unit) $t@350@01))
        (<= wi@386@01 _2@101@01)
        (<= 0 _2@101@01)
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01)
        (<
          ii@385@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01)))
    (or
      (not
        (and
          (<= 0 ii@385@01)
          (and
            (<=
              ii@385@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (and
              (<= 0 wi@386@01)
              (<
                wi@386@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01))))))
      (and
        (<= 0 ii@385@01)
        (and
          (<=
            ii@385@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (and
            (<= 0 wi@386@01)
            (<
              wi@386@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@2769@3464@3367-aux|)))
(pop) ; 7
; Joined path conditions
(assert (and
  (forall ((ii@385@01 Int) (wi@386@01 Int)) (!
    (and
      (=>
        (<= 0 ii@385@01)
        (and
          (<= 0 ii@385@01)
          (=>
            (<=
              ii@385@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (and
              (<=
                ii@385@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (or (<= 0 wi@386@01) (not (<= 0 wi@386@01)))))
          (or
            (<=
              ii@385@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (not
              (<=
                ii@385@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
      (or (<= 0 ii@385@01) (not (<= 0 ii@385@01)))
      (=>
        (and
          (<= 0 ii@385@01)
          (and
            (<=
              ii@385@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (and
              (<= 0 wi@386@01)
              (<
                wi@386@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01)))))
        (and
          (<= 0 ii@385@01)
          (<=
            ii@385@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (<= 0 wi@386@01)
          (<
            wi@386@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (<=
            ii@385@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@350@01))
          (<= wi@386@01 _2@101@01)
          (<= 0 _2@101@01)
          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
            $t@363@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01)
          (<
            ii@385@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01)))
      (or
        (not
          (and
            (<= 0 ii@385@01)
            (and
              (<=
                ii@385@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (and
                (<= 0 wi@386@01)
                (<
                  wi@386@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))))))
        (and
          (<= 0 ii@385@01)
          (and
            (<=
              ii@385@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (and
              (<= 0 wi@386@01)
              (<
                wi@386@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01)))))))
    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
      $t@363@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@2769@3464@3367-aux|))
  (forall ((ii@385@01 Int) (wi@386@01 Int)) (!
    (and
      (=>
        (<= 0 ii@385@01)
        (and
          (<= 0 ii@385@01)
          (=>
            (<=
              ii@385@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (and
              (<=
                ii@385@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (or (<= 0 wi@386@01) (not (<= 0 wi@386@01)))))
          (or
            (<=
              ii@385@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (not
              (<=
                ii@385@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))))))
      (or (<= 0 ii@385@01) (not (<= 0 ii@385@01)))
      (=>
        (and
          (<= 0 ii@385@01)
          (and
            (<=
              ii@385@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (and
              (<= 0 wi@386@01)
              (<
                wi@386@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01)))))
        (and
          (<= 0 ii@385@01)
          (<=
            ii@385@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (<= 0 wi@386@01)
          (<
            wi@386@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (<=
            ii@385@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@350@01))
          (<= wi@386@01 _2@101@01)
          (<= 0 _2@101@01)
          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
            $t@363@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01)
          (<
            ii@385@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01)))
      (or
        (not
          (and
            (<= 0 ii@385@01)
            (and
              (<=
                ii@385@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (and
                (<= 0 wi@386@01)
                (<
                  wi@386@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01))))))
        (and
          (<= 0 ii@385@01)
          (and
            (<=
              ii@385@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
            (and
              (<= 0 wi@386@01)
              (<
                wi@386@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                  $Snap.unit) ret@230@01)))))))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@2769@3464@3367-aux|))))
(assert (forall ((ii@385@01 Int) (wi@386@01 Int)) (!
  (and
    (=>
      (and
        (<= 0 ii@385@01)
        (and
          (<=
            ii@385@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (<= 0 wi@386@01)))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (=>
      (and
        (<= 0 ii@385@01)
        (and
          (<=
            ii@385@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (and
            (<= 0 wi@386@01)
            (<
              wi@386@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))))
      (and
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01))))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
    $t@363@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@2769@3464@3367_precondition|)))
(push) ; 7
(assert (not (forall ((ii@385@01 Int) (wi@386@01 Int)) (!
  (=>
    (and
      (and
        (=>
          (and
            (<= 0 ii@385@01)
            (and
              (<=
                ii@385@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (<= 0 wi@386@01)))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (=>
          (and
            (<= 0 ii@385@01)
            (and
              (<=
                ii@385@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
              (and
                (<= 0 wi@386@01)
                (<
                  wi@386@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                    $Snap.unit) ret@230@01)))))
          (and
            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
              $t@363@01
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01))))
      (and
        (<= 0 ii@385@01)
        (and
          (<=
            ii@385@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
          (and
            (<= 0 wi@386@01)
            (<
              wi@386@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01))))))
    (=
      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01)))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
    $t@363@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@2769@3464@3367|))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (forall ((ii@385@01 Int) (wi@386@01 Int)) (!
  (=>
    (and
      (<= 0 ii@385@01)
      (and
        (<=
          ii@385@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))))
        (and
          (<= 0 wi@386@01)
          (<
            wi@386@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01)))))
    (=
      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01)))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
    $t@363@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 ii@385@01 wi@386@01 _2@101@01))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@385@01 wi@386@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@2769@3464@3367|)))
; [eval] (unfolding acc(usize(_51), write) in (unfolding acc(usize(_11), write) in (let _LET_0 == (_11.val_int + 1) in (forall wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _LET_0, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _LET_0, wi) } 0 <= wi && wi < _51.val_int ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _LET_0, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _LET_0, wi)))))
(push) ; 7
; [eval] 0 <= self.val_int
; [eval] (unfolding acc(usize(_11), write) in (let _LET_0 == (_11.val_int + 1) in (forall wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _LET_0, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _LET_0, wi) } 0 <= wi && wi < _51.val_int ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _LET_0, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _LET_0, wi))))
(push) ; 8
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@372@01 ret@289@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= self.val_int
; [eval] (let _LET_0 == (_11.val_int + 1) in (forall wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _LET_0, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _LET_0, wi) } 0 <= wi && wi < _51.val_int ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _LET_0, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _LET_0, wi)))
; [eval] _11.val_int + 1
(declare-const letvar@387@01 Int)
(assert (=
  (as letvar@387@01  Int)
  (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1)))
; [eval] (forall wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _LET_0, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _LET_0, wi) } 0 <= wi && wi < _51.val_int ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _LET_0, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _LET_0, wi))
(declare-const wi@388@01 Int)
(set-option :timeout 0)
(push) ; 9
; [eval] 0 <= wi && wi < _51.val_int ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _LET_0, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _LET_0, wi)
; [eval] 0 <= wi && wi < _51.val_int
; [eval] 0 <= wi
(push) ; 10
; [then-branch: 48 | !(0 <= wi@388@01) | live]
; [else-branch: 48 | 0 <= wi@388@01 | live]
(push) ; 11
; [then-branch: 48 | !(0 <= wi@388@01)]
(assert (not (<= 0 wi@388@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 48 | 0 <= wi@388@01]
(assert (<= 0 wi@388@01))
; [eval] wi < _51.val_int
(pop) ; 11
(pop) ; 10
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 wi@388@01) (not (<= 0 wi@388@01))))
(push) ; 10
; [then-branch: 49 | 0 <= wi@388@01 && wi@388@01 < 1 | live]
; [else-branch: 49 | !(0 <= wi@388@01 && wi@388@01 < 1) | live]
(push) ; 11
; [then-branch: 49 | 0 <= wi@388@01 && wi@388@01 < 1]
(assert (and (<= 0 wi@388@01) (< wi@388@01 1)))
; [eval] m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _LET_0, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _LET_0, wi)
; [eval] m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _LET_0, wi, _2)
(push) ; 12
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
; [eval] read$()
(push) ; 13
(pop) ; 13
; Joined path conditions
(push) ; 13
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(push) ; 13
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 13
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(push) ; 13
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
(set-option :timeout 0)
(push) ; 13
(assert (not (<= 0 (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1)))
; [eval] _pure_2 <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(push) ; 13
; [eval] read$()
(push) ; 14
(pop) ; 14
; Joined path conditions
(push) ; 14
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(push) ; 14
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@350@01)))
(check-sat)
; unsat
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 14
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(push) ; 14
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(pop) ; 13
; Joined path conditions
(set-option :timeout 0)
(push) ; 13
(assert (not (<=
  (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@363@01
    $Snap.unit) $t@350@01))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(assert (<=
  (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@363@01
    $Snap.unit) $t@350@01)))
; [eval] 0 <= _pure_3
; [eval] _pure_3 <= _pure_4
(push) ; 13
(assert (not (<= wi@388@01 _2@101@01)))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(assert (<= wi@388@01 _2@101@01))
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
; [eval] 0 <= _pure_4
(push) ; 13
(assert (not (<= 0 _2@101@01)))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 _2@101@01))
(assert (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
  1) wi@388@01 _2@101@01))
(pop) ; 12
; Joined path conditions
(assert (and
  (<= 0 (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1))
  (<=
    (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@363@01
      $Snap.unit) $t@350@01))
  (<= wi@388@01 _2@101@01)
  (<= 0 _2@101@01)
  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
    $t@363@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    1) wi@388@01 _2@101@01)))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _LET_0, wi)
(push) ; 12
; [eval] read$()
(push) ; 13
(pop) ; 13
; Joined path conditions
(push) ; 13
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(push) ; 13
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 13
; [eval] read$()
(push) ; 14
(pop) ; 14
; Joined path conditions
(push) ; 14
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(push) ; 14
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(pop) ; 13
; Joined path conditions
(set-option :timeout 0)
(push) ; 13
(assert (not (<
  (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(assert (<
  (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(push) ; 13
; [eval] read$()
(push) ; 14
(pop) ; 14
; Joined path conditions
(push) ; 14
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(push) ; 14
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(pop) ; 13
; Joined path conditions
(set-option :timeout 0)
(push) ; 13
(assert (not (<
  wi@388@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(assert (<
  wi@388@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
  1) wi@388@01))
(pop) ; 12
; Joined path conditions
(assert (and
  (<
    (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))
  (<
    wi@388@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    1) wi@388@01)))
(pop) ; 11
(push) ; 11
; [else-branch: 49 | !(0 <= wi@388@01 && wi@388@01 < 1)]
(assert (not (and (<= 0 wi@388@01) (< wi@388@01 1))))
(pop) ; 11
(pop) ; 10
; Joined path conditions
(assert (=>
  (and (<= 0 wi@388@01) (< wi@388@01 1))
  (and
    (<= 0 wi@388@01)
    (< wi@388@01 1)
    (<= 0 (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1))
    (<=
      (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@363@01
        $Snap.unit) $t@350@01))
    (<= wi@388@01 _2@101@01)
    (<= 0 _2@101@01)
    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
      $t@363@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
      1) wi@388@01 _2@101@01)
    (<
      (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (<
      wi@388@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
      1) wi@388@01))))
; Joined path conditions
(assert (or
  (not (and (<= 0 wi@388@01) (< wi@388@01 1)))
  (and (<= 0 wi@388@01) (< wi@388@01 1))))
(pop) ; 9
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((wi@388@01 Int)) (!
  (and
    (or (<= 0 wi@388@01) (not (<= 0 wi@388@01)))
    (=>
      (and (<= 0 wi@388@01) (< wi@388@01 1))
      (and
        (<= 0 wi@388@01)
        (< wi@388@01 1)
        (<=
          0
          (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1))
        (<=
          (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@363@01
            $Snap.unit) $t@350@01))
        (<= wi@388@01 _2@101@01)
        (<= 0 _2@101@01)
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
          1) wi@388@01 _2@101@01)
        (<
          (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (<
          wi@388@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
          1) wi@388@01)))
    (or
      (not (and (<= 0 wi@388@01) (< wi@388@01 1)))
      (and (<= 0 wi@388@01) (< wi@388@01 1))))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
    $t@363@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    1) wi@388@01 _2@101@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@3485@3464@3879-aux|)))
(assert (forall ((wi@388@01 Int)) (!
  (and
    (or (<= 0 wi@388@01) (not (<= 0 wi@388@01)))
    (=>
      (and (<= 0 wi@388@01) (< wi@388@01 1))
      (and
        (<= 0 wi@388@01)
        (< wi@388@01 1)
        (<=
          0
          (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1))
        (<=
          (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@363@01
            $Snap.unit) $t@350@01))
        (<= wi@388@01 _2@101@01)
        (<= 0 _2@101@01)
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
          1) wi@388@01 _2@101@01)
        (<
          (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (<
          wi@388@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
          1) wi@388@01)))
    (or
      (not (and (<= 0 wi@388@01) (< wi@388@01 1)))
      (and (<= 0 wi@388@01) (< wi@388@01 1))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    1) wi@388@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@3485@3464@3879-aux|)))
(pop) ; 8
; Joined path conditions
(assert (and
  (=
    (as letvar@387@01  Int)
    (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1))
  (forall ((wi@388@01 Int)) (!
    (and
      (or (<= 0 wi@388@01) (not (<= 0 wi@388@01)))
      (=>
        (and (<= 0 wi@388@01) (< wi@388@01 1))
        (and
          (<= 0 wi@388@01)
          (< wi@388@01 1)
          (<=
            0
            (+
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              1))
          (<=
            (+
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@350@01))
          (<= wi@388@01 _2@101@01)
          (<= 0 _2@101@01)
          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
            $t@363@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
            1) wi@388@01 _2@101@01)
          (<
            (+
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (<
            wi@388@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
            1) wi@388@01)))
      (or
        (not (and (<= 0 wi@388@01) (< wi@388@01 1)))
        (and (<= 0 wi@388@01) (< wi@388@01 1))))
    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
      $t@363@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
      1) wi@388@01 _2@101@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@3485@3464@3879-aux|))
  (forall ((wi@388@01 Int)) (!
    (and
      (or (<= 0 wi@388@01) (not (<= 0 wi@388@01)))
      (=>
        (and (<= 0 wi@388@01) (< wi@388@01 1))
        (and
          (<= 0 wi@388@01)
          (< wi@388@01 1)
          (<=
            0
            (+
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              1))
          (<=
            (+
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@350@01))
          (<= wi@388@01 _2@101@01)
          (<= 0 _2@101@01)
          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
            $t@363@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
            1) wi@388@01 _2@101@01)
          (<
            (+
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (<
            wi@388@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
            1) wi@388@01)))
      (or
        (not (and (<= 0 wi@388@01) (< wi@388@01 1)))
        (and (<= 0 wi@388@01) (< wi@388@01 1))))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
      1) wi@388@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@3485@3464@3879-aux|))))
(pop) ; 7
; Joined path conditions
(assert (and
  (=
    (as letvar@387@01  Int)
    (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01))) 1))
  (forall ((wi@388@01 Int)) (!
    (and
      (or (<= 0 wi@388@01) (not (<= 0 wi@388@01)))
      (=>
        (and (<= 0 wi@388@01) (< wi@388@01 1))
        (and
          (<= 0 wi@388@01)
          (< wi@388@01 1)
          (<=
            0
            (+
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              1))
          (<=
            (+
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@350@01))
          (<= wi@388@01 _2@101@01)
          (<= 0 _2@101@01)
          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
            $t@363@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
            1) wi@388@01 _2@101@01)
          (<
            (+
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (<
            wi@388@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
            1) wi@388@01)))
      (or
        (not (and (<= 0 wi@388@01) (< wi@388@01 1)))
        (and (<= 0 wi@388@01) (< wi@388@01 1))))
    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
      $t@363@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
      1) wi@388@01 _2@101@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@3485@3464@3879-aux|))
  (forall ((wi@388@01 Int)) (!
    (and
      (or (<= 0 wi@388@01) (not (<= 0 wi@388@01)))
      (=>
        (and (<= 0 wi@388@01) (< wi@388@01 1))
        (and
          (<= 0 wi@388@01)
          (< wi@388@01 1)
          (<=
            0
            (+
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              1))
          (<=
            (+
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@350@01))
          (<= wi@388@01 _2@101@01)
          (<= 0 _2@101@01)
          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
            $t@363@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
            1) wi@388@01 _2@101@01)
          (<
            (+
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (<
            wi@388@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
            1) wi@388@01)))
      (or
        (not (and (<= 0 wi@388@01) (< wi@388@01 1)))
        (and (<= 0 wi@388@01) (< wi@388@01 1))))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
      1) wi@388@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@3485@3464@3879-aux|))))
(assert (forall ((wi@388@01 Int)) (!
  (=>
    (and (<= 0 wi@388@01) (< wi@388@01 1))
    (and
      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
        $t@363@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
        1) wi@388@01 _2@101@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
        1) wi@388@01)))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
    $t@363@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    1) wi@388@01 _2@101@01))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    1) wi@388@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@3485@3464@3879_precondition|)))
(push) ; 7
(assert (not (forall ((wi@388@01 Int)) (!
  (=>
    (and
      (=>
        (and (<= 0 wi@388@01) (< wi@388@01 1))
        (and
          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
            $t@363@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
            1) wi@388@01 _2@101@01)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
            1) wi@388@01)))
      (and (<= 0 wi@388@01) (< wi@388@01 1)))
    (=
      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
        1) wi@388@01 _2@101@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
        1) wi@388@01)))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
    $t@363@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    1) wi@388@01 _2@101@01))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    1) wi@388@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@3485@3464@3879|))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (forall ((wi@388@01 Int)) (!
  (=>
    (and (<= 0 wi@388@01) (< wi@388@01 1))
    (=
      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
        1) wi@388@01 _2@101@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
        1) wi@388@01)))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
    $t@363@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@350@01 (+
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    1) wi@388@01 _2@101@01))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@349@01)))
    1) wi@388@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@3485@3464@3879|)))
; [eval] (forall ii: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) } 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0)
(declare-const ii@389@01 Int)
(push) ; 7
; [eval] 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0
; [eval] 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] 0 <= ii
(push) ; 8
; [then-branch: 50 | !(0 <= ii@389@01) | live]
; [else-branch: 50 | 0 <= ii@389@01 | live]
(push) ; 9
; [then-branch: 50 | !(0 <= ii@389@01)]
(assert (not (<= 0 ii@389@01)))
(pop) ; 9
(push) ; 9
; [else-branch: 50 | 0 <= ii@389@01]
(assert (<= 0 ii@389@01))
; [eval] ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(pop) ; 10
; Joined path conditions
(pop) ; 9
(pop) ; 8
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 ii@389@01) (not (<= 0 ii@389@01))))
(set-option :timeout 0)
(push) ; 8
; [then-branch: 51 | 0 <= ii@389@01 && ii@389@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01) | live]
; [else-branch: 51 | !(0 <= ii@389@01 && ii@389@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)) | live]
(push) ; 9
; [then-branch: 51 | 0 <= ii@389@01 && ii@389@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01)]
(assert (and
  (<= 0 ii@389@01)
  (<
    ii@389@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(pop) ; 11
; Joined path conditions
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(pop) ; 11
; Joined path conditions
(set-option :timeout 0)
(push) ; 11
(assert (not (<
  0
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (<
  0
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@389@01 0))
(pop) ; 10
; Joined path conditions
(assert (and
  (<
    0
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      $Snap.unit) ret@230@01))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@389@01 0)))
(pop) ; 9
(push) ; 9
; [else-branch: 51 | !(0 <= ii@389@01 && ii@389@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:(Second:($t@349@01))), _), ret@230@01))]
(assert (not
  (and
    (<= 0 ii@389@01)
    (<
      ii@389@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01)))))
(pop) ; 9
(pop) ; 8
; Joined path conditions
(assert (=>
  (and
    (<= 0 ii@389@01)
    (<
      ii@389@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01)))
  (and
    (<= 0 ii@389@01)
    (<
      ii@389@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (<
      0
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@389@01 0))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 ii@389@01)
      (<
        ii@389@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01))))
  (and
    (<= 0 ii@389@01)
    (<
      ii@389@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01)))))
(pop) ; 7
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((ii@389@01 Int)) (!
  (and
    (or (<= 0 ii@389@01) (not (<= 0 ii@389@01)))
    (=>
      (and
        (<= 0 ii@389@01)
        (<
          ii@389@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))
      (and
        (<= 0 ii@389@01)
        (<
          ii@389@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (<
          0
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@389@01 0)))
    (or
      (not
        (and
          (<= 0 ii@389@01)
          (<
            ii@389@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
              $Snap.unit) ret@230@01))))
      (and
        (<= 0 ii@389@01)
        (<
          ii@389@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@389@01 0))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@3888@3464@4301-aux|)))
(assert (forall ((ii@389@01 Int)) (!
  (and
    (=>
      (<= 0 ii@389@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        $Snap.unit) ret@230@01))
    (=>
      (and
        (<= 0 ii@389@01)
        (<
          ii@389@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01)))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@389@01 0)))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@389@01 0))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@3888@3464@4301_precondition|)))
(push) ; 7
(assert (not (forall ((ii@389@01 Int)) (!
  (=>
    (and
      (and
        (=>
          (<= 0 ii@389@01)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))
        (=>
          (and
            (<= 0 ii@389@01)
            (<
              ii@389@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
                $Snap.unit) ret@230@01)))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@389@01 0)))
      (and
        (<= 0 ii@389@01)
        (<
          ii@389@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
            $Snap.unit) ret@230@01))))
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@389@01 0)
      0))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@389@01 0))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@3888@3464@4301|))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (forall ((ii@389@01 Int)) (!
  (=>
    (and
      (<= 0 ii@389@01)
      (<
        ii@389@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
          $Snap.unit) ret@230@01)))
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@389@01 0)
      0))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@349@01)))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@389@01 0))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3464@3888@3464@4301|)))
; [exec]
; assert _preserve$1 == _1.val_ref && _preserve$2 == _48.val_ref
; [eval] _preserve$1 == _1.val_ref
(push) ; 7
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [eval] _preserve$2 == _48.val_ref
; [exec]
; exhale acc(usize(_51), write) &&
;   (acc(m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_(_3), write) &&
;   (_2 >= 0 &&
;   (acc(_1.val_ref, read$()) &&
;   (acc(usize(_11), read$()) && acc(_48.val_ref, read$())))))
; [eval] _2 >= 0
; [eval] read$()
(set-option :timeout 0)
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(set-option :timeout 10)
(assert (not (=
  (-
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    ($Perm.min
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))
      (read$ $Snap.unit)))
  $Perm.No)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (<=
  $Perm.No
  (-
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    ($Perm.min
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))
      (read$ $Snap.unit)))))
(assert (<=
  (-
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    ($Perm.min
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))
      (read$ $Snap.unit)))
  $Perm.Write))
(assert (=>
  (<
    $Perm.No
    (-
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit))))
  (not (= _1@100@01 $Ref.null))))
(set-option :timeout 0)
(push) ; 7
(assert (not (or
  (=
    (-
      (read$ $Snap.unit)
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    $Perm.No)
  (<
    (-
      (read$ $Snap.unit)
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    $Perm.No))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [eval] read$()
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(set-option :timeout 10)
(assert (not (= (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit))) $Perm.No)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(assert (not (or
  (= (- (read$ $Snap.unit) ($Perm.min $Perm.Write (read$ $Snap.unit))) $Perm.No)
  (< (- (read$ $Snap.unit) ($Perm.min $Perm.Write (read$ $Snap.unit))) $Perm.No))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [eval] read$()
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(set-option :timeout 10)
(assert (not (= (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit))) $Perm.No)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (=>
  (< $Perm.No (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit))))
  (not (= ret@367@01 $Ref.null))))
(set-option :timeout 0)
(push) ; 7
(assert (not (or
  (= (- (read$ $Snap.unit) ($Perm.min $Perm.Write (read$ $Snap.unit))) $Perm.No)
  (< (- (read$ $Snap.unit) ($Perm.min $Perm.Write (read$ $Snap.unit))) $Perm.No))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [exec]
; __t18 := builtin$havoc_bool()
(declare-const ret@390@01 Bool)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; __t22 := builtin$havoc_bool()
(declare-const ret@391@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _119 := builtin$havoc_int()
(declare-const ret@392@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t15 := builtin$havoc_bool()
(declare-const ret@393@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _125 := builtin$havoc_int()
(declare-const ret@394@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t26 := builtin$havoc_bool()
(declare-const ret@395@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _106 := builtin$havoc_int()
(declare-const ret@396@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t17 := builtin$havoc_bool()
(declare-const ret@397@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _109 := builtin$havoc_ref()
(declare-const ret@398@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _133 := builtin$havoc_ref()
(declare-const ret@399@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t62 := builtin$havoc_bool()
(declare-const ret@400@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _129 := builtin$havoc_ref()
(declare-const ret@401@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t64 := builtin$havoc_bool()
(declare-const ret@402@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _136 := builtin$havoc_ref()
(declare-const ret@403@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _110 := builtin$havoc_ref()
(declare-const ret@404@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _117 := builtin$havoc_int()
(declare-const ret@405@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _130 := builtin$havoc_ref()
(declare-const ret@406@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t24 := builtin$havoc_bool()
(declare-const ret@407@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _127 := builtin$havoc_int()
(declare-const ret@408@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _135 := builtin$havoc_ref()
(declare-const ret@409@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _107 := builtin$havoc_int()
(declare-const ret@410@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _54 := builtin$havoc_int()
(declare-const ret@411@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t14 := builtin$havoc_bool()
(declare-const ret@412@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t21 := builtin$havoc_bool()
(declare-const ret@413@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t16 := builtin$havoc_bool()
(declare-const ret@414@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t61 := builtin$havoc_bool()
(declare-const ret@415@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _116 := builtin$havoc_int()
(declare-const ret@416@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t23 := builtin$havoc_bool()
(declare-const ret@417@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _112 := builtin$havoc_int()
(declare-const ret@418@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _53 := builtin$havoc_ref()
(declare-const ret@419@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t13 := builtin$havoc_bool()
(declare-const ret@420@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t58 := builtin$havoc_bool()
(declare-const ret@421@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _128 := builtin$havoc_ref()
(declare-const ret@422@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _118 := builtin$havoc_ref()
(declare-const ret@423@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _115 := builtin$havoc_ref()
(declare-const ret@424@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t20 := builtin$havoc_bool()
(declare-const ret@425@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t60 := builtin$havoc_bool()
(declare-const ret@426@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _131 := builtin$havoc_ref()
(declare-const ret@427@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t12 := builtin$havoc_bool()
(declare-const ret@428@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _18 := builtin$havoc_ref()
(declare-const ret@429@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _134 := builtin$havoc_int()
(declare-const ret@430@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _108 := builtin$havoc_ref()
(declare-const ret@431@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _120 := builtin$havoc_ref()
(declare-const ret@432@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _132 := builtin$havoc_int()
(declare-const ret@433@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _121 := builtin$havoc_ref()
(declare-const ret@434@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _114 := builtin$havoc_ref()
(declare-const ret@435@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t11 := builtin$havoc_bool()
(declare-const ret@436@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _55 := builtin$havoc_int()
(declare-const ret@437@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _113 := builtin$havoc_int()
(declare-const ret@438@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _105 := builtin$havoc_ref()
(declare-const ret@439@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _111 := builtin$havoc_int()
(declare-const ret@440@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _126 := builtin$havoc_ref()
(declare-const ret@441@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t19 := builtin$havoc_bool()
(declare-const ret@442@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _123 := builtin$havoc_ref()
(declare-const ret@443@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _51 := builtin$havoc_ref()
(declare-const ret@444@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _122 := builtin$havoc_int()
(declare-const ret@445@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _124 := builtin$havoc_int()
(declare-const ret@446@01 Int)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t25 := builtin$havoc_bool()
(declare-const ret@447@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _104 := builtin$havoc_ref()
(declare-const ret@448@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t59 := builtin$havoc_bool()
(declare-const ret@449@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; _56 := builtin$havoc_ref()
(declare-const ret@450@01 $Ref)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; __t63 := builtin$havoc_bool()
(declare-const ret@451@01 Bool)
; State saturation: after contract
(check-sat)
; unknown
; [exec]
; label loop9_group3_loop17_inv_post
; [exec]
; inhale acc(usize(_51), write) &&
;   (acc(m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_(_3), write) &&
;   (_2 >= 0 &&
;   (acc(_1.val_ref, read$()) &&
;   (acc(usize(_11), read$()) && acc(_48.val_ref, read$())))))
(declare-const $t@452@01 $Snap)
(assert (= $t@452@01 ($Snap.combine ($Snap.first $t@452@01) ($Snap.second $t@452@01))))
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (= ret@289@01 ret@444@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (=
  ($Snap.second $t@452@01)
  ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    ($Snap.second ($Snap.second $t@452@01)))))
(assert (=
  ($Snap.second ($Snap.second $t@452@01))
  ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second $t@452@01)))
    ($Snap.second ($Snap.second ($Snap.second $t@452@01))))))
(assert (= ($Snap.first ($Snap.second ($Snap.second $t@452@01))) $Snap.unit))
; [eval] _2 >= 0
(assert (=
  ($Snap.second ($Snap.second ($Snap.second $t@452@01)))
  ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@452@01))))
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@452@01)))))))
; [eval] read$()
(set-option :timeout 0)
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(declare-const $t@453@01 $Ref)
(assert (and
  (=>
    (<
      $Perm.No
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit))))
    (= $t@453@01 $t@350@01))
  (=>
    (< $Perm.No (read$ $Snap.unit))
    (=
      $t@453@01
      ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@452@01)))))))))
(assert (<=
  $Perm.No
  (+
    (-
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    (read$ $Snap.unit))))
(assert (<=
  (+
    (-
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    (read$ $Snap.unit))
  $Perm.Write))
(assert (=>
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= _1@100@01 $Ref.null))))
(assert (=
  ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@452@01))))
  ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@452@01)))))
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@452@01))))))))
; [eval] read$()
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(declare-const $t@454@01 $Snap)
(assert (and
  (=>
    (< $Perm.No (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit))))
    (=
      $t@454@01
      ($Snap.combine ($Snap.first ($Snap.first $t@349@01)) $Snap.unit)))
  (=>
    (< $Perm.No (read$ $Snap.unit))
    (=
      $t@454@01
      ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@452@01)))))))))
; [eval] read$()
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(declare-const $t@455@01 $Ref)
(assert (and
  (=>
    (< $Perm.No (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit))))
    (= $t@455@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@369@01))))
  (=>
    (< $Perm.No (read$ $Snap.unit))
    (=
      $t@455@01
      ($SortWrappers.$SnapTo$Ref ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@452@01))))))))))
(assert (=>
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= ret@367@01 $Ref.null))))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale _preserve$1 == _1.val_ref && _preserve$2 == _48.val_ref
(declare-const $t@456@01 $Snap)
(assert (= $t@456@01 ($Snap.combine ($Snap.first $t@456@01) ($Snap.second $t@456@01))))
(assert (= ($Snap.first $t@456@01) $Snap.unit))
; [eval] _preserve$1 == _1.val_ref
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (-
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (= $t@350@01 $t@453@01))
(assert (= ($Snap.second $t@456@01) $Snap.unit))
; [eval] _preserve$2 == _48.val_ref
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (= _preserve$2@382@01 $t@455@01))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale (unfolding acc(usize(_51), write) in
;     (unfolding acc(m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_(_48.val_ref), read$()) in
;       (unfolding acc(usize(_48.val_ref.f$weight), read$()) in
;         (unfolding acc(usize(_48.val_ref.f$value), read$()) in
;           (unfolding acc(usize(_11), write) in
;             _51.val_int <= _2 &&
;             (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) +
;             1 ==
;             m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) &&
;             (_2 + 1 ==
;             m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) &&
;             (0 <= _51.val_int &&
;             (_51.val_int <=
;             m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) &&
;             (0 <= _11.val_int &&
;             (_11.val_int <
;             m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) &&
;             (2 <= _2 &&
;             (_2 < 18446744073709551615 &&
;             (_48.val_ref.f$value.val_int ==
;             m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref,
;             _11.val_int) &&
;             (_48.val_ref.f$weight.val_int ==
;             m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref,
;             _11.val_int) &&
;             ((forall ii: Int, wi: Int ::
;               { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;               ii, wi) }
;               0 <= ii &&
;               (ii <
;               m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) &&
;               (0 <= wi &&
;               wi <
;               m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==>
;               m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;               ii, wi) >=
;               0) &&
;             ((forall ii: Int, wi: Int ::
;               { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref,
;               ii, wi, _2) }
;               { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;               ii, wi) }
;               0 <= ii &&
;               (ii <= _11.val_int &&
;               (0 <= wi &&
;               wi <
;               m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==>
;               m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref,
;               ii, wi, _2) ==
;               m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;               ii, wi)) &&
;             ((forall wi: Int, fresh__1: Int ::
;               { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;               fresh__1, wi) }
;               0 <= wi && wi < _51.val_int ==>
;               m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref,
;               _11.val_int + 1, wi, _2) ==
;               m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;               _11.val_int + 1, wi)) &&
;             (forall ii: Int ::
;               { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;               ii, 0) }
;               0 <= ii &&
;               ii <
;               m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==>
;               m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3,
;               ii, 0) ==
;               0)))))))))))))))))))
(declare-const $t@457@01 $Snap)
(assert (= $t@457@01 $Snap.unit))
; [eval] (unfolding acc(usize(_51), write) in (unfolding acc(m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_(_48.val_ref), read$()) in (unfolding acc(usize(_48.val_ref.f$weight), read$()) in (unfolding acc(usize(_48.val_ref.f$value), read$()) in (unfolding acc(usize(_11), write) in _51.val_int <= _2 && (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (_2 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= _51.val_int && (_51.val_int <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= _11.val_int && (_11.val_int < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) && (2 <= _2 && (_2 < 18446744073709551615 && (_48.val_ref.f$value.val_int == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int) && (_48.val_ref.f$weight.val_int == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int) && ((forall ii: Int, wi: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0) && ((forall ii: Int, wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)) && ((forall wi: Int, fresh__1: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, fresh__1, wi) } 0 <= wi && wi < _51.val_int ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _11.val_int + 1, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _11.val_int + 1, wi)) && (forall ii: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) } 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0)))))))))))))))))))
(set-option :timeout 0)
(push) ; 7
(assert (usize%trigger ($Snap.first $t@452@01) ret@444@01))
(assert (=
  ($Snap.first $t@452@01)
  ($Snap.combine
    ($Snap.first ($Snap.first $t@452@01))
    ($Snap.second ($Snap.first $t@452@01)))))
(assert (not (= ret@444@01 $Ref.null)))
(assert (= ($Snap.second ($Snap.first $t@452@01)) $Snap.unit))
; [eval] 0 <= self.val_int
(assert (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
; [eval] (unfolding acc(m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_(_48.val_ref), read$()) in (unfolding acc(usize(_48.val_ref.f$weight), read$()) in (unfolding acc(usize(_48.val_ref.f$value), read$()) in (unfolding acc(usize(_11), write) in _51.val_int <= _2 && (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (_2 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= _51.val_int && (_51.val_int <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= _11.val_int && (_11.val_int < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) && (2 <= _2 && (_2 < 18446744073709551615 && (_48.val_ref.f$value.val_int == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int) && (_48.val_ref.f$weight.val_int == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int) && ((forall ii: Int, wi: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0) && ((forall ii: Int, wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)) && ((forall wi: Int, fresh__1: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, fresh__1, wi) } 0 <= wi && wi < _51.val_int ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _11.val_int + 1, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _11.val_int + 1, wi)) && (forall ii: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) } 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0))))))))))))))))))
(push) ; 8
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [eval] read$()
(set-option :timeout 0)
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
; [eval] read$()
(push) ; 9
(pop) ; 9
; Joined path conditions
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@369@01)) $t@455@01)))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap.second $t@369@01) $t@455@01))
(assert (=> (< $Perm.No (read$ $Snap.unit)) (not (= $t@455@01 $Ref.null))))
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@289@01 ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01)))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01)))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [eval] (unfolding acc(usize(_48.val_ref.f$weight), read$()) in (unfolding acc(usize(_48.val_ref.f$value), read$()) in (unfolding acc(usize(_11), write) in _51.val_int <= _2 && (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (_2 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= _51.val_int && (_51.val_int <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= _11.val_int && (_11.val_int < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) && (2 <= _2 && (_2 < 18446744073709551615 && (_48.val_ref.f$value.val_int == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int) && (_48.val_ref.f$weight.val_int == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int) && ((forall ii: Int, wi: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0) && ((forall ii: Int, wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)) && ((forall wi: Int, fresh__1: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, fresh__1, wi) } 0 <= wi && wi < _51.val_int ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _11.val_int + 1, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _11.val_int + 1, wi)) && (forall ii: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) } 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0)))))))))))))))))
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [eval] read$()
(set-option :timeout 0)
(push) ; 9
(pop) ; 9
; Joined path conditions
(push) ; 9
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
; [eval] read$()
(push) ; 10
(pop) ; 10
; Joined path conditions
(push) ; 10
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ret@444@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= self.val_int
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [eval] (unfolding acc(usize(_48.val_ref.f$value), read$()) in (unfolding acc(usize(_11), write) in _51.val_int <= _2 && (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (_2 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= _51.val_int && (_51.val_int <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= _11.val_int && (_11.val_int < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) && (2 <= _2 && (_2 < 18446744073709551615 && (_48.val_ref.f$value.val_int == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int) && (_48.val_ref.f$weight.val_int == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int) && ((forall ii: Int, wi: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0) && ((forall ii: Int, wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)) && ((forall wi: Int, fresh__1: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, fresh__1, wi) } 0 <= wi && wi < _51.val_int ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _11.val_int + 1, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _11.val_int + 1, wi)) && (forall ii: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) } 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0))))))))))))))))
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [eval] read$()
(set-option :timeout 0)
(push) ; 10
(pop) ; 10
; Joined path conditions
(push) ; 10
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ret@444@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= self.val_int
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
; [eval] (unfolding acc(usize(_11), write) in _51.val_int <= _2 && (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (_2 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= _51.val_int && (_51.val_int <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= _11.val_int && (_11.val_int < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) && (2 <= _2 && (_2 < 18446744073709551615 && (_48.val_ref.f$value.val_int == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int) && (_48.val_ref.f$weight.val_int == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int) && ((forall ii: Int, wi: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0) && ((forall ii: Int, wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)) && ((forall wi: Int, fresh__1: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, fresh__1, wi) } 0 <= wi && wi < _51.val_int ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _11.val_int + 1, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _11.val_int + 1, wi)) && (forall ii: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) } 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0)))))))))))))))
(set-option :timeout 0)
(push) ; 11
(push) ; 12
(set-option :timeout 10)
(assert (not (=
  (-
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    ($Perm.min
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))
      $Perm.Write))
  $Perm.No)))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(assert (not (or
  (=
    (-
      $Perm.Write
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        $Perm.Write))
    $Perm.No)
  (<
    (-
      $Perm.Write
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        $Perm.Write))
    $Perm.No))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (usize%trigger $t@454@01 ret@289@01))
(assert (= $t@454@01 ($Snap.combine ($Snap.first $t@454@01) ($Snap.second $t@454@01))))
(push) ; 12
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ret@289@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ret@289@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (= ret@444@01 ret@289@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (= ($Snap.second $t@454@01) $Snap.unit))
; [eval] 0 <= self.val_int
(assert (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
; [eval] _51.val_int <= _2 && (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (_2 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= _51.val_int && (_51.val_int <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= _11.val_int && (_11.val_int < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) && (2 <= _2 && (_2 < 18446744073709551615 && (_48.val_ref.f$value.val_int == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int) && (_48.val_ref.f$weight.val_int == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int) && ((forall ii: Int, wi: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0) && ((forall ii: Int, wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)) && ((forall wi: Int, fresh__1: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, fresh__1, wi) } 0 <= wi && wi < _51.val_int ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _11.val_int + 1, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _11.val_int + 1, wi)) && (forall ii: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) } 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0))))))))))))))
; [eval] _51.val_int <= _2
(set-option :timeout 0)
(push) ; 12
; [then-branch: 52 | !(First:(First:($t@452@01)) <= _2@101@01) | live]
; [else-branch: 52 | First:(First:($t@452@01)) <= _2@101@01 | live]
(push) ; 13
; [then-branch: 52 | !(First:(First:($t@452@01)) <= _2@101@01)]
(assert (not
  (<= ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))) _2@101@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 52 | First:(First:($t@452@01)) <= _2@101@01]
(assert (<= ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))) _2@101@01))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref) + 1
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
(push) ; 14
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (-
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 14
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 14
; [eval] read$()
(push) ; 15
(pop) ; 15
; Joined path conditions
(push) ; 15
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(push) ; 15
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@453@01)))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 15
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(push) ; 15
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@363@01
  $Snap.unit) $t@453@01))
(pop) ; 14
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@363@01
  $Snap.unit) $t@453@01))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(set-option :timeout 0)
(push) ; 14
; [eval] read$()
(push) ; 15
(pop) ; 15
; Joined path conditions
(push) ; 15
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(push) ; 15
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second $t@452@01))
  $Snap.unit) ret@230@01))
(pop) ; 14
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second $t@452@01))
  $Snap.unit) ret@230@01))
(set-option :timeout 0)
(push) ; 14
; [then-branch: 53 | m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@363@01, _), $t@453@01) + 1 != m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) | live]
; [else-branch: 53 | m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@363@01, _), $t@453@01) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) | live]
(push) ; 15
; [then-branch: 53 | m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@363@01, _), $t@453@01) + 1 != m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01)]
(assert (not
  (=
    (+
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@363@01
        $Snap.unit) $t@453@01)
      1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))))
(pop) ; 15
(push) ; 15
; [else-branch: 53 | m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@363@01, _), $t@453@01) + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01)]
(assert (=
  (+
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@363@01
      $Snap.unit) $t@453@01)
    1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    $Snap.unit) ret@230@01)))
; [eval] _2 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] _2 + 1
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 16
; [eval] read$()
(push) ; 17
(pop) ; 17
; Joined path conditions
(push) ; 17
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
(push) ; 17
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 17
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second $t@452@01))
  $Snap.unit) ret@230@01))
(pop) ; 16
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second $t@452@01))
  $Snap.unit) ret@230@01))
(set-option :timeout 0)
(push) ; 16
; [then-branch: 54 | _2@101@01 + 1 != m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) | live]
; [else-branch: 54 | _2@101@01 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) | live]
(push) ; 17
; [then-branch: 54 | _2@101@01 + 1 != m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01)]
(assert (not
  (=
    (+ _2@101@01 1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))))
(pop) ; 17
(push) ; 17
; [else-branch: 54 | _2@101@01 + 1 == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01)]
(assert (=
  (+ _2@101@01 1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _51.val_int
(push) ; 18
; [then-branch: 55 | !(0 <= First:(First:($t@452@01))) | live]
; [else-branch: 55 | 0 <= First:(First:($t@452@01)) | live]
(push) ; 19
; [then-branch: 55 | !(0 <= First:(First:($t@452@01)))]
(assert (not (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
(pop) ; 19
(push) ; 19
; [else-branch: 55 | 0 <= First:(First:($t@452@01))]
; [eval] _51.val_int <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 20
; [eval] read$()
(push) ; 21
(pop) ; 21
; Joined path conditions
(push) ; 21
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 21
; 0.00s
; (get-info :all-statistics)
(push) ; 21
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 21
; 0.00s
; (get-info :all-statistics)
(pop) ; 20
; Joined path conditions
(set-option :timeout 0)
(push) ; 20
; [then-branch: 56 | !(First:(First:($t@452@01)) <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01)) | live]
; [else-branch: 56 | First:(First:($t@452@01)) <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) | live]
(push) ; 21
; [then-branch: 56 | !(First:(First:($t@452@01)) <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01))]
(assert (not
  (<=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))))
(pop) ; 21
(push) ; 21
; [else-branch: 56 | First:(First:($t@452@01)) <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01)]
(assert (<=
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _11.val_int
(push) ; 22
; [then-branch: 57 | !(0 <= First:($t@454@01)) | live]
; [else-branch: 57 | 0 <= First:($t@454@01) | live]
(push) ; 23
; [then-branch: 57 | !(0 <= First:($t@454@01))]
(assert (not (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))
(pop) ; 23
(push) ; 23
; [else-branch: 57 | 0 <= First:($t@454@01)]
; [eval] _11.val_int < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_1.val_ref)
(push) ; 24
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (-
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 24
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 24
; [eval] read$()
(push) ; 25
(pop) ; 25
; Joined path conditions
(push) ; 25
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 25
; 0.00s
; (get-info :all-statistics)
(push) ; 25
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@453@01)))
(check-sat)
; unsat
(pop) ; 25
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 25
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 25
; 0.00s
; (get-info :all-statistics)
(push) ; 25
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 25
; 0.00s
; (get-info :all-statistics)
(pop) ; 24
; Joined path conditions
(set-option :timeout 0)
(push) ; 24
; [then-branch: 58 | !(First:($t@454@01) < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@363@01, _), $t@453@01)) | live]
; [else-branch: 58 | First:($t@454@01) < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@363@01, _), $t@453@01) | live]
(push) ; 25
; [then-branch: 58 | !(First:($t@454@01) < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@363@01, _), $t@453@01))]
(assert (not
  (<
    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@363@01
      $Snap.unit) $t@453@01))))
(pop) ; 25
(push) ; 25
; [else-branch: 58 | First:($t@454@01) < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(($t@363@01, _), $t@453@01)]
(assert (<
  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@363@01
    $Snap.unit) $t@453@01)))
; [eval] 2 <= _2
(push) ; 26
; [then-branch: 59 | !(2 <= _2@101@01) | live]
; [else-branch: 59 | 2 <= _2@101@01 | live]
(push) ; 27
; [then-branch: 59 | !(2 <= _2@101@01)]
(assert (not (<= 2 _2@101@01)))
(pop) ; 27
(push) ; 27
; [else-branch: 59 | 2 <= _2@101@01]
; [eval] _2 < 18446744073709551615
(push) ; 28
; [then-branch: 60 | !(_2@101@01 < 18446744073709551615) | live]
; [else-branch: 60 | _2@101@01 < 18446744073709551615 | live]
(push) ; 29
; [then-branch: 60 | !(_2@101@01 < 18446744073709551615)]
(assert (not (< _2@101@01 18446744073709551615)))
(pop) ; 29
(push) ; 29
; [else-branch: 60 | _2@101@01 < 18446744073709551615]
; [eval] _48.val_ref.f$value.val_int == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int)
(push) ; 30
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 30
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 30
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 30
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 30
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 30
; 0.00s
; (get-info :all-statistics)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int)
(set-option :timeout 0)
(push) ; 30
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (-
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 30
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 30
; [eval] read$()
(push) ; 31
(pop) ; 31
; Joined path conditions
(push) ; 31
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 31
; 0.00s
; (get-info :all-statistics)
(push) ; 31
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@453@01)))
(check-sat)
; unsat
(pop) ; 31
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 31
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 31
; 0.00s
; (get-info :all-statistics)
(push) ; 31
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 31
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 31
; [eval] read$()
(push) ; 32
(pop) ; 32
; Joined path conditions
(push) ; 32
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 32
; 0.00s
; (get-info :all-statistics)
(push) ; 32
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@453@01)))
(check-sat)
; unsat
(pop) ; 32
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 32
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 32
; 0.00s
; (get-info :all-statistics)
(push) ; 32
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 32
; 0.00s
; (get-info :all-statistics)
(pop) ; 31
; Joined path conditions
; [eval] 0 <= _pure_2
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
(pop) ; 30
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
(set-option :timeout 0)
(push) ; 30
; [then-branch: 61 | First:(Second:(Second:(Second:(Second:(Second:(Second:($t@369@01))))))) != m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(($t@363@01, (_, (_, _))), $t@453@01, First:($t@454@01)) | live]
; [else-branch: 61 | First:(Second:(Second:(Second:(Second:(Second:(Second:($t@369@01))))))) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(($t@363@01, (_, (_, _))), $t@453@01, First:($t@454@01)) | live]
(push) ; 31
; [then-branch: 61 | First:(Second:(Second:(Second:(Second:(Second:(Second:($t@369@01))))))) != m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(($t@363@01, (_, (_, _))), $t@453@01, First:($t@454@01))]
(assert (not
  (=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
      $t@363@01
      ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))
(pop) ; 31
(push) ; 31
; [else-branch: 61 | First:(Second:(Second:(Second:(Second:(Second:(Second:($t@369@01))))))) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(($t@363@01, (_, (_, _))), $t@453@01, First:($t@454@01))]
(assert (=
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
    $t@363@01
    ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))
; [eval] _48.val_ref.f$weight.val_int == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int)
(push) ; 32
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 32
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 32
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 32
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 32
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 32
; 0.00s
; (get-info :all-statistics)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(_1.val_ref, _11.val_int)
(set-option :timeout 0)
(push) ; 32
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (-
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 32
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 32
; [eval] read$()
(push) ; 33
(pop) ; 33
; Joined path conditions
(push) ; 33
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 33
; 0.00s
; (get-info :all-statistics)
(push) ; 33
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@453@01)))
(check-sat)
; unsat
(pop) ; 33
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 33
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 33
; 0.00s
; (get-info :all-statistics)
(push) ; 33
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 33
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 33
; [eval] read$()
(push) ; 34
(pop) ; 34
; Joined path conditions
(push) ; 34
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 34
; 0.00s
; (get-info :all-statistics)
(push) ; 34
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@453@01)))
(check-sat)
; unsat
(pop) ; 34
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 34
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 34
; 0.00s
; (get-info :all-statistics)
(push) ; 34
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 34
; 0.00s
; (get-info :all-statistics)
(pop) ; 33
; Joined path conditions
; [eval] 0 <= _pure_2
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
(pop) ; 32
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
(set-option :timeout 0)
(push) ; 32
; [then-branch: 62 | First:(First:(Second:(Second:(Second:(Second:($t@369@01)))))) != m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(($t@363@01, (_, (_, _))), $t@453@01, First:($t@454@01)) | live]
; [else-branch: 62 | First:(First:(Second:(Second:(Second:(Second:($t@369@01)))))) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(($t@363@01, (_, (_, _))), $t@453@01, First:($t@454@01)) | live]
(push) ; 33
; [then-branch: 62 | First:(First:(Second:(Second:(Second:(Second:($t@369@01)))))) != m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(($t@363@01, (_, (_, _))), $t@453@01, First:($t@454@01))]
(assert (not
  (=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
      $t@363@01
      ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))
(pop) ; 33
(push) ; 33
; [else-branch: 62 | First:(First:(Second:(Second:(Second:(Second:($t@369@01)))))) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$(($t@363@01, (_, (_, _))), $t@453@01, First:($t@454@01))]
(assert (=
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
    $t@363@01
    ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))
; [eval] (forall ii: Int, wi: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0)
(declare-const ii@458@01 Int)
(declare-const wi@459@01 Int)
(push) ; 34
; [eval] 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0
; [eval] 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)))
; [eval] 0 <= ii
(push) ; 35
; [then-branch: 63 | !(0 <= ii@458@01) | live]
; [else-branch: 63 | 0 <= ii@458@01 | live]
(push) ; 36
; [then-branch: 63 | !(0 <= ii@458@01)]
(assert (not (<= 0 ii@458@01)))
(pop) ; 36
(push) ; 36
; [else-branch: 63 | 0 <= ii@458@01]
(assert (<= 0 ii@458@01))
; [eval] ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 37
; [eval] read$()
(push) ; 38
(pop) ; 38
; Joined path conditions
(push) ; 38
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 38
; 0.00s
; (get-info :all-statistics)
(push) ; 38
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 38
; 0.00s
; (get-info :all-statistics)
(pop) ; 37
; Joined path conditions
(set-option :timeout 0)
(push) ; 37
; [then-branch: 64 | !(ii@458@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01)) | live]
; [else-branch: 64 | ii@458@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) | live]
(push) ; 38
; [then-branch: 64 | !(ii@458@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01))]
(assert (not
  (<
    ii@458@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))))
(pop) ; 38
(push) ; 38
; [else-branch: 64 | ii@458@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01)]
(assert (<
  ii@458@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= wi
(push) ; 39
; [then-branch: 65 | !(0 <= wi@459@01) | live]
; [else-branch: 65 | 0 <= wi@459@01 | live]
(push) ; 40
; [then-branch: 65 | !(0 <= wi@459@01)]
(assert (not (<= 0 wi@459@01)))
(pop) ; 40
(push) ; 40
; [else-branch: 65 | 0 <= wi@459@01]
(assert (<= 0 wi@459@01))
; [eval] wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 41
; [eval] read$()
(push) ; 42
(pop) ; 42
; Joined path conditions
(push) ; 42
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 42
; 0.00s
; (get-info :all-statistics)
(push) ; 42
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 42
; 0.00s
; (get-info :all-statistics)
(pop) ; 41
; Joined path conditions
(pop) ; 40
(pop) ; 39
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 wi@459@01) (not (<= 0 wi@459@01))))
(pop) ; 38
(pop) ; 37
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    ii@458@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))
  (and
    (<
      ii@458@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01))
    (or (<= 0 wi@459@01) (not (<= 0 wi@459@01))))))
(assert (or
  (<
    ii@458@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))
  (not
    (<
      ii@458@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01)))))
(pop) ; 36
(pop) ; 35
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 ii@458@01)
  (and
    (<= 0 ii@458@01)
    (=>
      (<
        ii@458@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01))
      (and
        (<
          ii@458@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (or (<= 0 wi@459@01) (not (<= 0 wi@459@01)))))
    (or
      (<
        ii@458@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01))
      (not
        (<
          ii@458@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)))))))
(assert (or (<= 0 ii@458@01) (not (<= 0 ii@458@01))))
(set-option :timeout 0)
(push) ; 35
; [then-branch: 66 | 0 <= ii@458@01 && ii@458@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) && 0 <= wi@459@01 && wi@459@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) | live]
; [else-branch: 66 | !(0 <= ii@458@01 && ii@458@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) && 0 <= wi@459@01 && wi@459@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01)) | live]
(push) ; 36
; [then-branch: 66 | 0 <= ii@458@01 && ii@458@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) && 0 <= wi@459@01 && wi@459@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01)]
(assert (and
  (<= 0 ii@458@01)
  (and
    (<
      ii@458@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01))
    (and
      (<= 0 wi@459@01)
      (<
        wi@459@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01))))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) >= 0
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
(push) ; 37
; [eval] read$()
(push) ; 38
(pop) ; 38
; Joined path conditions
(push) ; 38
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 38
; 0.00s
; (get-info :all-statistics)
(push) ; 38
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 38
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 38
; [eval] read$()
(push) ; 39
(pop) ; 39
; Joined path conditions
(push) ; 39
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 39
; 0.00s
; (get-info :all-statistics)
(push) ; 39
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 39
; 0.00s
; (get-info :all-statistics)
(pop) ; 38
; Joined path conditions
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 38
; [eval] read$()
(push) ; 39
(pop) ; 39
; Joined path conditions
(push) ; 39
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 39
; 0.00s
; (get-info :all-statistics)
(push) ; 39
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 39
; 0.00s
; (get-info :all-statistics)
(pop) ; 38
; Joined path conditions
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second $t@452@01))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
(pop) ; 37
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second $t@452@01))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
(pop) ; 36
(set-option :timeout 0)
(push) ; 36
; [else-branch: 66 | !(0 <= ii@458@01 && ii@458@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) && 0 <= wi@459@01 && wi@459@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01))]
(assert (not
  (and
    (<= 0 ii@458@01)
    (and
      (<
        ii@458@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@459@01)
        (<
          wi@459@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)))))))
(pop) ; 36
(pop) ; 35
; Joined path conditions
(assert (=>
  (and
    (<= 0 ii@458@01)
    (and
      (<
        ii@458@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@459@01)
        (<
          wi@459@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)))))
  (and
    (<= 0 ii@458@01)
    (<
      ii@458@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01))
    (<= 0 wi@459@01)
    (<
      wi@459@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 ii@458@01)
      (and
        (<
          ii@458@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (and
          (<= 0 wi@459@01)
          (<
            wi@459@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))))))
  (and
    (<= 0 ii@458@01)
    (and
      (<
        ii@458@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@459@01)
        (<
          wi@459@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)))))))
(pop) ; 34
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
  (and
    (=>
      (<= 0 ii@458@01)
      (and
        (<= 0 ii@458@01)
        (=>
          (<
            ii@458@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (and
            (<
              ii@458@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (or (<= 0 wi@459@01) (not (<= 0 wi@459@01)))))
        (or
          (<
            ii@458@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (not
            (<
              ii@458@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))))))
    (or (<= 0 ii@458@01) (not (<= 0 ii@458@01)))
    (=>
      (and
        (<= 0 ii@458@01)
        (and
          (<
            ii@458@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@459@01)
            (<
              wi@459@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01)))))
      (and
        (<= 0 ii@458@01)
        (<
          ii@458@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (<= 0 wi@459@01)
        (<
          wi@459@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
    (or
      (not
        (and
          (<= 0 ii@458@01)
          (and
            (<
              ii@458@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (and
              (<= 0 wi@459@01)
              (<
                wi@459@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))))))
      (and
        (<= 0 ii@458@01)
        (and
          (<
            ii@458@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@459@01)
            (<
              wi@459@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01)))))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|)))
(push) ; 34
; [then-branch: 67 | !(QA ii@458@01,wi@459@01 :: 0 <= ii@458@01 && ii@458@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) && 0 <= wi@459@01 && wi@459@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:($t@452@01)), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@458@01, wi@459@01) >= 0) | live]
; [else-branch: 67 | QA ii@458@01,wi@459@01 :: 0 <= ii@458@01 && ii@458@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) && 0 <= wi@459@01 && wi@459@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:($t@452@01)), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@458@01, wi@459@01) >= 0 | live]
(push) ; 35
; [then-branch: 67 | !(QA ii@458@01,wi@459@01 :: 0 <= ii@458@01 && ii@458@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) && 0 <= wi@459@01 && wi@459@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:($t@452@01)), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@458@01, wi@459@01) >= 0)]
(assert (not
  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
    (=>
      (and
        (<= 0 ii@458@01)
        (and
          (<
            ii@458@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@459@01)
            (<
              wi@459@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01)))))
      (>=
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
        0))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))
(pop) ; 35
(push) ; 35
; [else-branch: 67 | QA ii@458@01,wi@459@01 :: 0 <= ii@458@01 && ii@458@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) && 0 <= wi@459@01 && wi@459@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:($t@452@01)), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@458@01, wi@459@01) >= 0]
(assert (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
  (=>
    (and
      (<= 0 ii@458@01)
      (and
        (<
          ii@458@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (and
          (<= 0 wi@459@01)
          (<
            wi@459@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01)))))
    (>=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
      0))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|)))
; [eval] (forall ii: Int, wi: Int :: { m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) } { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi) } 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi))
(declare-const ii@460@01 Int)
(declare-const wi@461@01 Int)
(push) ; 36
; [eval] 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3))) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
; [eval] 0 <= ii && (ii <= _11.val_int && (0 <= wi && wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)))
; [eval] 0 <= ii
(push) ; 37
; [then-branch: 68 | !(0 <= ii@460@01) | live]
; [else-branch: 68 | 0 <= ii@460@01 | live]
(push) ; 38
; [then-branch: 68 | !(0 <= ii@460@01)]
(assert (not (<= 0 ii@460@01)))
(pop) ; 38
(push) ; 38
; [else-branch: 68 | 0 <= ii@460@01]
(assert (<= 0 ii@460@01))
; [eval] ii <= _11.val_int
(push) ; 39
; [then-branch: 69 | !(ii@460@01 <= First:($t@454@01)) | live]
; [else-branch: 69 | ii@460@01 <= First:($t@454@01) | live]
(push) ; 40
; [then-branch: 69 | !(ii@460@01 <= First:($t@454@01))]
(assert (not (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))
(pop) ; 40
(push) ; 40
; [else-branch: 69 | ii@460@01 <= First:($t@454@01)]
(assert (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
; [eval] 0 <= wi
(push) ; 41
; [then-branch: 70 | !(0 <= wi@461@01) | live]
; [else-branch: 70 | 0 <= wi@461@01 | live]
(push) ; 42
; [then-branch: 70 | !(0 <= wi@461@01)]
(assert (not (<= 0 wi@461@01)))
(pop) ; 42
(push) ; 42
; [else-branch: 70 | 0 <= wi@461@01]
(assert (<= 0 wi@461@01))
; [eval] wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 43
; [eval] read$()
(push) ; 44
(pop) ; 44
; Joined path conditions
(push) ; 44
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 44
; 0.00s
; (get-info :all-statistics)
(push) ; 44
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 44
; 0.00s
; (get-info :all-statistics)
(pop) ; 43
; Joined path conditions
(pop) ; 42
(pop) ; 41
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 wi@461@01) (not (<= 0 wi@461@01))))
(pop) ; 40
(pop) ; 39
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
  (and
    (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
    (or (<= 0 wi@461@01) (not (<= 0 wi@461@01))))))
(assert (or
  (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
  (not (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))
(pop) ; 38
(pop) ; 37
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 ii@460@01)
  (and
    (<= 0 ii@460@01)
    (=>
      (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
      (and
        (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
        (or (<= 0 wi@461@01) (not (<= 0 wi@461@01)))))
    (or
      (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
      (not (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
(assert (or (<= 0 ii@460@01) (not (<= 0 ii@460@01))))
(set-option :timeout 0)
(push) ; 37
; [then-branch: 71 | 0 <= ii@460@01 && ii@460@01 <= First:($t@454@01) && 0 <= wi@461@01 && wi@461@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) | live]
; [else-branch: 71 | !(0 <= ii@460@01 && ii@460@01 <= First:($t@454@01) && 0 <= wi@461@01 && wi@461@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01)) | live]
(push) ; 38
; [then-branch: 71 | 0 <= ii@460@01 && ii@460@01 <= First:($t@454@01) && 0 <= wi@461@01 && wi@461@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01)]
(assert (and
  (<= 0 ii@460@01)
  (and
    (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
    (and
      (<= 0 wi@461@01)
      (<
        wi@461@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01))))))
; [eval] m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
; [eval] m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, ii, wi, _2)
(push) ; 39
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (-
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 39
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 39
; [eval] read$()
(push) ; 40
(pop) ; 40
; Joined path conditions
(push) ; 40
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@453@01)))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 40
; [eval] read$()
(push) ; 41
(pop) ; 41
; Joined path conditions
(push) ; 41
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 41
; 0.00s
; (get-info :all-statistics)
(push) ; 41
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@453@01)))
(check-sat)
; unsat
(pop) ; 41
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 41
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 41
; 0.00s
; (get-info :all-statistics)
(push) ; 41
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 41
; 0.00s
; (get-info :all-statistics)
(pop) ; 40
; Joined path conditions
(set-option :timeout 0)
(push) ; 40
(assert (not (<=
  ii@460@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@363@01
    $Snap.unit) $t@453@01))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(assert (<=
  ii@460@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@363@01
    $Snap.unit) $t@453@01)))
; [eval] 0 <= _pure_3
; [eval] _pure_3 <= _pure_4
(push) ; 40
(assert (not (<= wi@461@01 _2@101@01)))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(assert (<= wi@461@01 _2@101@01))
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
; [eval] 0 <= _pure_4
(push) ; 40
(assert (not (<= 0 _2@101@01)))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 _2@101@01))
(assert (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
(pop) ; 39
; Joined path conditions
(assert (and
  (<=
    ii@460@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@363@01
      $Snap.unit) $t@453@01))
  (<= wi@461@01 _2@101@01)
  (<= 0 _2@101@01)
  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
    $t@363@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, wi)
(push) ; 39
; [eval] read$()
(push) ; 40
(pop) ; 40
; Joined path conditions
(push) ; 40
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 40
; [eval] read$()
(push) ; 41
(pop) ; 41
; Joined path conditions
(push) ; 41
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 41
; 0.00s
; (get-info :all-statistics)
(push) ; 41
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 41
; 0.00s
; (get-info :all-statistics)
(pop) ; 40
; Joined path conditions
(set-option :timeout 0)
(push) ; 40
(assert (not (<
  ii@460@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(assert (<
  ii@460@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(push) ; 40
; [eval] read$()
(push) ; 41
(pop) ; 41
; Joined path conditions
(push) ; 41
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 41
; 0.00s
; (get-info :all-statistics)
(push) ; 41
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 41
; 0.00s
; (get-info :all-statistics)
(pop) ; 40
; Joined path conditions
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second $t@452@01))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
(pop) ; 39
; Joined path conditions
(assert (and
  (<
    ii@460@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
(pop) ; 38
(set-option :timeout 0)
(push) ; 38
; [else-branch: 71 | !(0 <= ii@460@01 && ii@460@01 <= First:($t@454@01) && 0 <= wi@461@01 && wi@461@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01))]
(assert (not
  (and
    (<= 0 ii@460@01)
    (and
      (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
      (and
        (<= 0 wi@461@01)
        (<
          wi@461@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)))))))
(pop) ; 38
(pop) ; 37
; Joined path conditions
(assert (=>
  (and
    (<= 0 ii@460@01)
    (and
      (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
      (and
        (<= 0 wi@461@01)
        (<
          wi@461@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)))))
  (and
    (<= 0 ii@460@01)
    (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
    (<= 0 wi@461@01)
    (<
      wi@461@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01))
    (<=
      ii@460@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@363@01
        $Snap.unit) $t@453@01))
    (<= wi@461@01 _2@101@01)
    (<= 0 _2@101@01)
    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
      $t@363@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
    (<
      ii@460@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 ii@460@01)
      (and
        (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
        (and
          (<= 0 wi@461@01)
          (<
            wi@461@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))))))
  (and
    (<= 0 ii@460@01)
    (and
      (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
      (and
        (<= 0 wi@461@01)
        (<
          wi@461@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)))))))
(pop) ; 36
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
  (and
    (=>
      (<= 0 ii@460@01)
      (and
        (<= 0 ii@460@01)
        (=>
          (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
          (and
            (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
            (or (<= 0 wi@461@01) (not (<= 0 wi@461@01)))))
        (or
          (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
          (not (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
    (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
    (=>
      (and
        (<= 0 ii@460@01)
        (and
          (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
          (and
            (<= 0 wi@461@01)
            (<
              wi@461@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01)))))
      (and
        (<= 0 ii@460@01)
        (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
        (<= 0 wi@461@01)
        (<
          wi@461@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (<=
          ii@460@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@363@01
            $Snap.unit) $t@453@01))
        (<= wi@461@01 _2@101@01)
        (<= 0 _2@101@01)
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
        (<
          ii@460@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
    (or
      (not
        (and
          (<= 0 ii@460@01)
          (and
            (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
            (and
              (<= 0 wi@461@01)
              (<
                wi@461@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))))))
      (and
        (<= 0 ii@460@01)
        (and
          (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
          (and
            (<= 0 wi@461@01)
            (<
              wi@461@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01)))))))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
    $t@363@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|)))
(assert (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
  (and
    (=>
      (<= 0 ii@460@01)
      (and
        (<= 0 ii@460@01)
        (=>
          (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
          (and
            (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
            (or (<= 0 wi@461@01) (not (<= 0 wi@461@01)))))
        (or
          (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
          (not (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
    (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
    (=>
      (and
        (<= 0 ii@460@01)
        (and
          (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
          (and
            (<= 0 wi@461@01)
            (<
              wi@461@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01)))))
      (and
        (<= 0 ii@460@01)
        (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
        (<= 0 wi@461@01)
        (<
          wi@461@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (<=
          ii@460@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@363@01
            $Snap.unit) $t@453@01))
        (<= wi@461@01 _2@101@01)
        (<= 0 _2@101@01)
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
        (<
          ii@460@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
    (or
      (not
        (and
          (<= 0 ii@460@01)
          (and
            (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
            (and
              (<= 0 wi@461@01)
              (<
                wi@461@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))))))
      (and
        (<= 0 ii@460@01)
        (and
          (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
          (and
            (<= 0 wi@461@01)
            (<
              wi@461@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01)))))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|)))
(push) ; 36
; [then-branch: 72 | !(QA ii@460@01,wi@461@01 :: 0 <= ii@460@01 && ii@460@01 <= First:($t@454@01) && 0 <= wi@461@01 && wi@461@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(($t@363@01, (_, (_, (_, (_, (_, (_, _))))))), $t@453@01, ii@460@01, wi@461@01, _2@101@01) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:($t@452@01)), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@460@01, wi@461@01)) | live]
; [else-branch: 72 | QA ii@460@01,wi@461@01 :: 0 <= ii@460@01 && ii@460@01 <= First:($t@454@01) && 0 <= wi@461@01 && wi@461@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(($t@363@01, (_, (_, (_, (_, (_, (_, _))))))), $t@453@01, ii@460@01, wi@461@01, _2@101@01) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:($t@452@01)), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@460@01, wi@461@01) | live]
(push) ; 37
; [then-branch: 72 | !(QA ii@460@01,wi@461@01 :: 0 <= ii@460@01 && ii@460@01 <= First:($t@454@01) && 0 <= wi@461@01 && wi@461@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(($t@363@01, (_, (_, (_, (_, (_, (_, _))))))), $t@453@01, ii@460@01, wi@461@01, _2@101@01) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:($t@452@01)), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@460@01, wi@461@01))]
(assert (not
  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
    (=>
      (and
        (<= 0 ii@460@01)
        (and
          (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
          (and
            (<= 0 wi@461@01)
            (<
              wi@461@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01)))))
      (=
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
      $t@363@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))
(pop) ; 37
(push) ; 37
; [else-branch: 72 | QA ii@460@01,wi@461@01 :: 0 <= ii@460@01 && ii@460@01 <= First:($t@454@01) && 0 <= wi@461@01 && wi@461@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(($t@363@01, (_, (_, (_, (_, (_, (_, _))))))), $t@453@01, ii@460@01, wi@461@01, _2@101@01) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:($t@452@01)), (_, (_, (_, (_, (_, _)))))), ret@230@01, ii@460@01, wi@461@01)]
(assert (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
  (=>
    (and
      (<= 0 ii@460@01)
      (and
        (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
        (and
          (<= 0 wi@461@01)
          (<
            wi@461@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01)))))
    (=
      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
    $t@363@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|)))
; [eval] (forall wi: Int, fresh__1: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, fresh__1, wi) } 0 <= wi && wi < _51.val_int ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _11.val_int + 1, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _11.val_int + 1, wi))
(declare-const wi@462@01 Int)
(declare-const fresh__1@463@01 Int)
(push) ; 38
; [eval] 0 <= wi && wi < _51.val_int ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _11.val_int + 1, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _11.val_int + 1, wi)
; [eval] 0 <= wi && wi < _51.val_int
; [eval] 0 <= wi
(push) ; 39
; [then-branch: 73 | !(0 <= wi@462@01) | live]
; [else-branch: 73 | 0 <= wi@462@01 | live]
(push) ; 40
; [then-branch: 73 | !(0 <= wi@462@01)]
(assert (not (<= 0 wi@462@01)))
(pop) ; 40
(push) ; 40
; [else-branch: 73 | 0 <= wi@462@01]
(assert (<= 0 wi@462@01))
; [eval] wi < _51.val_int
(pop) ; 40
(pop) ; 39
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 wi@462@01) (not (<= 0 wi@462@01))))
(push) ; 39
; [then-branch: 74 | 0 <= wi@462@01 && wi@462@01 < First:(First:($t@452@01)) | live]
; [else-branch: 74 | !(0 <= wi@462@01 && wi@462@01 < First:(First:($t@452@01))) | live]
(push) ; 40
; [then-branch: 74 | 0 <= wi@462@01 && wi@462@01 < First:(First:($t@452@01))]
(assert (and
  (<= 0 wi@462@01)
  (< wi@462@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
; [eval] m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _11.val_int + 1, wi, _2) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _11.val_int + 1, wi)
; [eval] m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(_1.val_ref, _11.val_int + 1, wi, _2)
(push) ; 41
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (-
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 41
; 0.00s
; (get-info :all-statistics)
; [eval] _11.val_int + 1
(set-option :timeout 0)
(push) ; 41
; [eval] read$()
(push) ; 42
(pop) ; 42
; Joined path conditions
(push) ; 42
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 42
; 0.00s
; (get-info :all-statistics)
(push) ; 42
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@453@01)))
(check-sat)
; unsat
(pop) ; 42
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 42
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 42
; 0.00s
; (get-info :all-statistics)
(push) ; 42
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 42
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
(set-option :timeout 0)
(push) ; 42
(assert (not (<= 0 (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1))))
(check-sat)
; unsat
(pop) ; 42
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)))
; [eval] _pure_2 <= m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(push) ; 42
; [eval] read$()
(push) ; 43
(pop) ; 43
; Joined path conditions
(push) ; 43
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 43
; 0.00s
; (get-info :all-statistics)
(push) ; 43
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@200@01)) $t@453@01)))
(check-sat)
; unsat
(pop) ; 43
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 43
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (-
      (+
        (-
          (+
            (-
              (+ (read$ $Snap.unit) (read$ $Snap.unit))
              ($Perm.min
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                (+ (read$ $Snap.unit) (read$ $Snap.unit))
                ($Perm.min
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+ (read$ $Snap.unit) (read$ $Snap.unit))
                  ($Perm.min
                    (+ (read$ $Snap.unit) (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 43
; 0.00s
; (get-info :all-statistics)
(push) ; 43
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 43
; 0.00s
; (get-info :all-statistics)
(pop) ; 42
; Joined path conditions
(set-option :timeout 0)
(push) ; 42
(assert (not (<=
  (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@363@01
    $Snap.unit) $t@453@01))))
(check-sat)
; unsat
(pop) ; 42
; 0.00s
; (get-info :all-statistics)
(assert (<=
  (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@363@01
    $Snap.unit) $t@453@01)))
; [eval] 0 <= _pure_3
; [eval] _pure_3 <= _pure_4
(push) ; 42
(assert (not (<= wi@462@01 _2@101@01)))
(check-sat)
; unsat
(pop) ; 42
; 0.00s
; (get-info :all-statistics)
(assert (<= wi@462@01 _2@101@01))
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
; [eval] 0 <= _pure_4
(push) ; 42
(assert (not (<= 0 _2@101@01)))
(check-sat)
; unsat
(pop) ; 42
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 _2@101@01))
(assert (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
  $t@363@01
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
  1) wi@462@01 _2@101@01))
(pop) ; 41
; Joined path conditions
(assert (and
  (<= 0 (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1))
  (<=
    (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@363@01
      $Snap.unit) $t@453@01))
  (<= wi@462@01 _2@101@01)
  (<= 0 _2@101@01)
  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
    $t@363@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
    1) wi@462@01 _2@101@01)))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, _11.val_int + 1, wi)
; [eval] _11.val_int + 1
(push) ; 41
; [eval] read$()
(push) ; 42
(pop) ; 42
; Joined path conditions
(push) ; 42
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 42
; 0.00s
; (get-info :all-statistics)
(push) ; 42
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 42
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 42
; [eval] read$()
(push) ; 43
(pop) ; 43
; Joined path conditions
(push) ; 43
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 43
; 0.00s
; (get-info :all-statistics)
(push) ; 43
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 43
; 0.00s
; (get-info :all-statistics)
(pop) ; 42
; Joined path conditions
(set-option :timeout 0)
(push) ; 42
(assert (not (<
  (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 42
; 0.00s
; (get-info :all-statistics)
(assert (<
  (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(push) ; 42
; [eval] read$()
(push) ; 43
(pop) ; 43
; Joined path conditions
(push) ; 43
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 43
; 0.00s
; (get-info :all-statistics)
(push) ; 43
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 43
; 0.00s
; (get-info :all-statistics)
(pop) ; 42
; Joined path conditions
(set-option :timeout 0)
(push) ; 42
(assert (not (<
  wi@462@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 42
; 0.00s
; (get-info :all-statistics)
(assert (<
  wi@462@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second $t@452@01))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
  1) wi@462@01))
(pop) ; 41
; Joined path conditions
(assert (and
  (<
    (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))
  (<
    wi@462@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
    1) wi@462@01)))
(pop) ; 40
(push) ; 40
; [else-branch: 74 | !(0 <= wi@462@01 && wi@462@01 < First:(First:($t@452@01)))]
(assert (not
  (and
    (<= 0 wi@462@01)
    (<
      wi@462@01
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
(pop) ; 40
(pop) ; 39
; Joined path conditions
(assert (=>
  (and
    (<= 0 wi@462@01)
    (<
      wi@462@01
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
  (and
    (<= 0 wi@462@01)
    (<
      wi@462@01
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
    (<= 0 (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1))
    (<=
      (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@363@01
        $Snap.unit) $t@453@01))
    (<= wi@462@01 _2@101@01)
    (<= 0 _2@101@01)
    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
      $t@363@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
      1) wi@462@01 _2@101@01)
    (<
      (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01))
    (<
      wi@462@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
      1) wi@462@01))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 wi@462@01)
      (<
        wi@462@01
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
  (and
    (<= 0 wi@462@01)
    (<
      wi@462@01
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, fresh__1, wi)
(push) ; 39
; [eval] read$()
(push) ; 40
(pop) ; 40
; Joined path conditions
(push) ; 40
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
(set-option :timeout 0)
(push) ; 40
(assert (not (<= 0 fresh__1@463@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
; [state consolidation]
; State saturation: before repetition
(set-option :timeout 10)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ret@444@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ret@444@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@289@01 ret@444@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@367@01 _1@100@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@379@01 ret@253@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@241@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@241@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@253@01 $t@225@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@379@01 $t@225@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= $t@225@01 $t@210@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@253@01 $t@210@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@379@01 $t@210@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@222@01 ret@207@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@222@01 ret@207@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) (read$ $Snap.unit)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) (read$ $Snap.unit)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_ref@215@01 val_ref@243@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@215@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@215@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_ref@243@01 val_ref@215@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@243@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@243@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@453@01 val_ref@215@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@453@01 val_ref@243@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (and
    (<
      $Perm.No
      (+
        (-
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit)))
    (<
      $Perm.No
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))))
  (not (= $t@453@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@455@01 val_ref@215@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@455@01 val_ref@243@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (and
    (<
      $Perm.No
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit)))
    (<
      $Perm.No
      (+
        (-
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))))
  (not (= $t@455@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not
  (=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not
  (=
    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= $t@208@01 $t@223@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= $t@223@01 $t@208@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= false val_bool@252@01))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= false val_bool@381@01))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= false val_bool@252@01))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= false val_bool@381@01))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 false))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 false))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 val_bool@381@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 false))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 false))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 val_bool@252@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= $t@210@01 $t@225@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= $t@225@01 $t@210@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(assert (and
  (and
    (and
      (not (= ret@213@01 ret@241@01))
      (not (= ret@213@01 _1@100@01))
      (not (= ret@213@01 ret@367@01)))
    (and
      (not (= ret@241@01 ret@213@01))
      (not (= ret@241@01 _1@100@01))
      (not (= ret@241@01 ret@367@01)))
    (and
      (not (= _1@100@01 ret@213@01))
      (not (= _1@100@01 ret@241@01))
      (not (= _1@100@01 ret@367@01)))
    (and
      (not (= ret@367@01 ret@213@01))
      (not (= ret@367@01 ret@241@01))
      (not (= ret@367@01 _1@100@01))))
  (and
    (and
      (not
        (=
          ret@444@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      (not
        (=
          ret@444@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))
      (not (= ret@444@01 ret@289@01)))
    (and
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
          ret@444@01))
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
          ret@289@01)))
    (and
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
          ret@444@01))
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
          ret@289@01)))
    (and
      (not (= ret@289@01 ret@444@01))
      (not
        (=
          ret@289@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      (not
        (=
          ret@289@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))
  (and (not (= ret@207@01 ret@222@01)) (not (= ret@222@01 ret@207@01)))
  (and
    (and
      (not (= $t@210@01 $t@225@01))
      (not (= $t@210@01 ret@253@01))
      (not (= $t@210@01 ret@379@01)))
    (and
      (not (= $t@225@01 $t@210@01))
      (not (= $t@225@01 ret@253@01))
      (not (= $t@225@01 ret@379@01)))
    (and
      (not (= ret@253@01 $t@210@01))
      (not (= ret@253@01 $t@225@01))
      (not (= ret@253@01 ret@379@01)))
    (and
      (not (= ret@379@01 $t@210@01))
      (not (= ret@379@01 $t@225@01))
      (not (= ret@379@01 ret@253@01))))))
(assert (and
  (and (not (= $t@210@01 ret@253@01)) (not (= $t@210@01 ret@379@01)))
  (and (not (= $t@225@01 ret@253@01)) (not (= $t@225@01 ret@379@01)))
  (and (not (= ret@253@01 $t@210@01)) (not (= ret@253@01 $t@225@01)))
  (and (not (= ret@379@01 $t@210@01)) (not (= ret@379@01 $t@225@01)))))
; [eval] 0 <= _pure_2
(set-option :timeout 0)
(push) ; 40
(assert (not (<= 0 fresh__1@463@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
; [state consolidation]
; State saturation: before repetition
(set-option :timeout 10)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ret@444@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ret@444@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@289@01 ret@444@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@367@01 _1@100@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@379@01 ret@253@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@241@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@241@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@253@01 $t@225@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@379@01 $t@225@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= $t@225@01 $t@210@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@253@01 $t@210@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@379@01 $t@210@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@222@01 ret@207@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@222@01 ret@207@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) (read$ $Snap.unit)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) (read$ $Snap.unit)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_ref@215@01 val_ref@243@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@215@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@215@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_ref@243@01 val_ref@215@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@243@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@243@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@453@01 val_ref@215@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@453@01 val_ref@243@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (and
    (<
      $Perm.No
      (+
        (-
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit)))
    (<
      $Perm.No
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))))
  (not (= $t@453@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@455@01 val_ref@215@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@455@01 val_ref@243@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (and
    (<
      $Perm.No
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit)))
    (<
      $Perm.No
      (+
        (-
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))))
  (not (= $t@455@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not
  (=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not
  (=
    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= $t@208@01 $t@223@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= $t@223@01 $t@208@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= false val_bool@252@01))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= false val_bool@381@01))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= false val_bool@252@01))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= false val_bool@381@01))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 false))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 false))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 val_bool@381@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 false))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 false))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 val_bool@252@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(assert (and
  (and
    (and
      (not (= ret@213@01 ret@241@01))
      (not (= ret@213@01 _1@100@01))
      (not (= ret@213@01 ret@367@01)))
    (and
      (not (= ret@241@01 ret@213@01))
      (not (= ret@241@01 _1@100@01))
      (not (= ret@241@01 ret@367@01)))
    (and
      (not (= _1@100@01 ret@213@01))
      (not (= _1@100@01 ret@241@01))
      (not (= _1@100@01 ret@367@01)))
    (and
      (not (= ret@367@01 ret@213@01))
      (not (= ret@367@01 ret@241@01))
      (not (= ret@367@01 _1@100@01))))
  (and
    (and
      (not
        (=
          ret@444@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      (not
        (=
          ret@444@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))
      (not (= ret@444@01 ret@289@01)))
    (and
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
          ret@444@01))
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
          ret@289@01)))
    (and
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
          ret@444@01))
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
          ret@289@01)))
    (and
      (not (= ret@289@01 ret@444@01))
      (not
        (=
          ret@289@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      (not
        (=
          ret@289@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))
  (and (not (= ret@207@01 ret@222@01)) (not (= ret@222@01 ret@207@01)))
  (and
    (and
      (not (= $t@210@01 $t@225@01))
      (not (= $t@210@01 ret@253@01))
      (not (= $t@210@01 ret@379@01)))
    (and
      (not (= $t@225@01 $t@210@01))
      (not (= $t@225@01 ret@253@01))
      (not (= $t@225@01 ret@379@01)))
    (and
      (not (= ret@253@01 $t@210@01))
      (not (= ret@253@01 $t@225@01))
      (not (= ret@253@01 ret@379@01)))
    (and
      (not (= ret@379@01 $t@210@01))
      (not (= ret@379@01 $t@225@01))
      (not (= ret@379@01 ret@253@01))))))
(assert (and
  (and
    (and (not (= $t@210@01 ret@253@01)) (not (= $t@210@01 ret@379@01)))
    (and (not (= $t@225@01 ret@253@01)) (not (= $t@225@01 ret@379@01)))
    (and (not (= ret@253@01 $t@210@01)) (not (= ret@253@01 $t@225@01)))
    (and (not (= ret@379@01 $t@210@01)) (not (= ret@379@01 $t@225@01))))
  (and (not (= ret@207@01 ret@222@01)) (not (= ret@222@01 ret@207@01)))))
; [eval] 0 <= _pure_2
(set-option :timeout 0)
(push) ; 40
(assert (not (<= 0 fresh__1@463@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
; [state consolidation]
; State saturation: before repetition
(set-option :timeout 10)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ret@444@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ret@444@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@289@01 ret@444@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@367@01 _1@100@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@379@01 ret@253@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@241@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@241@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@253@01 $t@225@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@379@01 $t@225@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= $t@225@01 $t@210@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@253@01 $t@210@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@379@01 $t@210@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@222@01 ret@207@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (= ret@222@01 ret@207@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) (read$ $Snap.unit)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) (read$ $Snap.unit)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_ref@215@01 val_ref@243@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@215@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@215@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_ref@243@01 val_ref@215@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@243@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@243@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@453@01 val_ref@215@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@453@01 val_ref@243@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (and
    (<
      $Perm.No
      (+
        (-
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit)))
    (<
      $Perm.No
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))))
  (not (= $t@453@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@455@01 val_ref@215@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@455@01 val_ref@243@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (and
    (<
      $Perm.No
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit)))
    (<
      $Perm.No
      (+
        (-
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))))
  (not (= $t@455@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not
  (=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not
  (=
    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= $t@208@01 $t@223@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= $t@223@01 $t@208@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= false val_bool@252@01))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= false val_bool@381@01))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= false val_bool@252@01))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= false val_bool@381@01))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 false))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 false))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 val_bool@381@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 false))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 false))))
(check-sat)
; unsat
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 40
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 val_bool@252@01))))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(assert (and
  (and
    (and
      (not (= ret@213@01 ret@241@01))
      (not (= ret@213@01 _1@100@01))
      (not (= ret@213@01 ret@367@01)))
    (and
      (not (= ret@241@01 ret@213@01))
      (not (= ret@241@01 _1@100@01))
      (not (= ret@241@01 ret@367@01)))
    (and
      (not (= _1@100@01 ret@213@01))
      (not (= _1@100@01 ret@241@01))
      (not (= _1@100@01 ret@367@01)))
    (and
      (not (= ret@367@01 ret@213@01))
      (not (= ret@367@01 ret@241@01))
      (not (= ret@367@01 _1@100@01))))
  (and
    (and
      (not
        (=
          ret@444@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      (not
        (=
          ret@444@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))
      (not (= ret@444@01 ret@289@01)))
    (and
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
          ret@444@01))
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
          ret@289@01)))
    (and
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
          ret@444@01))
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
          ret@289@01)))
    (and
      (not (= ret@289@01 ret@444@01))
      (not
        (=
          ret@289@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      (not
        (=
          ret@289@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))
  (and (not (= ret@207@01 ret@222@01)) (not (= ret@222@01 ret@207@01)))
  (and
    (and
      (not (= $t@210@01 $t@225@01))
      (not (= $t@210@01 ret@253@01))
      (not (= $t@210@01 ret@379@01)))
    (and
      (not (= $t@225@01 $t@210@01))
      (not (= $t@225@01 ret@253@01))
      (not (= $t@225@01 ret@379@01)))
    (and
      (not (= ret@253@01 $t@210@01))
      (not (= ret@253@01 $t@225@01))
      (not (= ret@253@01 ret@379@01)))
    (and
      (not (= ret@379@01 $t@210@01))
      (not (= ret@379@01 $t@225@01))
      (not (= ret@379@01 ret@253@01))))))
(assert (and
  (and
    (and (not (= $t@210@01 ret@253@01)) (not (= $t@210@01 ret@379@01)))
    (and (not (= $t@225@01 ret@253@01)) (not (= $t@225@01 ret@379@01)))
    (and (not (= ret@253@01 $t@210@01)) (not (= ret@253@01 $t@225@01)))
    (and (not (= ret@379@01 $t@210@01)) (not (= ret@379@01 $t@225@01))))
  (and (not (= ret@207@01 ret@222@01)) (not (= ret@222@01 ret@207@01)))))
; [eval] 0 <= _pure_2
(set-option :timeout 0)
(push) ; 40
(assert (not (<= 0 fresh__1@463@01)))
(check-sat)
; unknown
(pop) ; 40
; 0.00s
; (get-info :all-statistics)
(pop) ; 39
(pop) ; 38
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
  (and
    (or (<= 0 wi@462@01) (not (<= 0 wi@462@01)))
    (=>
      (and
        (<= 0 wi@462@01)
        (<
          wi@462@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
      (and
        (<= 0 wi@462@01)
        (<
          wi@462@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
        (<= 0 (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1))
        (<=
          (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@363@01
            $Snap.unit) $t@453@01))
        (<= wi@462@01 _2@101@01)
        (<= 0 _2@101@01)
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
          1) wi@462@01 _2@101@01)
        (<
          (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (<
          wi@462@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
          1) wi@462@01)))
    (or
      (not
        (and
          (<= 0 wi@462@01)
          (<
            wi@462@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
      (and
        (<= 0 wi@462@01)
        (<
          wi@462@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
  
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|)))
(push) ; 38
; [then-branch: 75 | !(QA wi@462@01,fresh__1@463@01 :: 0 <= wi@462@01 && wi@462@01 < First:(First:($t@452@01)) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(($t@363@01, (_, (_, (_, (_, (_, (_, _))))))), $t@453@01, First:($t@454@01) + 1, wi@462@01, _2@101@01) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:($t@452@01)), (_, (_, (_, (_, (_, _)))))), ret@230@01, First:($t@454@01) + 1, wi@462@01)) | live]
; [else-branch: 75 | QA wi@462@01,fresh__1@463@01 :: 0 <= wi@462@01 && wi@462@01 < First:(First:($t@452@01)) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(($t@363@01, (_, (_, (_, (_, (_, (_, _))))))), $t@453@01, First:($t@454@01) + 1, wi@462@01, _2@101@01) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:($t@452@01)), (_, (_, (_, (_, (_, _)))))), ret@230@01, First:($t@454@01) + 1, wi@462@01) | live]
(push) ; 39
; [then-branch: 75 | !(QA wi@462@01,fresh__1@463@01 :: 0 <= wi@462@01 && wi@462@01 < First:(First:($t@452@01)) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(($t@363@01, (_, (_, (_, (_, (_, (_, _))))))), $t@453@01, First:($t@454@01) + 1, wi@462@01, _2@101@01) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:($t@452@01)), (_, (_, (_, (_, (_, _)))))), ret@230@01, First:($t@454@01) + 1, wi@462@01))]
(assert (not
  (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
    (=>
      (and
        (<= 0 wi@462@01)
        (<
          wi@462@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
      (=
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
          1) wi@462@01 _2@101@01)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
          1) wi@462@01)))
    
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))
(pop) ; 39
(push) ; 39
; [else-branch: 75 | QA wi@462@01,fresh__1@463@01 :: 0 <= wi@462@01 && wi@462@01 < First:(First:($t@452@01)) ==> m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$(($t@363@01, (_, (_, (_, (_, (_, (_, _))))))), $t@453@01, First:($t@454@01) + 1, wi@462@01, _2@101@01) == m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$((First:(Second:($t@452@01)), (_, (_, (_, (_, (_, _)))))), ret@230@01, First:($t@454@01) + 1, wi@462@01)]
(assert (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
  (=>
    (and
      (<= 0 wi@462@01)
      (<
        wi@462@01
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
    (=
      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
        1) wi@462@01 _2@101@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
        1) wi@462@01)))
  
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|)))
; [eval] (forall ii: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) } 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0)
(declare-const ii@464@01 Int)
(push) ; 40
; [eval] 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0
; [eval] 0 <= ii && ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] 0 <= ii
(push) ; 41
; [then-branch: 76 | !(0 <= ii@464@01) | live]
; [else-branch: 76 | 0 <= ii@464@01 | live]
(push) ; 42
; [then-branch: 76 | !(0 <= ii@464@01)]
(assert (not (<= 0 ii@464@01)))
(pop) ; 42
(push) ; 42
; [else-branch: 76 | 0 <= ii@464@01]
(assert (<= 0 ii@464@01))
; [eval] ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_3)
(push) ; 43
; [eval] read$()
(push) ; 44
(pop) ; 44
; Joined path conditions
(push) ; 44
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 44
; 0.00s
; (get-info :all-statistics)
(push) ; 44
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 44
; 0.00s
; (get-info :all-statistics)
(pop) ; 43
; Joined path conditions
(pop) ; 42
(pop) ; 41
; Joined path conditions
; Joined path conditions
(assert (or (<= 0 ii@464@01) (not (<= 0 ii@464@01))))
(set-option :timeout 0)
(push) ; 41
; [then-branch: 77 | 0 <= ii@464@01 && ii@464@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01) | live]
; [else-branch: 77 | !(0 <= ii@464@01 && ii@464@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01)) | live]
(push) ; 42
; [then-branch: 77 | 0 <= ii@464@01 && ii@464@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01)]
(assert (and
  (<= 0 ii@464@01)
  (<
    ii@464@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0) == 0
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_3, ii, 0)
(push) ; 43
; [eval] read$()
(push) ; 44
(pop) ; 44
; Joined path conditions
(push) ; 44
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 44
; 0.00s
; (get-info :all-statistics)
(push) ; 44
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 44
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 44
; [eval] read$()
(push) ; 45
(pop) ; 45
; Joined path conditions
(push) ; 45
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 45
; 0.00s
; (get-info :all-statistics)
(push) ; 45
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 45
; 0.00s
; (get-info :all-statistics)
(pop) ; 44
; Joined path conditions
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 44
; [eval] read$()
(push) ; 45
(pop) ; 45
; Joined path conditions
(push) ; 45
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 45
; 0.00s
; (get-info :all-statistics)
(push) ; 45
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 45
; 0.00s
; (get-info :all-statistics)
(pop) ; 44
; Joined path conditions
(set-option :timeout 0)
(push) ; 44
(assert (not (<
  0
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 44
; 0.00s
; (get-info :all-statistics)
(assert (<
  0
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first ($Snap.second $t@452@01))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0))
(pop) ; 43
; Joined path conditions
(assert (and
  (<
    0
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0)))
(pop) ; 42
(push) ; 42
; [else-branch: 77 | !(0 <= ii@464@01 && ii@464@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:(Second:($t@452@01)), _), ret@230@01))]
(assert (not
  (and
    (<= 0 ii@464@01)
    (<
      ii@464@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01)))))
(pop) ; 42
(pop) ; 41
; Joined path conditions
(assert (=>
  (and
    (<= 0 ii@464@01)
    (<
      ii@464@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01)))
  (and
    (<= 0 ii@464@01)
    (<
      ii@464@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01))
    (<
      0
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 ii@464@01)
      (<
        ii@464@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01))))
  (and
    (<= 0 ii@464@01)
    (<
      ii@464@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01)))))
(pop) ; 40
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((ii@464@01 Int)) (!
  (and
    (or (<= 0 ii@464@01) (not (<= 0 ii@464@01)))
    (=>
      (and
        (<= 0 ii@464@01)
        (<
          ii@464@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)))
      (and
        (<= 0 ii@464@01)
        (<
          ii@464@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (<
          0
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0)))
    (or
      (not
        (and
          (<= 0 ii@464@01)
          (<
            ii@464@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))))
      (and
        (<= 0 ii@464@01)
        (<
          ii@464@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first ($Snap.second $t@452@01))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|)))
(pop) ; 39
(pop) ; 38
; Joined path conditions
; Joined path conditions
(assert (=>
  (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
    (=>
      (and
        (<= 0 wi@462@01)
        (<
          wi@462@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
      (=
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
          1) wi@462@01 _2@101@01)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
          1) wi@462@01)))
    
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
  (and
    (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
      (=>
        (and
          (<= 0 wi@462@01)
          (<
            wi@462@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
        (=
          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
            $t@363@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
            1) wi@462@01 _2@101@01)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
            1) wi@462@01)))
      
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
    (forall ((ii@464@01 Int)) (!
      (and
        (or (<= 0 ii@464@01) (not (<= 0 ii@464@01)))
        (=>
          (and
            (<= 0 ii@464@01)
            (<
              ii@464@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01)))
          (and
            (<= 0 ii@464@01)
            (<
              ii@464@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (<
              0
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0)))
        (or
          (not
            (and
              (<= 0 ii@464@01)
              (<
                ii@464@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))))
          (and
            (<= 0 ii@464@01)
            (<
              ii@464@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01)))))
      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|)))))
(assert (or
  (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
    (=>
      (and
        (<= 0 wi@462@01)
        (<
          wi@462@01
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
      (=
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
          1) wi@462@01 _2@101@01)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
          1) wi@462@01)))
    
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
  (not
    (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
      (=>
        (and
          (<= 0 wi@462@01)
          (<
            wi@462@01
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
        (=
          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
            $t@363@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
            1) wi@462@01 _2@101@01)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
            1) wi@462@01)))
      
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|)))))
(pop) ; 37
(pop) ; 36
; Joined path conditions
; Joined path conditions
(assert (=>
  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
    (=>
      (and
        (<= 0 ii@460@01)
        (and
          (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
          (and
            (<= 0 wi@461@01)
            (<
              wi@461@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01)))))
      (=
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
      $t@363@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
  (and
    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
      (=>
        (and
          (<= 0 ii@460@01)
          (and
            (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
            (and
              (<= 0 wi@461@01)
              (<
                wi@461@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01)))))
        (=
          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
            $t@363@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
        $t@363@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
    (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
      (and
        (or (<= 0 wi@462@01) (not (<= 0 wi@462@01)))
        (=>
          (and
            (<= 0 wi@462@01)
            (<
              wi@462@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
          (and
            (<= 0 wi@462@01)
            (<
              wi@462@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
            (<= 0 (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1))
            (<=
              (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@363@01
                $Snap.unit) $t@453@01))
            (<= wi@462@01 _2@101@01)
            (<= 0 _2@101@01)
            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
              $t@363@01
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
              1) wi@462@01 _2@101@01)
            (<
              (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (<
              wi@462@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
              1) wi@462@01)))
        (or
          (not
            (and
              (<= 0 wi@462@01)
              (<
                wi@462@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
          (and
            (<= 0 wi@462@01)
            (<
              wi@462@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
      
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
    (=>
      (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
        (=>
          (and
            (<= 0 wi@462@01)
            (<
              wi@462@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
          (=
            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
              $t@363@01
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
              1) wi@462@01 _2@101@01)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
              1) wi@462@01)))
        
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
      (and
        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
          (=>
            (and
              (<= 0 wi@462@01)
              (<
                wi@462@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
            (=
              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                $t@363@01
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                1) wi@462@01 _2@101@01)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                1) wi@462@01)))
          
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
        (forall ((ii@464@01 Int)) (!
          (and
            (or (<= 0 ii@464@01) (not (<= 0 ii@464@01)))
            (=>
              (and
                (<= 0 ii@464@01)
                (<
                  ii@464@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01)))
              (and
                (<= 0 ii@464@01)
                (<
                  ii@464@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))
                (<
                  0
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0)))
            (or
              (not
                (and
                  (<= 0 ii@464@01)
                  (<
                    ii@464@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01))))
              (and
                (<= 0 ii@464@01)
                (<
                  ii@464@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01)))))
          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
    (or
      (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
        (=>
          (and
            (<= 0 wi@462@01)
            (<
              wi@462@01
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
          (=
            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
              $t@363@01
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
              1) wi@462@01 _2@101@01)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
              1) wi@462@01)))
        
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
      (not
        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
          (=>
            (and
              (<= 0 wi@462@01)
              (<
                wi@462@01
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
            (=
              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                $t@363@01
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                1) wi@462@01 _2@101@01)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                1) wi@462@01)))
          
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|)))))))
(assert (or
  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
    (=>
      (and
        (<= 0 ii@460@01)
        (and
          (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
          (and
            (<= 0 wi@461@01)
            (<
              wi@461@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01)))))
      (=
        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
      $t@363@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
  (not
    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
      (=>
        (and
          (<= 0 ii@460@01)
          (and
            (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
            (and
              (<= 0 wi@461@01)
              (<
                wi@461@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01)))))
        (=
          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
            $t@363@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
        $t@363@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|)))))
(pop) ; 35
(pop) ; 34
; Joined path conditions
; Joined path conditions
(assert (=>
  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
    (=>
      (and
        (<= 0 ii@458@01)
        (and
          (<
            ii@458@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@459@01)
            (<
              wi@459@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01)))))
      (>=
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
        0))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
  (and
    (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
      (=>
        (and
          (<= 0 ii@458@01)
          (and
            (<
              ii@458@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (and
              (<= 0 wi@459@01)
              (<
                wi@459@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01)))))
        (>=
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
          0))
      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
      (and
        (=>
          (<= 0 ii@460@01)
          (and
            (<= 0 ii@460@01)
            (=>
              (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
              (and
                (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                (or (<= 0 wi@461@01) (not (<= 0 wi@461@01)))))
            (or
              (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
              (not
                (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
        (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
        (=>
          (and
            (<= 0 ii@460@01)
            (and
              (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
              (and
                (<= 0 wi@461@01)
                (<
                  wi@461@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01)))))
          (and
            (<= 0 ii@460@01)
            (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
            (<= 0 wi@461@01)
            (<
              wi@461@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (<=
              ii@460@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@363@01
                $Snap.unit) $t@453@01))
            (<= wi@461@01 _2@101@01)
            (<= 0 _2@101@01)
            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
              $t@363@01
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
            (<
              ii@460@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
        (or
          (not
            (and
              (<= 0 ii@460@01)
              (and
                (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                (and
                  (<= 0 wi@461@01)
                  (<
                    wi@461@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01))))))
          (and
            (<= 0 ii@460@01)
            (and
              (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
              (and
                (<= 0 wi@461@01)
                (<
                  wi@461@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01)))))))
      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
        $t@363@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
      (and
        (=>
          (<= 0 ii@460@01)
          (and
            (<= 0 ii@460@01)
            (=>
              (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
              (and
                (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                (or (<= 0 wi@461@01) (not (<= 0 wi@461@01)))))
            (or
              (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
              (not
                (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
        (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
        (=>
          (and
            (<= 0 ii@460@01)
            (and
              (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
              (and
                (<= 0 wi@461@01)
                (<
                  wi@461@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01)))))
          (and
            (<= 0 ii@460@01)
            (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
            (<= 0 wi@461@01)
            (<
              wi@461@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (<=
              ii@460@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@363@01
                $Snap.unit) $t@453@01))
            (<= wi@461@01 _2@101@01)
            (<= 0 _2@101@01)
            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
              $t@363@01
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
            (<
              ii@460@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
        (or
          (not
            (and
              (<= 0 ii@460@01)
              (and
                (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                (and
                  (<= 0 wi@461@01)
                  (<
                    wi@461@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01))))))
          (and
            (<= 0 ii@460@01)
            (and
              (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
              (and
                (<= 0 wi@461@01)
                (<
                  wi@461@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01)))))))
      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
    (=>
      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
        (=>
          (and
            (<= 0 ii@460@01)
            (and
              (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
              (and
                (<= 0 wi@461@01)
                (<
                  wi@461@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01)))))
          (=
            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
              $t@363@01
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
      (and
        (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
          (=>
            (and
              (<= 0 ii@460@01)
              (and
                (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                (and
                  (<= 0 wi@461@01)
                  (<
                    wi@461@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01)))))
            (=
              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                $t@363@01
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
          :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
            $t@363@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
          (and
            (or (<= 0 wi@462@01) (not (<= 0 wi@462@01)))
            (=>
              (and
                (<= 0 wi@462@01)
                (<
                  wi@462@01
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
              (and
                (<= 0 wi@462@01)
                (<
                  wi@462@01
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                (<= 0 (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1))
                (<=
                  (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    $t@363@01
                    $Snap.unit) $t@453@01))
                (<= wi@462@01 _2@101@01)
                (<= 0 _2@101@01)
                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                  $t@363@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                  1) wi@462@01 _2@101@01)
                (<
                  (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))
                (<
                  wi@462@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                  1) wi@462@01)))
            (or
              (not
                (and
                  (<= 0 wi@462@01)
                  (<
                    wi@462@01
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
              (and
                (<= 0 wi@462@01)
                (<
                  wi@462@01
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
          
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
        (=>
          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
            (=>
              (and
                (<= 0 wi@462@01)
                (<
                  wi@462@01
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
              (=
                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                  $t@363@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                  1) wi@462@01 _2@101@01)
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                  1) wi@462@01)))
            
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
          (and
            (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
              (=>
                (and
                  (<= 0 wi@462@01)
                  (<
                    wi@462@01
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                (=
                  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                    $t@363@01
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                    1) wi@462@01 _2@101@01)
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                    1) wi@462@01)))
              
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
            (forall ((ii@464@01 Int)) (!
              (and
                (or (<= 0 ii@464@01) (not (<= 0 ii@464@01)))
                (=>
                  (and
                    (<= 0 ii@464@01)
                    (<
                      ii@464@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01)))
                  (and
                    (<= 0 ii@464@01)
                    (<
                      ii@464@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (<
                      0
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                (or
                  (not
                    (and
                      (<= 0 ii@464@01)
                      (<
                        ii@464@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))))
                  (and
                    (<= 0 ii@464@01)
                    (<
                      ii@464@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01)))))
              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
        (or
          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
            (=>
              (and
                (<= 0 wi@462@01)
                (<
                  wi@462@01
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
              (=
                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                  $t@363@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                  1) wi@462@01 _2@101@01)
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                  1) wi@462@01)))
            
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
          (not
            (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
              (=>
                (and
                  (<= 0 wi@462@01)
                  (<
                    wi@462@01
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                (=
                  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                    $t@363@01
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                    1) wi@462@01 _2@101@01)
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                    1) wi@462@01)))
              
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
    (or
      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
        (=>
          (and
            (<= 0 ii@460@01)
            (and
              (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
              (and
                (<= 0 wi@461@01)
                (<
                  wi@461@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01)))))
          (=
            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
              $t@363@01
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
          $t@363@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
      (not
        (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
          (=>
            (and
              (<= 0 ii@460@01)
              (and
                (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                (and
                  (<= 0 wi@461@01)
                  (<
                    wi@461@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01)))))
            (=
              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                $t@363@01
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
          :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
            $t@363@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|)))))))
(assert (or
  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
    (=>
      (and
        (<= 0 ii@458@01)
        (and
          (<
            ii@458@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@459@01)
            (<
              wi@459@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01)))))
      (>=
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
        0))
    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
  (not
    (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
      (=>
        (and
          (<= 0 ii@458@01)
          (and
            (<
              ii@458@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (and
              (<= 0 wi@459@01)
              (<
                wi@459@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01)))))
        (>=
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
          0))
      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|)))))
(pop) ; 33
(pop) ; 32
; Joined path conditions
; Joined path conditions
(assert (=>
  (=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
      $t@363@01
      ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
  (and
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
    (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
      (and
        (=>
          (<= 0 ii@458@01)
          (and
            (<= 0 ii@458@01)
            (=>
              (<
                ii@458@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))
              (and
                (<
                  ii@458@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))
                (or (<= 0 wi@459@01) (not (<= 0 wi@459@01)))))
            (or
              (<
                ii@458@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))
              (not
                (<
                  ii@458@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))))))
        (or (<= 0 ii@458@01) (not (<= 0 ii@458@01)))
        (=>
          (and
            (<= 0 ii@458@01)
            (and
              (<
                ii@458@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))
              (and
                (<= 0 wi@459@01)
                (<
                  wi@459@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01)))))
          (and
            (<= 0 ii@458@01)
            (<
              ii@458@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (<= 0 wi@459@01)
            (<
              wi@459@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
        (or
          (not
            (and
              (<= 0 ii@458@01)
              (and
                (<
                  ii@458@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))
                (and
                  (<= 0 wi@459@01)
                  (<
                    wi@459@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01))))))
          (and
            (<= 0 ii@458@01)
            (and
              (<
                ii@458@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))
              (and
                (<= 0 wi@459@01)
                (<
                  wi@459@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01)))))))
      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
    (=>
      (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
        (=>
          (and
            (<= 0 ii@458@01)
            (and
              (<
                ii@458@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))
              (and
                (<= 0 wi@459@01)
                (<
                  wi@459@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01)))))
          (>=
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
            0))
        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
      (and
        (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
          (=>
            (and
              (<= 0 ii@458@01)
              (and
                (<
                  ii@458@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))
                (and
                  (<= 0 wi@459@01)
                  (<
                    wi@459@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01)))))
            (>=
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
              0))
          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
        (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
          (and
            (=>
              (<= 0 ii@460@01)
              (and
                (<= 0 ii@460@01)
                (=>
                  (<=
                    ii@460@01
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                  (and
                    (<=
                      ii@460@01
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                    (or (<= 0 wi@461@01) (not (<= 0 wi@461@01)))))
                (or
                  (<=
                    ii@460@01
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                  (not
                    (<=
                      ii@460@01
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
            (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
            (=>
              (and
                (<= 0 ii@460@01)
                (and
                  (<=
                    ii@460@01
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                  (and
                    (<= 0 wi@461@01)
                    (<
                      wi@461@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01)))))
              (and
                (<= 0 ii@460@01)
                (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                (<= 0 wi@461@01)
                (<
                  wi@461@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))
                (<=
                  ii@460@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    $t@363@01
                    $Snap.unit) $t@453@01))
                (<= wi@461@01 _2@101@01)
                (<= 0 _2@101@01)
                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                  $t@363@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                (<
                  ii@460@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
            (or
              (not
                (and
                  (<= 0 ii@460@01)
                  (and
                    (<=
                      ii@460@01
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                    (and
                      (<= 0 wi@461@01)
                      (<
                        wi@461@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))))))
              (and
                (<= 0 ii@460@01)
                (and
                  (<=
                    ii@460@01
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                  (and
                    (<= 0 wi@461@01)
                    (<
                      wi@461@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01)))))))
          :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
            $t@363@01
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
        (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
          (and
            (=>
              (<= 0 ii@460@01)
              (and
                (<= 0 ii@460@01)
                (=>
                  (<=
                    ii@460@01
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                  (and
                    (<=
                      ii@460@01
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                    (or (<= 0 wi@461@01) (not (<= 0 wi@461@01)))))
                (or
                  (<=
                    ii@460@01
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                  (not
                    (<=
                      ii@460@01
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
            (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
            (=>
              (and
                (<= 0 ii@460@01)
                (and
                  (<=
                    ii@460@01
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                  (and
                    (<= 0 wi@461@01)
                    (<
                      wi@461@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01)))))
              (and
                (<= 0 ii@460@01)
                (<= ii@460@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                (<= 0 wi@461@01)
                (<
                  wi@461@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))
                (<=
                  ii@460@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    $t@363@01
                    $Snap.unit) $t@453@01))
                (<= wi@461@01 _2@101@01)
                (<= 0 _2@101@01)
                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                  $t@363@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                (<
                  ii@460@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
            (or
              (not
                (and
                  (<= 0 ii@460@01)
                  (and
                    (<=
                      ii@460@01
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                    (and
                      (<= 0 wi@461@01)
                      (<
                        wi@461@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))))))
              (and
                (<= 0 ii@460@01)
                (and
                  (<=
                    ii@460@01
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                  (and
                    (<= 0 wi@461@01)
                    (<
                      wi@461@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01)))))))
          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
        (=>
          (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
            (=>
              (and
                (<= 0 ii@460@01)
                (and
                  (<=
                    ii@460@01
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                  (and
                    (<= 0 wi@461@01)
                    (<
                      wi@461@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01)))))
              (=
                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                  $t@363@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
            :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
              $t@363@01
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
          (and
            (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
              (=>
                (and
                  (<= 0 ii@460@01)
                  (and
                    (<=
                      ii@460@01
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                    (and
                      (<= 0 wi@461@01)
                      (<
                        wi@461@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01)))))
                (=
                  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                    $t@363@01
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
              :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                $t@363@01
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
            (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
              (and
                (or (<= 0 wi@462@01) (not (<= 0 wi@462@01)))
                (=>
                  (and
                    (<= 0 wi@462@01)
                    (<
                      wi@462@01
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                  (and
                    (<= 0 wi@462@01)
                    (<
                      wi@462@01
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                    (<=
                      0
                      (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1))
                    (<=
                      (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        $t@363@01
                        $Snap.unit) $t@453@01))
                    (<= wi@462@01 _2@101@01)
                    (<= 0 _2@101@01)
                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                      $t@363@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                      1) wi@462@01 _2@101@01)
                    (<
                      (+ ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) 1)
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (<
                      wi@462@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                      1) wi@462@01)))
                (or
                  (not
                    (and
                      (<= 0 wi@462@01)
                      (<
                        wi@462@01
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                  (and
                    (<= 0 wi@462@01)
                    (<
                      wi@462@01
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
              
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
            (=>
              (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                (=>
                  (and
                    (<= 0 wi@462@01)
                    (<
                      wi@462@01
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                  (=
                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                      $t@363@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                      1) wi@462@01 _2@101@01)
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                      1) wi@462@01)))
                
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
              (and
                (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                  (=>
                    (and
                      (<= 0 wi@462@01)
                      (<
                        wi@462@01
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                    (=
                      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                        $t@363@01
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                        1) wi@462@01 _2@101@01)
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                        1) wi@462@01)))
                  
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                (forall ((ii@464@01 Int)) (!
                  (and
                    (or (<= 0 ii@464@01) (not (<= 0 ii@464@01)))
                    (=>
                      (and
                        (<= 0 ii@464@01)
                        (<
                          ii@464@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01)))
                      (and
                        (<= 0 ii@464@01)
                        (<
                          ii@464@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01))
                        (<
                          0
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                    (or
                      (not
                        (and
                          (<= 0 ii@464@01)
                          (<
                            ii@464@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              $Snap.unit) ret@230@01))))
                      (and
                        (<= 0 ii@464@01)
                        (<
                          ii@464@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01)))))
                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
            (or
              (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                (=>
                  (and
                    (<= 0 wi@462@01)
                    (<
                      wi@462@01
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                  (=
                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                      $t@363@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                      1) wi@462@01 _2@101@01)
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                      1) wi@462@01)))
                
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
              (not
                (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                  (=>
                    (and
                      (<= 0 wi@462@01)
                      (<
                        wi@462@01
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                    (=
                      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                        $t@363@01
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                        1) wi@462@01 _2@101@01)
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                        1) wi@462@01)))
                  
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
        (or
          (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
            (=>
              (and
                (<= 0 ii@460@01)
                (and
                  (<=
                    ii@460@01
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                  (and
                    (<= 0 wi@461@01)
                    (<
                      wi@461@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01)))))
              (=
                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                  $t@363@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
            :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
              $t@363@01
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
          (not
            (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
              (=>
                (and
                  (<= 0 ii@460@01)
                  (and
                    (<=
                      ii@460@01
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                    (and
                      (<= 0 wi@461@01)
                      (<
                        wi@461@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01)))))
                (=
                  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                    $t@363@01
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
              :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                $t@363@01
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
    (or
      (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
        (=>
          (and
            (<= 0 ii@458@01)
            (and
              (<
                ii@458@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))
              (and
                (<= 0 wi@459@01)
                (<
                  wi@459@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01)))))
          (>=
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
            0))
        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
      (not
        (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
          (=>
            (and
              (<= 0 ii@458@01)
              (and
                (<
                  ii@458@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))
                (and
                  (<= 0 wi@459@01)
                  (<
                    wi@459@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01)))))
            (>=
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
              0))
          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|)))))))
(assert (or
  (=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
      $t@363@01
      ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
(pop) ; 31
(pop) ; 30
; Joined path conditions
; Joined path conditions
(assert (=>
  (=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
      $t@363@01
      ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
  (and
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
      $t@363@01
      ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
    (=>
      (=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
      (and
        (=
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
            $t@363@01
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
        (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
          (and
            (=>
              (<= 0 ii@458@01)
              (and
                (<= 0 ii@458@01)
                (=>
                  (<
                    ii@458@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01))
                  (and
                    (<
                      ii@458@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (or (<= 0 wi@459@01) (not (<= 0 wi@459@01)))))
                (or
                  (<
                    ii@458@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01))
                  (not
                    (<
                      ii@458@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))))))
            (or (<= 0 ii@458@01) (not (<= 0 ii@458@01)))
            (=>
              (and
                (<= 0 ii@458@01)
                (and
                  (<
                    ii@458@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01))
                  (and
                    (<= 0 wi@459@01)
                    (<
                      wi@459@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01)))))
              (and
                (<= 0 ii@458@01)
                (<
                  ii@458@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))
                (<= 0 wi@459@01)
                (<
                  wi@459@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
            (or
              (not
                (and
                  (<= 0 ii@458@01)
                  (and
                    (<
                      ii@458@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (and
                      (<= 0 wi@459@01)
                      (<
                        wi@459@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))))))
              (and
                (<= 0 ii@458@01)
                (and
                  (<
                    ii@458@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01))
                  (and
                    (<= 0 wi@459@01)
                    (<
                      wi@459@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01)))))))
          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
        (=>
          (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
            (=>
              (and
                (<= 0 ii@458@01)
                (and
                  (<
                    ii@458@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01))
                  (and
                    (<= 0 wi@459@01)
                    (<
                      wi@459@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01)))))
              (>=
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                0))
            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
          (and
            (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
              (=>
                (and
                  (<= 0 ii@458@01)
                  (and
                    (<
                      ii@458@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (and
                      (<= 0 wi@459@01)
                      (<
                        wi@459@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01)))))
                (>=
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                  0))
              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
            (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
              (and
                (=>
                  (<= 0 ii@460@01)
                  (and
                    (<= 0 ii@460@01)
                    (=>
                      (<=
                        ii@460@01
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                      (and
                        (<=
                          ii@460@01
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (or (<= 0 wi@461@01) (not (<= 0 wi@461@01)))))
                    (or
                      (<=
                        ii@460@01
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                      (not
                        (<=
                          ii@460@01
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
                (=>
                  (and
                    (<= 0 ii@460@01)
                    (and
                      (<=
                        ii@460@01
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                      (and
                        (<= 0 wi@461@01)
                        (<
                          wi@461@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01)))))
                  (and
                    (<= 0 ii@460@01)
                    (<=
                      ii@460@01
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                    (<= 0 wi@461@01)
                    (<
                      wi@461@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (<=
                      ii@460@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        $t@363@01
                        $Snap.unit) $t@453@01))
                    (<= wi@461@01 _2@101@01)
                    (<= 0 _2@101@01)
                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                      $t@363@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                    (<
                      ii@460@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                (or
                  (not
                    (and
                      (<= 0 ii@460@01)
                      (and
                        (<=
                          ii@460@01
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (and
                          (<= 0 wi@461@01)
                          (<
                            wi@461@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              $Snap.unit) ret@230@01))))))
                  (and
                    (<= 0 ii@460@01)
                    (and
                      (<=
                        ii@460@01
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                      (and
                        (<= 0 wi@461@01)
                        (<
                          wi@461@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01)))))))
              :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                $t@363@01
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
            (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
              (and
                (=>
                  (<= 0 ii@460@01)
                  (and
                    (<= 0 ii@460@01)
                    (=>
                      (<=
                        ii@460@01
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                      (and
                        (<=
                          ii@460@01
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (or (<= 0 wi@461@01) (not (<= 0 wi@461@01)))))
                    (or
                      (<=
                        ii@460@01
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                      (not
                        (<=
                          ii@460@01
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
                (=>
                  (and
                    (<= 0 ii@460@01)
                    (and
                      (<=
                        ii@460@01
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                      (and
                        (<= 0 wi@461@01)
                        (<
                          wi@461@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01)))))
                  (and
                    (<= 0 ii@460@01)
                    (<=
                      ii@460@01
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                    (<= 0 wi@461@01)
                    (<
                      wi@461@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (<=
                      ii@460@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        $t@363@01
                        $Snap.unit) $t@453@01))
                    (<= wi@461@01 _2@101@01)
                    (<= 0 _2@101@01)
                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                      $t@363@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                    (<
                      ii@460@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                (or
                  (not
                    (and
                      (<= 0 ii@460@01)
                      (and
                        (<=
                          ii@460@01
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (and
                          (<= 0 wi@461@01)
                          (<
                            wi@461@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              $Snap.unit) ret@230@01))))))
                  (and
                    (<= 0 ii@460@01)
                    (and
                      (<=
                        ii@460@01
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                      (and
                        (<= 0 wi@461@01)
                        (<
                          wi@461@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01)))))))
              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
            (=>
              (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                (=>
                  (and
                    (<= 0 ii@460@01)
                    (and
                      (<=
                        ii@460@01
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                      (and
                        (<= 0 wi@461@01)
                        (<
                          wi@461@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01)))))
                  (=
                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                      $t@363@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                  $t@363@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
              (and
                (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                  (=>
                    (and
                      (<= 0 ii@460@01)
                      (and
                        (<=
                          ii@460@01
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (and
                          (<= 0 wi@461@01)
                          (<
                            wi@461@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              $Snap.unit) ret@230@01)))))
                    (=
                      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                        $t@363@01
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                    $t@363@01
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                  (and
                    (or (<= 0 wi@462@01) (not (<= 0 wi@462@01)))
                    (=>
                      (and
                        (<= 0 wi@462@01)
                        (<
                          wi@462@01
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                      (and
                        (<= 0 wi@462@01)
                        (<
                          wi@462@01
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                        (<=
                          0
                          (+
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                            1))
                        (<=
                          (+
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                            1)
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            $t@363@01
                            $Snap.unit) $t@453@01))
                        (<= wi@462@01 _2@101@01)
                        (<= 0 _2@101@01)
                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                          1) wi@462@01 _2@101@01)
                        (<
                          (+
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                            1)
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01))
                        (<
                          wi@462@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                          1) wi@462@01)))
                    (or
                      (not
                        (and
                          (<= 0 wi@462@01)
                          (<
                            wi@462@01
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                      (and
                        (<= 0 wi@462@01)
                        (<
                          wi@462@01
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
                  
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
                (=>
                  (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                    (=>
                      (and
                        (<= 0 wi@462@01)
                        (<
                          wi@462@01
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                      (=
                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                          1) wi@462@01 _2@101@01)
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                          1) wi@462@01)))
                    
                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                  (and
                    (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                      (=>
                        (and
                          (<= 0 wi@462@01)
                          (<
                            wi@462@01
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                        (=
                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                            $t@363@01
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                            1) wi@462@01 _2@101@01)
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                            1) wi@462@01)))
                      
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                    (forall ((ii@464@01 Int)) (!
                      (and
                        (or (<= 0 ii@464@01) (not (<= 0 ii@464@01)))
                        (=>
                          (and
                            (<= 0 ii@464@01)
                            (<
                              ii@464@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01)))
                          (and
                            (<= 0 ii@464@01)
                            (<
                              ii@464@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01))
                            (<
                              0
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                        (or
                          (not
                            (and
                              (<= 0 ii@464@01)
                              (<
                                ii@464@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  $Snap.unit) ret@230@01))))
                          (and
                            (<= 0 ii@464@01)
                            (<
                              ii@464@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01)))))
                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
                (or
                  (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                    (=>
                      (and
                        (<= 0 wi@462@01)
                        (<
                          wi@462@01
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                      (=
                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                          1) wi@462@01 _2@101@01)
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                          1) wi@462@01)))
                    
                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                  (not
                    (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                      (=>
                        (and
                          (<= 0 wi@462@01)
                          (<
                            wi@462@01
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                        (=
                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                            $t@363@01
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                            1) wi@462@01 _2@101@01)
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                            1) wi@462@01)))
                      
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
            (or
              (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                (=>
                  (and
                    (<= 0 ii@460@01)
                    (and
                      (<=
                        ii@460@01
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                      (and
                        (<= 0 wi@461@01)
                        (<
                          wi@461@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01)))))
                  (=
                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                      $t@363@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                  $t@363@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
              (not
                (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                  (=>
                    (and
                      (<= 0 ii@460@01)
                      (and
                        (<=
                          ii@460@01
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (and
                          (<= 0 wi@461@01)
                          (<
                            wi@461@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              $Snap.unit) ret@230@01)))))
                    (=
                      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                        $t@363@01
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                    $t@363@01
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
        (or
          (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
            (=>
              (and
                (<= 0 ii@458@01)
                (and
                  (<
                    ii@458@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01))
                  (and
                    (<= 0 wi@459@01)
                    (<
                      wi@459@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01)))))
              (>=
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                0))
            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              ($Snap.combine
                $Snap.unit
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
          (not
            (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
              (=>
                (and
                  (<= 0 ii@458@01)
                  (and
                    (<
                      ii@458@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (and
                      (<= 0 wi@459@01)
                      (<
                        wi@459@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01)))))
                (>=
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                  0))
              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))))
    (or
      (=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
      (not
        (=
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
            $t@363@01
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))))
(assert (or
  (=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
      $t@363@01
      ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
        $t@363@01
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
(pop) ; 29
(pop) ; 28
; Joined path conditions
; Joined path conditions
(assert (=>
  (< _2@101@01 18446744073709551615)
  (and
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
      $t@363@01
      ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
    (=>
      (=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
      (and
        (=
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
            $t@363@01
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
          $t@363@01
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
        (=>
          (=
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
              $t@363@01
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
          (and
            (=
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                $t@363@01
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
            (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
              (and
                (=>
                  (<= 0 ii@458@01)
                  (and
                    (<= 0 ii@458@01)
                    (=>
                      (<
                        ii@458@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))
                      (and
                        (<
                          ii@458@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01))
                        (or (<= 0 wi@459@01) (not (<= 0 wi@459@01)))))
                    (or
                      (<
                        ii@458@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))
                      (not
                        (<
                          ii@458@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01))))))
                (or (<= 0 ii@458@01) (not (<= 0 ii@458@01)))
                (=>
                  (and
                    (<= 0 ii@458@01)
                    (and
                      (<
                        ii@458@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))
                      (and
                        (<= 0 wi@459@01)
                        (<
                          wi@459@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01)))))
                  (and
                    (<= 0 ii@458@01)
                    (<
                      ii@458@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (<= 0 wi@459@01)
                    (<
                      wi@459@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
                (or
                  (not
                    (and
                      (<= 0 ii@458@01)
                      (and
                        (<
                          ii@458@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01))
                        (and
                          (<= 0 wi@459@01)
                          (<
                            wi@459@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              $Snap.unit) ret@230@01))))))
                  (and
                    (<= 0 ii@458@01)
                    (and
                      (<
                        ii@458@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))
                      (and
                        (<= 0 wi@459@01)
                        (<
                          wi@459@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01)))))))
              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                ($Snap.combine
                  $Snap.unit
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
            (=>
              (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                (=>
                  (and
                    (<= 0 ii@458@01)
                    (and
                      (<
                        ii@458@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))
                      (and
                        (<= 0 wi@459@01)
                        (<
                          wi@459@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01)))))
                  (>=
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                    0))
                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
              (and
                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                  (=>
                    (and
                      (<= 0 ii@458@01)
                      (and
                        (<
                          ii@458@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01))
                        (and
                          (<= 0 wi@459@01)
                          (<
                            wi@459@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              $Snap.unit) ret@230@01)))))
                    (>=
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                      0))
                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                  (and
                    (=>
                      (<= 0 ii@460@01)
                      (and
                        (<= 0 ii@460@01)
                        (=>
                          (<=
                            ii@460@01
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                          (and
                            (<=
                              ii@460@01
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                            (or (<= 0 wi@461@01) (not (<= 0 wi@461@01)))))
                        (or
                          (<=
                            ii@460@01
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                          (not
                            (<=
                              ii@460@01
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                    (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
                    (=>
                      (and
                        (<= 0 ii@460@01)
                        (and
                          (<=
                            ii@460@01
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                          (and
                            (<= 0 wi@461@01)
                            (<
                              wi@461@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01)))))
                      (and
                        (<= 0 ii@460@01)
                        (<=
                          ii@460@01
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (<= 0 wi@461@01)
                        (<
                          wi@461@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01))
                        (<=
                          ii@460@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            $t@363@01
                            $Snap.unit) $t@453@01))
                        (<= wi@461@01 _2@101@01)
                        (<= 0 _2@101@01)
                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                        (<
                          ii@460@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                    (or
                      (not
                        (and
                          (<= 0 ii@460@01)
                          (and
                            (<=
                              ii@460@01
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                            (and
                              (<= 0 wi@461@01)
                              (<
                                wi@461@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  $Snap.unit) ret@230@01))))))
                      (and
                        (<= 0 ii@460@01)
                        (and
                          (<=
                            ii@460@01
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                          (and
                            (<= 0 wi@461@01)
                            (<
                              wi@461@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01)))))))
                  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                    $t@363@01
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                  (and
                    (=>
                      (<= 0 ii@460@01)
                      (and
                        (<= 0 ii@460@01)
                        (=>
                          (<=
                            ii@460@01
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                          (and
                            (<=
                              ii@460@01
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                            (or (<= 0 wi@461@01) (not (<= 0 wi@461@01)))))
                        (or
                          (<=
                            ii@460@01
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                          (not
                            (<=
                              ii@460@01
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                    (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
                    (=>
                      (and
                        (<= 0 ii@460@01)
                        (and
                          (<=
                            ii@460@01
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                          (and
                            (<= 0 wi@461@01)
                            (<
                              wi@461@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01)))))
                      (and
                        (<= 0 ii@460@01)
                        (<=
                          ii@460@01
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (<= 0 wi@461@01)
                        (<
                          wi@461@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01))
                        (<=
                          ii@460@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            $t@363@01
                            $Snap.unit) $t@453@01))
                        (<= wi@461@01 _2@101@01)
                        (<= 0 _2@101@01)
                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                        (<
                          ii@460@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                    (or
                      (not
                        (and
                          (<= 0 ii@460@01)
                          (and
                            (<=
                              ii@460@01
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                            (and
                              (<= 0 wi@461@01)
                              (<
                                wi@461@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  $Snap.unit) ret@230@01))))))
                      (and
                        (<= 0 ii@460@01)
                        (and
                          (<=
                            ii@460@01
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                          (and
                            (<= 0 wi@461@01)
                            (<
                              wi@461@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01)))))))
                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                (=>
                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                    (=>
                      (and
                        (<= 0 ii@460@01)
                        (and
                          (<=
                            ii@460@01
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                          (and
                            (<= 0 wi@461@01)
                            (<
                              wi@461@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01)))))
                      (=
                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                      $t@363@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                  (and
                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                      (=>
                        (and
                          (<= 0 ii@460@01)
                          (and
                            (<=
                              ii@460@01
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                            (and
                              (<= 0 wi@461@01)
                              (<
                                wi@461@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  $Snap.unit) ret@230@01)))))
                        (=
                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                            $t@363@01
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                        $t@363@01
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                    (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                      (and
                        (or (<= 0 wi@462@01) (not (<= 0 wi@462@01)))
                        (=>
                          (and
                            (<= 0 wi@462@01)
                            (<
                              wi@462@01
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                          (and
                            (<= 0 wi@462@01)
                            (<
                              wi@462@01
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                            (<=
                              0
                              (+
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                1))
                            (<=
                              (+
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                1)
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@363@01
                                $Snap.unit) $t@453@01))
                            (<= wi@462@01 _2@101@01)
                            (<= 0 _2@101@01)
                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              1) wi@462@01 _2@101@01)
                            (<
                              (+
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                1)
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01))
                            (<
                              wi@462@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              1) wi@462@01)))
                        (or
                          (not
                            (and
                              (<= 0 wi@462@01)
                              (<
                                wi@462@01
                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                          (and
                            (<= 0 wi@462@01)
                            (<
                              wi@462@01
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
                      
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
                    (=>
                      (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                        (=>
                          (and
                            (<= 0 wi@462@01)
                            (<
                              wi@462@01
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                          (=
                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              1) wi@462@01 _2@101@01)
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              1) wi@462@01)))
                        
                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                      (and
                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                          (=>
                            (and
                              (<= 0 wi@462@01)
                              (<
                                wi@462@01
                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                            (=
                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                $t@363@01
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                1) wi@462@01 _2@101@01)
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                1) wi@462@01)))
                          
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                        (forall ((ii@464@01 Int)) (!
                          (and
                            (or (<= 0 ii@464@01) (not (<= 0 ii@464@01)))
                            (=>
                              (and
                                (<= 0 ii@464@01)
                                (<
                                  ii@464@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01)))
                              (and
                                (<= 0 ii@464@01)
                                (<
                                  ii@464@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))
                                (<
                                  0
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                            (or
                              (not
                                (and
                                  (<= 0 ii@464@01)
                                  (<
                                    ii@464@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01))))
                              (and
                                (<= 0 ii@464@01)
                                (<
                                  ii@464@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01)))))
                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
                    (or
                      (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                        (=>
                          (and
                            (<= 0 wi@462@01)
                            (<
                              wi@462@01
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                          (=
                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              1) wi@462@01 _2@101@01)
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              1) wi@462@01)))
                        
                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                      (not
                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                          (=>
                            (and
                              (<= 0 wi@462@01)
                              (<
                                wi@462@01
                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                            (=
                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                $t@363@01
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                1) wi@462@01 _2@101@01)
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                1) wi@462@01)))
                          
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
                (or
                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                    (=>
                      (and
                        (<= 0 ii@460@01)
                        (and
                          (<=
                            ii@460@01
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                          (and
                            (<= 0 wi@461@01)
                            (<
                              wi@461@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01)))))
                      (=
                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                      $t@363@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                  (not
                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                      (=>
                        (and
                          (<= 0 ii@460@01)
                          (and
                            (<=
                              ii@460@01
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                            (and
                              (<= 0 wi@461@01)
                              (<
                                wi@461@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  $Snap.unit) ret@230@01)))))
                        (=
                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                            $t@363@01
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                        $t@363@01
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
            (or
              (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                (=>
                  (and
                    (<= 0 ii@458@01)
                    (and
                      (<
                        ii@458@01
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))
                      (and
                        (<= 0 wi@459@01)
                        (<
                          wi@459@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01)))))
                  (>=
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                    0))
                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
              (not
                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                  (=>
                    (and
                      (<= 0 ii@458@01)
                      (and
                        (<
                          ii@458@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01))
                        (and
                          (<= 0 wi@459@01)
                          (<
                            wi@459@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              $Snap.unit) ret@230@01)))))
                    (>=
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                      0))
                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))))
        (or
          (=
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
              $t@363@01
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
          (not
            (=
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                $t@363@01
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
    (or
      (=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
          $t@363@01
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
      (not
        (=
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
            $t@363@01
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))))
(assert (or (< _2@101@01 18446744073709551615) (not (< _2@101@01 18446744073709551615))))
(pop) ; 27
(pop) ; 26
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 2 _2@101@01)
  (and
    (=>
      (< _2@101@01 18446744073709551615)
      (and
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
          $t@363@01
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
        (=>
          (=
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
              $t@363@01
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
          (and
            (=
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                $t@363@01
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
              $t@363@01
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
            (=>
              (=
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                  $t@363@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
              (and
                (=
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                    $t@363@01
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                  (and
                    (=>
                      (<= 0 ii@458@01)
                      (and
                        (<= 0 ii@458@01)
                        (=>
                          (<
                            ii@458@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              $Snap.unit) ret@230@01))
                          (and
                            (<
                              ii@458@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01))
                            (or (<= 0 wi@459@01) (not (<= 0 wi@459@01)))))
                        (or
                          (<
                            ii@458@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              $Snap.unit) ret@230@01))
                          (not
                            (<
                              ii@458@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01))))))
                    (or (<= 0 ii@458@01) (not (<= 0 ii@458@01)))
                    (=>
                      (and
                        (<= 0 ii@458@01)
                        (and
                          (<
                            ii@458@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              $Snap.unit) ret@230@01))
                          (and
                            (<= 0 wi@459@01)
                            (<
                              wi@459@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01)))))
                      (and
                        (<= 0 ii@458@01)
                        (<
                          ii@458@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01))
                        (<= 0 wi@459@01)
                        (<
                          wi@459@01
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            $Snap.unit) ret@230@01))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
                    (or
                      (not
                        (and
                          (<= 0 ii@458@01)
                          (and
                            (<
                              ii@458@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01))
                            (and
                              (<= 0 wi@459@01)
                              (<
                                wi@459@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  $Snap.unit) ret@230@01))))))
                      (and
                        (<= 0 ii@458@01)
                        (and
                          (<
                            ii@458@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              $Snap.unit) ret@230@01))
                          (and
                            (<= 0 wi@459@01)
                            (<
                              wi@459@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01)))))))
                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
                (=>
                  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                    (=>
                      (and
                        (<= 0 ii@458@01)
                        (and
                          (<
                            ii@458@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              $Snap.unit) ret@230@01))
                          (and
                            (<= 0 wi@459@01)
                            (<
                              wi@459@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01)))))
                      (>=
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                        0))
                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                  (and
                    (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                      (=>
                        (and
                          (<= 0 ii@458@01)
                          (and
                            (<
                              ii@458@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01))
                            (and
                              (<= 0 wi@459@01)
                              (<
                                wi@459@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  $Snap.unit) ret@230@01)))))
                        (>=
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                          0))
                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                      (and
                        (=>
                          (<= 0 ii@460@01)
                          (and
                            (<= 0 ii@460@01)
                            (=>
                              (<=
                                ii@460@01
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                              (and
                                (<=
                                  ii@460@01
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                (or (<= 0 wi@461@01) (not (<= 0 wi@461@01)))))
                            (or
                              (<=
                                ii@460@01
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                              (not
                                (<=
                                  ii@460@01
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                        (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
                        (=>
                          (and
                            (<= 0 ii@460@01)
                            (and
                              (<=
                                ii@460@01
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                              (and
                                (<= 0 wi@461@01)
                                (<
                                  wi@461@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01)))))
                          (and
                            (<= 0 ii@460@01)
                            (<=
                              ii@460@01
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                            (<= 0 wi@461@01)
                            (<
                              wi@461@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01))
                            (<=
                              ii@460@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@363@01
                                $Snap.unit) $t@453@01))
                            (<= wi@461@01 _2@101@01)
                            (<= 0 _2@101@01)
                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                            (<
                              ii@460@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                        (or
                          (not
                            (and
                              (<= 0 ii@460@01)
                              (and
                                (<=
                                  ii@460@01
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                (and
                                  (<= 0 wi@461@01)
                                  (<
                                    wi@461@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01))))))
                          (and
                            (<= 0 ii@460@01)
                            (and
                              (<=
                                ii@460@01
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                              (and
                                (<= 0 wi@461@01)
                                (<
                                  wi@461@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01)))))))
                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                        $t@363@01
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                      (and
                        (=>
                          (<= 0 ii@460@01)
                          (and
                            (<= 0 ii@460@01)
                            (=>
                              (<=
                                ii@460@01
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                              (and
                                (<=
                                  ii@460@01
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                (or (<= 0 wi@461@01) (not (<= 0 wi@461@01)))))
                            (or
                              (<=
                                ii@460@01
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                              (not
                                (<=
                                  ii@460@01
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                        (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
                        (=>
                          (and
                            (<= 0 ii@460@01)
                            (and
                              (<=
                                ii@460@01
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                              (and
                                (<= 0 wi@461@01)
                                (<
                                  wi@461@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01)))))
                          (and
                            (<= 0 ii@460@01)
                            (<=
                              ii@460@01
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                            (<= 0 wi@461@01)
                            (<
                              wi@461@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01))
                            (<=
                              ii@460@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@363@01
                                $Snap.unit) $t@453@01))
                            (<= wi@461@01 _2@101@01)
                            (<= 0 _2@101@01)
                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                            (<
                              ii@460@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                        (or
                          (not
                            (and
                              (<= 0 ii@460@01)
                              (and
                                (<=
                                  ii@460@01
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                (and
                                  (<= 0 wi@461@01)
                                  (<
                                    wi@461@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01))))))
                          (and
                            (<= 0 ii@460@01)
                            (and
                              (<=
                                ii@460@01
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                              (and
                                (<= 0 wi@461@01)
                                (<
                                  wi@461@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01)))))))
                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                    (=>
                      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                        (=>
                          (and
                            (<= 0 ii@460@01)
                            (and
                              (<=
                                ii@460@01
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                              (and
                                (<= 0 wi@461@01)
                                (<
                                  wi@461@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01)))))
                          (=
                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                      (and
                        (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                          (=>
                            (and
                              (<= 0 ii@460@01)
                              (and
                                (<=
                                  ii@460@01
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                (and
                                  (<= 0 wi@461@01)
                                  (<
                                    wi@461@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01)))))
                            (=
                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                $t@363@01
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                          :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                            $t@363@01
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                          (and
                            (or (<= 0 wi@462@01) (not (<= 0 wi@462@01)))
                            (=>
                              (and
                                (<= 0 wi@462@01)
                                (<
                                  wi@462@01
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                              (and
                                (<= 0 wi@462@01)
                                (<
                                  wi@462@01
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                                (<=
                                  0
                                  (+
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                    1))
                                (<=
                                  (+
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                    1)
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    $t@363@01
                                    $Snap.unit) $t@453@01))
                                (<= wi@462@01 _2@101@01)
                                (<= 0 _2@101@01)
                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                  1) wi@462@01 _2@101@01)
                                (<
                                  (+
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                    1)
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))
                                (<
                                  wi@462@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                  1) wi@462@01)))
                            (or
                              (not
                                (and
                                  (<= 0 wi@462@01)
                                  (<
                                    wi@462@01
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                              (and
                                (<= 0 wi@462@01)
                                (<
                                  wi@462@01
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
                          
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
                        (=>
                          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                            (=>
                              (and
                                (<= 0 wi@462@01)
                                (<
                                  wi@462@01
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                              (=
                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                  1) wi@462@01 _2@101@01)
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                  1) wi@462@01)))
                            
                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                          (and
                            (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                              (=>
                                (and
                                  (<= 0 wi@462@01)
                                  (<
                                    wi@462@01
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                (=
                                  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                    $t@363@01
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))))))) $t@453@01 (+
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                    1) wi@462@01 _2@101@01)
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                    1) wi@462@01)))
                              
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                            (forall ((ii@464@01 Int)) (!
                              (and
                                (or (<= 0 ii@464@01) (not (<= 0 ii@464@01)))
                                (=>
                                  (and
                                    (<= 0 ii@464@01)
                                    (<
                                      ii@464@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01)))
                                  (and
                                    (<= 0 ii@464@01)
                                    (<
                                      ii@464@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01))
                                    (<
                                      0
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01))
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                                (or
                                  (not
                                    (and
                                      (<= 0 ii@464@01)
                                      (<
                                        ii@464@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          $Snap.unit) ret@230@01))))
                                  (and
                                    (<= 0 ii@464@01)
                                    (<
                                      ii@464@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01)))))
                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
                        (or
                          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                            (=>
                              (and
                                (<= 0 wi@462@01)
                                (<
                                  wi@462@01
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                              (=
                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 (+
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                  1) wi@462@01 _2@101@01)
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                  1) wi@462@01)))
                            
                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                          (not
                            (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                              (=>
                                (and
                                  (<= 0 wi@462@01)
                                  (<
                                    wi@462@01
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                (=
                                  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                    $t@363@01
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))))))) $t@453@01 (+
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                    1) wi@462@01 _2@101@01)
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                    1) wi@462@01)))
                              
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
                    (or
                      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                        (=>
                          (and
                            (<= 0 ii@460@01)
                            (and
                              (<=
                                ii@460@01
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                              (and
                                (<= 0 wi@461@01)
                                (<
                                  wi@461@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01)))))
                          (=
                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                      (not
                        (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                          (=>
                            (and
                              (<= 0 ii@460@01)
                              (and
                                (<=
                                  ii@460@01
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                (and
                                  (<= 0 wi@461@01)
                                  (<
                                    wi@461@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01)))))
                            (=
                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                $t@363@01
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                          :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                            $t@363@01
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
                (or
                  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                    (=>
                      (and
                        (<= 0 ii@458@01)
                        (and
                          (<
                            ii@458@01
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              $Snap.unit) ret@230@01))
                          (and
                            (<= 0 wi@459@01)
                            (<
                              wi@459@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01)))))
                      (>=
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                        0))
                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                  (not
                    (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                      (=>
                        (and
                          (<= 0 ii@458@01)
                          (and
                            (<
                              ii@458@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01))
                            (and
                              (<= 0 wi@459@01)
                              (<
                                wi@459@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  $Snap.unit) ret@230@01)))))
                        (>=
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                          0))
                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))))
            (or
              (=
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                  $t@363@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
              (not
                (=
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                    $t@363@01
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
        (or
          (=
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
              $t@363@01
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
          (not
            (=
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                $t@363@01
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
    (or
      (< _2@101@01 18446744073709551615)
      (not (< _2@101@01 18446744073709551615))))))
(assert (or (<= 2 _2@101@01) (not (<= 2 _2@101@01))))
(pop) ; 25
(pop) ; 24
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@363@01
      $Snap.unit) $t@453@01))
  (and
    (<
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@363@01
        $Snap.unit) $t@453@01))
    (=>
      (<= 2 _2@101@01)
      (and
        (=>
          (< _2@101@01 18446744073709551615)
          (and
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
              $t@363@01
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
            (=>
              (=
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                  $t@363@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
              (and
                (=
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                    $t@363@01
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                  $t@363@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                (=>
                  (=
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                      $t@363@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                  (and
                    (=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                        $t@363@01
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                    (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                      (and
                        (=>
                          (<= 0 ii@458@01)
                          (and
                            (<= 0 ii@458@01)
                            (=>
                              (<
                                ii@458@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  $Snap.unit) ret@230@01))
                              (and
                                (<
                                  ii@458@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))
                                (or (<= 0 wi@459@01) (not (<= 0 wi@459@01)))))
                            (or
                              (<
                                ii@458@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  $Snap.unit) ret@230@01))
                              (not
                                (<
                                  ii@458@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))))))
                        (or (<= 0 ii@458@01) (not (<= 0 ii@458@01)))
                        (=>
                          (and
                            (<= 0 ii@458@01)
                            (and
                              (<
                                ii@458@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  $Snap.unit) ret@230@01))
                              (and
                                (<= 0 wi@459@01)
                                (<
                                  wi@459@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01)))))
                          (and
                            (<= 0 ii@458@01)
                            (<
                              ii@458@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01))
                            (<= 0 wi@459@01)
                            (<
                              wi@459@01
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                $Snap.unit) ret@230@01))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
                        (or
                          (not
                            (and
                              (<= 0 ii@458@01)
                              (and
                                (<
                                  ii@458@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))
                                (and
                                  (<= 0 wi@459@01)
                                  (<
                                    wi@459@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01))))))
                          (and
                            (<= 0 ii@458@01)
                            (and
                              (<
                                ii@458@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  $Snap.unit) ret@230@01))
                              (and
                                (<= 0 wi@459@01)
                                (<
                                  wi@459@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01)))))))
                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
                    (=>
                      (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                        (=>
                          (and
                            (<= 0 ii@458@01)
                            (and
                              (<
                                ii@458@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  $Snap.unit) ret@230@01))
                              (and
                                (<= 0 wi@459@01)
                                (<
                                  wi@459@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01)))))
                          (>=
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                            0))
                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                      (and
                        (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                          (=>
                            (and
                              (<= 0 ii@458@01)
                              (and
                                (<
                                  ii@458@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))
                                (and
                                  (<= 0 wi@459@01)
                                  (<
                                    wi@459@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01)))))
                            (>=
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                              0))
                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                        (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                          (and
                            (=>
                              (<= 0 ii@460@01)
                              (and
                                (<= 0 ii@460@01)
                                (=>
                                  (<=
                                    ii@460@01
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                  (and
                                    (<=
                                      ii@460@01
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                    (or (<= 0 wi@461@01) (not (<= 0 wi@461@01)))))
                                (or
                                  (<=
                                    ii@460@01
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                  (not
                                    (<=
                                      ii@460@01
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                            (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
                            (=>
                              (and
                                (<= 0 ii@460@01)
                                (and
                                  (<=
                                    ii@460@01
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                  (and
                                    (<= 0 wi@461@01)
                                    (<
                                      wi@461@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01)))))
                              (and
                                (<= 0 ii@460@01)
                                (<=
                                  ii@460@01
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                (<= 0 wi@461@01)
                                (<
                                  wi@461@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))
                                (<=
                                  ii@460@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    $t@363@01
                                    $Snap.unit) $t@453@01))
                                (<= wi@461@01 _2@101@01)
                                (<= 0 _2@101@01)
                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                (<
                                  ii@460@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                            (or
                              (not
                                (and
                                  (<= 0 ii@460@01)
                                  (and
                                    (<=
                                      ii@460@01
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                    (and
                                      (<= 0 wi@461@01)
                                      (<
                                        wi@461@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          $Snap.unit) ret@230@01))))))
                              (and
                                (<= 0 ii@460@01)
                                (and
                                  (<=
                                    ii@460@01
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                  (and
                                    (<= 0 wi@461@01)
                                    (<
                                      wi@461@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01)))))))
                          :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                            $t@363@01
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                        (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                          (and
                            (=>
                              (<= 0 ii@460@01)
                              (and
                                (<= 0 ii@460@01)
                                (=>
                                  (<=
                                    ii@460@01
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                  (and
                                    (<=
                                      ii@460@01
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                    (or (<= 0 wi@461@01) (not (<= 0 wi@461@01)))))
                                (or
                                  (<=
                                    ii@460@01
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                  (not
                                    (<=
                                      ii@460@01
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                            (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
                            (=>
                              (and
                                (<= 0 ii@460@01)
                                (and
                                  (<=
                                    ii@460@01
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                  (and
                                    (<= 0 wi@461@01)
                                    (<
                                      wi@461@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01)))))
                              (and
                                (<= 0 ii@460@01)
                                (<=
                                  ii@460@01
                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                (<= 0 wi@461@01)
                                (<
                                  wi@461@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))
                                (<=
                                  ii@460@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    $t@363@01
                                    $Snap.unit) $t@453@01))
                                (<= wi@461@01 _2@101@01)
                                (<= 0 _2@101@01)
                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                (<
                                  ii@460@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                            (or
                              (not
                                (and
                                  (<= 0 ii@460@01)
                                  (and
                                    (<=
                                      ii@460@01
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                    (and
                                      (<= 0 wi@461@01)
                                      (<
                                        wi@461@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          $Snap.unit) ret@230@01))))))
                              (and
                                (<= 0 ii@460@01)
                                (and
                                  (<=
                                    ii@460@01
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                  (and
                                    (<= 0 wi@461@01)
                                    (<
                                      wi@461@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01)))))))
                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                        (=>
                          (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                            (=>
                              (and
                                (<= 0 ii@460@01)
                                (and
                                  (<=
                                    ii@460@01
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                  (and
                                    (<= 0 wi@461@01)
                                    (<
                                      wi@461@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01)))))
                              (=
                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                            :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                          (and
                            (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                              (=>
                                (and
                                  (<= 0 ii@460@01)
                                  (and
                                    (<=
                                      ii@460@01
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                    (and
                                      (<= 0 wi@461@01)
                                      (<
                                        wi@461@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          $Snap.unit) ret@230@01)))))
                                (=
                                  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                    $t@363@01
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                              :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                $t@363@01
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                            (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                              (and
                                (or (<= 0 wi@462@01) (not (<= 0 wi@462@01)))
                                (=>
                                  (and
                                    (<= 0 wi@462@01)
                                    (<
                                      wi@462@01
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                  (and
                                    (<= 0 wi@462@01)
                                    (<
                                      wi@462@01
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                                    (<=
                                      0
                                      (+
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                        1))
                                    (<=
                                      (+
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                        1)
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        $t@363@01
                                        $Snap.unit) $t@453@01))
                                    (<= wi@462@01 _2@101@01)
                                    (<= 0 _2@101@01)
                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                      $t@363@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))))))) $t@453@01 (+
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                      1) wi@462@01 _2@101@01)
                                    (<
                                      (+
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                        1)
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01))
                                    (<
                                      wi@462@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01))
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 (+
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                      1) wi@462@01)))
                                (or
                                  (not
                                    (and
                                      (<= 0 wi@462@01)
                                      (<
                                        wi@462@01
                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                                  (and
                                    (<= 0 wi@462@01)
                                    (<
                                      wi@462@01
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
                              
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
                            (=>
                              (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                (=>
                                  (and
                                    (<= 0 wi@462@01)
                                    (<
                                      wi@462@01
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                  (=
                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                      $t@363@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))))))) $t@453@01 (+
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                      1) wi@462@01 _2@101@01)
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 (+
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                      1) wi@462@01)))
                                
                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                              (and
                                (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                  (=>
                                    (and
                                      (<= 0 wi@462@01)
                                      (<
                                        wi@462@01
                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                    (=
                                      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))))))) $t@453@01 (+
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                        1) wi@462@01 _2@101@01)
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 (+
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                        1) wi@462@01)))
                                  
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                (forall ((ii@464@01 Int)) (!
                                  (and
                                    (or (<= 0 ii@464@01) (not (<= 0 ii@464@01)))
                                    (=>
                                      (and
                                        (<= 0 ii@464@01)
                                        (<
                                          ii@464@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01)))
                                      (and
                                        (<= 0 ii@464@01)
                                        (<
                                          ii@464@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01))
                                        (<
                                          0
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01))
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                                    (or
                                      (not
                                        (and
                                          (<= 0 ii@464@01)
                                          (<
                                            ii@464@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              $Snap.unit) ret@230@01))))
                                      (and
                                        (<= 0 ii@464@01)
                                        (<
                                          ii@464@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01)))))
                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
                            (or
                              (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                (=>
                                  (and
                                    (<= 0 wi@462@01)
                                    (<
                                      wi@462@01
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                  (=
                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                      $t@363@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))))))) $t@453@01 (+
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                      1) wi@462@01 _2@101@01)
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 (+
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                      1) wi@462@01)))
                                
                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                              (not
                                (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                  (=>
                                    (and
                                      (<= 0 wi@462@01)
                                      (<
                                        wi@462@01
                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                    (=
                                      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))))))) $t@453@01 (+
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                        1) wi@462@01 _2@101@01)
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 (+
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                        1) wi@462@01)))
                                  
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
                        (or
                          (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                            (=>
                              (and
                                (<= 0 ii@460@01)
                                (and
                                  (<=
                                    ii@460@01
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                  (and
                                    (<= 0 wi@461@01)
                                    (<
                                      wi@461@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01)))))
                              (=
                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                            :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                          (not
                            (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                              (=>
                                (and
                                  (<= 0 ii@460@01)
                                  (and
                                    (<=
                                      ii@460@01
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                    (and
                                      (<= 0 wi@461@01)
                                      (<
                                        wi@461@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          $Snap.unit) ret@230@01)))))
                                (=
                                  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                    $t@363@01
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                              :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                $t@363@01
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
                    (or
                      (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                        (=>
                          (and
                            (<= 0 ii@458@01)
                            (and
                              (<
                                ii@458@01
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  $Snap.unit) ret@230@01))
                              (and
                                (<= 0 wi@459@01)
                                (<
                                  wi@459@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01)))))
                          (>=
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                            0))
                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                      (not
                        (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                          (=>
                            (and
                              (<= 0 ii@458@01)
                              (and
                                (<
                                  ii@458@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))
                                (and
                                  (<= 0 wi@459@01)
                                  (<
                                    wi@459@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01)))))
                            (>=
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                              0))
                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))))
                (or
                  (=
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                      $t@363@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                  (not
                    (=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                        $t@363@01
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
            (or
              (=
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                  $t@363@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
              (not
                (=
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                    $t@363@01
                    ($Snap.combine
                      $Snap.unit
                      ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
        (or
          (< _2@101@01 18446744073709551615)
          (not (< _2@101@01 18446744073709551615)))))
    (or (<= 2 _2@101@01) (not (<= 2 _2@101@01))))))
(assert (or
  (<
    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@363@01
      $Snap.unit) $t@453@01))
  (not
    (<
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@363@01
        $Snap.unit) $t@453@01)))))
(pop) ; 23
(pop) ; 22
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
  (and
    (=>
      (<
        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@363@01
          $Snap.unit) $t@453@01))
      (and
        (<
          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@363@01
            $Snap.unit) $t@453@01))
        (=>
          (<= 2 _2@101@01)
          (and
            (=>
              (< _2@101@01 18446744073709551615)
              (and
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                  $t@363@01
                  ($Snap.combine
                    $Snap.unit
                    ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                (=>
                  (=
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                      $t@363@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                  (and
                    (=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                        $t@363@01
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                      $t@363@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                    (=>
                      (=
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                      (and
                        (=
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                            $t@363@01
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                        (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                          (and
                            (=>
                              (<= 0 ii@458@01)
                              (and
                                (<= 0 ii@458@01)
                                (=>
                                  (<
                                    ii@458@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01))
                                  (and
                                    (<
                                      ii@458@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01))
                                    (or (<= 0 wi@459@01) (not (<= 0 wi@459@01)))))
                                (or
                                  (<
                                    ii@458@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01))
                                  (not
                                    (<
                                      ii@458@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01))))))
                            (or (<= 0 ii@458@01) (not (<= 0 ii@458@01)))
                            (=>
                              (and
                                (<= 0 ii@458@01)
                                (and
                                  (<
                                    ii@458@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01))
                                  (and
                                    (<= 0 wi@459@01)
                                    (<
                                      wi@459@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01)))))
                              (and
                                (<= 0 ii@458@01)
                                (<
                                  ii@458@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))
                                (<= 0 wi@459@01)
                                (<
                                  wi@459@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
                            (or
                              (not
                                (and
                                  (<= 0 ii@458@01)
                                  (and
                                    (<
                                      ii@458@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01))
                                    (and
                                      (<= 0 wi@459@01)
                                      (<
                                        wi@459@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          $Snap.unit) ret@230@01))))))
                              (and
                                (<= 0 ii@458@01)
                                (and
                                  (<
                                    ii@458@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01))
                                  (and
                                    (<= 0 wi@459@01)
                                    (<
                                      wi@459@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01)))))))
                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
                        (=>
                          (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                            (=>
                              (and
                                (<= 0 ii@458@01)
                                (and
                                  (<
                                    ii@458@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01))
                                  (and
                                    (<= 0 wi@459@01)
                                    (<
                                      wi@459@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01)))))
                              (>=
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                0))
                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                          (and
                            (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                              (=>
                                (and
                                  (<= 0 ii@458@01)
                                  (and
                                    (<
                                      ii@458@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01))
                                    (and
                                      (<= 0 wi@459@01)
                                      (<
                                        wi@459@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          $Snap.unit) ret@230@01)))))
                                (>=
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                  0))
                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                            (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                              (and
                                (=>
                                  (<= 0 ii@460@01)
                                  (and
                                    (<= 0 ii@460@01)
                                    (=>
                                      (<=
                                        ii@460@01
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                      (and
                                        (<=
                                          ii@460@01
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                        (or
                                          (<= 0 wi@461@01)
                                          (not (<= 0 wi@461@01)))))
                                    (or
                                      (<=
                                        ii@460@01
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                      (not
                                        (<=
                                          ii@460@01
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
                                (=>
                                  (and
                                    (<= 0 ii@460@01)
                                    (and
                                      (<=
                                        ii@460@01
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                      (and
                                        (<= 0 wi@461@01)
                                        (<
                                          wi@461@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01)))))
                                  (and
                                    (<= 0 ii@460@01)
                                    (<=
                                      ii@460@01
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                    (<= 0 wi@461@01)
                                    (<
                                      wi@461@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01))
                                    (<=
                                      ii@460@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        $t@363@01
                                        $Snap.unit) $t@453@01))
                                    (<= wi@461@01 _2@101@01)
                                    (<= 0 _2@101@01)
                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                      $t@363@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                    (<
                                      ii@460@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01))
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                (or
                                  (not
                                    (and
                                      (<= 0 ii@460@01)
                                      (and
                                        (<=
                                          ii@460@01
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                        (and
                                          (<= 0 wi@461@01)
                                          (<
                                            wi@461@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              $Snap.unit) ret@230@01))))))
                                  (and
                                    (<= 0 ii@460@01)
                                    (and
                                      (<=
                                        ii@460@01
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                      (and
                                        (<= 0 wi@461@01)
                                        (<
                                          wi@461@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01)))))))
                              :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                $t@363@01
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                            (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                              (and
                                (=>
                                  (<= 0 ii@460@01)
                                  (and
                                    (<= 0 ii@460@01)
                                    (=>
                                      (<=
                                        ii@460@01
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                      (and
                                        (<=
                                          ii@460@01
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                        (or
                                          (<= 0 wi@461@01)
                                          (not (<= 0 wi@461@01)))))
                                    (or
                                      (<=
                                        ii@460@01
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                      (not
                                        (<=
                                          ii@460@01
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
                                (=>
                                  (and
                                    (<= 0 ii@460@01)
                                    (and
                                      (<=
                                        ii@460@01
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                      (and
                                        (<= 0 wi@461@01)
                                        (<
                                          wi@461@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01)))))
                                  (and
                                    (<= 0 ii@460@01)
                                    (<=
                                      ii@460@01
                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                    (<= 0 wi@461@01)
                                    (<
                                      wi@461@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01))
                                    (<=
                                      ii@460@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        $t@363@01
                                        $Snap.unit) $t@453@01))
                                    (<= wi@461@01 _2@101@01)
                                    (<= 0 _2@101@01)
                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                      $t@363@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                    (<
                                      ii@460@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01))
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                (or
                                  (not
                                    (and
                                      (<= 0 ii@460@01)
                                      (and
                                        (<=
                                          ii@460@01
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                        (and
                                          (<= 0 wi@461@01)
                                          (<
                                            wi@461@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              $Snap.unit) ret@230@01))))))
                                  (and
                                    (<= 0 ii@460@01)
                                    (and
                                      (<=
                                        ii@460@01
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                      (and
                                        (<= 0 wi@461@01)
                                        (<
                                          wi@461@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01)))))))
                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                            (=>
                              (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                (=>
                                  (and
                                    (<= 0 ii@460@01)
                                    (and
                                      (<=
                                        ii@460@01
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                      (and
                                        (<= 0 wi@461@01)
                                        (<
                                          wi@461@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01)))))
                                  (=
                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                      $t@363@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                              (and
                                (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                  (=>
                                    (and
                                      (<= 0 ii@460@01)
                                      (and
                                        (<=
                                          ii@460@01
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                        (and
                                          (<= 0 wi@461@01)
                                          (<
                                            wi@461@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              $Snap.unit) ret@230@01)))))
                                    (=
                                      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                    $t@363@01
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                  (and
                                    (or (<= 0 wi@462@01) (not (<= 0 wi@462@01)))
                                    (=>
                                      (and
                                        (<= 0 wi@462@01)
                                        (<
                                          wi@462@01
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                      (and
                                        (<= 0 wi@462@01)
                                        (<
                                          wi@462@01
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                                        (<=
                                          0
                                          (+
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                            1))
                                        (<=
                                          (+
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                            1)
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            $t@363@01
                                            $Snap.unit) $t@453@01))
                                        (<= wi@462@01 _2@101@01)
                                        (<= 0 _2@101@01)
                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                          $t@363@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))))))) $t@453@01 (+
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                          1) wi@462@01 _2@101@01)
                                        (<
                                          (+
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                            1)
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01))
                                        (<
                                          wi@462@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01))
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 (+
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                          1) wi@462@01)))
                                    (or
                                      (not
                                        (and
                                          (<= 0 wi@462@01)
                                          (<
                                            wi@462@01
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                                      (and
                                        (<= 0 wi@462@01)
                                        (<
                                          wi@462@01
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
                                  
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
                                (=>
                                  (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                    (=>
                                      (and
                                        (<= 0 wi@462@01)
                                        (<
                                          wi@462@01
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                      (=
                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                          $t@363@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))))))) $t@453@01 (+
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                          1) wi@462@01 _2@101@01)
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 (+
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                          1) wi@462@01)))
                                    
                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                  (and
                                    (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                      (=>
                                        (and
                                          (<= 0 wi@462@01)
                                          (<
                                            wi@462@01
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                        (=
                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit))))))) $t@453@01 (+
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                            1) wi@462@01 _2@101@01)
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 (+
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                            1) wi@462@01)))
                                      
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                    (forall ((ii@464@01 Int)) (!
                                      (and
                                        (or
                                          (<= 0 ii@464@01)
                                          (not (<= 0 ii@464@01)))
                                        (=>
                                          (and
                                            (<= 0 ii@464@01)
                                            (<
                                              ii@464@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01)))
                                          (and
                                            (<= 0 ii@464@01)
                                            (<
                                              ii@464@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01))
                                            (<
                                              0
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                                        (or
                                          (not
                                            (and
                                              (<= 0 ii@464@01)
                                              (<
                                                ii@464@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  $Snap.unit) ret@230@01))))
                                          (and
                                            (<= 0 ii@464@01)
                                            (<
                                              ii@464@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01)))))
                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@464@01 0))
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
                                (or
                                  (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                    (=>
                                      (and
                                        (<= 0 wi@462@01)
                                        (<
                                          wi@462@01
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                      (=
                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                          $t@363@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))))))) $t@453@01 (+
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                          1) wi@462@01 _2@101@01)
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 (+
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                          1) wi@462@01)))
                                    
                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                  (not
                                    (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                      (=>
                                        (and
                                          (<= 0 wi@462@01)
                                          (<
                                            wi@462@01
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                        (=
                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit))))))) $t@453@01 (+
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                            1) wi@462@01 _2@101@01)
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 (+
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                            1) wi@462@01)))
                                      
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
                            (or
                              (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                (=>
                                  (and
                                    (<= 0 ii@460@01)
                                    (and
                                      (<=
                                        ii@460@01
                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                      (and
                                        (<= 0 wi@461@01)
                                        (<
                                          wi@461@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01)))))
                                  (=
                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                      $t@363@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                              (not
                                (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                  (=>
                                    (and
                                      (<= 0 ii@460@01)
                                      (and
                                        (<=
                                          ii@460@01
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                        (and
                                          (<= 0 wi@461@01)
                                          (<
                                            wi@461@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              $Snap.unit) ret@230@01)))))
                                    (=
                                      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                    $t@363@01
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
                        (or
                          (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                            (=>
                              (and
                                (<= 0 ii@458@01)
                                (and
                                  (<
                                    ii@458@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01))
                                  (and
                                    (<= 0 wi@459@01)
                                    (<
                                      wi@459@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01)))))
                              (>=
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                0))
                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                          (not
                            (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                              (=>
                                (and
                                  (<= 0 ii@458@01)
                                  (and
                                    (<
                                      ii@458@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01))
                                    (and
                                      (<= 0 wi@459@01)
                                      (<
                                        wi@459@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          $Snap.unit) ret@230@01)))))
                                (>=
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                  0))
                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))))
                    (or
                      (=
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                      (not
                        (=
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                            $t@363@01
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                (or
                  (=
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                      $t@363@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                  (not
                    (=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                        $t@363@01
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
            (or
              (< _2@101@01 18446744073709551615)
              (not (< _2@101@01 18446744073709551615)))))
        (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
    (or
      (<
        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@363@01
          $Snap.unit) $t@453@01))
      (not
        (<
          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@363@01
            $Snap.unit) $t@453@01)))))))
(assert (or
  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
  (not (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))
(pop) ; 21
(pop) ; 20
; Joined path conditions
; Joined path conditions
(assert (=>
  (<=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))
  (and
    (<=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01))
    (=>
      (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
      (and
        (=>
          (<
            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@453@01))
          (and
            (<
              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@363@01
                $Snap.unit) $t@453@01))
            (=>
              (<= 2 _2@101@01)
              (and
                (=>
                  (< _2@101@01 18446744073709551615)
                  (and
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                      $t@363@01
                      ($Snap.combine
                        $Snap.unit
                        ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                    (=>
                      (=
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                      (and
                        (=
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                            $t@363@01
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (=>
                          (=
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                          (and
                            (=
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                $t@363@01
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                            (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                              (and
                                (=>
                                  (<= 0 ii@458@01)
                                  (and
                                    (<= 0 ii@458@01)
                                    (=>
                                      (<
                                        ii@458@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          $Snap.unit) ret@230@01))
                                      (and
                                        (<
                                          ii@458@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01))
                                        (or
                                          (<= 0 wi@459@01)
                                          (not (<= 0 wi@459@01)))))
                                    (or
                                      (<
                                        ii@458@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          $Snap.unit) ret@230@01))
                                      (not
                                        (<
                                          ii@458@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01))))))
                                (or (<= 0 ii@458@01) (not (<= 0 ii@458@01)))
                                (=>
                                  (and
                                    (<= 0 ii@458@01)
                                    (and
                                      (<
                                        ii@458@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          $Snap.unit) ret@230@01))
                                      (and
                                        (<= 0 wi@459@01)
                                        (<
                                          wi@459@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01)))))
                                  (and
                                    (<= 0 ii@458@01)
                                    (<
                                      ii@458@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01))
                                    (<= 0 wi@459@01)
                                    (<
                                      wi@459@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01))
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
                                (or
                                  (not
                                    (and
                                      (<= 0 ii@458@01)
                                      (and
                                        (<
                                          ii@458@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01))
                                        (and
                                          (<= 0 wi@459@01)
                                          (<
                                            wi@459@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              $Snap.unit) ret@230@01))))))
                                  (and
                                    (<= 0 ii@458@01)
                                    (and
                                      (<
                                        ii@458@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          $Snap.unit) ret@230@01))
                                      (and
                                        (<= 0 wi@459@01)
                                        (<
                                          wi@459@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01)))))))
                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
                            (=>
                              (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                (=>
                                  (and
                                    (<= 0 ii@458@01)
                                    (and
                                      (<
                                        ii@458@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          $Snap.unit) ret@230@01))
                                      (and
                                        (<= 0 wi@459@01)
                                        (<
                                          wi@459@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01)))))
                                  (>=
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                    0))
                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                              (and
                                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                  (=>
                                    (and
                                      (<= 0 ii@458@01)
                                      (and
                                        (<
                                          ii@458@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01))
                                        (and
                                          (<= 0 wi@459@01)
                                          (<
                                            wi@459@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              $Snap.unit) ret@230@01)))))
                                    (>=
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                      0))
                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                  (and
                                    (=>
                                      (<= 0 ii@460@01)
                                      (and
                                        (<= 0 ii@460@01)
                                        (=>
                                          (<=
                                            ii@460@01
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                          (and
                                            (<=
                                              ii@460@01
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                            (or
                                              (<= 0 wi@461@01)
                                              (not (<= 0 wi@461@01)))))
                                        (or
                                          (<=
                                            ii@460@01
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                          (not
                                            (<=
                                              ii@460@01
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                    (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
                                    (=>
                                      (and
                                        (<= 0 ii@460@01)
                                        (and
                                          (<=
                                            ii@460@01
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                          (and
                                            (<= 0 wi@461@01)
                                            (<
                                              wi@461@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01)))))
                                      (and
                                        (<= 0 ii@460@01)
                                        (<=
                                          ii@460@01
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                        (<= 0 wi@461@01)
                                        (<
                                          wi@461@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01))
                                        (<=
                                          ii@460@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            $t@363@01
                                            $Snap.unit) $t@453@01))
                                        (<= wi@461@01 _2@101@01)
                                        (<= 0 _2@101@01)
                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                          $t@363@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                        (<
                                          ii@460@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01))
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                    (or
                                      (not
                                        (and
                                          (<= 0 ii@460@01)
                                          (and
                                            (<=
                                              ii@460@01
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                            (and
                                              (<= 0 wi@461@01)
                                              (<
                                                wi@461@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  $Snap.unit) ret@230@01))))))
                                      (and
                                        (<= 0 ii@460@01)
                                        (and
                                          (<=
                                            ii@460@01
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                          (and
                                            (<= 0 wi@461@01)
                                            (<
                                              wi@461@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01)))))))
                                  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                    $t@363@01
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                  (and
                                    (=>
                                      (<= 0 ii@460@01)
                                      (and
                                        (<= 0 ii@460@01)
                                        (=>
                                          (<=
                                            ii@460@01
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                          (and
                                            (<=
                                              ii@460@01
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                            (or
                                              (<= 0 wi@461@01)
                                              (not (<= 0 wi@461@01)))))
                                        (or
                                          (<=
                                            ii@460@01
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                          (not
                                            (<=
                                              ii@460@01
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                    (or (<= 0 ii@460@01) (not (<= 0 ii@460@01)))
                                    (=>
                                      (and
                                        (<= 0 ii@460@01)
                                        (and
                                          (<=
                                            ii@460@01
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                          (and
                                            (<= 0 wi@461@01)
                                            (<
                                              wi@461@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01)))))
                                      (and
                                        (<= 0 ii@460@01)
                                        (<=
                                          ii@460@01
                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                        (<= 0 wi@461@01)
                                        (<
                                          wi@461@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01))
                                        (<=
                                          ii@460@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            $t@363@01
                                            $Snap.unit) $t@453@01))
                                        (<= wi@461@01 _2@101@01)
                                        (<= 0 _2@101@01)
                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                          $t@363@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                        (<
                                          ii@460@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01))
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                    (or
                                      (not
                                        (and
                                          (<= 0 ii@460@01)
                                          (and
                                            (<=
                                              ii@460@01
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                            (and
                                              (<= 0 wi@461@01)
                                              (<
                                                wi@461@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  $Snap.unit) ret@230@01))))))
                                      (and
                                        (<= 0 ii@460@01)
                                        (and
                                          (<=
                                            ii@460@01
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                          (and
                                            (<= 0 wi@461@01)
                                            (<
                                              wi@461@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01)))))))
                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                (=>
                                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                    (=>
                                      (and
                                        (<= 0 ii@460@01)
                                        (and
                                          (<=
                                            ii@460@01
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                          (and
                                            (<= 0 wi@461@01)
                                            (<
                                              wi@461@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01)))))
                                      (=
                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                          $t@363@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                      $t@363@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                  (and
                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                      (=>
                                        (and
                                          (<= 0 ii@460@01)
                                          (and
                                            (<=
                                              ii@460@01
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                            (and
                                              (<= 0 wi@461@01)
                                              (<
                                                wi@461@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  $Snap.unit) ret@230@01)))))
                                        (=
                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                    (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                      (and
                                        (or
                                          (<= 0 wi@462@01)
                                          (not (<= 0 wi@462@01)))
                                        (=>
                                          (and
                                            (<= 0 wi@462@01)
                                            (<
                                              wi@462@01
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                          (and
                                            (<= 0 wi@462@01)
                                            (<
                                              wi@462@01
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                                            (<=
                                              0
                                              (+
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                1))
                                            (<=
                                              (+
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                1)
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                $t@363@01
                                                $Snap.unit) $t@453@01))
                                            (<= wi@462@01 _2@101@01)
                                            (<= 0 _2@101@01)
                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit))))))) $t@453@01 (+
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                              1) wi@462@01 _2@101@01)
                                            (<
                                              (+
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                1)
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01))
                                            (<
                                              wi@462@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 (+
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                              1) wi@462@01)))
                                        (or
                                          (not
                                            (and
                                              (<= 0 wi@462@01)
                                              (<
                                                wi@462@01
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                                          (and
                                            (<= 0 wi@462@01)
                                            (<
                                              wi@462@01
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
                                      
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
                                    (=>
                                      (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                        (=>
                                          (and
                                            (<= 0 wi@462@01)
                                            (<
                                              wi@462@01
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                          (=
                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit))))))) $t@453@01 (+
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                              1) wi@462@01 _2@101@01)
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 (+
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                              1) wi@462@01)))
                                        
                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                      (and
                                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                          (=>
                                            (and
                                              (<= 0 wi@462@01)
                                              (<
                                                wi@462@01
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                            (=
                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit))))))) $t@453@01 (+
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                1) wi@462@01 _2@101@01)
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit)))))) ret@230@01 (+
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                1) wi@462@01)))
                                          
                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                        (forall ((ii@464@01 Int)) (!
                                          (and
                                            (or
                                              (<= 0 ii@464@01)
                                              (not (<= 0 ii@464@01)))
                                            (=>
                                              (and
                                                (<= 0 ii@464@01)
                                                (<
                                                  ii@464@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01)))
                                              (and
                                                (<= 0 ii@464@01)
                                                (<
                                                  ii@464@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01))
                                                (<
                                                  0
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01))
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                                            (or
                                              (not
                                                (and
                                                  (<= 0 ii@464@01)
                                                  (<
                                                    ii@464@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      $Snap.unit) ret@230@01))))
                                              (and
                                                (<= 0 ii@464@01)
                                                (<
                                                  ii@464@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01)))))
                                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@464@01 0))
                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
                                    (or
                                      (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                        (=>
                                          (and
                                            (<= 0 wi@462@01)
                                            (<
                                              wi@462@01
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                          (=
                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit))))))) $t@453@01 (+
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                              1) wi@462@01 _2@101@01)
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 (+
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                              1) wi@462@01)))
                                        
                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                      (not
                                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                          (=>
                                            (and
                                              (<= 0 wi@462@01)
                                              (<
                                                wi@462@01
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                            (=
                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit))))))) $t@453@01 (+
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                1) wi@462@01 _2@101@01)
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit)))))) ret@230@01 (+
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                1) wi@462@01)))
                                          
                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
                                (or
                                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                    (=>
                                      (and
                                        (<= 0 ii@460@01)
                                        (and
                                          (<=
                                            ii@460@01
                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                          (and
                                            (<= 0 wi@461@01)
                                            (<
                                              wi@461@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01)))))
                                      (=
                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                          $t@363@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                      $t@363@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                  (not
                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                      (=>
                                        (and
                                          (<= 0 ii@460@01)
                                          (and
                                            (<=
                                              ii@460@01
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                            (and
                                              (<= 0 wi@461@01)
                                              (<
                                                wi@461@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  $Snap.unit) ret@230@01)))))
                                        (=
                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
                            (or
                              (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                (=>
                                  (and
                                    (<= 0 ii@458@01)
                                    (and
                                      (<
                                        ii@458@01
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          $Snap.unit) ret@230@01))
                                      (and
                                        (<= 0 wi@459@01)
                                        (<
                                          wi@459@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01)))))
                                  (>=
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                    0))
                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                              (not
                                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                  (=>
                                    (and
                                      (<= 0 ii@458@01)
                                      (and
                                        (<
                                          ii@458@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01))
                                        (and
                                          (<= 0 wi@459@01)
                                          (<
                                            wi@459@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              $Snap.unit) ret@230@01)))))
                                    (>=
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                      0))
                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))))
                        (or
                          (=
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                          (not
                            (=
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                $t@363@01
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                    (or
                      (=
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                      (not
                        (=
                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                            $t@363@01
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                (or
                  (< _2@101@01 18446744073709551615)
                  (not (< _2@101@01 18446744073709551615)))))
            (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
        (or
          (<
            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@453@01))
          (not
            (<
              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@363@01
                $Snap.unit) $t@453@01))))))
    (or
      (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
      (not (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
(assert (or
  (<=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))
  (not
    (<=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01)))))
(pop) ; 19
(pop) ; 18
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
  (and
    (=>
      (<=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01))
      (and
        (<=
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (=>
          (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
          (and
            (=>
              (<
                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@363@01
                  $Snap.unit) $t@453@01))
              (and
                (<
                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    $t@363@01
                    $Snap.unit) $t@453@01))
                (=>
                  (<= 2 _2@101@01)
                  (and
                    (=>
                      (< _2@101@01 18446744073709551615)
                      (and
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (=>
                          (=
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                          (and
                            (=
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                $t@363@01
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                            (=>
                              (=
                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                              (and
                                (=
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                    $t@363@01
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                  (and
                                    (=>
                                      (<= 0 ii@458@01)
                                      (and
                                        (<= 0 ii@458@01)
                                        (=>
                                          (<
                                            ii@458@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              $Snap.unit) ret@230@01))
                                          (and
                                            (<
                                              ii@458@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01))
                                            (or
                                              (<= 0 wi@459@01)
                                              (not (<= 0 wi@459@01)))))
                                        (or
                                          (<
                                            ii@458@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              $Snap.unit) ret@230@01))
                                          (not
                                            (<
                                              ii@458@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01))))))
                                    (or (<= 0 ii@458@01) (not (<= 0 ii@458@01)))
                                    (=>
                                      (and
                                        (<= 0 ii@458@01)
                                        (and
                                          (<
                                            ii@458@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              $Snap.unit) ret@230@01))
                                          (and
                                            (<= 0 wi@459@01)
                                            (<
                                              wi@459@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01)))))
                                      (and
                                        (<= 0 ii@458@01)
                                        (<
                                          ii@458@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01))
                                        (<= 0 wi@459@01)
                                        (<
                                          wi@459@01
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            $Snap.unit) ret@230@01))
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
                                    (or
                                      (not
                                        (and
                                          (<= 0 ii@458@01)
                                          (and
                                            (<
                                              ii@458@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01))
                                            (and
                                              (<= 0 wi@459@01)
                                              (<
                                                wi@459@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  $Snap.unit) ret@230@01))))))
                                      (and
                                        (<= 0 ii@458@01)
                                        (and
                                          (<
                                            ii@458@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              $Snap.unit) ret@230@01))
                                          (and
                                            (<= 0 wi@459@01)
                                            (<
                                              wi@459@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01)))))))
                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
                                (=>
                                  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                    (=>
                                      (and
                                        (<= 0 ii@458@01)
                                        (and
                                          (<
                                            ii@458@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              $Snap.unit) ret@230@01))
                                          (and
                                            (<= 0 wi@459@01)
                                            (<
                                              wi@459@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01)))))
                                      (>=
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                        0))
                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                  (and
                                    (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                      (=>
                                        (and
                                          (<= 0 ii@458@01)
                                          (and
                                            (<
                                              ii@458@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01))
                                            (and
                                              (<= 0 wi@459@01)
                                              (<
                                                wi@459@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  $Snap.unit) ret@230@01)))))
                                        (>=
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                          0))
                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                      (and
                                        (=>
                                          (<= 0 ii@460@01)
                                          (and
                                            (<= 0 ii@460@01)
                                            (=>
                                              (<=
                                                ii@460@01
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                              (and
                                                (<=
                                                  ii@460@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                (or
                                                  (<= 0 wi@461@01)
                                                  (not (<= 0 wi@461@01)))))
                                            (or
                                              (<=
                                                ii@460@01
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                              (not
                                                (<=
                                                  ii@460@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                        (or
                                          (<= 0 ii@460@01)
                                          (not (<= 0 ii@460@01)))
                                        (=>
                                          (and
                                            (<= 0 ii@460@01)
                                            (and
                                              (<=
                                                ii@460@01
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                              (and
                                                (<= 0 wi@461@01)
                                                (<
                                                  wi@461@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01)))))
                                          (and
                                            (<= 0 ii@460@01)
                                            (<=
                                              ii@460@01
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                            (<= 0 wi@461@01)
                                            (<
                                              wi@461@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01))
                                            (<=
                                              ii@460@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                $t@363@01
                                                $Snap.unit) $t@453@01))
                                            (<= wi@461@01 _2@101@01)
                                            (<= 0 _2@101@01)
                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                            (<
                                              ii@460@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                        (or
                                          (not
                                            (and
                                              (<= 0 ii@460@01)
                                              (and
                                                (<=
                                                  ii@460@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                (and
                                                  (<= 0 wi@461@01)
                                                  (<
                                                    wi@461@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      $Snap.unit) ret@230@01))))))
                                          (and
                                            (<= 0 ii@460@01)
                                            (and
                                              (<=
                                                ii@460@01
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                              (and
                                                (<= 0 wi@461@01)
                                                (<
                                                  wi@461@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01)))))))
                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                      (and
                                        (=>
                                          (<= 0 ii@460@01)
                                          (and
                                            (<= 0 ii@460@01)
                                            (=>
                                              (<=
                                                ii@460@01
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                              (and
                                                (<=
                                                  ii@460@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                (or
                                                  (<= 0 wi@461@01)
                                                  (not (<= 0 wi@461@01)))))
                                            (or
                                              (<=
                                                ii@460@01
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                              (not
                                                (<=
                                                  ii@460@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                        (or
                                          (<= 0 ii@460@01)
                                          (not (<= 0 ii@460@01)))
                                        (=>
                                          (and
                                            (<= 0 ii@460@01)
                                            (and
                                              (<=
                                                ii@460@01
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                              (and
                                                (<= 0 wi@461@01)
                                                (<
                                                  wi@461@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01)))))
                                          (and
                                            (<= 0 ii@460@01)
                                            (<=
                                              ii@460@01
                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                            (<= 0 wi@461@01)
                                            (<
                                              wi@461@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01))
                                            (<=
                                              ii@460@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                $t@363@01
                                                $Snap.unit) $t@453@01))
                                            (<= wi@461@01 _2@101@01)
                                            (<= 0 _2@101@01)
                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                            (<
                                              ii@460@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                        (or
                                          (not
                                            (and
                                              (<= 0 ii@460@01)
                                              (and
                                                (<=
                                                  ii@460@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                (and
                                                  (<= 0 wi@461@01)
                                                  (<
                                                    wi@461@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      $Snap.unit) ret@230@01))))))
                                          (and
                                            (<= 0 ii@460@01)
                                            (and
                                              (<=
                                                ii@460@01
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                              (and
                                                (<= 0 wi@461@01)
                                                (<
                                                  wi@461@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01)))))))
                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                    (=>
                                      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                        (=>
                                          (and
                                            (<= 0 ii@460@01)
                                            (and
                                              (<=
                                                ii@460@01
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                              (and
                                                (<= 0 wi@461@01)
                                                (<
                                                  wi@461@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01)))))
                                          (=
                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                          $t@363@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                      (and
                                        (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                          (=>
                                            (and
                                              (<= 0 ii@460@01)
                                              (and
                                                (<=
                                                  ii@460@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                (and
                                                  (<= 0 wi@461@01)
                                                  (<
                                                    wi@461@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      $Snap.unit) ret@230@01)))))
                                            (=
                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                          :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                          (and
                                            (or
                                              (<= 0 wi@462@01)
                                              (not (<= 0 wi@462@01)))
                                            (=>
                                              (and
                                                (<= 0 wi@462@01)
                                                (<
                                                  wi@462@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                              (and
                                                (<= 0 wi@462@01)
                                                (<
                                                  wi@462@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                                                (<=
                                                  0
                                                  (+
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                    1))
                                                (<=
                                                  (+
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                    1)
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    $t@363@01
                                                    $Snap.unit) $t@453@01))
                                                (<= wi@462@01 _2@101@01)
                                                (<= 0 _2@101@01)
                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit))))))) $t@453@01 (+
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                  1) wi@462@01 _2@101@01)
                                                (<
                                                  (+
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                    1)
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01))
                                                (<
                                                  wi@462@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01))
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 (+
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                  1) wi@462@01)))
                                            (or
                                              (not
                                                (and
                                                  (<= 0 wi@462@01)
                                                  (<
                                                    wi@462@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                                              (and
                                                (<= 0 wi@462@01)
                                                (<
                                                  wi@462@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
                                          
                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
                                        (=>
                                          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                            (=>
                                              (and
                                                (<= 0 wi@462@01)
                                                (<
                                                  wi@462@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                              (=
                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit))))))) $t@453@01 (+
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                  1) wi@462@01 _2@101@01)
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 (+
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                  1) wi@462@01)))
                                            
                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                          (and
                                            (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                              (=>
                                                (and
                                                  (<= 0 wi@462@01)
                                                  (<
                                                    wi@462@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                (=
                                                  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                    $t@363@01
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit))))))) $t@453@01 (+
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                    1) wi@462@01 _2@101@01)
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 (+
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                    1) wi@462@01)))
                                              
                                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                            (forall ((ii@464@01 Int)) (!
                                              (and
                                                (or
                                                  (<= 0 ii@464@01)
                                                  (not (<= 0 ii@464@01)))
                                                (=>
                                                  (and
                                                    (<= 0 ii@464@01)
                                                    (<
                                                      ii@464@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01)))
                                                  (and
                                                    (<= 0 ii@464@01)
                                                    (<
                                                      ii@464@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01))
                                                    (<
                                                      0
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01))
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                                                (or
                                                  (not
                                                    (and
                                                      (<= 0 ii@464@01)
                                                      (<
                                                        ii@464@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))))
                                                  (and
                                                    (<= 0 ii@464@01)
                                                    (<
                                                      ii@464@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01)))))
                                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit)))))) ret@230@01 ii@464@01 0))
                                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
                                        (or
                                          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                            (=>
                                              (and
                                                (<= 0 wi@462@01)
                                                (<
                                                  wi@462@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                              (=
                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit))))))) $t@453@01 (+
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                  1) wi@462@01 _2@101@01)
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 (+
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                  1) wi@462@01)))
                                            
                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                          (not
                                            (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                              (=>
                                                (and
                                                  (<= 0 wi@462@01)
                                                  (<
                                                    wi@462@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                (=
                                                  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                    $t@363@01
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit))))))) $t@453@01 (+
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                    1) wi@462@01 _2@101@01)
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 (+
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                    1) wi@462@01)))
                                              
                                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
                                    (or
                                      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                        (=>
                                          (and
                                            (<= 0 ii@460@01)
                                            (and
                                              (<=
                                                ii@460@01
                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                              (and
                                                (<= 0 wi@461@01)
                                                (<
                                                  wi@461@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01)))))
                                          (=
                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                          $t@363@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                      (not
                                        (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                          (=>
                                            (and
                                              (<= 0 ii@460@01)
                                              (and
                                                (<=
                                                  ii@460@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                (and
                                                  (<= 0 wi@461@01)
                                                  (<
                                                    wi@461@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      $Snap.unit) ret@230@01)))))
                                            (=
                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                          :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
                                (or
                                  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                    (=>
                                      (and
                                        (<= 0 ii@458@01)
                                        (and
                                          (<
                                            ii@458@01
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              $Snap.unit) ret@230@01))
                                          (and
                                            (<= 0 wi@459@01)
                                            (<
                                              wi@459@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01)))))
                                      (>=
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                        0))
                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                  (not
                                    (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                      (=>
                                        (and
                                          (<= 0 ii@458@01)
                                          (and
                                            (<
                                              ii@458@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01))
                                            (and
                                              (<= 0 wi@459@01)
                                              (<
                                                wi@459@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  $Snap.unit) ret@230@01)))))
                                        (>=
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                          0))
                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))))
                            (or
                              (=
                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                              (not
                                (=
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                    $t@363@01
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                        (or
                          (=
                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                          (not
                            (=
                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                $t@363@01
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                    (or
                      (< _2@101@01 18446744073709551615)
                      (not (< _2@101@01 18446744073709551615)))))
                (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
            (or
              (<
                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@363@01
                  $Snap.unit) $t@453@01))
              (not
                (<
                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    $t@363@01
                    $Snap.unit) $t@453@01))))))
        (or
          (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
          (not (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
    (or
      (<=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01))
      (not
        (<=
          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)))))))
(assert (or
  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
  (not (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
(pop) ; 17
(pop) ; 16
; Joined path conditions
; Joined path conditions
(assert (=>
  (=
    (+ _2@101@01 1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))
  (and
    (=
      (+ _2@101@01 1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01))
    (=>
      (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
      (and
        (=>
          (<=
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (and
            (<=
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (=>
              (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
              (and
                (=>
                  (<
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      $t@363@01
                      $Snap.unit) $t@453@01))
                  (and
                    (<
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        $t@363@01
                        $Snap.unit) $t@453@01))
                    (=>
                      (<= 2 _2@101@01)
                      (and
                        (=>
                          (< _2@101@01 18446744073709551615)
                          (and
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                            (=>
                              (=
                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                              (and
                                (=
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                    $t@363@01
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                (=>
                                  (=
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                      $t@363@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                  (and
                                    (=
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                    (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                      (and
                                        (=>
                                          (<= 0 ii@458@01)
                                          (and
                                            (<= 0 ii@458@01)
                                            (=>
                                              (<
                                                ii@458@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  $Snap.unit) ret@230@01))
                                              (and
                                                (<
                                                  ii@458@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01))
                                                (or
                                                  (<= 0 wi@459@01)
                                                  (not (<= 0 wi@459@01)))))
                                            (or
                                              (<
                                                ii@458@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  $Snap.unit) ret@230@01))
                                              (not
                                                (<
                                                  ii@458@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01))))))
                                        (or
                                          (<= 0 ii@458@01)
                                          (not (<= 0 ii@458@01)))
                                        (=>
                                          (and
                                            (<= 0 ii@458@01)
                                            (and
                                              (<
                                                ii@458@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  $Snap.unit) ret@230@01))
                                              (and
                                                (<= 0 wi@459@01)
                                                (<
                                                  wi@459@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01)))))
                                          (and
                                            (<= 0 ii@458@01)
                                            (<
                                              ii@458@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01))
                                            (<= 0 wi@459@01)
                                            (<
                                              wi@459@01
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                $Snap.unit) ret@230@01))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
                                        (or
                                          (not
                                            (and
                                              (<= 0 ii@458@01)
                                              (and
                                                (<
                                                  ii@458@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01))
                                                (and
                                                  (<= 0 wi@459@01)
                                                  (<
                                                    wi@459@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      $Snap.unit) ret@230@01))))))
                                          (and
                                            (<= 0 ii@458@01)
                                            (and
                                              (<
                                                ii@458@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  $Snap.unit) ret@230@01))
                                              (and
                                                (<= 0 wi@459@01)
                                                (<
                                                  wi@459@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01)))))))
                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
                                    (=>
                                      (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                        (=>
                                          (and
                                            (<= 0 ii@458@01)
                                            (and
                                              (<
                                                ii@458@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  $Snap.unit) ret@230@01))
                                              (and
                                                (<= 0 wi@459@01)
                                                (<
                                                  wi@459@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01)))))
                                          (>=
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                            0))
                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                      (and
                                        (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                          (=>
                                            (and
                                              (<= 0 ii@458@01)
                                              (and
                                                (<
                                                  ii@458@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01))
                                                (and
                                                  (<= 0 wi@459@01)
                                                  (<
                                                    wi@459@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      $Snap.unit) ret@230@01)))))
                                            (>=
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                              0))
                                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                        (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                          (and
                                            (=>
                                              (<= 0 ii@460@01)
                                              (and
                                                (<= 0 ii@460@01)
                                                (=>
                                                  (<=
                                                    ii@460@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                  (and
                                                    (<=
                                                      ii@460@01
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                    (or
                                                      (<= 0 wi@461@01)
                                                      (not (<= 0 wi@461@01)))))
                                                (or
                                                  (<=
                                                    ii@460@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                  (not
                                                    (<=
                                                      ii@460@01
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                            (or
                                              (<= 0 ii@460@01)
                                              (not (<= 0 ii@460@01)))
                                            (=>
                                              (and
                                                (<= 0 ii@460@01)
                                                (and
                                                  (<=
                                                    ii@460@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                  (and
                                                    (<= 0 wi@461@01)
                                                    (<
                                                      wi@461@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01)))))
                                              (and
                                                (<= 0 ii@460@01)
                                                (<=
                                                  ii@460@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                (<= 0 wi@461@01)
                                                (<
                                                  wi@461@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01))
                                                (<=
                                                  ii@460@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    $t@363@01
                                                    $Snap.unit) $t@453@01))
                                                (<= wi@461@01 _2@101@01)
                                                (<= 0 _2@101@01)
                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                (<
                                                  ii@460@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01))
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                            (or
                                              (not
                                                (and
                                                  (<= 0 ii@460@01)
                                                  (and
                                                    (<=
                                                      ii@460@01
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                    (and
                                                      (<= 0 wi@461@01)
                                                      (<
                                                        wi@461@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))))))
                                              (and
                                                (<= 0 ii@460@01)
                                                (and
                                                  (<=
                                                    ii@460@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                  (and
                                                    (<= 0 wi@461@01)
                                                    (<
                                                      wi@461@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01)))))))
                                          :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                        (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                          (and
                                            (=>
                                              (<= 0 ii@460@01)
                                              (and
                                                (<= 0 ii@460@01)
                                                (=>
                                                  (<=
                                                    ii@460@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                  (and
                                                    (<=
                                                      ii@460@01
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                    (or
                                                      (<= 0 wi@461@01)
                                                      (not (<= 0 wi@461@01)))))
                                                (or
                                                  (<=
                                                    ii@460@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                  (not
                                                    (<=
                                                      ii@460@01
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                            (or
                                              (<= 0 ii@460@01)
                                              (not (<= 0 ii@460@01)))
                                            (=>
                                              (and
                                                (<= 0 ii@460@01)
                                                (and
                                                  (<=
                                                    ii@460@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                  (and
                                                    (<= 0 wi@461@01)
                                                    (<
                                                      wi@461@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01)))))
                                              (and
                                                (<= 0 ii@460@01)
                                                (<=
                                                  ii@460@01
                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                (<= 0 wi@461@01)
                                                (<
                                                  wi@461@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01))
                                                (<=
                                                  ii@460@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    $t@363@01
                                                    $Snap.unit) $t@453@01))
                                                (<= wi@461@01 _2@101@01)
                                                (<= 0 _2@101@01)
                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                (<
                                                  ii@460@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01))
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                            (or
                                              (not
                                                (and
                                                  (<= 0 ii@460@01)
                                                  (and
                                                    (<=
                                                      ii@460@01
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                    (and
                                                      (<= 0 wi@461@01)
                                                      (<
                                                        wi@461@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))))))
                                              (and
                                                (<= 0 ii@460@01)
                                                (and
                                                  (<=
                                                    ii@460@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                  (and
                                                    (<= 0 wi@461@01)
                                                    (<
                                                      wi@461@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01)))))))
                                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                        (=>
                                          (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                            (=>
                                              (and
                                                (<= 0 ii@460@01)
                                                (and
                                                  (<=
                                                    ii@460@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                  (and
                                                    (<= 0 wi@461@01)
                                                    (<
                                                      wi@461@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01)))))
                                              (=
                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                            :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                          (and
                                            (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                              (=>
                                                (and
                                                  (<= 0 ii@460@01)
                                                  (and
                                                    (<=
                                                      ii@460@01
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                    (and
                                                      (<= 0 wi@461@01)
                                                      (<
                                                        wi@461@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01)))))
                                                (=
                                                  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                    $t@363@01
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                              :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                            (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                              (and
                                                (or
                                                  (<= 0 wi@462@01)
                                                  (not (<= 0 wi@462@01)))
                                                (=>
                                                  (and
                                                    (<= 0 wi@462@01)
                                                    (<
                                                      wi@462@01
                                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                  (and
                                                    (<= 0 wi@462@01)
                                                    (<
                                                      wi@462@01
                                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                                                    (<=
                                                      0
                                                      (+
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                        1))
                                                    (<=
                                                      (+
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                        1)
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        $t@363@01
                                                        $Snap.unit) $t@453@01))
                                                    (<= wi@462@01 _2@101@01)
                                                    (<= 0 _2@101@01)
                                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                      $t@363@01
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit))))))) $t@453@01 (+
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                      1) wi@462@01 _2@101@01)
                                                    (<
                                                      (+
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                        1)
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01))
                                                    (<
                                                      wi@462@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01))
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 (+
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                      1) wi@462@01)))
                                                (or
                                                  (not
                                                    (and
                                                      (<= 0 wi@462@01)
                                                      (<
                                                        wi@462@01
                                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                                                  (and
                                                    (<= 0 wi@462@01)
                                                    (<
                                                      wi@462@01
                                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
                                              
                                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
                                            (=>
                                              (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                (=>
                                                  (and
                                                    (<= 0 wi@462@01)
                                                    (<
                                                      wi@462@01
                                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                  (=
                                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                      $t@363@01
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit))))))) $t@453@01 (+
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                      1) wi@462@01 _2@101@01)
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 (+
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                      1) wi@462@01)))
                                                
                                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                              (and
                                                (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 wi@462@01)
                                                      (<
                                                        wi@462@01
                                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                    (=
                                                      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 (+
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                        1) wi@462@01 _2@101@01)
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 (+
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                        1) wi@462@01)))
                                                  
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                (forall ((ii@464@01 Int)) (!
                                                  (and
                                                    (or
                                                      (<= 0 ii@464@01)
                                                      (not (<= 0 ii@464@01)))
                                                    (=>
                                                      (and
                                                        (<= 0 ii@464@01)
                                                        (<
                                                          ii@464@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01)))
                                                      (and
                                                        (<= 0 ii@464@01)
                                                        (<
                                                          ii@464@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (<
                                                          0
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                                                    (or
                                                      (not
                                                        (and
                                                          (<= 0 ii@464@01)
                                                          (<
                                                            ii@464@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))))
                                                      (and
                                                        (<= 0 ii@464@01)
                                                        (<
                                                          ii@464@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01)))))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@464@01 0))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
                                            (or
                                              (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                (=>
                                                  (and
                                                    (<= 0 wi@462@01)
                                                    (<
                                                      wi@462@01
                                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                  (=
                                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                      $t@363@01
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit))))))) $t@453@01 (+
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                      1) wi@462@01 _2@101@01)
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 (+
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                      1) wi@462@01)))
                                                
                                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                              (not
                                                (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 wi@462@01)
                                                      (<
                                                        wi@462@01
                                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                    (=
                                                      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 (+
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                        1) wi@462@01 _2@101@01)
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 (+
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                        1) wi@462@01)))
                                                  
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
                                        (or
                                          (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                            (=>
                                              (and
                                                (<= 0 ii@460@01)
                                                (and
                                                  (<=
                                                    ii@460@01
                                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                  (and
                                                    (<= 0 wi@461@01)
                                                    (<
                                                      wi@461@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01)))))
                                              (=
                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                            :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                          (not
                                            (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                              (=>
                                                (and
                                                  (<= 0 ii@460@01)
                                                  (and
                                                    (<=
                                                      ii@460@01
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                    (and
                                                      (<= 0 wi@461@01)
                                                      (<
                                                        wi@461@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01)))))
                                                (=
                                                  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                    $t@363@01
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                              :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
                                    (or
                                      (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                        (=>
                                          (and
                                            (<= 0 ii@458@01)
                                            (and
                                              (<
                                                ii@458@01
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  $Snap.unit) ret@230@01))
                                              (and
                                                (<= 0 wi@459@01)
                                                (<
                                                  wi@459@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01)))))
                                          (>=
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                            0))
                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                          ($Snap.first ($Snap.second $t@452@01))
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                      (not
                                        (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                          (=>
                                            (and
                                              (<= 0 ii@458@01)
                                              (and
                                                (<
                                                  ii@458@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01))
                                                (and
                                                  (<= 0 wi@459@01)
                                                  (<
                                                    wi@459@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      $Snap.unit) ret@230@01)))))
                                            (>=
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                              0))
                                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))))
                                (or
                                  (=
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                      $t@363@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                  (not
                                    (=
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                            (or
                              (=
                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                              (not
                                (=
                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                    $t@363@01
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                        (or
                          (< _2@101@01 18446744073709551615)
                          (not (< _2@101@01 18446744073709551615)))))
                    (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
                (or
                  (<
                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      $t@363@01
                      $Snap.unit) $t@453@01))
                  (not
                    (<
                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        $t@363@01
                        $Snap.unit) $t@453@01))))))
            (or
              (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
              (not (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
        (or
          (<=
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (not
            (<=
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))))))
    (or
      (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
      (not
        (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))))
(assert (or
  (=
    (+ _2@101@01 1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))
  (not
    (=
      (+ _2@101@01 1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01)))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (=>
  (=
    (+
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@363@01
        $Snap.unit) $t@453@01)
      1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))
  (and
    (=
      (+
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@363@01
          $Snap.unit) $t@453@01)
        1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01)
    (=>
      (=
        (+ _2@101@01 1)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01))
      (and
        (=
          (+ _2@101@01 1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (=>
          (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
          (and
            (=>
              (<=
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))
              (and
                (<=
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))
                (=>
                  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                  (and
                    (=>
                      (<
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          $t@363@01
                          $Snap.unit) $t@453@01))
                      (and
                        (<
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            $t@363@01
                            $Snap.unit) $t@453@01))
                        (=>
                          (<= 2 _2@101@01)
                          (and
                            (=>
                              (< _2@101@01 18446744073709551615)
                              (and
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                (=>
                                  (=
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                      $t@363@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                  (and
                                    (=
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                                      $t@363@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                    (=>
                                      (=
                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                          $t@363@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                      (and
                                        (=
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                        (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                          (and
                                            (=>
                                              (<= 0 ii@458@01)
                                              (and
                                                (<= 0 ii@458@01)
                                                (=>
                                                  (<
                                                    ii@458@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      $Snap.unit) ret@230@01))
                                                  (and
                                                    (<
                                                      ii@458@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01))
                                                    (or
                                                      (<= 0 wi@459@01)
                                                      (not (<= 0 wi@459@01)))))
                                                (or
                                                  (<
                                                    ii@458@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      $Snap.unit) ret@230@01))
                                                  (not
                                                    (<
                                                      ii@458@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01))))))
                                            (or
                                              (<= 0 ii@458@01)
                                              (not (<= 0 ii@458@01)))
                                            (=>
                                              (and
                                                (<= 0 ii@458@01)
                                                (and
                                                  (<
                                                    ii@458@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      $Snap.unit) ret@230@01))
                                                  (and
                                                    (<= 0 wi@459@01)
                                                    (<
                                                      wi@459@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01)))))
                                              (and
                                                (<= 0 ii@458@01)
                                                (<
                                                  ii@458@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01))
                                                (<= 0 wi@459@01)
                                                (<
                                                  wi@459@01
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    $Snap.unit) ret@230@01))
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
                                            (or
                                              (not
                                                (and
                                                  (<= 0 ii@458@01)
                                                  (and
                                                    (<
                                                      ii@458@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01))
                                                    (and
                                                      (<= 0 wi@459@01)
                                                      (<
                                                        wi@459@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))))))
                                              (and
                                                (<= 0 ii@458@01)
                                                (and
                                                  (<
                                                    ii@458@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      $Snap.unit) ret@230@01))
                                                  (and
                                                    (<= 0 wi@459@01)
                                                    (<
                                                      wi@459@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01)))))))
                                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                            ($Snap.first ($Snap.second $t@452@01))
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
                                        (=>
                                          (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                            (=>
                                              (and
                                                (<= 0 ii@458@01)
                                                (and
                                                  (<
                                                    ii@458@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      $Snap.unit) ret@230@01))
                                                  (and
                                                    (<= 0 wi@459@01)
                                                    (<
                                                      wi@459@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01)))))
                                              (>=
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                0))
                                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                          (and
                                            (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                              (=>
                                                (and
                                                  (<= 0 ii@458@01)
                                                  (and
                                                    (<
                                                      ii@458@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01))
                                                    (and
                                                      (<= 0 wi@459@01)
                                                      (<
                                                        wi@459@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01)))))
                                                (>=
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                  0))
                                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                            (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                              (and
                                                (=>
                                                  (<= 0 ii@460@01)
                                                  (and
                                                    (<= 0 ii@460@01)
                                                    (=>
                                                      (<=
                                                        ii@460@01
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                      (and
                                                        (<=
                                                          ii@460@01
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                        (or
                                                          (<= 0 wi@461@01)
                                                          (not (<= 0 wi@461@01)))))
                                                    (or
                                                      (<=
                                                        ii@460@01
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                      (not
                                                        (<=
                                                          ii@460@01
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                                (or
                                                  (<= 0 ii@460@01)
                                                  (not (<= 0 ii@460@01)))
                                                (=>
                                                  (and
                                                    (<= 0 ii@460@01)
                                                    (and
                                                      (<=
                                                        ii@460@01
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                      (and
                                                        (<= 0 wi@461@01)
                                                        (<
                                                          wi@461@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01)))))
                                                  (and
                                                    (<= 0 ii@460@01)
                                                    (<=
                                                      ii@460@01
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                    (<= 0 wi@461@01)
                                                    (<
                                                      wi@461@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01))
                                                    (<=
                                                      ii@460@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        $t@363@01
                                                        $Snap.unit) $t@453@01))
                                                    (<= wi@461@01 _2@101@01)
                                                    (<= 0 _2@101@01)
                                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                      $t@363@01
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                    (<
                                                      ii@460@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01))
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                (or
                                                  (not
                                                    (and
                                                      (<= 0 ii@460@01)
                                                      (and
                                                        (<=
                                                          ii@460@01
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                        (and
                                                          (<= 0 wi@461@01)
                                                          (<
                                                            wi@461@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))))))
                                                  (and
                                                    (<= 0 ii@460@01)
                                                    (and
                                                      (<=
                                                        ii@460@01
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                      (and
                                                        (<= 0 wi@461@01)
                                                        (<
                                                          wi@461@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01)))))))
                                              :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                            (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                              (and
                                                (=>
                                                  (<= 0 ii@460@01)
                                                  (and
                                                    (<= 0 ii@460@01)
                                                    (=>
                                                      (<=
                                                        ii@460@01
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                      (and
                                                        (<=
                                                          ii@460@01
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                        (or
                                                          (<= 0 wi@461@01)
                                                          (not (<= 0 wi@461@01)))))
                                                    (or
                                                      (<=
                                                        ii@460@01
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                      (not
                                                        (<=
                                                          ii@460@01
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                                (or
                                                  (<= 0 ii@460@01)
                                                  (not (<= 0 ii@460@01)))
                                                (=>
                                                  (and
                                                    (<= 0 ii@460@01)
                                                    (and
                                                      (<=
                                                        ii@460@01
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                      (and
                                                        (<= 0 wi@461@01)
                                                        (<
                                                          wi@461@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01)))))
                                                  (and
                                                    (<= 0 ii@460@01)
                                                    (<=
                                                      ii@460@01
                                                      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                    (<= 0 wi@461@01)
                                                    (<
                                                      wi@461@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01))
                                                    (<=
                                                      ii@460@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        $t@363@01
                                                        $Snap.unit) $t@453@01))
                                                    (<= wi@461@01 _2@101@01)
                                                    (<= 0 _2@101@01)
                                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                      $t@363@01
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                    (<
                                                      ii@460@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01))
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                (or
                                                  (not
                                                    (and
                                                      (<= 0 ii@460@01)
                                                      (and
                                                        (<=
                                                          ii@460@01
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                        (and
                                                          (<= 0 wi@461@01)
                                                          (<
                                                            wi@461@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))))))
                                                  (and
                                                    (<= 0 ii@460@01)
                                                    (and
                                                      (<=
                                                        ii@460@01
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                      (and
                                                        (<= 0 wi@461@01)
                                                        (<
                                                          wi@461@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01)))))))
                                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                            (=>
                                              (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                (=>
                                                  (and
                                                    (<= 0 ii@460@01)
                                                    (and
                                                      (<=
                                                        ii@460@01
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                      (and
                                                        (<= 0 wi@461@01)
                                                        (<
                                                          wi@461@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01)))))
                                                  (=
                                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                      $t@363@01
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                              (and
                                                (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 ii@460@01)
                                                      (and
                                                        (<=
                                                          ii@460@01
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                        (and
                                                          (<= 0 wi@461@01)
                                                          (<
                                                            wi@461@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (=
                                                      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                    $t@363@01
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                  (and
                                                    (or
                                                      (<= 0 wi@462@01)
                                                      (not (<= 0 wi@462@01)))
                                                    (=>
                                                      (and
                                                        (<= 0 wi@462@01)
                                                        (<
                                                          wi@462@01
                                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                      (and
                                                        (<= 0 wi@462@01)
                                                        (<
                                                          wi@462@01
                                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                                                        (<=
                                                          0
                                                          (+
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                            1))
                                                        (<=
                                                          (+
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                            1)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            $t@363@01
                                                            $Snap.unit) $t@453@01))
                                                        (<= wi@462@01 _2@101@01)
                                                        (<= 0 _2@101@01)
                                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 (+
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                          1) wi@462@01 _2@101@01)
                                                        (<
                                                          (+
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                            1)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (<
                                                          wi@462@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 (+
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                          1) wi@462@01)))
                                                    (or
                                                      (not
                                                        (and
                                                          (<= 0 wi@462@01)
                                                          (<
                                                            wi@462@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                                                      (and
                                                        (<= 0 wi@462@01)
                                                        (<
                                                          wi@462@01
                                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
                                                  
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
                                                (=>
                                                  (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                    (=>
                                                      (and
                                                        (<= 0 wi@462@01)
                                                        (<
                                                          wi@462@01
                                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                      (=
                                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 (+
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                          1) wi@462@01 _2@101@01)
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 (+
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                          1) wi@462@01)))
                                                    
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                  (and
                                                    (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                      (=>
                                                        (and
                                                          (<= 0 wi@462@01)
                                                          (<
                                                            wi@462@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                        (=
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 (+
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                            1) wi@462@01 _2@101@01)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 (+
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                            1) wi@462@01)))
                                                      
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                    (forall ((ii@464@01 Int)) (!
                                                      (and
                                                        (or
                                                          (<= 0 ii@464@01)
                                                          (not (<= 0 ii@464@01)))
                                                        (=>
                                                          (and
                                                            (<= 0 ii@464@01)
                                                            (<
                                                              ii@464@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))
                                                          (and
                                                            (<= 0 ii@464@01)
                                                            (<
                                                              ii@464@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01))
                                                            (<
                                                              0
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01))
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                                                        (or
                                                          (not
                                                            (and
                                                              (<= 0 ii@464@01)
                                                              (<
                                                                ii@464@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01))))
                                                          (and
                                                            (<= 0 ii@464@01)
                                                            (<
                                                              ii@464@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))
                                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@464@01 0))
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
                                                (or
                                                  (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                    (=>
                                                      (and
                                                        (<= 0 wi@462@01)
                                                        (<
                                                          wi@462@01
                                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                      (=
                                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 (+
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                          1) wi@462@01 _2@101@01)
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 (+
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                          1) wi@462@01)))
                                                    
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                  (not
                                                    (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                      (=>
                                                        (and
                                                          (<= 0 wi@462@01)
                                                          (<
                                                            wi@462@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                        (=
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 (+
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                            1) wi@462@01 _2@101@01)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 (+
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                            1) wi@462@01)))
                                                      
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
                                            (or
                                              (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                (=>
                                                  (and
                                                    (<= 0 ii@460@01)
                                                    (and
                                                      (<=
                                                        ii@460@01
                                                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                      (and
                                                        (<= 0 wi@461@01)
                                                        (<
                                                          wi@461@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01)))))
                                                  (=
                                                    (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                      $t@363@01
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                              (not
                                                (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 ii@460@01)
                                                      (and
                                                        (<=
                                                          ii@460@01
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                        (and
                                                          (<= 0 wi@461@01)
                                                          (<
                                                            wi@461@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (=
                                                      (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                    $t@363@01
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
                                        (or
                                          (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                            (=>
                                              (and
                                                (<= 0 ii@458@01)
                                                (and
                                                  (<
                                                    ii@458@01
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      $Snap.unit) ret@230@01))
                                                  (and
                                                    (<= 0 wi@459@01)
                                                    (<
                                                      wi@459@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01)))))
                                              (>=
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                0))
                                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                              ($Snap.first ($Snap.second $t@452@01))
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                          (not
                                            (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                              (=>
                                                (and
                                                  (<= 0 ii@458@01)
                                                  (and
                                                    (<
                                                      ii@458@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01))
                                                    (and
                                                      (<= 0 wi@459@01)
                                                      (<
                                                        wi@459@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01)))))
                                                (>=
                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                  0))
                                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))))
                                    (or
                                      (=
                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                          $t@363@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                      (not
                                        (=
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                                (or
                                  (=
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                      $t@363@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                  (not
                                    (=
                                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                            (or
                              (< _2@101@01 18446744073709551615)
                              (not (< _2@101@01 18446744073709551615)))))
                        (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
                    (or
                      (<
                        ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          $t@363@01
                          $Snap.unit) $t@453@01))
                      (not
                        (<
                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                            $t@363@01
                            $Snap.unit) $t@453@01))))))
                (or
                  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                  (not (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
            (or
              (<=
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))
              (not
                (<=
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first ($Snap.second $t@452@01))
                    $Snap.unit) ret@230@01))))))
        (or
          (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
          (not
            (<=
              0
              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
    (or
      (=
        (+ _2@101@01 1)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01))
      (not
        (=
          (+ _2@101@01 1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)))))))
(assert (or
  (=
    (+
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@363@01
        $Snap.unit) $t@453@01)
      1)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01))
  (not
    (=
      (+
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@363@01
          $Snap.unit) $t@453@01)
        1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01)))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))) _2@101@01)
  (and
    (<=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      _2@101@01)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
      $t@363@01
      $Snap.unit) $t@453@01)
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
      ($Snap.first ($Snap.second $t@452@01))
      $Snap.unit) ret@230@01)
    (=>
      (=
        (+
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@363@01
            $Snap.unit) $t@453@01)
          1)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01))
      (and
        (=
          (+
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@453@01)
            1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01)
        (=>
          (=
            (+ _2@101@01 1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (and
            (=
              (+ _2@101@01 1)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (=>
              (<=
                0
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
              (and
                (=>
                  (<=
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01))
                  (and
                    (<=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (=>
                      (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                      (and
                        (=>
                          (<
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              $t@363@01
                              $Snap.unit) $t@453@01))
                          (and
                            (<
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@363@01
                                $Snap.unit) $t@453@01))
                            (=>
                              (<= 2 _2@101@01)
                              (and
                                (=>
                                  (< _2@101@01 18446744073709551615)
                                  (and
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                                      $t@363@01
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                    (=>
                                      (=
                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                          $t@363@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                      (and
                                        (=
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                                          $t@363@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                        (=>
                                          (=
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                          (and
                                            (=
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                            (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                              (and
                                                (=>
                                                  (<= 0 ii@458@01)
                                                  (and
                                                    (<= 0 ii@458@01)
                                                    (=>
                                                      (<
                                                        ii@458@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (or
                                                          (<= 0 wi@459@01)
                                                          (not (<= 0 wi@459@01)))))
                                                    (or
                                                      (<
                                                        ii@458@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (not
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))))))
                                                (or
                                                  (<= 0 ii@458@01)
                                                  (not (<= 0 ii@458@01)))
                                                (=>
                                                  (and
                                                    (<= 0 ii@458@01)
                                                    (and
                                                      (<
                                                        ii@458@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (and
                                                        (<= 0 wi@459@01)
                                                        (<
                                                          wi@459@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01)))))
                                                  (and
                                                    (<= 0 ii@458@01)
                                                    (<
                                                      ii@458@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01))
                                                    (<= 0 wi@459@01)
                                                    (<
                                                      wi@459@01
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        $Snap.unit) ret@230@01))
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
                                                (or
                                                  (not
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))))))
                                                  (and
                                                    (<= 0 ii@458@01)
                                                    (and
                                                      (<
                                                        ii@458@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (and
                                                        (<= 0 wi@459@01)
                                                        (<
                                                          wi@459@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01)))))))
                                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                ($Snap.first ($Snap.second $t@452@01))
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
                                            (=>
                                              (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                (=>
                                                  (and
                                                    (<= 0 ii@458@01)
                                                    (and
                                                      (<
                                                        ii@458@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (and
                                                        (<= 0 wi@459@01)
                                                        (<
                                                          wi@459@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01)))))
                                                  (>=
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                    0))
                                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                              (and
                                                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (>=
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                      0))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                  (and
                                                    (=>
                                                      (<= 0 ii@460@01)
                                                      (and
                                                        (<= 0 ii@460@01)
                                                        (=>
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (or
                                                              (<= 0 wi@461@01)
                                                              (not
                                                                (<= 0 wi@461@01)))))
                                                        (or
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (not
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                                    (or
                                                      (<= 0 ii@460@01)
                                                      (not (<= 0 ii@460@01)))
                                                    (=>
                                                      (and
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (and
                                                            (<= 0 wi@461@01)
                                                            (<
                                                              wi@461@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))
                                                      (and
                                                        (<= 0 ii@460@01)
                                                        (<=
                                                          ii@460@01
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                        (<= 0 wi@461@01)
                                                        (<
                                                          wi@461@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (<=
                                                          ii@460@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            $t@363@01
                                                            $Snap.unit) $t@453@01))
                                                        (<= wi@461@01 _2@101@01)
                                                        (<= 0 _2@101@01)
                                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                        (<
                                                          ii@460@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                    (or
                                                      (not
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01))))))
                                                      (and
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (and
                                                            (<= 0 wi@461@01)
                                                            (<
                                                              wi@461@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))))
                                                  :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                    $t@363@01
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                                (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                  (and
                                                    (=>
                                                      (<= 0 ii@460@01)
                                                      (and
                                                        (<= 0 ii@460@01)
                                                        (=>
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (or
                                                              (<= 0 wi@461@01)
                                                              (not
                                                                (<= 0 wi@461@01)))))
                                                        (or
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (not
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                                    (or
                                                      (<= 0 ii@460@01)
                                                      (not (<= 0 ii@460@01)))
                                                    (=>
                                                      (and
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (and
                                                            (<= 0 wi@461@01)
                                                            (<
                                                              wi@461@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))
                                                      (and
                                                        (<= 0 ii@460@01)
                                                        (<=
                                                          ii@460@01
                                                          ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                        (<= 0 wi@461@01)
                                                        (<
                                                          wi@461@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (<=
                                                          ii@460@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            $t@363@01
                                                            $Snap.unit) $t@453@01))
                                                        (<= wi@461@01 _2@101@01)
                                                        (<= 0 _2@101@01)
                                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                        (<
                                                          ii@460@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                    (or
                                                      (not
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01))))))
                                                      (and
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (and
                                                            (<= 0 wi@461@01)
                                                            (<
                                                              wi@461@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                                (=>
                                                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                    (=>
                                                      (and
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (and
                                                            (<= 0 wi@461@01)
                                                            (<
                                                              wi@461@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))
                                                      (=
                                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                      $t@363@01
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                  (and
                                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (=
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                    (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                      (and
                                                        (or
                                                          (<= 0 wi@462@01)
                                                          (not (<= 0 wi@462@01)))
                                                        (=>
                                                          (and
                                                            (<= 0 wi@462@01)
                                                            (<
                                                              wi@462@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                          (and
                                                            (<= 0 wi@462@01)
                                                            (<
                                                              wi@462@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                                                            (<=
                                                              0
                                                              (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1))
                                                            (<=
                                                              (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1)
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                $t@363@01
                                                                $Snap.unit) $t@453@01))
                                                            (<=
                                                              wi@462@01
                                                              _2@101@01)
                                                            (<= 0 _2@101@01)
                                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                              $t@363@01
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit))))))) $t@453@01 (+
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                              1) wi@462@01 _2@101@01)
                                                            (<
                                                              (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1)
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01))
                                                            (<
                                                              wi@462@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01))
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 (+
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                              1) wi@462@01)))
                                                        (or
                                                          (not
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                                                          (and
                                                            (<= 0 wi@462@01)
                                                            (<
                                                              wi@462@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
                                                      
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
                                                    (=>
                                                      (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                        (=>
                                                          (and
                                                            (<= 0 wi@462@01)
                                                            (<
                                                              wi@462@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                          (=
                                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                              $t@363@01
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit))))))) $t@453@01 (+
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                              1) wi@462@01 _2@101@01)
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 (+
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                              1) wi@462@01)))
                                                        
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                      (and
                                                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (=
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          
                                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                        (forall ((ii@464@01 Int)) (!
                                                          (and
                                                            (or
                                                              (<= 0 ii@464@01)
                                                              (not
                                                                (<= 0 ii@464@01)))
                                                            (=>
                                                              (and
                                                                (<= 0 ii@464@01)
                                                                (<
                                                                  ii@464@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01)))
                                                              (and
                                                                (<= 0 ii@464@01)
                                                                (<
                                                                  ii@464@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01))
                                                                (<
                                                                  0
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01))
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                                                            (or
                                                              (not
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01))))
                                                              (and
                                                                (<= 0 ii@464@01)
                                                                (<
                                                                  ii@464@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01)))))
                                                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@464@01 0))
                                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
                                                    (or
                                                      (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                        (=>
                                                          (and
                                                            (<= 0 wi@462@01)
                                                            (<
                                                              wi@462@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                          (=
                                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                              $t@363@01
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit))))))) $t@453@01 (+
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                              1) wi@462@01 _2@101@01)
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 (+
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                              1) wi@462@01)))
                                                        
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                      (not
                                                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (=
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          
                                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
                                                (or
                                                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                    (=>
                                                      (and
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (and
                                                            (<= 0 wi@461@01)
                                                            (<
                                                              wi@461@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))
                                                      (=
                                                        (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                      $t@363@01
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                  (not
                                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (=
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
                                            (or
                                              (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                (=>
                                                  (and
                                                    (<= 0 ii@458@01)
                                                    (and
                                                      (<
                                                        ii@458@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (and
                                                        (<= 0 wi@459@01)
                                                        (<
                                                          wi@459@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01)))))
                                                  (>=
                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                    0))
                                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                              (not
                                                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (>=
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                      0))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))))
                                        (or
                                          (=
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                          (not
                                            (=
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                                    (or
                                      (=
                                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                          $t@363@01
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                      (not
                                        (=
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                                (or
                                  (< _2@101@01 18446744073709551615)
                                  (not (< _2@101@01 18446744073709551615)))))
                            (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
                        (or
                          (<
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                              $t@363@01
                              $Snap.unit) $t@453@01))
                          (not
                            (<
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@363@01
                                $Snap.unit) $t@453@01))))))
                    (or
                      (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                      (not
                        (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                (or
                  (<=
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first ($Snap.second $t@452@01))
                      $Snap.unit) ret@230@01))
                  (not
                    (<=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))))))
            (or
              (<=
                0
                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
              (not
                (<=
                  0
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
        (or
          (=
            (+ _2@101@01 1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (not
            (=
              (+ _2@101@01 1)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))))))
    (or
      (=
        (+
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@363@01
            $Snap.unit) $t@453@01)
          1)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01))
      (not
        (=
          (+
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@453@01)
            1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)))))))
(assert (or
  (<= ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))) _2@101@01)
  (not
    (<=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      _2@101@01))))
(pop) ; 11
; Joined path conditions
(assert (and
  (usize%trigger $t@454@01 ret@289@01)
  (= $t@454@01 ($Snap.combine ($Snap.first $t@454@01) ($Snap.second $t@454@01)))
  (= ($Snap.second $t@454@01) $Snap.unit)
  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
  (=>
    (<=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      _2@101@01)
    (and
      (<=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
        _2@101@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
        $t@363@01
        $Snap.unit) $t@453@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01)
      (=>
        (=
          (+
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@453@01)
            1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (and
          (=
            (+
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@363@01
                $Snap.unit) $t@453@01)
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)
          (=>
            (=
              (+ _2@101@01 1)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (and
              (=
                (+ _2@101@01 1)
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))
              (=>
                (<=
                  0
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                (and
                  (=>
                    (<=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (and
                      (<=
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))
                      (=>
                        (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (and
                          (=>
                            (<
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@363@01
                                $Snap.unit) $t@453@01))
                            (and
                              (<
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  $t@363@01
                                  $Snap.unit) $t@453@01))
                              (=>
                                (<= 2 _2@101@01)
                                (and
                                  (=>
                                    (< _2@101@01 18446744073709551615)
                                    (and
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                      (=>
                                        (=
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                        (and
                                          (=
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                          (=>
                                            (=
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                            (and
                                              (=
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                              (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                (and
                                                  (=>
                                                    (<= 0 ii@458@01)
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (=>
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (or
                                                            (<= 0 wi@459@01)
                                                            (not
                                                              (<= 0 wi@459@01)))))
                                                      (or
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (not
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))))))
                                                  (or
                                                    (<= 0 ii@458@01)
                                                    (not (<= 0 ii@458@01)))
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (<
                                                        ii@458@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (<= 0 wi@459@01)
                                                      (<
                                                        wi@459@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
                                                  (or
                                                    (not
                                                      (and
                                                        (<= 0 ii@458@01)
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (and
                                                            (<= 0 wi@459@01)
                                                            (<
                                                              wi@459@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01))))))
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))))
                                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
                                              (=>
                                                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (>=
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                      0))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                (and
                                                  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                    (=>
                                                      (and
                                                        (<= 0 ii@458@01)
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (and
                                                            (<= 0 wi@459@01)
                                                            (<
                                                              wi@459@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))
                                                      (>=
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                        0))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                    (and
                                                      (=>
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (=>
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (or
                                                                (<= 0 wi@461@01)
                                                                (not
                                                                  (<=
                                                                    0
                                                                    wi@461@01)))))
                                                          (or
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (not
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                                      (or
                                                        (<= 0 ii@460@01)
                                                        (not (<= 0 ii@460@01)))
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (<= 0 wi@461@01)
                                                          (<
                                                            wi@461@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (<=
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              $t@363@01
                                                              $Snap.unit) $t@453@01))
                                                          (<=
                                                            wi@461@01
                                                            _2@101@01)
                                                          (<= 0 _2@101@01)
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (<
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      (or
                                                        (not
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01))))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))))
                                                    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                      $t@363@01
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                    (and
                                                      (=>
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (=>
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (or
                                                                (<= 0 wi@461@01)
                                                                (not
                                                                  (<=
                                                                    0
                                                                    wi@461@01)))))
                                                          (or
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (not
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                                      (or
                                                        (<= 0 ii@460@01)
                                                        (not (<= 0 ii@460@01)))
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (<= 0 wi@461@01)
                                                          (<
                                                            wi@461@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (<=
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              $t@363@01
                                                              $Snap.unit) $t@453@01))
                                                          (<=
                                                            wi@461@01
                                                            _2@101@01)
                                                          (<= 0 _2@101@01)
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (<
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      (or
                                                        (not
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01))))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                                  (=>
                                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (=
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                    (and
                                                      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                        (=>
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01)))))
                                                          (=
                                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                              $t@363@01
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                      (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                        (and
                                                          (or
                                                            (<= 0 wi@462@01)
                                                            (not
                                                              (<= 0 wi@462@01)))
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                                                              (<=
                                                                0
                                                                (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1))
                                                              (<=
                                                                (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  $t@363@01
                                                                  $Snap.unit) $t@453@01))
                                                              (<=
                                                                wi@462@01
                                                                _2@101@01)
                                                              (<= 0 _2@101@01)
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (<
                                                                (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01))
                                                              (<
                                                                wi@462@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01))
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          (or
                                                            (not
                                                              (and
                                                                (<= 0 wi@462@01)
                                                                (<
                                                                  wi@462@01
                                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
                                                        
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
                                                      (=>
                                                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (=
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          
                                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                        (and
                                                          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                            (=>
                                                              (and
                                                                (<= 0 wi@462@01)
                                                                (<
                                                                  wi@462@01
                                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                              (=
                                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                  $t@363@01
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            ($Snap.combine
                                                                              $Snap.unit
                                                                              $Snap.unit))))))) $t@453@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01 _2@101@01)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit)))))) ret@230@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01)))
                                                            
                                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                          (forall ((ii@464@01 Int)) (!
                                                            (and
                                                              (or
                                                                (<= 0 ii@464@01)
                                                                (not
                                                                  (<=
                                                                    0
                                                                    ii@464@01)))
                                                              (=>
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01)))
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01))
                                                                  (<
                                                                    0
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01))
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            ($Snap.combine
                                                                              $Snap.unit
                                                                              $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                                                              (or
                                                                (not
                                                                  (and
                                                                    (<=
                                                                      0
                                                                      ii@464@01)
                                                                    (<
                                                                      ii@464@01
                                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                        ($Snap.first ($Snap.second $t@452@01))
                                                                        $Snap.unit) ret@230@01))))
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01)))))
                                                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@464@01 0))
                                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
                                                      (or
                                                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (=
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          
                                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                        (not
                                                          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                            (=>
                                                              (and
                                                                (<= 0 wi@462@01)
                                                                (<
                                                                  wi@462@01
                                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                              (=
                                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                  $t@363@01
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            ($Snap.combine
                                                                              $Snap.unit
                                                                              $Snap.unit))))))) $t@453@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01 _2@101@01)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit)))))) ret@230@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01)))
                                                            
                                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
                                                  (or
                                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (=
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                    (not
                                                      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                        (=>
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01)))))
                                                          (=
                                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                              $t@363@01
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
                                              (or
                                                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (>=
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                      0))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                (not
                                                  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                    (=>
                                                      (and
                                                        (<= 0 ii@458@01)
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (and
                                                            (<= 0 wi@459@01)
                                                            (<
                                                              wi@459@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))
                                                      (>=
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                        0))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))))
                                          (or
                                            (=
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                            (not
                                              (=
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                                      (or
                                        (=
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                        (not
                                          (=
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                                  (or
                                    (< _2@101@01 18446744073709551615)
                                    (not (< _2@101@01 18446744073709551615)))))
                              (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
                          (or
                            (<
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@363@01
                                $Snap.unit) $t@453@01))
                            (not
                              (<
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  $t@363@01
                                  $Snap.unit) $t@453@01))))))
                      (or
                        (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (not
                          (<=
                            0
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                  (or
                    (<=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (not
                      (<=
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))))))
              (or
                (<=
                  0
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                (not
                  (<=
                    0
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
          (or
            (=
              (+ _2@101@01 1)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (not
              (=
                (+ _2@101@01 1)
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))))))
      (or
        (=
          (+
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@453@01)
            1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (not
          (=
            (+
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@363@01
                $Snap.unit) $t@453@01)
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))))))
  (or
    (<=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      _2@101@01)
    (not
      (<=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
        _2@101@01)))))
(pop) ; 10
; Joined path conditions
(assert (and
  (usize%trigger $t@454@01 ret@289@01)
  (= $t@454@01 ($Snap.combine ($Snap.first $t@454@01) ($Snap.second $t@454@01)))
  (= ($Snap.second $t@454@01) $Snap.unit)
  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
  (=>
    (<=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      _2@101@01)
    (and
      (<=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
        _2@101@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
        $t@363@01
        $Snap.unit) $t@453@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01)
      (=>
        (=
          (+
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@453@01)
            1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (and
          (=
            (+
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@363@01
                $Snap.unit) $t@453@01)
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)
          (=>
            (=
              (+ _2@101@01 1)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (and
              (=
                (+ _2@101@01 1)
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))
              (=>
                (<=
                  0
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                (and
                  (=>
                    (<=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (and
                      (<=
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))
                      (=>
                        (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (and
                          (=>
                            (<
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@363@01
                                $Snap.unit) $t@453@01))
                            (and
                              (<
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  $t@363@01
                                  $Snap.unit) $t@453@01))
                              (=>
                                (<= 2 _2@101@01)
                                (and
                                  (=>
                                    (< _2@101@01 18446744073709551615)
                                    (and
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                      (=>
                                        (=
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                        (and
                                          (=
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                          (=>
                                            (=
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                            (and
                                              (=
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                              (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                (and
                                                  (=>
                                                    (<= 0 ii@458@01)
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (=>
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (or
                                                            (<= 0 wi@459@01)
                                                            (not
                                                              (<= 0 wi@459@01)))))
                                                      (or
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (not
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))))))
                                                  (or
                                                    (<= 0 ii@458@01)
                                                    (not (<= 0 ii@458@01)))
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (<
                                                        ii@458@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (<= 0 wi@459@01)
                                                      (<
                                                        wi@459@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
                                                  (or
                                                    (not
                                                      (and
                                                        (<= 0 ii@458@01)
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (and
                                                            (<= 0 wi@459@01)
                                                            (<
                                                              wi@459@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01))))))
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))))
                                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
                                              (=>
                                                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (>=
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                      0))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                (and
                                                  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                    (=>
                                                      (and
                                                        (<= 0 ii@458@01)
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (and
                                                            (<= 0 wi@459@01)
                                                            (<
                                                              wi@459@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))
                                                      (>=
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                        0))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                    (and
                                                      (=>
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (=>
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (or
                                                                (<= 0 wi@461@01)
                                                                (not
                                                                  (<=
                                                                    0
                                                                    wi@461@01)))))
                                                          (or
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (not
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                                      (or
                                                        (<= 0 ii@460@01)
                                                        (not (<= 0 ii@460@01)))
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (<= 0 wi@461@01)
                                                          (<
                                                            wi@461@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (<=
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              $t@363@01
                                                              $Snap.unit) $t@453@01))
                                                          (<=
                                                            wi@461@01
                                                            _2@101@01)
                                                          (<= 0 _2@101@01)
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (<
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      (or
                                                        (not
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01))))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))))
                                                    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                      $t@363@01
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                    (and
                                                      (=>
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (=>
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (or
                                                                (<= 0 wi@461@01)
                                                                (not
                                                                  (<=
                                                                    0
                                                                    wi@461@01)))))
                                                          (or
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (not
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                                      (or
                                                        (<= 0 ii@460@01)
                                                        (not (<= 0 ii@460@01)))
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (<= 0 wi@461@01)
                                                          (<
                                                            wi@461@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (<=
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              $t@363@01
                                                              $Snap.unit) $t@453@01))
                                                          (<=
                                                            wi@461@01
                                                            _2@101@01)
                                                          (<= 0 _2@101@01)
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (<
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      (or
                                                        (not
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01))))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                                  (=>
                                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (=
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                    (and
                                                      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                        (=>
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01)))))
                                                          (=
                                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                              $t@363@01
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                      (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                        (and
                                                          (or
                                                            (<= 0 wi@462@01)
                                                            (not
                                                              (<= 0 wi@462@01)))
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                                                              (<=
                                                                0
                                                                (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1))
                                                              (<=
                                                                (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  $t@363@01
                                                                  $Snap.unit) $t@453@01))
                                                              (<=
                                                                wi@462@01
                                                                _2@101@01)
                                                              (<= 0 _2@101@01)
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (<
                                                                (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01))
                                                              (<
                                                                wi@462@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01))
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          (or
                                                            (not
                                                              (and
                                                                (<= 0 wi@462@01)
                                                                (<
                                                                  wi@462@01
                                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
                                                        
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
                                                      (=>
                                                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (=
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          
                                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                        (and
                                                          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                            (=>
                                                              (and
                                                                (<= 0 wi@462@01)
                                                                (<
                                                                  wi@462@01
                                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                              (=
                                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                  $t@363@01
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            ($Snap.combine
                                                                              $Snap.unit
                                                                              $Snap.unit))))))) $t@453@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01 _2@101@01)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit)))))) ret@230@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01)))
                                                            
                                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                          (forall ((ii@464@01 Int)) (!
                                                            (and
                                                              (or
                                                                (<= 0 ii@464@01)
                                                                (not
                                                                  (<=
                                                                    0
                                                                    ii@464@01)))
                                                              (=>
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01)))
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01))
                                                                  (<
                                                                    0
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01))
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            ($Snap.combine
                                                                              $Snap.unit
                                                                              $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                                                              (or
                                                                (not
                                                                  (and
                                                                    (<=
                                                                      0
                                                                      ii@464@01)
                                                                    (<
                                                                      ii@464@01
                                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                        ($Snap.first ($Snap.second $t@452@01))
                                                                        $Snap.unit) ret@230@01))))
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01)))))
                                                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@464@01 0))
                                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
                                                      (or
                                                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (=
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          
                                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                        (not
                                                          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                            (=>
                                                              (and
                                                                (<= 0 wi@462@01)
                                                                (<
                                                                  wi@462@01
                                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                              (=
                                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                  $t@363@01
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            ($Snap.combine
                                                                              $Snap.unit
                                                                              $Snap.unit))))))) $t@453@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01 _2@101@01)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit)))))) ret@230@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01)))
                                                            
                                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
                                                  (or
                                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (=
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                    (not
                                                      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                        (=>
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01)))))
                                                          (=
                                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                              $t@363@01
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
                                              (or
                                                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (>=
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                      0))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                (not
                                                  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                    (=>
                                                      (and
                                                        (<= 0 ii@458@01)
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (and
                                                            (<= 0 wi@459@01)
                                                            (<
                                                              wi@459@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))
                                                      (>=
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                        0))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))))
                                          (or
                                            (=
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                            (not
                                              (=
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                                      (or
                                        (=
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                        (not
                                          (=
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                                  (or
                                    (< _2@101@01 18446744073709551615)
                                    (not (< _2@101@01 18446744073709551615)))))
                              (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
                          (or
                            (<
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@363@01
                                $Snap.unit) $t@453@01))
                            (not
                              (<
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  $t@363@01
                                  $Snap.unit) $t@453@01))))))
                      (or
                        (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (not
                          (<=
                            0
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                  (or
                    (<=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (not
                      (<=
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))))))
              (or
                (<=
                  0
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                (not
                  (<=
                    0
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
          (or
            (=
              (+ _2@101@01 1)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (not
              (=
                (+ _2@101@01 1)
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))))))
      (or
        (=
          (+
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@453@01)
            1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (not
          (=
            (+
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@363@01
                $Snap.unit) $t@453@01)
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))))))
  (or
    (<=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      _2@101@01)
    (not
      (<=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
        _2@101@01)))))
(pop) ; 9
; Joined path conditions
(assert (and
  (usize%trigger $t@454@01 ret@289@01)
  (= $t@454@01 ($Snap.combine ($Snap.first $t@454@01) ($Snap.second $t@454@01)))
  (= ($Snap.second $t@454@01) $Snap.unit)
  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
  (=>
    (<=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      _2@101@01)
    (and
      (<=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
        _2@101@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
        $t@363@01
        $Snap.unit) $t@453@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01)
      (=>
        (=
          (+
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@453@01)
            1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (and
          (=
            (+
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@363@01
                $Snap.unit) $t@453@01)
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)
          (=>
            (=
              (+ _2@101@01 1)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (and
              (=
                (+ _2@101@01 1)
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))
              (=>
                (<=
                  0
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                (and
                  (=>
                    (<=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (and
                      (<=
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))
                      (=>
                        (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (and
                          (=>
                            (<
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@363@01
                                $Snap.unit) $t@453@01))
                            (and
                              (<
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  $t@363@01
                                  $Snap.unit) $t@453@01))
                              (=>
                                (<= 2 _2@101@01)
                                (and
                                  (=>
                                    (< _2@101@01 18446744073709551615)
                                    (and
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                      (=>
                                        (=
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                        (and
                                          (=
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                          (=>
                                            (=
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                            (and
                                              (=
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                              (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                (and
                                                  (=>
                                                    (<= 0 ii@458@01)
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (=>
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (or
                                                            (<= 0 wi@459@01)
                                                            (not
                                                              (<= 0 wi@459@01)))))
                                                      (or
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (not
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))))))
                                                  (or
                                                    (<= 0 ii@458@01)
                                                    (not (<= 0 ii@458@01)))
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (<
                                                        ii@458@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (<= 0 wi@459@01)
                                                      (<
                                                        wi@459@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
                                                  (or
                                                    (not
                                                      (and
                                                        (<= 0 ii@458@01)
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (and
                                                            (<= 0 wi@459@01)
                                                            (<
                                                              wi@459@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01))))))
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))))
                                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
                                              (=>
                                                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (>=
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                      0))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                (and
                                                  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                    (=>
                                                      (and
                                                        (<= 0 ii@458@01)
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (and
                                                            (<= 0 wi@459@01)
                                                            (<
                                                              wi@459@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))
                                                      (>=
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                        0))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                    (and
                                                      (=>
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (=>
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (or
                                                                (<= 0 wi@461@01)
                                                                (not
                                                                  (<=
                                                                    0
                                                                    wi@461@01)))))
                                                          (or
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (not
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                                      (or
                                                        (<= 0 ii@460@01)
                                                        (not (<= 0 ii@460@01)))
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (<= 0 wi@461@01)
                                                          (<
                                                            wi@461@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (<=
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              $t@363@01
                                                              $Snap.unit) $t@453@01))
                                                          (<=
                                                            wi@461@01
                                                            _2@101@01)
                                                          (<= 0 _2@101@01)
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (<
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      (or
                                                        (not
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01))))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))))
                                                    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                      $t@363@01
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                    (and
                                                      (=>
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (=>
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (or
                                                                (<= 0 wi@461@01)
                                                                (not
                                                                  (<=
                                                                    0
                                                                    wi@461@01)))))
                                                          (or
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (not
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                                      (or
                                                        (<= 0 ii@460@01)
                                                        (not (<= 0 ii@460@01)))
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (<= 0 wi@461@01)
                                                          (<
                                                            wi@461@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (<=
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              $t@363@01
                                                              $Snap.unit) $t@453@01))
                                                          (<=
                                                            wi@461@01
                                                            _2@101@01)
                                                          (<= 0 _2@101@01)
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (<
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      (or
                                                        (not
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01))))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                                  (=>
                                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (=
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                    (and
                                                      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                        (=>
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01)))))
                                                          (=
                                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                              $t@363@01
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                      (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                        (and
                                                          (or
                                                            (<= 0 wi@462@01)
                                                            (not
                                                              (<= 0 wi@462@01)))
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                                                              (<=
                                                                0
                                                                (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1))
                                                              (<=
                                                                (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  $t@363@01
                                                                  $Snap.unit) $t@453@01))
                                                              (<=
                                                                wi@462@01
                                                                _2@101@01)
                                                              (<= 0 _2@101@01)
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (<
                                                                (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01))
                                                              (<
                                                                wi@462@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01))
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          (or
                                                            (not
                                                              (and
                                                                (<= 0 wi@462@01)
                                                                (<
                                                                  wi@462@01
                                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
                                                        
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
                                                      (=>
                                                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (=
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          
                                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                        (and
                                                          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                            (=>
                                                              (and
                                                                (<= 0 wi@462@01)
                                                                (<
                                                                  wi@462@01
                                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                              (=
                                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                  $t@363@01
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            ($Snap.combine
                                                                              $Snap.unit
                                                                              $Snap.unit))))))) $t@453@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01 _2@101@01)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit)))))) ret@230@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01)))
                                                            
                                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                          (forall ((ii@464@01 Int)) (!
                                                            (and
                                                              (or
                                                                (<= 0 ii@464@01)
                                                                (not
                                                                  (<=
                                                                    0
                                                                    ii@464@01)))
                                                              (=>
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01)))
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01))
                                                                  (<
                                                                    0
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01))
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            ($Snap.combine
                                                                              $Snap.unit
                                                                              $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                                                              (or
                                                                (not
                                                                  (and
                                                                    (<=
                                                                      0
                                                                      ii@464@01)
                                                                    (<
                                                                      ii@464@01
                                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                        ($Snap.first ($Snap.second $t@452@01))
                                                                        $Snap.unit) ret@230@01))))
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01)))))
                                                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@464@01 0))
                                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
                                                      (or
                                                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (=
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          
                                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                        (not
                                                          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                            (=>
                                                              (and
                                                                (<= 0 wi@462@01)
                                                                (<
                                                                  wi@462@01
                                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                              (=
                                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                  $t@363@01
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            ($Snap.combine
                                                                              $Snap.unit
                                                                              $Snap.unit))))))) $t@453@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01 _2@101@01)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit)))))) ret@230@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01)))
                                                            
                                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
                                                  (or
                                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (=
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                    (not
                                                      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                        (=>
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01)))))
                                                          (=
                                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                              $t@363@01
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
                                              (or
                                                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (>=
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                      0))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                (not
                                                  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                    (=>
                                                      (and
                                                        (<= 0 ii@458@01)
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (and
                                                            (<= 0 wi@459@01)
                                                            (<
                                                              wi@459@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))
                                                      (>=
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                        0))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))))
                                          (or
                                            (=
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                            (not
                                              (=
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                                      (or
                                        (=
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                        (not
                                          (=
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                                  (or
                                    (< _2@101@01 18446744073709551615)
                                    (not (< _2@101@01 18446744073709551615)))))
                              (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
                          (or
                            (<
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@363@01
                                $Snap.unit) $t@453@01))
                            (not
                              (<
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  $t@363@01
                                  $Snap.unit) $t@453@01))))))
                      (or
                        (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (not
                          (<=
                            0
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                  (or
                    (<=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (not
                      (<=
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))))))
              (or
                (<=
                  0
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                (not
                  (<=
                    0
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
          (or
            (=
              (+ _2@101@01 1)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (not
              (=
                (+ _2@101@01 1)
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))))))
      (or
        (=
          (+
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@453@01)
            1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (not
          (=
            (+
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@363@01
                $Snap.unit) $t@453@01)
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))))))
  (or
    (<=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      _2@101@01)
    (not
      (<=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
        _2@101@01)))))
(pop) ; 8
; Joined path conditions
(assert (and
  (m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap.second $t@369@01) $t@455@01)
  (=> (< $Perm.No (read$ $Snap.unit)) (not (= $t@455@01 $Ref.null)))
  (usize%trigger $t@454@01 ret@289@01)
  (= $t@454@01 ($Snap.combine ($Snap.first $t@454@01) ($Snap.second $t@454@01)))
  (= ($Snap.second $t@454@01) $Snap.unit)
  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
  (=>
    (<=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      _2@101@01)
    (and
      (<=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
        _2@101@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
        $t@363@01
        $Snap.unit) $t@453@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01)
      (=>
        (=
          (+
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@453@01)
            1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (and
          (=
            (+
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@363@01
                $Snap.unit) $t@453@01)
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)
          (=>
            (=
              (+ _2@101@01 1)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (and
              (=
                (+ _2@101@01 1)
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))
              (=>
                (<=
                  0
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                (and
                  (=>
                    (<=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (and
                      (<=
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))
                      (=>
                        (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (and
                          (=>
                            (<
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@363@01
                                $Snap.unit) $t@453@01))
                            (and
                              (<
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  $t@363@01
                                  $Snap.unit) $t@453@01))
                              (=>
                                (<= 2 _2@101@01)
                                (and
                                  (=>
                                    (< _2@101@01 18446744073709551615)
                                    (and
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                      (=>
                                        (=
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                        (and
                                          (=
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                          (=>
                                            (=
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                            (and
                                              (=
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                              (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                (and
                                                  (=>
                                                    (<= 0 ii@458@01)
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (=>
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (or
                                                            (<= 0 wi@459@01)
                                                            (not
                                                              (<= 0 wi@459@01)))))
                                                      (or
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (not
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))))))
                                                  (or
                                                    (<= 0 ii@458@01)
                                                    (not (<= 0 ii@458@01)))
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (<
                                                        ii@458@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (<= 0 wi@459@01)
                                                      (<
                                                        wi@459@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
                                                  (or
                                                    (not
                                                      (and
                                                        (<= 0 ii@458@01)
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (and
                                                            (<= 0 wi@459@01)
                                                            (<
                                                              wi@459@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01))))))
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))))
                                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
                                              (=>
                                                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (>=
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                      0))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                (and
                                                  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                    (=>
                                                      (and
                                                        (<= 0 ii@458@01)
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (and
                                                            (<= 0 wi@459@01)
                                                            (<
                                                              wi@459@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))
                                                      (>=
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                        0))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                    (and
                                                      (=>
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (=>
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (or
                                                                (<= 0 wi@461@01)
                                                                (not
                                                                  (<=
                                                                    0
                                                                    wi@461@01)))))
                                                          (or
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (not
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                                      (or
                                                        (<= 0 ii@460@01)
                                                        (not (<= 0 ii@460@01)))
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (<= 0 wi@461@01)
                                                          (<
                                                            wi@461@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (<=
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              $t@363@01
                                                              $Snap.unit) $t@453@01))
                                                          (<=
                                                            wi@461@01
                                                            _2@101@01)
                                                          (<= 0 _2@101@01)
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (<
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      (or
                                                        (not
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01))))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))))
                                                    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                      $t@363@01
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                    (and
                                                      (=>
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (=>
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (or
                                                                (<= 0 wi@461@01)
                                                                (not
                                                                  (<=
                                                                    0
                                                                    wi@461@01)))))
                                                          (or
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (not
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                                      (or
                                                        (<= 0 ii@460@01)
                                                        (not (<= 0 ii@460@01)))
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (<= 0 wi@461@01)
                                                          (<
                                                            wi@461@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (<=
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              $t@363@01
                                                              $Snap.unit) $t@453@01))
                                                          (<=
                                                            wi@461@01
                                                            _2@101@01)
                                                          (<= 0 _2@101@01)
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (<
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      (or
                                                        (not
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01))))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                                  (=>
                                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (=
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                    (and
                                                      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                        (=>
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01)))))
                                                          (=
                                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                              $t@363@01
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                      (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                        (and
                                                          (or
                                                            (<= 0 wi@462@01)
                                                            (not
                                                              (<= 0 wi@462@01)))
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                                                              (<=
                                                                0
                                                                (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1))
                                                              (<=
                                                                (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  $t@363@01
                                                                  $Snap.unit) $t@453@01))
                                                              (<=
                                                                wi@462@01
                                                                _2@101@01)
                                                              (<= 0 _2@101@01)
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (<
                                                                (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01))
                                                              (<
                                                                wi@462@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01))
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          (or
                                                            (not
                                                              (and
                                                                (<= 0 wi@462@01)
                                                                (<
                                                                  wi@462@01
                                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
                                                        
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
                                                      (=>
                                                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (=
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          
                                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                        (and
                                                          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                            (=>
                                                              (and
                                                                (<= 0 wi@462@01)
                                                                (<
                                                                  wi@462@01
                                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                              (=
                                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                  $t@363@01
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            ($Snap.combine
                                                                              $Snap.unit
                                                                              $Snap.unit))))))) $t@453@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01 _2@101@01)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit)))))) ret@230@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01)))
                                                            
                                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                          (forall ((ii@464@01 Int)) (!
                                                            (and
                                                              (or
                                                                (<= 0 ii@464@01)
                                                                (not
                                                                  (<=
                                                                    0
                                                                    ii@464@01)))
                                                              (=>
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01)))
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01))
                                                                  (<
                                                                    0
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01))
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            ($Snap.combine
                                                                              $Snap.unit
                                                                              $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                                                              (or
                                                                (not
                                                                  (and
                                                                    (<=
                                                                      0
                                                                      ii@464@01)
                                                                    (<
                                                                      ii@464@01
                                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                        ($Snap.first ($Snap.second $t@452@01))
                                                                        $Snap.unit) ret@230@01))))
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01)))))
                                                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@464@01 0))
                                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
                                                      (or
                                                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (=
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          
                                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                        (not
                                                          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                            (=>
                                                              (and
                                                                (<= 0 wi@462@01)
                                                                (<
                                                                  wi@462@01
                                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                              (=
                                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                  $t@363@01
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            ($Snap.combine
                                                                              $Snap.unit
                                                                              $Snap.unit))))))) $t@453@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01 _2@101@01)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit)))))) ret@230@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01)))
                                                            
                                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
                                                  (or
                                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (=
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                    (not
                                                      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                        (=>
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01)))))
                                                          (=
                                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                              $t@363@01
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
                                              (or
                                                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (>=
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                      0))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                (not
                                                  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                    (=>
                                                      (and
                                                        (<= 0 ii@458@01)
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (and
                                                            (<= 0 wi@459@01)
                                                            (<
                                                              wi@459@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))
                                                      (>=
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                        0))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))))
                                          (or
                                            (=
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                            (not
                                              (=
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                                      (or
                                        (=
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                        (not
                                          (=
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                                  (or
                                    (< _2@101@01 18446744073709551615)
                                    (not (< _2@101@01 18446744073709551615)))))
                              (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
                          (or
                            (<
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@363@01
                                $Snap.unit) $t@453@01))
                            (not
                              (<
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  $t@363@01
                                  $Snap.unit) $t@453@01))))))
                      (or
                        (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (not
                          (<=
                            0
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                  (or
                    (<=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (not
                      (<=
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))))))
              (or
                (<=
                  0
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                (not
                  (<=
                    0
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
          (or
            (=
              (+ _2@101@01 1)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (not
              (=
                (+ _2@101@01 1)
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))))))
      (or
        (=
          (+
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@453@01)
            1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (not
          (=
            (+
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@363@01
                $Snap.unit) $t@453@01)
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))))))
  (or
    (<=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      _2@101@01)
    (not
      (<=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
        _2@101@01)))))
(pop) ; 7
; Joined path conditions
(assert (and
  (usize%trigger ($Snap.first $t@452@01) ret@444@01)
  (=
    ($Snap.first $t@452@01)
    ($Snap.combine
      ($Snap.first ($Snap.first $t@452@01))
      ($Snap.second ($Snap.first $t@452@01))))
  (not (= ret@444@01 $Ref.null))
  (= ($Snap.second ($Snap.first $t@452@01)) $Snap.unit)
  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
  (m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_%trigger ($Snap.second $t@369@01) $t@455@01)
  (=> (< $Perm.No (read$ $Snap.unit)) (not (= $t@455@01 $Ref.null)))
  (usize%trigger $t@454@01 ret@289@01)
  (= $t@454@01 ($Snap.combine ($Snap.first $t@454@01) ($Snap.second $t@454@01)))
  (= ($Snap.second $t@454@01) $Snap.unit)
  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
  (=>
    (<=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      _2@101@01)
    (and
      (<=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
        _2@101@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
        $t@363@01
        $Snap.unit) $t@453@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01)
      (=>
        (=
          (+
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@453@01)
            1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (and
          (=
            (+
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@363@01
                $Snap.unit) $t@453@01)
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01)
          (=>
            (=
              (+ _2@101@01 1)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (and
              (=
                (+ _2@101@01 1)
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))
              (=>
                (<=
                  0
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                (and
                  (=>
                    (<=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (and
                      (<=
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))
                      (=>
                        (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (and
                          (=>
                            (<
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@363@01
                                $Snap.unit) $t@453@01))
                            (and
                              (<
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  $t@363@01
                                  $Snap.unit) $t@453@01))
                              (=>
                                (<= 2 _2@101@01)
                                (and
                                  (=>
                                    (< _2@101@01 18446744073709551615)
                                    (and
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                                        $t@363@01
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                      (=>
                                        (=
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                        (and
                                          (=
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$%precondition ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                          (=>
                                            (=
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                            (and
                                              (=
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                              (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                (and
                                                  (=>
                                                    (<= 0 ii@458@01)
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (=>
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (or
                                                            (<= 0 wi@459@01)
                                                            (not
                                                              (<= 0 wi@459@01)))))
                                                      (or
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (not
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))))))
                                                  (or
                                                    (<= 0 ii@458@01)
                                                    (not (<= 0 ii@458@01)))
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (<
                                                        ii@458@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (<= 0 wi@459@01)
                                                      (<
                                                        wi@459@01
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          $Snap.unit) ret@230@01))
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)))
                                                  (or
                                                    (not
                                                      (and
                                                        (<= 0 ii@458@01)
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (and
                                                            (<= 0 wi@459@01)
                                                            (<
                                                              wi@459@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01))))))
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))))
                                                :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                  ($Snap.first ($Snap.second $t@452@01))
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439-aux|))
                                              (=>
                                                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (>=
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                      0))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                (and
                                                  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                    (=>
                                                      (and
                                                        (<= 0 ii@458@01)
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (and
                                                            (<= 0 wi@459@01)
                                                            (<
                                                              wi@459@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))
                                                      (>=
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                        0))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                    (and
                                                      (=>
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (=>
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (or
                                                                (<= 0 wi@461@01)
                                                                (not
                                                                  (<=
                                                                    0
                                                                    wi@461@01)))))
                                                          (or
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (not
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                                      (or
                                                        (<= 0 ii@460@01)
                                                        (not (<= 0 ii@460@01)))
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (<= 0 wi@461@01)
                                                          (<
                                                            wi@461@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (<=
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              $t@363@01
                                                              $Snap.unit) $t@453@01))
                                                          (<=
                                                            wi@461@01
                                                            _2@101@01)
                                                          (<= 0 _2@101@01)
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (<
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      (or
                                                        (not
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01))))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))))
                                                    :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                      $t@363@01
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                                  (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                    (and
                                                      (=>
                                                        (<= 0 ii@460@01)
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (=>
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (or
                                                                (<= 0 wi@461@01)
                                                                (not
                                                                  (<=
                                                                    0
                                                                    wi@461@01)))))
                                                          (or
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (not
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                                                      (or
                                                        (<= 0 ii@460@01)
                                                        (not (<= 0 ii@460@01)))
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (<=
                                                            ii@460@01
                                                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                          (<= 0 wi@461@01)
                                                          (<
                                                            wi@461@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (<=
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              $t@363@01
                                                              $Snap.unit) $t@453@01))
                                                          (<=
                                                            wi@461@01
                                                            _2@101@01)
                                                          (<= 0 _2@101@01)
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (<
                                                            ii@460@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      (or
                                                        (not
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01))))))
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044-aux|))
                                                  (=>
                                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (=
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                    (and
                                                      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                        (=>
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01)))))
                                                          (=
                                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                              $t@363@01
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                      (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                        (and
                                                          (or
                                                            (<= 0 wi@462@01)
                                                            (not
                                                              (<= 0 wi@462@01)))
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                                                              (<=
                                                                0
                                                                (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1))
                                                              (<=
                                                                (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  $t@363@01
                                                                  $Snap.unit) $t@453@01))
                                                              (<=
                                                                wi@462@01
                                                                _2@101@01)
                                                              (<= 0 _2@101@01)
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%precondition ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (<
                                                                (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01))
                                                              (<
                                                                wi@462@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01))
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          (or
                                                            (not
                                                              (and
                                                                (<= 0 wi@462@01)
                                                                (<
                                                                  wi@462@01
                                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
                                                        
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463-aux|))
                                                      (=>
                                                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (=
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          
                                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                        (and
                                                          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                            (=>
                                                              (and
                                                                (<= 0 wi@462@01)
                                                                (<
                                                                  wi@462@01
                                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                              (=
                                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                  $t@363@01
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            ($Snap.combine
                                                                              $Snap.unit
                                                                              $Snap.unit))))))) $t@453@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01 _2@101@01)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit)))))) ret@230@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01)))
                                                            
                                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                          (forall ((ii@464@01 Int)) (!
                                                            (and
                                                              (or
                                                                (<= 0 ii@464@01)
                                                                (not
                                                                  (<=
                                                                    0
                                                                    ii@464@01)))
                                                              (=>
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01)))
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01))
                                                                  (<
                                                                    0
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01))
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            ($Snap.combine
                                                                              $Snap.unit
                                                                              $Snap.unit)))))) ret@230@01 ii@464@01 0)))
                                                              (or
                                                                (not
                                                                  (and
                                                                    (<=
                                                                      0
                                                                      ii@464@01)
                                                                    (<
                                                                      ii@464@01
                                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                        ($Snap.first ($Snap.second $t@452@01))
                                                                        $Snap.unit) ret@230@01))))
                                                                (and
                                                                  (<=
                                                                    0
                                                                    ii@464@01)
                                                                  (<
                                                                    ii@464@01
                                                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                      ($Snap.first ($Snap.second $t@452@01))
                                                                      $Snap.unit) ret@230@01)))))
                                                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@464@01 0))
                                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882-aux|))))
                                                      (or
                                                        (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                          (=>
                                                            (and
                                                              (<= 0 wi@462@01)
                                                              (<
                                                                wi@462@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                            (=
                                                              (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                $t@363@01
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit))))))) $t@453@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01 _2@101@01)
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit)))))) ret@230@01 (+
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                1) wi@462@01)))
                                                          
                                                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                                                        (not
                                                          (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                                                            (=>
                                                              (and
                                                                (<= 0 wi@462@01)
                                                                (<
                                                                  wi@462@01
                                                                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                                              (=
                                                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                                  $t@363@01
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            ($Snap.combine
                                                                              $Snap.unit
                                                                              $Snap.unit))))))) $t@453@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01 _2@101@01)
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          ($Snap.combine
                                                                            $Snap.unit
                                                                            $Snap.unit)))))) ret@230@01 (+
                                                                  ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                                                  1) wi@462@01)))
                                                            
                                                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))))))
                                                  (or
                                                    (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                      (=>
                                                        (and
                                                          (<= 0 ii@460@01)
                                                          (and
                                                            (<=
                                                              ii@460@01
                                                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                            (and
                                                              (<= 0 wi@461@01)
                                                              (<
                                                                wi@461@01
                                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                  ($Snap.first ($Snap.second $t@452@01))
                                                                  $Snap.unit) ret@230@01)))))
                                                        (=
                                                          (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                            $t@363@01
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                      :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                        $t@363@01
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                      :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                      :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                                                    (not
                                                      (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                                                        (=>
                                                          (and
                                                            (<= 0 ii@460@01)
                                                            (and
                                                              (<=
                                                                ii@460@01
                                                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                                              (and
                                                                (<= 0 wi@461@01)
                                                                (<
                                                                  wi@461@01
                                                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                    ($Snap.first ($Snap.second $t@452@01))
                                                                    $Snap.unit) ret@230@01)))))
                                                          (=
                                                            (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                                              $t@363@01
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        ($Snap.combine
                                                                          $Snap.unit
                                                                          $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      ($Snap.combine
                                                                        $Snap.unit
                                                                        $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                                                        :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                                                          $t@363@01
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    ($Snap.combine
                                                                      $Snap.unit
                                                                      $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                                                        :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                                                        :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))))))
                                              (or
                                                (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                  (=>
                                                    (and
                                                      (<= 0 ii@458@01)
                                                      (and
                                                        (<
                                                          ii@458@01
                                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                            ($Snap.first ($Snap.second $t@452@01))
                                                            $Snap.unit) ret@230@01))
                                                        (and
                                                          (<= 0 wi@459@01)
                                                          (<
                                                            wi@459@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01)))))
                                                    (>=
                                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                        ($Snap.first ($Snap.second $t@452@01))
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                      0))
                                                  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                    ($Snap.first ($Snap.second $t@452@01))
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                                                (not
                                                  (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                                                    (=>
                                                      (and
                                                        (<= 0 ii@458@01)
                                                        (and
                                                          (<
                                                            ii@458@01
                                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                              ($Snap.first ($Snap.second $t@452@01))
                                                              $Snap.unit) ret@230@01))
                                                          (and
                                                            (<= 0 wi@459@01)
                                                            (<
                                                              wi@459@01
                                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                                                ($Snap.first ($Snap.second $t@452@01))
                                                                $Snap.unit) ret@230@01)))))
                                                      (>=
                                                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                                          ($Snap.first ($Snap.second $t@452@01))
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                ($Snap.combine
                                                                  $Snap.unit
                                                                  ($Snap.combine
                                                                    $Snap.unit
                                                                    $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                                                        0))
                                                    :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                                      ($Snap.first ($Snap.second $t@452@01))
                                                      ($Snap.combine
                                                        $Snap.unit
                                                        ($Snap.combine
                                                          $Snap.unit
                                                          ($Snap.combine
                                                            $Snap.unit
                                                            ($Snap.combine
                                                              $Snap.unit
                                                              ($Snap.combine
                                                                $Snap.unit
                                                                $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                                                    :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))))))
                                          (or
                                            (=
                                              ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                $t@363@01
                                                ($Snap.combine
                                                  $Snap.unit
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                            (not
                                              (=
                                                ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                                  $t@363@01
                                                  ($Snap.combine
                                                    $Snap.unit
                                                    ($Snap.combine
                                                      $Snap.unit
                                                      $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                                      (or
                                        (=
                                          ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                            $t@363@01
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                                        (not
                                          (=
                                            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                                            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                                              $t@363@01
                                              ($Snap.combine
                                                $Snap.unit
                                                ($Snap.combine
                                                  $Snap.unit
                                                  $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))))
                                  (or
                                    (< _2@101@01 18446744073709551615)
                                    (not (< _2@101@01 18446744073709551615)))))
                              (or (<= 2 _2@101@01) (not (<= 2 _2@101@01)))))
                          (or
                            (<
                              ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                $t@363@01
                                $Snap.unit) $t@453@01))
                            (not
                              (<
                                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                  $t@363@01
                                  $Snap.unit) $t@453@01))))))
                      (or
                        (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                        (not
                          (<=
                            0
                            ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
                  (or
                    (<=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first ($Snap.second $t@452@01))
                        $Snap.unit) ret@230@01))
                    (not
                      (<=
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                          ($Snap.first ($Snap.second $t@452@01))
                          $Snap.unit) ret@230@01))))))
              (or
                (<=
                  0
                  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
                (not
                  (<=
                    0
                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
          (or
            (=
              (+ _2@101@01 1)
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first ($Snap.second $t@452@01))
                $Snap.unit) ret@230@01))
            (not
              (=
                (+ _2@101@01 1)
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first ($Snap.second $t@452@01))
                  $Snap.unit) ret@230@01))))))
      (or
        (=
          (+
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              $t@363@01
              $Snap.unit) $t@453@01)
            1)
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first ($Snap.second $t@452@01))
            $Snap.unit) ret@230@01))
        (not
          (=
            (+
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                $t@363@01
                $Snap.unit) $t@453@01)
              1)
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))))))
  (or
    (<=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      _2@101@01)
    (not
      (<=
        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
        _2@101@01)))))
(assert (and
  (<= ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))) _2@101@01)
  (and
    (=
      (+
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          $t@363@01
          $Snap.unit) $t@453@01)
        1)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first ($Snap.second $t@452@01))
        $Snap.unit) ret@230@01))
    (and
      (=
        (+ _2@101@01 1)
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first ($Snap.second $t@452@01))
          $Snap.unit) ret@230@01))
      (and
        (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))
        (and
          (<=
            ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first ($Snap.second $t@452@01))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
            (and
              (<
                ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$len$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  $t@363@01
                  $Snap.unit) $t@453@01))
              (and
                (<= 2 _2@101@01)
                (and
                  (< _2@101@01 18446744073709551615)
                  (and
                    (=
                      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_value$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                        $t@363@01
                        ($Snap.combine
                          $Snap.unit
                          ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                    (and
                      (=
                        ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
                        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$lookup_weight$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$ ($Snap.combine
                          $t@363@01
                          ($Snap.combine
                            $Snap.unit
                            ($Snap.combine $Snap.unit $Snap.unit))) $t@453@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
                      (and
                        (forall ((ii@458@01 Int) (wi@459@01 Int)) (!
                          (=>
                            (and
                              (<= 0 ii@458@01)
                              (and
                                (<
                                  ii@458@01
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    $Snap.unit) ret@230@01))
                                (and
                                  (<= 0 wi@459@01)
                                  (<
                                    wi@459@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01)))))
                            (>=
                              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01)
                              0))
                          :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                            ($Snap.first ($Snap.second $t@452@01))
                            ($Snap.combine
                              $Snap.unit
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@458@01 wi@459@01))
                          :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@1814@3440@2439|))
                        (and
                          (forall ((ii@460@01 Int) (wi@461@01 Int)) (!
                            (=>
                              (and
                                (<= 0 ii@460@01)
                                (and
                                  (<=
                                    ii@460@01
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))
                                  (and
                                    (<= 0 wi@461@01)
                                    (<
                                      wi@461@01
                                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                        ($Snap.first ($Snap.second $t@452@01))
                                        $Snap.unit) ret@230@01)))))
                              (=
                                (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                  $t@363@01
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01)
                                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                  ($Snap.first ($Snap.second $t@452@01))
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01)))
                            :pattern ((m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$%limited ($Snap.combine
                              $t@363@01
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit))))))) $t@453@01 ii@460@01 wi@461@01 _2@101@01))
                            :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                              ($Snap.first ($Snap.second $t@452@01))
                              ($Snap.combine
                                $Snap.unit
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@460@01 wi@461@01))
                            :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@2446@3440@3044|))
                          (and
                            (forall ((wi@462@01 Int) (fresh__1@463@01 Int)) (!
                              (=>
                                (and
                                  (<= 0 wi@462@01)
                                  (<
                                    wi@462@01
                                    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
                                (=
                                  (m_knapsack$$m$opensqu$0$closesqu$__$TY$__m_knapsack$$Items$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$$$int$ ($Snap.combine
                                    $t@363@01
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine
                                              $Snap.unit
                                              ($Snap.combine
                                                $Snap.unit
                                                $Snap.unit))))))) $t@453@01 (+
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                    1) wi@462@01 _2@101@01)
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 (+
                                    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
                                    1) wi@462@01)))
                              
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3051@3440@3463|))
                            (forall ((ii@464@01 Int)) (!
                              (=>
                                (and
                                  (<= 0 ii@464@01)
                                  (<
                                    ii@464@01
                                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                                      ($Snap.first ($Snap.second $t@452@01))
                                      $Snap.unit) ret@230@01)))
                                (=
                                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
                                    ($Snap.first ($Snap.second $t@452@01))
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine
                                          $Snap.unit
                                          ($Snap.combine
                                            $Snap.unit
                                            ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0)
                                  0))
                              :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
                                ($Snap.first ($Snap.second $t@452@01))
                                ($Snap.combine
                                  $Snap.unit
                                  ($Snap.combine
                                    $Snap.unit
                                    ($Snap.combine
                                      $Snap.unit
                                      ($Snap.combine
                                        $Snap.unit
                                        ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@464@01 0))
                              :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3440@3469@3440@3882|)))))))))))))))))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label loop9_group3_loop17_group3_bb21
; [exec]
; __t13 := true
; [exec]
; _56 := builtin$havoc_ref()
(declare-const ret@465@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(tuple0$(_56), write)
(declare-const $t@466@01 $Snap)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (= ret@358@01 ret@465@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label loop9_group3_loop17_group3_bb22
; [exec]
; __t14 := true
; [exec]
; _106 := builtin$havoc_int()
(declare-const ret@467@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@468@01 $Snap)
(assert (= $t@468@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; unfold acc(m_knapsack$$Item$opensqu$0$closesqu$$_beg_$_end_(_48.val_ref), read$())
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [eval] read$()
(set-option :timeout 0)
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@369@01)) $t@455@01)))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (= ret@289@01 ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01))))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (= ret@444@01 ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01))))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01)))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (=
  ret@444@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01)))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (=
  ret@444@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; State saturation: after unfold
(set-option :timeout 40)
(check-sat)
; unknown
; [exec]
; unfold acc(usize(_48.val_ref.f$weight), read$())
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [eval] read$()
(set-option :timeout 0)
(push) ; 7
(pop) ; 7
; Joined path conditions
(push) ; 7
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= self.val_int
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; State saturation: after unfold
(set-option :timeout 40)
(check-sat)
; unknown
; [exec]
; _106 := _48.val_ref.f$weight.val_int
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(declare-const _106@469@01 Int)
(assert (=
  _106@469@01
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))
; [exec]
; label l23
; [exec]
; _107 := builtin$havoc_int()
(declare-const ret@470@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@471@01 $Snap)
(assert (= $t@471@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; unfold acc(usize(_51), write)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ret@444@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= self.val_int
; State saturation: after unfold
(set-option :timeout 40)
(check-sat)
; unknown
; [exec]
; _107 := _51.val_int
(declare-const _107@472@01 Int)
(assert (= _107@472@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
; [exec]
; label l24
; [exec]
; _105 := builtin$havoc_ref()
(declare-const ret@473@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_105.val_bool, write)
(declare-const $t@474@01 Bool)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (= ret@379@01 ret@473@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (= ret@253@01 ret@473@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (= $t@225@01 ret@473@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (= $t@210@01 ret@473@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(assert (not (= ret@473@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _105.val_bool := _106 > _107
; [eval] _106 > _107
(declare-const val_bool@475@01 Bool)
(assert (= val_bool@475@01 (> _106@469@01 _107@472@01)))
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (= ret@379@01 ret@473@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (= ret@253@01 ret@473@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (= $t@225@01 ret@473@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (= $t@210@01 ret@473@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [exec]
; __t58 := _105.val_bool
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not (not val_bool@475@01)))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 7
(set-option :timeout 10)
(assert (not val_bool@475@01))
(check-sat)
; unknown
(pop) ; 7
; 0.00s
; (get-info :all-statistics)
; [then-branch: 78 | val_bool@475@01 | live]
; [else-branch: 78 | !(val_bool@475@01) | live]
(set-option :timeout 0)
(push) ; 7
; [then-branch: 78 | val_bool@475@01]
(assert val_bool@475@01)
; [exec]
; label l26
; [exec]
; label loop9_group3_loop17_group3_bb23
; [exec]
; __t15 := true
; [exec]
; _110 := builtin$havoc_ref()
(declare-const ret@476@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_110.val_ref, write)
(declare-const $t@477@01 $Ref)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@476@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@476@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@476@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@213@01 ret@476@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (not (= ret@476@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _110.val_ref := _3
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@476@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@476@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@476@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@213@01 ret@476@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [exec]
; exhale acc(m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_(_3), write -
;   read$())
; [eval] write - read$()
; [eval] read$()
(set-option :timeout 0)
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (or
  (= (- $Perm.Write (read$ $Snap.unit)) $Perm.No)
  (< $Perm.No (- $Perm.Write (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  (- $Perm.Write ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
  $Perm.No)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (<=
  $Perm.No
  (- $Perm.Write ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))))
(set-option :timeout 0)
(push) ; 8
(assert (not (or
  (=
    (-
      (- $Perm.Write (read$ $Snap.unit))
      ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
    $Perm.No)
  (<
    (-
      (- $Perm.Write (read$ $Snap.unit))
      ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
    $Perm.No))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [exec]
; inhale acc(m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_(_110.val_ref), read$())
; [eval] read$()
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(declare-const $t@478@01 $Snap)
(declare-const $t@479@01 $Snap)
(assert (and
  (=>
    (<
      $Perm.No
      (- $Perm.Write ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit)))))
    (= $t@479@01 ($Snap.first ($Snap.second $t@452@01))))
  (=> (< $Perm.No (read$ $Snap.unit)) (= $t@479@01 $t@478@01))))
(assert (<=
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
    (read$ $Snap.unit))))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label l27
; [exec]
; _111 := builtin$havoc_int()
(declare-const ret@480@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@481@01 $Snap)
(assert (= $t@481@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; unfold acc(usize(_11), write)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  (-
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    ($Perm.min
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))
      $Perm.Write))
  $Perm.No)))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(assert (not (or
  (=
    (-
      $Perm.Write
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        $Perm.Write))
    $Perm.No)
  (<
    (-
      $Perm.Write
      ($Perm.min
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        $Perm.Write))
    $Perm.No))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@444@01 ret@289@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ret@289@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= self.val_int
; State saturation: after unfold
(set-option :timeout 40)
(check-sat)
; unknown
; [exec]
; _111 := _11.val_int
(declare-const _111@482@01 Int)
(assert (= _111@482@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
; [exec]
; label l28
; [exec]
; _112 := builtin$havoc_int()
(declare-const ret@483@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@484@01 $Snap)
(assert (= $t@484@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _112 := _51.val_int
(declare-const _112@485@01 Int)
(assert (= _112@485@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
; [exec]
; label l29
; [exec]
; label l30
; [exec]
; assert 0 <= _111 &&
;   (_111 <
;   m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_110.val_ref) &&
;   (0 <= _112 &&
;   _112 <
;   m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_110.val_ref)))
; [eval] 0 <= _111
(set-option :timeout 0)
(push) ; 8
(assert (not (<= 0 _111@482@01)))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 _111@482@01))
; [eval] _111 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_110.val_ref)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_110.val_ref)
(push) ; 8
; [eval] read$()
(push) ; 9
(pop) ; 9
; Joined path conditions
(push) ; 9
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@479@01
  $Snap.unit) ret@230@01))
(pop) ; 8
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@479@01
  $Snap.unit) ret@230@01))
(set-option :timeout 0)
(push) ; 8
(assert (not (<
  _111@482@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@479@01
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (<
  _111@482@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@479@01
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _112
(push) ; 8
(assert (not (<= 0 _112@485@01)))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 _112@485@01))
; [eval] _112 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_110.val_ref)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_110.val_ref)
(push) ; 8
; [eval] read$()
(push) ; 9
(pop) ; 9
; Joined path conditions
(push) ; 9
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@479@01
  $Snap.unit) ret@230@01))
(pop) ; 8
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@479@01
  $Snap.unit) ret@230@01))
(set-option :timeout 0)
(push) ; 8
(assert (not (<
  _112@485@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@479@01
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (<
  _112@485@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@479@01
    $Snap.unit) ret@230@01)))
; [exec]
; assert _112 >= 0
; [eval] _112 >= 0
(push) ; 8
(assert (not (>= _112@485@01 0)))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (>= _112@485@01 0))
; [exec]
; assert _111 >= 0
; [eval] _111 >= 0
(push) ; 8
(assert (not (>= _111@482@01 0)))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (>= _111@482@01 0))
; [exec]
; assert true
; [exec]
; exhale acc(_110.val_ref, write) && (_111 >= 0 && _112 >= 0)
; [eval] _111 >= 0
; [eval] _112 >= 0
; [exec]
; _109 := builtin$havoc_ref()
(declare-const ret@486@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@487@01 $Snap)
(assert (= $t@487@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale acc(_109.val_ref, write) && acc(usize(_109.val_ref), read$())
(declare-const $t@488@01 $Snap)
(assert (= $t@488@01 ($Snap.combine ($Snap.first $t@488@01) ($Snap.second $t@488@01))))
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@486@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@486@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@486@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@213@01 ret@486@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(assert (not (= ret@486@01 $Ref.null)))
; [eval] read$()
(set-option :timeout 0)
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01)))
  ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)))))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@489@01 $Snap)
(assert (= $t@489@01 $Snap.unit))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale (unfolding acc(usize(_109.val_ref), read$()) in
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l30](_110.val_ref),
;     old[l30](_111), old[l30](_112)) ==
;     _109.val_ref.val_int)
(declare-const $t@490@01 $Snap)
(assert (= $t@490@01 $Snap.unit))
; [eval] (unfolding acc(usize(_109.val_ref), read$()) in m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l30](_110.val_ref), old[l30](_111), old[l30](_112)) == _109.val_ref.val_int)
; [eval] read$()
(set-option :timeout 0)
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
; [eval] read$()
(push) ; 9
(pop) ; 9
; Joined path conditions
(push) ; 9
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (usize%trigger ($Snap.second $t@488@01) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01))))
(assert (=
  ($Snap.second $t@488@01)
  ($Snap.combine
    ($Snap.first ($Snap.second $t@488@01))
    ($Snap.second ($Snap.second $t@488@01)))))
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@289@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@444@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (=>
  (< $Perm.No (read$ $Snap.unit))
  (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)) $Ref.null))))
(assert (= ($Snap.second ($Snap.second $t@488@01)) $Snap.unit))
; [eval] 0 <= self.val_int
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second $t@488@01)))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l30](_110.val_ref), old[l30](_111), old[l30](_112)) == _109.val_ref.val_int
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l30](_110.val_ref), old[l30](_111), old[l30](_112))
; [eval] old[l30](_110.val_ref)
; [eval] old[l30](_111)
; [eval] old[l30](_112)
(set-option :timeout 0)
(push) ; 9
; [eval] read$()
(push) ; 10
(pop) ; 10
; Joined path conditions
(push) ; 10
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(pop) ; 10
; Joined path conditions
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(pop) ; 10
; Joined path conditions
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  $t@479@01
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 _111@482@01 _112@485@01))
(pop) ; 9
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  $t@479@01
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 _111@482@01 _112@485@01))
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(pop) ; 8
; Joined path conditions
(assert (and
  (usize%trigger ($Snap.second $t@488@01) ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)))
  (=
    ($Snap.second $t@488@01)
    ($Snap.combine
      ($Snap.first ($Snap.second $t@488@01))
      ($Snap.second ($Snap.second $t@488@01))))
  (=>
    (< $Perm.No (read$ $Snap.unit))
    (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)) $Ref.null)))
  (= ($Snap.second ($Snap.second $t@488@01)) $Snap.unit)
  (<= 0 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second $t@488@01))))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
    $t@479@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 _111@482@01 _112@485@01)))
(assert (=
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
    $t@479@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 _111@482@01 _112@485@01)
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second $t@488@01)))))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; exhale acc(m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_(old[l30](_110.val_ref)), read$())
; [eval] read$()
(set-option :timeout 0)
(push) ; 8
(pop) ; 8
; Joined path conditions
; [eval] old[l30](_110.val_ref)
(push) ; 8
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  (-
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
      (read$ $Snap.unit))
    ($Perm.min
      (+
        (-
          $Perm.Write
          ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
        (read$ $Snap.unit))
      (read$ $Snap.unit)))
  $Perm.No)))
(check-sat)
; unknown
(pop) ; 8
; 0.01s
; (get-info :all-statistics)
(assert (<=
  $Perm.No
  (-
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
      (read$ $Snap.unit))
    ($Perm.min
      (+
        (-
          $Perm.Write
          ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
        (read$ $Snap.unit))
      (read$ $Snap.unit)))))
(set-option :timeout 0)
(push) ; 8
(assert (not (or
  (=
    (-
      (read$ $Snap.unit)
      ($Perm.min
        (+
          (-
            $Perm.Write
            ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    $Perm.No)
  (<
    (-
      (read$ $Snap.unit)
      ($Perm.min
        (+
          (-
            $Perm.Write
            ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    $Perm.No))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [exec]
; label l31
; [exec]
; label loop9_group3_loop17_group3_bb25
; [exec]
; __t16 := true
; [exec]
; _108 := builtin$havoc_ref()
(declare-const ret@491@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_108.val_int, write)
(declare-const $t@492@01 Int)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@289@01 ret@491@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@444@01 ret@491@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ret@491@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.01s
; (get-info :all-statistics)
(assert (not (= ret@491@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; unfold acc(usize(_109.val_ref), read$())
; [eval] read$()
(set-option :timeout 0)
(push) ; 8
(pop) ; 8
; Joined path conditions
(push) ; 8
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@491@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)))))
(check-sat)
; unknown
(pop) ; 8
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@289@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)))))
(check-sat)
; unknown
(pop) ; 8
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@444@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)))))
(check-sat)
; unknown
(pop) ; 8
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)))))
(check-sat)
; unknown
(pop) ; 8
; 0.01s
; (get-info :all-statistics)
; [eval] 0 <= self.val_int
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; State saturation: after unfold
(set-option :timeout 40)
(check-sat)
; unknown
; [exec]
; _108.val_int := _109.val_ref.val_int
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(declare-const val_int@493@01 Int)
(assert (=
  val_int@493@01
  ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second $t@488@01)))))
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)) ret@491@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@289@01 ret@491@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (= ret@444@01 ret@491@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ret@491@01)))
(check-sat)
; unknown
(pop) ; 8
; 0.00s
; (get-info :all-statistics)
; [exec]
; label l32
(set-option :timeout 0)
(push) ; 8
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 8
; 0.01s
; (get-info :all-statistics)
; [then-branch: 79 | True | live]
; [else-branch: 79 | False | dead]
(set-option :timeout 0)
(push) ; 8
; [then-branch: 79 | True]
; [exec]
; _old$l31$0 := _109.val_ref
(declare-const _old$l31$0@494@01 $Ref)
(assert (= _old$l31$0@494@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01))))
; [exec]
; inhale acc(DeadBorrowToken$(84), write) && acc(usize(_old$l31$0), read$()) --*
;   acc(m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_(old[l30](_110.val_ref)), read$())
(declare-const $t@495@01 $MWSF)
; [eval] read$()
(push) ; 9
(pop) ; 9
; Joined path conditions
; [eval] old[l30](_110.val_ref)
; [eval] read$()
(push) ; 9
(pop) ; 9
; Joined path conditions
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; fold acc(usize(_old$l31$0), read$())
; [eval] read$()
(set-option :timeout 0)
(push) ; 9
(pop) ; 9
; Joined path conditions
(push) ; 9
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@491@01 _old$l31$0@494@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)) _old$l31$0@494@01)))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= self.val_int
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@491@01 _old$l31$0@494@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)) _old$l31$0@494@01)))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(assert (usize%trigger ($Snap.combine ($Snap.first ($Snap.second $t@488@01)) $Snap.unit) _old$l31$0@494@01))
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  _old$l31$0@494@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01)))
  _old$l31$0@494@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
; [exec]
; inhale acc(DeadBorrowToken$(84), write)
(declare-const $t@496@01 $Snap)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; apply acc(DeadBorrowToken$(84), write) && acc(usize(_old$l31$0), read$()) --*
;   acc(m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_(old[l30](_110.val_ref)), read$())
; [eval] read$()
(set-option :timeout 0)
(push) ; 9
(pop) ; 9
; Joined path conditions
; [eval] old[l30](_110.val_ref)
; [eval] read$()
(push) ; 9
(pop) ; 9
; Joined path conditions
; [eval] read$()
(push) ; 9
(pop) ; 9
; Joined path conditions
(push) ; 9
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
; [eval] old[l30](_110.val_ref)
; [eval] read$()
(set-option :timeout 0)
(push) ; 9
(pop) ; 9
; Joined path conditions
(push) ; 9
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(declare-const $t@497@01 $Snap)
(assert (and
  (=>
    (<
      $Perm.No
      (-
        (+
          (-
            $Perm.Write
            ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              $Perm.Write
              ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
            (read$ $Snap.unit))
          (read$ $Snap.unit))))
    (= $t@497@01 $t@479@01))
  (=>
    (< $Perm.No (read$ $Snap.unit))
    (=
      $t@497@01
      (MWSF_apply $t@495@01 ($Snap.combine
        $t@496@01
        ($Snap.combine ($Snap.first ($Snap.second $t@488@01)) $Snap.unit)))))))
(assert (<=
  $Perm.No
  (+
    (-
      (+
        (-
          $Perm.Write
          ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            $Perm.Write
            ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    (read$ $Snap.unit))))
; [state consolidation]
; State saturation: before repetition
(set-option :timeout 10)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@491@01 ret@289@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@289@01 ret@444@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@491@01 ret@444@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ret@444@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ret@491@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@486@01 ret@367@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@367@01 _1@100@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@486@01 _1@100@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@473@01 ret@379@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@465@01 ret@358@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@379@01 ret@253@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@473@01 ret@253@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@241@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@241@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@486@01 ret@241@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@253@01 $t@225@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@379@01 $t@225@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@473@01 $t@225@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@486@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= $t@225@01 $t@210@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@253@01 $t@210@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@379@01 $t@210@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@473@01 $t@210@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@222@01 ret@207@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (= ret@222@01 ret@207@01)))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($Snap.first ($Snap.second ($Snap.second $t@369@01)))
      ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))
      ($Snap.first ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= $t@359@01 $t@466@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= $t@466@01 $t@359@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_ref@215@01 val_ref@243@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@215@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@215@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_ref@215@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01))))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_ref@243@01 val_ref@215@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@243@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@243@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_ref@243@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01))))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@453@01 val_ref@215@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@453@01 val_ref@243@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (and
    (<
      $Perm.No
      (+
        (-
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit)))
    (<
      $Perm.No
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))))
  (not (= $t@453@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@453@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)))))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@455@01 val_ref@215@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@455@01 val_ref@243@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (and
    (<
      $Perm.No
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit)))
    (<
      $Perm.No
      (+
        (-
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))))
  (not (= $t@455@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@455@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)))))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)) val_ref@215@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)) val_ref@243@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)) $t@453@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)) $t@455@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
(check-sat)
; unknown
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      val_int@493@01)))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not
  (=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not
  (=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
    val_int@493@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not
  (=
    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) val_int@493@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      val_int@493@01
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not
  (=
    val_int@493@01
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_int@493@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= $t@208@01 $t@223@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= $t@223@01 $t@208@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= false val_bool@252@01))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= false val_bool@381@01))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= false val_bool@475@01))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= false val_bool@252@01))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= false val_bool@381@01))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= false val_bool@475@01))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 false))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 false))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 val_bool@381@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 val_bool@475@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 false))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 false))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 val_bool@252@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 val_bool@475@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_bool@475@01 false))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_bool@475@01 false))))
(check-sat)
; unsat
(pop) ; 9
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_bool@475@01 val_bool@252@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= val_bool@475@01 val_bool@381@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= $t@210@01 $t@225@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 9
(set-option :timeout 10)
(assert (not (not (= $t@225@01 $t@210@01))))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
(assert (and
  (and
    (and
      (not (= ret@213@01 ret@241@01))
      (not (= ret@213@01 _1@100@01))
      (not (= ret@213@01 ret@367@01))
      (not (= ret@213@01 ret@486@01)))
    (and
      (not (= ret@241@01 ret@213@01))
      (not (= ret@241@01 _1@100@01))
      (not (= ret@241@01 ret@367@01))
      (not (= ret@241@01 ret@486@01)))
    (and
      (not (= _1@100@01 ret@213@01))
      (not (= _1@100@01 ret@241@01))
      (not (= _1@100@01 ret@367@01))
      (not (= _1@100@01 ret@486@01)))
    (and
      (not (= ret@367@01 ret@213@01))
      (not (= ret@367@01 ret@241@01))
      (not (= ret@367@01 _1@100@01))
      (not (= ret@367@01 ret@486@01)))
    (and
      (not (= ret@486@01 ret@213@01))
      (not (= ret@486@01 ret@241@01))
      (not (= ret@486@01 _1@100@01))
      (not (= ret@486@01 ret@367@01))))
  (and
    (and
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
          ret@444@01))
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
          ret@289@01))
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
          ret@491@01)))
    (and
      (not
        (=
          ret@444@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      (not (= ret@444@01 ret@289@01))
      (not (= ret@444@01 ret@491@01)))
    (and
      (not
        (=
          ret@289@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      (not (= ret@289@01 ret@444@01))
      (not (= ret@289@01 ret@491@01)))
    (and
      (not
        (=
          ret@491@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      (not (= ret@491@01 ret@444@01))
      (not (= ret@491@01 ret@289@01))))
  (and (not (= ret@207@01 ret@222@01)) (not (= ret@222@01 ret@207@01)))
  (and
    (and
      (not (= $t@210@01 $t@225@01))
      (not (= $t@210@01 ret@253@01))
      (not (= $t@210@01 ret@379@01))
      (not (= $t@210@01 ret@473@01)))
    (and
      (not (= $t@225@01 $t@210@01))
      (not (= $t@225@01 ret@253@01))
      (not (= $t@225@01 ret@379@01))
      (not (= $t@225@01 ret@473@01)))
    (and
      (not (= ret@253@01 $t@210@01))
      (not (= ret@253@01 $t@225@01))
      (not (= ret@253@01 ret@379@01))
      (not (= ret@253@01 ret@473@01)))
    (and
      (not (= ret@379@01 $t@210@01))
      (not (= ret@379@01 $t@225@01))
      (not (= ret@379@01 ret@253@01))
      (not (= ret@379@01 ret@473@01)))
    (and
      (not (= ret@473@01 $t@210@01))
      (not (= ret@473@01 $t@225@01))
      (not (= ret@473@01 ret@253@01))
      (not (= ret@473@01 ret@379@01))))))
(assert (and
  (and
    (not
      (=
        ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
        ret@444@01))
    (not
      (=
        ret@444@01
        ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
  (and
    (and
      (not (= $t@210@01 ret@253@01))
      (not (= $t@210@01 ret@379@01))
      (not (= $t@210@01 ret@473@01)))
    (and
      (not (= $t@225@01 ret@253@01))
      (not (= $t@225@01 ret@379@01))
      (not (= $t@225@01 ret@473@01)))
    (and (not (= ret@253@01 $t@210@01)) (not (= ret@253@01 $t@225@01)))
    (and (not (= ret@379@01 $t@210@01)) (not (= ret@379@01 $t@225@01)))
    (and (not (= ret@473@01 $t@210@01)) (not (= ret@473@01 $t@225@01))))))
; [eval] __t15 && (__t15 && __t15)
(set-option :timeout 0)
(push) ; 9
; [then-branch: 80 | False | live]
; [else-branch: 80 | True | live]
(push) ; 10
; [then-branch: 80 | False]
(assert false)
(pop) ; 10
(push) ; 10
; [else-branch: 80 | True]
(push) ; 11
; [then-branch: 81 | False | live]
; [else-branch: 81 | True | live]
(push) ; 12
; [then-branch: 81 | False]
(assert false)
(pop) ; 12
(push) ; 12
; [else-branch: 81 | True]
(pop) ; 12
(pop) ; 11
; Joined path conditions
; Joined path conditions
(pop) ; 10
(pop) ; 9
; Joined path conditions
; Joined path conditions
(push) ; 9
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 9
; 0.01s
; (get-info :all-statistics)
; [then-branch: 82 | True | live]
; [else-branch: 82 | False | dead]
(set-option :timeout 0)
(push) ; 9
; [then-branch: 82 | True]
; [exec]
; exhale acc(m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_(old[l27](_110.val_ref)), read$())
; [eval] read$()
(push) ; 10
(pop) ; 10
; Joined path conditions
; [eval] old[l27](_110.val_ref)
(push) ; 10
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  (-
    (+
      (-
        (+
          (-
            $Perm.Write
            ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              $Perm.Write
              ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    ($Perm.min
      (+
        (-
          (+
            (-
              $Perm.Write
              ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      (read$ $Snap.unit)))
  $Perm.No)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(assert (<=
  $Perm.No
  (-
    (+
      (-
        (+
          (-
            $Perm.Write
            ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              $Perm.Write
              ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    ($Perm.min
      (+
        (-
          (+
            (-
              $Perm.Write
              ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      (read$ $Snap.unit)))))
(set-option :timeout 0)
(push) ; 10
(assert (not (or
  (=
    (-
      (read$ $Snap.unit)
      ($Perm.min
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    $Perm.No)
  (<
    (-
      (read$ $Snap.unit)
      ($Perm.min
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    $Perm.No))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [exec]
; inhale acc(m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_(_3), write -
;   read$())
; [eval] write - read$()
; [eval] read$()
(push) ; 10
(pop) ; 10
; Joined path conditions
(push) ; 10
(assert (not (or
  (= (- $Perm.Write (read$ $Snap.unit)) $Perm.No)
  (< $Perm.No (- $Perm.Write (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(declare-const $t@498@01 $Snap)
(declare-const $t@499@01 $Snap)
(assert (and
  (=>
    (<
      $Perm.No
      (-
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              ($Perm.min
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit))))
    (= $t@499@01 $t@497@01))
  (=> (< $Perm.No (- $Perm.Write (read$ $Snap.unit))) (= $t@499@01 $t@498@01))))
(assert (<=
  $Perm.No
  (+
    (-
      (+
        (-
          (+
            (-
              $Perm.Write
              ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))
      ($Perm.min
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        (read$ $Snap.unit)))
    (- $Perm.Write (read$ $Snap.unit)))))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _104 := _108
; [exec]
; label l33
; [exec]
; label l117
; [exec]
; unfold acc(usize(_48.val_ref.f$value), read$())
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (<
  $Perm.No
  (+
    (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
    (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [eval] read$()
(set-option :timeout 0)
(push) ; 10
(pop) ; 10
; Joined path conditions
(push) ; 10
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ret@444@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ret@289@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ret@491@01
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
; [eval] 0 <= self.val_int
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; State saturation: after unfold
(set-option :timeout 40)
(check-sat)
; unknown
; [exec]
; label loop9_group3_loop17_group3_bb34
; [exec]
; __t23 := true
; [exec]
; _130 := builtin$havoc_ref()
(declare-const ret@500@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_130.val_ref, write)
(declare-const $t@501@01 $Ref)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@213@01 ret@500@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@500@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@500@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@500@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@486@01 ret@500@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(assert (not (= ret@500@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _130.val_ref := _3
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@213@01 ret@500@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@500@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@500@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@500@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@486@01 ret@500@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
; [exec]
; label l51
; [exec]
; _132 := builtin$havoc_int()
(declare-const ret@502@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@503@01 $Snap)
(assert (= $t@503@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _132 := _11.val_int
(declare-const _132@504@01 Int)
(assert (= _132@504@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))
; [exec]
; label l52
; [exec]
; _133 := builtin$havoc_ref()
(declare-const ret@505@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_133.tuple_0, write)
(declare-const $t@506@01 $Ref)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@207@01 ret@505@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@222@01 ret@505@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(assert (not (= ret@505@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale acc(_133.tuple_0.val_int, write)
(declare-const $t@507@01 Int)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  $t@506@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  $t@506@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@444@01 $t@506@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@289@01 $t@506@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@491@01 $t@506@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(assert (not (= $t@506@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale acc(_133.tuple_1, write)
(declare-const $t@508@01 $Ref)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@207@01 ret@505@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@222@01 ret@505@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale acc(_133.tuple_1.val_bool, write)
(declare-const $t@509@01 Bool)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= $t@210@01 $t@508@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= $t@225@01 $t@508@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@253@01 $t@508@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@379@01 $t@508@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@473@01 $t@508@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(assert (not (= $t@508@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _133.tuple_0.val_int := _132 + 1
; [eval] _132 + 1
(declare-const val_int@510@01 Int)
(assert (= val_int@510@01 (+ _132@504@01 1)))
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  $t@506@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  $t@506@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@444@01 $t@506@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@289@01 $t@506@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@491@01 $t@506@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
; [exec]
; _133.tuple_1.val_bool := false
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= $t@210@01 $t@508@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= $t@225@01 $t@508@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@253@01 $t@508@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@379@01 $t@508@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@473@01 $t@508@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
; [exec]
; __t61 := _133.tuple_1.val_bool
; [exec]
; assert !__t61
; [eval] !__t61
; [exec]
; label loop9_group3_loop17_group3_bb35
; [exec]
; __t24 := true
; [exec]
; _131 := _133.tuple_0
; [exec]
; label l53
; [exec]
; _134 := builtin$havoc_int()
(declare-const ret@511@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@512@01 $Snap)
(assert (= $t@512@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _134 := _51.val_int
(declare-const _134@513@01 Int)
(assert (= _134@513@01 ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))
; [exec]
; label l54
; [exec]
; label l55
; [exec]
; assert 0 <= _131.val_int &&
;   (_131.val_int <
;   m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref) &&
;   (0 <= _134 &&
;   _134 <
;   m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref)))
; [eval] 0 <= _131.val_int
(set-option :timeout 0)
(push) ; 10
(assert (not (<= 0 val_int@510@01)))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 val_int@510@01))
; [eval] _131.val_int < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              ($Perm.min
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (- $Perm.Write (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@499@01
  $Snap.unit) ret@230@01))
(pop) ; 10
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@499@01
  $Snap.unit) ret@230@01))
(set-option :timeout 0)
(push) ; 10
(assert (not (<
  val_int@510@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@499@01
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (<
  val_int@510@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@499@01
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _134
(push) ; 10
(assert (not (<= 0 _134@513@01)))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 _134@513@01))
; [eval] _134 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref)
(push) ; 10
; [eval] read$()
(push) ; 11
(pop) ; 11
; Joined path conditions
(push) ; 11
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              ($Perm.min
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (- $Perm.Write (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@499@01
  $Snap.unit) ret@230@01))
(pop) ; 10
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  $t@499@01
  $Snap.unit) ret@230@01))
(set-option :timeout 0)
(push) ; 10
(assert (not (<
  _134@513@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@499@01
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (<
  _134@513@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@499@01
    $Snap.unit) ret@230@01)))
; [exec]
; assert _134 >= 0
; [eval] _134 >= 0
(push) ; 10
(assert (not (>= _134@513@01 0)))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(assert (>= _134@513@01 0))
; [exec]
; fold acc(usize(_131), write)
; [eval] 0 <= self.val_int
(assert (usize%trigger ($Snap.combine
  ($SortWrappers.IntTo$Snap val_int@510@01)
  $Snap.unit) $t@506@01))
(push) ; 10
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01))) $t@506@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
; [exec]
; assert true
; [exec]
; exhale acc(_130.val_ref, write) &&
;   (acc(m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_(_130.val_ref), write) &&
;   (acc(usize(_131), write) && _134 >= 0))
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  (-
    (+
      (-
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              ($Perm.min
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (- $Perm.Write (read$ $Snap.unit)))
    ($Perm.min
      (+
        (-
          (+
            (-
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              ($Perm.min
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (-
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                ($Perm.min
                  (+
                    (-
                      $Perm.Write
                      ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                    (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (- $Perm.Write (read$ $Snap.unit)))
      $Perm.Write))
  $Perm.No)))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(assert (not (or
  (=
    (-
      $Perm.Write
      ($Perm.min
        (+
          (-
            (+
              (-
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                ($Perm.min
                  (+
                    (-
                      $Perm.Write
                      ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                    (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+
                    (-
                      $Perm.Write
                      ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                    (read$ $Snap.unit))
                  ($Perm.min
                    (+
                      (-
                        $Perm.Write
                        ($Perm.min
                          $Perm.Write
                          (- $Perm.Write (read$ $Snap.unit))))
                      (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (- $Perm.Write (read$ $Snap.unit)))
        $Perm.Write))
    $Perm.No)
  (<
    (-
      $Perm.Write
      ($Perm.min
        (+
          (-
            (+
              (-
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                ($Perm.min
                  (+
                    (-
                      $Perm.Write
                      ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                    (read$ $Snap.unit))
                  (read$ $Snap.unit)))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  (+
                    (-
                      $Perm.Write
                      ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                    (read$ $Snap.unit))
                  ($Perm.min
                    (+
                      (-
                        $Perm.Write
                        ($Perm.min
                          $Perm.Write
                          (- $Perm.Write (read$ $Snap.unit))))
                      (read$ $Snap.unit))
                    (read$ $Snap.unit)))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (- $Perm.Write (read$ $Snap.unit)))
        $Perm.Write))
    $Perm.No))))
(check-sat)
; unsat
(pop) ; 10
; 0.00s
; (get-info :all-statistics)
; [eval] _134 >= 0
; [exec]
; _129 := builtin$havoc_ref()
(declare-const ret@514@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@515@01 $Snap)
(assert (= $t@515@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale acc(_129.val_ref, write) && acc(usize(_129.val_ref), write)
(declare-const $t@516@01 $Snap)
(assert (= $t@516@01 ($Snap.combine ($Snap.first $t@516@01) ($Snap.second $t@516@01))))
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@213@01 ret@514@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@514@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@514@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@514@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@486@01 ret@514@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(assert (not (= ret@514@01 $Ref.null)))
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01)))
  ($SortWrappers.$SnapTo$Ref ($Snap.first $t@516@01)))))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@517@01 $Snap)
(assert (= $t@517@01 $Snap.unit))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@518@01 $Snap)
(assert (= $t@518@01 $Snap.unit))
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; label l56
; [exec]
; label loop9_group3_loop17_group3_bb37
; [exec]
; __t25 := true
; [exec]
; _135 := builtin$havoc_ref()
(declare-const ret@519@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_135.val_int, write)
(declare-const $t@520@01 Int)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ret@519@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ret@519@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@444@01 ret@519@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@289@01 ret@519@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@491@01 ret@519@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(assert (not (= ret@519@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _135.val_int := _104.val_int
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ret@519@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ret@519@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@444@01 ret@519@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@289@01 ret@519@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@491@01 ret@519@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
; [exec]
; label l57
; [exec]
; _129.val_ref := _135
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@213@01 ret@514@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@514@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@514@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@514@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not (= ret@486@01 ret@514@01)))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
; [exec]
; label l58
(set-option :timeout 0)
(push) ; 10
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 10
; 0.01s
; (get-info :all-statistics)
; [then-branch: 83 | True | live]
; [else-branch: 83 | False | dead]
(set-option :timeout 0)
(push) ; 10
; [then-branch: 83 | True]
; [exec]
; _old$l56$0 := _129.val_ref
; [exec]
; inhale acc(DeadBorrowToken$(105), write) && acc(usize(_old$l56$0), write) --*
;   acc(m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_(old[l55](_130.val_ref)), write) &&
;   (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) ==
;   old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref)) &&
;   (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) ==
;   old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref)) &&
;   (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l55](_130.val_ref),
;   old[l55](_131.val_int), old[l55](_134)) ==
;   old[lhs]((unfolding acc(usize(_old$l56$0), write) in _old$l56$0.val_int)) &&
;   (forall ii: Int, wi: Int ::
;     { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l55](_130.val_ref),
;     ii, wi) }
;     { old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_130.val_ref,
;     ii, wi)) }
;     0 <= ii &&
;     (ii <
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) &&
;     (0 <= wi &&
;     (wi <
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) &&
;     (!(ii == old[l55](_131.val_int)) || !(wi == old[l55](_134)))))) ==>
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l55](_130.val_ref),
;     ii, wi) ==
;     old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_130.val_ref,
;     ii, wi))))))
(declare-const $t@521@01 $MWSF)
; [eval] old[l55](_130.val_ref)
; [eval] old[l55](_130.val_ref)
; [eval] old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              ($Perm.min
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (- $Perm.Write (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(pop) ; 11
; Joined path conditions
; [eval] old[l55](_130.val_ref)
; [eval] old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              ($Perm.min
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (- $Perm.Write (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(pop) ; 11
; Joined path conditions
; [eval] old[l55](_130.val_ref)
; [eval] old[l55](_131.val_int)
; [eval] old[l55](_134)
; [eval] old[l55](_130.val_ref)
; [eval] old[l55](_130.val_ref)
; [eval] old[l55](_131.val_int)
; [eval] old[l55](_134)
; [eval] old[l55](_130.val_ref)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; fold acc(usize(_old$l56$0), write)
; [eval] 0 <= self.val_int
(set-option :timeout 0)
(push) ; 11
(assert (not (<= 0 val_int@493@01)))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(assert (<= 0 val_int@493@01))
(assert (usize%trigger ($Snap.combine
  ($SortWrappers.IntTo$Snap val_int@493@01)
  $Snap.unit) ret@519@01))
(push) ; 11
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@516@01)) ret@519@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01))) ret@519@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
; [exec]
; inhale acc(DeadBorrowToken$(105), write)
(declare-const $t@522@01 $Snap)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; apply acc(DeadBorrowToken$(105), write) && acc(usize(_old$l56$0), write) --*
;   acc(m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_(old[l55](_130.val_ref)), write) &&
;   (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) ==
;   old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref)) &&
;   (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) ==
;   old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref)) &&
;   (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l55](_130.val_ref),
;   old[l55](_131.val_int), old[l55](_134)) ==
;   old[lhs]((unfolding acc(usize(_old$l56$0), write) in _old$l56$0.val_int)) &&
;   (forall ii: Int, wi: Int ::
;     { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l55](_130.val_ref),
;     ii, wi) }
;     { old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_130.val_ref,
;     ii, wi)) }
;     0 <= ii &&
;     (ii <
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) &&
;     (0 <= wi &&
;     (wi <
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) &&
;     (!(ii == old[l55](_131.val_int)) || !(wi == old[l55](_134)))))) ==>
;     m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l55](_130.val_ref),
;     ii, wi) ==
;     old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_130.val_ref,
;     ii, wi))))))
; [eval] old[l55](_130.val_ref)
; [eval] old[l55](_130.val_ref)
; [eval] old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              ($Perm.min
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (- $Perm.Write (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(pop) ; 11
; Joined path conditions
; [eval] old[l55](_130.val_ref)
; [eval] old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              ($Perm.min
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (- $Perm.Write (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(pop) ; 11
; Joined path conditions
; [eval] old[l55](_130.val_ref)
; [eval] old[l55](_131.val_int)
; [eval] old[l55](_134)
; [eval] old[l55](_130.val_ref)
; [eval] old[l55](_130.val_ref)
; [eval] old[l55](_131.val_int)
; [eval] old[l55](_134)
; [eval] old[l55](_130.val_ref)
(assert (=
  (MWSF_apply $t@521@01 ($Snap.combine
    $t@522@01
    ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit)))
  ($Snap.combine
    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
    ($Snap.second (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit)))))))
; [eval] old[l55](_130.val_ref)
(assert (=
  ($Snap.second (MWSF_apply $t@521@01 ($Snap.combine
    $t@522@01
    ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
  ($Snap.combine
    ($Snap.first ($Snap.second (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit)))))
    ($Snap.second ($Snap.second (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))))))
(assert (=
  ($Snap.first ($Snap.second (MWSF_apply $t@521@01 ($Snap.combine
    $t@522@01
    ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit)))))
  $Snap.unit))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) == old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref))
; [eval] old[l55](_130.val_ref)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
    $t@522@01
    ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
  $Snap.unit) ret@230@01))
(pop) ; 11
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
    $t@522@01
    ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
  $Snap.unit) ret@230@01))
; [eval] old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              ($Perm.min
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (- $Perm.Write (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(pop) ; 11
; Joined path conditions
(assert (=
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
    $Snap.unit) ret@230@01)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@499@01
    $Snap.unit) ret@230@01)))
(assert (=
  ($Snap.second ($Snap.second (MWSF_apply $t@521@01 ($Snap.combine
    $t@522@01
    ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit)))))
  ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))))
    ($Snap.second ($Snap.second ($Snap.second (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit)))))))))
(assert (=
  ($Snap.first ($Snap.second ($Snap.second (MWSF_apply $t@521@01 ($Snap.combine
    $t@522@01
    ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))))
  $Snap.unit))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) == old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref))
; [eval] old[l55](_130.val_ref)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
    $t@522@01
    ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
  $Snap.unit) ret@230@01))
(pop) ; 11
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$%precondition ($Snap.combine
  ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
    $t@522@01
    ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
  $Snap.unit) ret@230@01))
; [eval] old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_130.val_ref)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              ($Perm.min
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (- $Perm.Write (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(pop) ; 11
; Joined path conditions
(assert (=
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
    $Snap.unit) ret@230@01)
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@499@01
    $Snap.unit) ret@230@01)))
(assert (=
  ($Snap.second ($Snap.second ($Snap.second (MWSF_apply $t@521@01 ($Snap.combine
    $t@522@01
    ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))))
  ($Snap.combine
    ($Snap.first ($Snap.second ($Snap.second ($Snap.second (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit)))))))
    ($Snap.second ($Snap.second ($Snap.second ($Snap.second (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))))))))
(assert (=
  ($Snap.first ($Snap.second ($Snap.second ($Snap.second (MWSF_apply $t@521@01 ($Snap.combine
    $t@522@01
    ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit)))))))
  $Snap.unit))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l55](_130.val_ref), old[l55](_131.val_int), old[l55](_134)) == old[lhs]((unfolding acc(usize(_old$l56$0), write) in _old$l56$0.val_int))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l55](_130.val_ref), old[l55](_131.val_int), old[l55](_134))
; [eval] old[l55](_130.val_ref)
; [eval] old[l55](_131.val_int)
; [eval] old[l55](_134)
(set-option :timeout 0)
(push) ; 11
; [eval] read$()
(push) ; 12
(pop) ; 12
; Joined path conditions
(push) ; 12
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(push) ; 12
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 12
; [eval] read$()
(push) ; 13
(pop) ; 13
; Joined path conditions
(push) ; 13
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(push) ; 13
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(pop) ; 12
; Joined path conditions
(set-option :timeout 0)
(push) ; 12
(assert (not (<
  val_int@510@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (<
  val_int@510@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(push) ; 12
; [eval] read$()
(push) ; 13
(pop) ; 13
; Joined path conditions
(push) ; 13
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(push) ; 13
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 13
; 0.00s
; (get-info :all-statistics)
(pop) ; 12
; Joined path conditions
(set-option :timeout 0)
(push) ; 12
(assert (not (<
  _134@513@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 12
; 0.00s
; (get-info :all-statistics)
(assert (<
  _134@513@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
    $t@522@01
    ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 val_int@510@01 _134@513@01))
(pop) ; 11
; Joined path conditions
(assert (and
  (<
    val_int@510@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
        $t@522@01
        ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
      $Snap.unit) ret@230@01))
  (<
    _134@513@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
        $t@522@01
        ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
      $Snap.unit) ret@230@01))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 val_int@510@01 _134@513@01)))
; [eval] old[lhs]((unfolding acc(usize(_old$l56$0), write) in _old$l56$0.val_int))
; [eval] (unfolding acc(usize(_old$l56$0), write) in _old$l56$0.val_int)
(push) ; 11
(push) ; 12
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ret@519@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ret@519@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (= ret@444@01 ret@519@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (= ret@289@01 ret@519@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 12
(set-option :timeout 10)
(assert (not (= ret@491@01 ret@519@01)))
(check-sat)
; unknown
(pop) ; 12
; 0.01s
; (get-info :all-statistics)
; [eval] 0 <= self.val_int
(pop) ; 11
; Joined path conditions
(assert (=
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 val_int@510@01 _134@513@01)
  val_int@493@01))
(assert (=
  ($Snap.second ($Snap.second ($Snap.second ($Snap.second (MWSF_apply $t@521@01 ($Snap.combine
    $t@522@01
    ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit)))))))
  $Snap.unit))
; [eval] (forall ii: Int, wi: Int :: { m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l55](_130.val_ref), ii, wi) } { old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_130.val_ref, ii, wi)) } 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) && (0 <= wi && (wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) && (!(ii == old[l55](_131.val_int)) || !(wi == old[l55](_134)))))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l55](_130.val_ref), ii, wi) == old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_130.val_ref, ii, wi)))
(declare-const ii@523@01 Int)
(declare-const wi@524@01 Int)
(set-option :timeout 0)
(push) ; 11
; [eval] 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) && (0 <= wi && (wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) && (!(ii == old[l55](_131.val_int)) || !(wi == old[l55](_134)))))) ==> m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l55](_130.val_ref), ii, wi) == old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_130.val_ref, ii, wi))
; [eval] 0 <= ii && (ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) && (0 <= wi && (wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref)) && (!(ii == old[l55](_131.val_int)) || !(wi == old[l55](_134))))))
; [eval] 0 <= ii
(push) ; 12
; [then-branch: 84 | !(0 <= ii@523@01) | live]
; [else-branch: 84 | 0 <= ii@523@01 | live]
(push) ; 13
; [then-branch: 84 | !(0 <= ii@523@01)]
(assert (not (<= 0 ii@523@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 84 | 0 <= ii@523@01]
(assert (<= 0 ii@523@01))
; [eval] ii < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref))
; [eval] old[l55](_130.val_ref)
(push) ; 14
; [eval] read$()
(push) ; 15
(pop) ; 15
; Joined path conditions
(push) ; 15
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(push) ; 15
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(pop) ; 14
; Joined path conditions
(set-option :timeout 0)
(push) ; 14
; [then-branch: 85 | !(ii@523@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01)) | live]
; [else-branch: 85 | ii@523@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01) | live]
(push) ; 15
; [then-branch: 85 | !(ii@523@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01))]
(assert (not
  (<
    ii@523@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
        $t@522@01
        ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
      $Snap.unit) ret@230@01))))
(pop) ; 15
(push) ; 15
; [else-branch: 85 | ii@523@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01)]
(assert (<
  ii@523@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
    $Snap.unit) ret@230@01)))
; [eval] 0 <= wi
(push) ; 16
; [then-branch: 86 | !(0 <= wi@524@01) | live]
; [else-branch: 86 | 0 <= wi@524@01 | live]
(push) ; 17
; [then-branch: 86 | !(0 <= wi@524@01)]
(assert (not (<= 0 wi@524@01)))
(pop) ; 17
(push) ; 17
; [else-branch: 86 | 0 <= wi@524@01]
(assert (<= 0 wi@524@01))
; [eval] wi < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(old[l55](_130.val_ref))
; [eval] old[l55](_130.val_ref)
(push) ; 18
; [eval] read$()
(push) ; 19
(pop) ; 19
; Joined path conditions
(push) ; 19
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 19
; 0.00s
; (get-info :all-statistics)
(push) ; 19
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 19
; 0.00s
; (get-info :all-statistics)
(pop) ; 18
; Joined path conditions
(set-option :timeout 0)
(push) ; 18
; [then-branch: 87 | !(wi@524@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01)) | live]
; [else-branch: 87 | wi@524@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01) | live]
(push) ; 19
; [then-branch: 87 | !(wi@524@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01))]
(assert (not
  (<
    wi@524@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
        $t@522@01
        ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
      $Snap.unit) ret@230@01))))
(pop) ; 19
(push) ; 19
; [else-branch: 87 | wi@524@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01)]
(assert (<
  wi@524@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
    $Snap.unit) ret@230@01)))
; [eval] !(ii == old[l55](_131.val_int)) || !(wi == old[l55](_134))
; [eval] !(ii == old[l55](_131.val_int))
; [eval] ii == old[l55](_131.val_int)
; [eval] old[l55](_131.val_int)
(push) ; 20
; [then-branch: 88 | ii@523@01 != val_int@510@01 | live]
; [else-branch: 88 | ii@523@01 == val_int@510@01 | live]
(push) ; 21
; [then-branch: 88 | ii@523@01 != val_int@510@01]
(assert (not (= ii@523@01 val_int@510@01)))
(pop) ; 21
(push) ; 21
; [else-branch: 88 | ii@523@01 == val_int@510@01]
(assert (= ii@523@01 val_int@510@01))
; [eval] !(wi == old[l55](_134))
; [eval] wi == old[l55](_134)
; [eval] old[l55](_134)
(pop) ; 21
(pop) ; 20
; Joined path conditions
; Joined path conditions
(assert (or (= ii@523@01 val_int@510@01) (not (= ii@523@01 val_int@510@01))))
(pop) ; 19
(pop) ; 18
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    wi@524@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
        $t@522@01
        ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
      $Snap.unit) ret@230@01))
  (and
    (<
      wi@524@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
          $t@522@01
          ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
        $Snap.unit) ret@230@01))
    (or (= ii@523@01 val_int@510@01) (not (= ii@523@01 val_int@510@01))))))
(assert (or
  (<
    wi@524@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
        $t@522@01
        ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
      $Snap.unit) ret@230@01))
  (not
    (<
      wi@524@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
          $t@522@01
          ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
        $Snap.unit) ret@230@01)))))
(pop) ; 17
(pop) ; 16
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 wi@524@01)
  (and
    (<= 0 wi@524@01)
    (=>
      (<
        wi@524@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
            $t@522@01
            ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
          $Snap.unit) ret@230@01))
      (and
        (<
          wi@524@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
              $t@522@01
              ($Snap.combine
                ($SortWrappers.IntTo$Snap val_int@493@01)
                $Snap.unit))))
            $Snap.unit) ret@230@01))
        (or (= ii@523@01 val_int@510@01) (not (= ii@523@01 val_int@510@01)))))
    (or
      (<
        wi@524@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
            $t@522@01
            ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
          $Snap.unit) ret@230@01))
      (not
        (<
          wi@524@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
              $t@522@01
              ($Snap.combine
                ($SortWrappers.IntTo$Snap val_int@493@01)
                $Snap.unit))))
            $Snap.unit) ret@230@01)))))))
(assert (or (<= 0 wi@524@01) (not (<= 0 wi@524@01))))
(pop) ; 15
(pop) ; 14
; Joined path conditions
; Joined path conditions
(assert (=>
  (<
    ii@523@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
        $t@522@01
        ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
      $Snap.unit) ret@230@01))
  (and
    (<
      ii@523@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
          $t@522@01
          ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
        $Snap.unit) ret@230@01))
    (=>
      (<= 0 wi@524@01)
      (and
        (<= 0 wi@524@01)
        (=>
          (<
            wi@524@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                $t@522@01
                ($Snap.combine
                  ($SortWrappers.IntTo$Snap val_int@493@01)
                  $Snap.unit))))
              $Snap.unit) ret@230@01))
          (and
            (<
              wi@524@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                  $t@522@01
                  ($Snap.combine
                    ($SortWrappers.IntTo$Snap val_int@493@01)
                    $Snap.unit))))
                $Snap.unit) ret@230@01))
            (or (= ii@523@01 val_int@510@01) (not (= ii@523@01 val_int@510@01)))))
        (or
          (<
            wi@524@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                $t@522@01
                ($Snap.combine
                  ($SortWrappers.IntTo$Snap val_int@493@01)
                  $Snap.unit))))
              $Snap.unit) ret@230@01))
          (not
            (<
              wi@524@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                  $t@522@01
                  ($Snap.combine
                    ($SortWrappers.IntTo$Snap val_int@493@01)
                    $Snap.unit))))
                $Snap.unit) ret@230@01))))))
    (or (<= 0 wi@524@01) (not (<= 0 wi@524@01))))))
(assert (or
  (<
    ii@523@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
        $t@522@01
        ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
      $Snap.unit) ret@230@01))
  (not
    (<
      ii@523@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
          $t@522@01
          ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
        $Snap.unit) ret@230@01)))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
; Joined path conditions
(assert (=>
  (<= 0 ii@523@01)
  (and
    (<= 0 ii@523@01)
    (=>
      (<
        ii@523@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
            $t@522@01
            ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
          $Snap.unit) ret@230@01))
      (and
        (<
          ii@523@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
              $t@522@01
              ($Snap.combine
                ($SortWrappers.IntTo$Snap val_int@493@01)
                $Snap.unit))))
            $Snap.unit) ret@230@01))
        (=>
          (<= 0 wi@524@01)
          (and
            (<= 0 wi@524@01)
            (=>
              (<
                wi@524@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                    $t@522@01
                    ($Snap.combine
                      ($SortWrappers.IntTo$Snap val_int@493@01)
                      $Snap.unit))))
                  $Snap.unit) ret@230@01))
              (and
                (<
                  wi@524@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                      $t@522@01
                      ($Snap.combine
                        ($SortWrappers.IntTo$Snap val_int@493@01)
                        $Snap.unit))))
                    $Snap.unit) ret@230@01))
                (or
                  (= ii@523@01 val_int@510@01)
                  (not (= ii@523@01 val_int@510@01)))))
            (or
              (<
                wi@524@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                    $t@522@01
                    ($Snap.combine
                      ($SortWrappers.IntTo$Snap val_int@493@01)
                      $Snap.unit))))
                  $Snap.unit) ret@230@01))
              (not
                (<
                  wi@524@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                      $t@522@01
                      ($Snap.combine
                        ($SortWrappers.IntTo$Snap val_int@493@01)
                        $Snap.unit))))
                    $Snap.unit) ret@230@01))))))
        (or (<= 0 wi@524@01) (not (<= 0 wi@524@01)))))
    (or
      (<
        ii@523@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
            $t@522@01
            ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
          $Snap.unit) ret@230@01))
      (not
        (<
          ii@523@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
              $t@522@01
              ($Snap.combine
                ($SortWrappers.IntTo$Snap val_int@493@01)
                $Snap.unit))))
            $Snap.unit) ret@230@01)))))))
(assert (or (<= 0 ii@523@01) (not (<= 0 ii@523@01))))
(push) ; 12
; [then-branch: 89 | 0 <= ii@523@01 && ii@523@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01) && 0 <= wi@524@01 && wi@524@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01) && ii@523@01 != val_int@510@01 || wi@524@01 != _134@513@01 | live]
; [else-branch: 89 | !(0 <= ii@523@01 && ii@523@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01) && 0 <= wi@524@01 && wi@524@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01) && ii@523@01 != val_int@510@01 || wi@524@01 != _134@513@01) | live]
(push) ; 13
; [then-branch: 89 | 0 <= ii@523@01 && ii@523@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01) && 0 <= wi@524@01 && wi@524@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01) && ii@523@01 != val_int@510@01 || wi@524@01 != _134@513@01]
(assert (and
  (<= 0 ii@523@01)
  (and
    (<
      ii@523@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
          $t@522@01
          ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
        $Snap.unit) ret@230@01))
    (and
      (<= 0 wi@524@01)
      (and
        (<
          wi@524@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
              $t@522@01
              ($Snap.combine
                ($SortWrappers.IntTo$Snap val_int@493@01)
                $Snap.unit))))
            $Snap.unit) ret@230@01))
        (or (not (= ii@523@01 val_int@510@01)) (not (= wi@524@01 _134@513@01))))))))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l55](_130.val_ref), ii, wi) == old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_130.val_ref, ii, wi))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(old[l55](_130.val_ref), ii, wi)
; [eval] old[l55](_130.val_ref)
(push) ; 14
; [eval] read$()
(push) ; 15
(pop) ; 15
; Joined path conditions
(push) ; 15
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(push) ; 15
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 15
; [eval] read$()
(push) ; 16
(pop) ; 16
; Joined path conditions
(push) ; 16
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(push) ; 16
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(pop) ; 15
; Joined path conditions
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 15
; [eval] read$()
(push) ; 16
(pop) ; 16
; Joined path conditions
(push) ; 16
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(push) ; 16
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(pop) ; 15
; Joined path conditions
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
    $t@522@01
    ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01))
(pop) ; 14
; Joined path conditions
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
    $t@522@01
    ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01))
; [eval] old[l55](m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_130.val_ref, ii, wi))
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$(_130.val_ref, ii, wi)
(set-option :timeout 0)
(push) ; 14
; [eval] read$()
(push) ; 15
(pop) ; 15
; Joined path conditions
(push) ; 15
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(push) ; 15
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              ($Perm.min
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (- $Perm.Write (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(push) ; 15
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
; [eval] 0 <= _pure_2
; [eval] _pure_2 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(set-option :timeout 0)
(push) ; 15
; [eval] read$()
(push) ; 16
(pop) ; 16
; Joined path conditions
(push) ; 16
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(push) ; 16
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              ($Perm.min
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (- $Perm.Write (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(push) ; 16
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(pop) ; 15
; Joined path conditions
(set-option :timeout 0)
(push) ; 15
(assert (not (<
  ii@523@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@499@01
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(assert (<
  ii@523@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@499@01
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_3
; [eval] _pure_3 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
; [eval] m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$(_pure_1)
(push) ; 15
; [eval] read$()
(push) ; 16
(pop) ; 16
; Joined path conditions
(push) ; 16
(assert (not (or (= (read$ $Snap.unit) $Perm.No) (< $Perm.No (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(push) ; 16
(assert (not (=>
  (< $Perm.No (read$ $Snap.unit))
  (<
    $Perm.No
    (+
      (-
        (+
          (-
            (+
              (-
                $Perm.Write
                ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
              (read$ $Snap.unit))
            ($Perm.min
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (-
              (+
                (-
                  $Perm.Write
                  ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                (read$ $Snap.unit))
              ($Perm.min
                (+
                  (-
                    $Perm.Write
                    ($Perm.min $Perm.Write (- $Perm.Write (read$ $Snap.unit))))
                  (read$ $Snap.unit))
                (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (- $Perm.Write (read$ $Snap.unit)))))))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(push) ; 16
(set-option :timeout 10)
(assert (not (< $Perm.No (read$ $Snap.unit))))
(check-sat)
; unsat
(pop) ; 16
; 0.00s
; (get-info :all-statistics)
(pop) ; 15
; Joined path conditions
(set-option :timeout 0)
(push) ; 15
(assert (not (<
  wi@524@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@499@01
    $Snap.unit) ret@230@01))))
(check-sat)
; unsat
(pop) ; 15
; 0.00s
; (get-info :all-statistics)
(assert (<
  wi@524@01
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
    $t@499@01
    $Snap.unit) ret@230@01)))
; [eval] 0 <= _pure_2
; [eval] 0 <= _pure_3
(assert (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
  $t@499@01
  ($Snap.combine
    $Snap.unit
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01))
(pop) ; 14
; Joined path conditions
(assert (and
  (<
    ii@523@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@499@01
      $Snap.unit) ret@230@01))
  (<
    wi@524@01
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
      $t@499@01
      $Snap.unit) ret@230@01))
  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
    $t@499@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01)))
(pop) ; 13
(push) ; 13
; [else-branch: 89 | !(0 <= ii@523@01 && ii@523@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01) && 0 <= wi@524@01 && wi@524@01 < m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$((First:($t@521@01[($t@522@01, (val_int@493@01, _))]), _), ret@230@01) && ii@523@01 != val_int@510@01 || wi@524@01 != _134@513@01)]
(assert (not
  (and
    (<= 0 ii@523@01)
    (and
      (<
        ii@523@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
            $t@522@01
            ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@524@01)
        (and
          (<
            wi@524@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                $t@522@01
                ($Snap.combine
                  ($SortWrappers.IntTo$Snap val_int@493@01)
                  $Snap.unit))))
              $Snap.unit) ret@230@01))
          (or (not (= ii@523@01 val_int@510@01)) (not (= wi@524@01 _134@513@01)))))))))
(pop) ; 13
(pop) ; 12
; Joined path conditions
(assert (=>
  (and
    (<= 0 ii@523@01)
    (and
      (<
        ii@523@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
            $t@522@01
            ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@524@01)
        (and
          (<
            wi@524@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                $t@522@01
                ($Snap.combine
                  ($SortWrappers.IntTo$Snap val_int@493@01)
                  $Snap.unit))))
              $Snap.unit) ret@230@01))
          (or (not (= ii@523@01 val_int@510@01)) (not (= wi@524@01 _134@513@01)))))))
  (and
    (<= 0 ii@523@01)
    (<
      ii@523@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
          $t@522@01
          ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
        $Snap.unit) ret@230@01))
    (<= 0 wi@524@01)
    (<
      wi@524@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
          $t@522@01
          ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
        $Snap.unit) ret@230@01))
    (or (not (= ii@523@01 val_int@510@01)) (not (= wi@524@01 _134@513@01)))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
        $t@522@01
        ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01)
    (<
      ii@523@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@499@01
        $Snap.unit) ret@230@01))
    (<
      wi@524@01
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
        $t@499@01
        $Snap.unit) ret@230@01))
    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
      $t@499@01
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01))))
; Joined path conditions
(assert (or
  (not
    (and
      (<= 0 ii@523@01)
      (and
        (<
          ii@523@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
              $t@522@01
              ($Snap.combine
                ($SortWrappers.IntTo$Snap val_int@493@01)
                $Snap.unit))))
            $Snap.unit) ret@230@01))
        (and
          (<= 0 wi@524@01)
          (and
            (<
              wi@524@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                  $t@522@01
                  ($Snap.combine
                    ($SortWrappers.IntTo$Snap val_int@493@01)
                    $Snap.unit))))
                $Snap.unit) ret@230@01))
            (or
              (not (= ii@523@01 val_int@510@01))
              (not (= wi@524@01 _134@513@01))))))))
  (and
    (<= 0 ii@523@01)
    (and
      (<
        ii@523@01
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
          ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
            $t@522@01
            ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
          $Snap.unit) ret@230@01))
      (and
        (<= 0 wi@524@01)
        (and
          (<
            wi@524@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                $t@522@01
                ($Snap.combine
                  ($SortWrappers.IntTo$Snap val_int@493@01)
                  $Snap.unit))))
              $Snap.unit) ret@230@01))
          (or (not (= ii@523@01 val_int@510@01)) (not (= wi@524@01 _134@513@01)))))))))
(pop) ; 11
; Nested auxiliary terms: globals (aux)
; Nested auxiliary terms: non-globals (aux)
(assert (forall ((ii@523@01 Int) (wi@524@01 Int)) (!
  (and
    (=>
      (<= 0 ii@523@01)
      (and
        (<= 0 ii@523@01)
        (=>
          (<
            ii@523@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                $t@522@01
                ($Snap.combine
                  ($SortWrappers.IntTo$Snap val_int@493@01)
                  $Snap.unit))))
              $Snap.unit) ret@230@01))
          (and
            (<
              ii@523@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                  $t@522@01
                  ($Snap.combine
                    ($SortWrappers.IntTo$Snap val_int@493@01)
                    $Snap.unit))))
                $Snap.unit) ret@230@01))
            (=>
              (<= 0 wi@524@01)
              (and
                (<= 0 wi@524@01)
                (=>
                  (<
                    wi@524@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                        $t@522@01
                        ($Snap.combine
                          ($SortWrappers.IntTo$Snap val_int@493@01)
                          $Snap.unit))))
                      $Snap.unit) ret@230@01))
                  (and
                    (<
                      wi@524@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                          $t@522@01
                          ($Snap.combine
                            ($SortWrappers.IntTo$Snap val_int@493@01)
                            $Snap.unit))))
                        $Snap.unit) ret@230@01))
                    (or
                      (= ii@523@01 val_int@510@01)
                      (not (= ii@523@01 val_int@510@01)))))
                (or
                  (<
                    wi@524@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                        $t@522@01
                        ($Snap.combine
                          ($SortWrappers.IntTo$Snap val_int@493@01)
                          $Snap.unit))))
                      $Snap.unit) ret@230@01))
                  (not
                    (<
                      wi@524@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                          $t@522@01
                          ($Snap.combine
                            ($SortWrappers.IntTo$Snap val_int@493@01)
                            $Snap.unit))))
                        $Snap.unit) ret@230@01))))))
            (or (<= 0 wi@524@01) (not (<= 0 wi@524@01)))))
        (or
          (<
            ii@523@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                $t@522@01
                ($Snap.combine
                  ($SortWrappers.IntTo$Snap val_int@493@01)
                  $Snap.unit))))
              $Snap.unit) ret@230@01))
          (not
            (<
              ii@523@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                  $t@522@01
                  ($Snap.combine
                    ($SortWrappers.IntTo$Snap val_int@493@01)
                    $Snap.unit))))
                $Snap.unit) ret@230@01))))))
    (or (<= 0 ii@523@01) (not (<= 0 ii@523@01)))
    (=>
      (and
        (<= 0 ii@523@01)
        (and
          (<
            ii@523@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                $t@522@01
                ($Snap.combine
                  ($SortWrappers.IntTo$Snap val_int@493@01)
                  $Snap.unit))))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@524@01)
            (and
              (<
                wi@524@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                    $t@522@01
                    ($Snap.combine
                      ($SortWrappers.IntTo$Snap val_int@493@01)
                      $Snap.unit))))
                  $Snap.unit) ret@230@01))
              (or
                (not (= ii@523@01 val_int@510@01))
                (not (= wi@524@01 _134@513@01)))))))
      (and
        (<= 0 ii@523@01)
        (<
          ii@523@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
              $t@522@01
              ($Snap.combine
                ($SortWrappers.IntTo$Snap val_int@493@01)
                $Snap.unit))))
            $Snap.unit) ret@230@01))
        (<= 0 wi@524@01)
        (<
          wi@524@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
              $t@522@01
              ($Snap.combine
                ($SortWrappers.IntTo$Snap val_int@493@01)
                $Snap.unit))))
            $Snap.unit) ret@230@01))
        (or (not (= ii@523@01 val_int@510@01)) (not (= wi@524@01 _134@513@01)))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
            $t@522@01
            ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01)
        (<
          ii@523@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@499@01
            $Snap.unit) ret@230@01))
        (<
          wi@524@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@499@01
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          $t@499@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01)))
    (or
      (not
        (and
          (<= 0 ii@523@01)
          (and
            (<
              ii@523@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                  $t@522@01
                  ($Snap.combine
                    ($SortWrappers.IntTo$Snap val_int@493@01)
                    $Snap.unit))))
                $Snap.unit) ret@230@01))
            (and
              (<= 0 wi@524@01)
              (and
                (<
                  wi@524@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                      $t@522@01
                      ($Snap.combine
                        ($SortWrappers.IntTo$Snap val_int@493@01)
                        $Snap.unit))))
                    $Snap.unit) ret@230@01))
                (or
                  (not (= ii@523@01 val_int@510@01))
                  (not (= wi@524@01 _134@513@01))))))))
      (and
        (<= 0 ii@523@01)
        (and
          (<
            ii@523@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                $t@522@01
                ($Snap.combine
                  ($SortWrappers.IntTo$Snap val_int@493@01)
                  $Snap.unit))))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@524@01)
            (and
              (<
                wi@524@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                    $t@522@01
                    ($Snap.combine
                      ($SortWrappers.IntTo$Snap val_int@493@01)
                      $Snap.unit))))
                  $Snap.unit) ret@230@01))
              (or
                (not (= ii@523@01 val_int@510@01))
                (not (= wi@524@01 _134@513@01)))))))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3341@1311@3341@2275-aux|)))
(assert (forall ((ii@523@01 Int) (wi@524@01 Int)) (!
  (and
    (=>
      (<= 0 ii@523@01)
      (and
        (<= 0 ii@523@01)
        (=>
          (<
            ii@523@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                $t@522@01
                ($Snap.combine
                  ($SortWrappers.IntTo$Snap val_int@493@01)
                  $Snap.unit))))
              $Snap.unit) ret@230@01))
          (and
            (<
              ii@523@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                  $t@522@01
                  ($Snap.combine
                    ($SortWrappers.IntTo$Snap val_int@493@01)
                    $Snap.unit))))
                $Snap.unit) ret@230@01))
            (=>
              (<= 0 wi@524@01)
              (and
                (<= 0 wi@524@01)
                (=>
                  (<
                    wi@524@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                        $t@522@01
                        ($Snap.combine
                          ($SortWrappers.IntTo$Snap val_int@493@01)
                          $Snap.unit))))
                      $Snap.unit) ret@230@01))
                  (and
                    (<
                      wi@524@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                          $t@522@01
                          ($Snap.combine
                            ($SortWrappers.IntTo$Snap val_int@493@01)
                            $Snap.unit))))
                        $Snap.unit) ret@230@01))
                    (or
                      (= ii@523@01 val_int@510@01)
                      (not (= ii@523@01 val_int@510@01)))))
                (or
                  (<
                    wi@524@01
                    (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                      ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                        $t@522@01
                        ($Snap.combine
                          ($SortWrappers.IntTo$Snap val_int@493@01)
                          $Snap.unit))))
                      $Snap.unit) ret@230@01))
                  (not
                    (<
                      wi@524@01
                      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                        ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                          $t@522@01
                          ($Snap.combine
                            ($SortWrappers.IntTo$Snap val_int@493@01)
                            $Snap.unit))))
                        $Snap.unit) ret@230@01))))))
            (or (<= 0 wi@524@01) (not (<= 0 wi@524@01)))))
        (or
          (<
            ii@523@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                $t@522@01
                ($Snap.combine
                  ($SortWrappers.IntTo$Snap val_int@493@01)
                  $Snap.unit))))
              $Snap.unit) ret@230@01))
          (not
            (<
              ii@523@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                  $t@522@01
                  ($Snap.combine
                    ($SortWrappers.IntTo$Snap val_int@493@01)
                    $Snap.unit))))
                $Snap.unit) ret@230@01))))))
    (or (<= 0 ii@523@01) (not (<= 0 ii@523@01)))
    (=>
      (and
        (<= 0 ii@523@01)
        (and
          (<
            ii@523@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                $t@522@01
                ($Snap.combine
                  ($SortWrappers.IntTo$Snap val_int@493@01)
                  $Snap.unit))))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@524@01)
            (and
              (<
                wi@524@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                    $t@522@01
                    ($Snap.combine
                      ($SortWrappers.IntTo$Snap val_int@493@01)
                      $Snap.unit))))
                  $Snap.unit) ret@230@01))
              (or
                (not (= ii@523@01 val_int@510@01))
                (not (= wi@524@01 _134@513@01)))))))
      (and
        (<= 0 ii@523@01)
        (<
          ii@523@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
              $t@522@01
              ($Snap.combine
                ($SortWrappers.IntTo$Snap val_int@493@01)
                $Snap.unit))))
            $Snap.unit) ret@230@01))
        (<= 0 wi@524@01)
        (<
          wi@524@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
              $t@522@01
              ($Snap.combine
                ($SortWrappers.IntTo$Snap val_int@493@01)
                $Snap.unit))))
            $Snap.unit) ret@230@01))
        (or (not (= ii@523@01 val_int@510@01)) (not (= wi@524@01 _134@513@01)))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
            $t@522@01
            ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01)
        (<
          ii@523@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@499@01
            $Snap.unit) ret@230@01))
        (<
          wi@524@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            $t@499@01
            $Snap.unit) ret@230@01))
        (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%precondition ($Snap.combine
          $t@499@01
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine
                $Snap.unit
                ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01)))
    (or
      (not
        (and
          (<= 0 ii@523@01)
          (and
            (<
              ii@523@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                  $t@522@01
                  ($Snap.combine
                    ($SortWrappers.IntTo$Snap val_int@493@01)
                    $Snap.unit))))
                $Snap.unit) ret@230@01))
            (and
              (<= 0 wi@524@01)
              (and
                (<
                  wi@524@01
                  (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                      $t@522@01
                      ($Snap.combine
                        ($SortWrappers.IntTo$Snap val_int@493@01)
                        $Snap.unit))))
                    $Snap.unit) ret@230@01))
                (or
                  (not (= ii@523@01 val_int@510@01))
                  (not (= wi@524@01 _134@513@01))))))))
      (and
        (<= 0 ii@523@01)
        (and
          (<
            ii@523@01
            (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
              ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                $t@522@01
                ($Snap.combine
                  ($SortWrappers.IntTo$Snap val_int@493@01)
                  $Snap.unit))))
              $Snap.unit) ret@230@01))
          (and
            (<= 0 wi@524@01)
            (and
              (<
                wi@524@01
                (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                  ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                    $t@522@01
                    ($Snap.combine
                      ($SortWrappers.IntTo$Snap val_int@493@01)
                      $Snap.unit))))
                  $Snap.unit) ret@230@01))
              (or
                (not (= ii@523@01 val_int@510@01))
                (not (= wi@524@01 _134@513@01)))))))))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@499@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3341@1311@3341@2275-aux|)))
(assert (forall ((ii@523@01 Int) (wi@524@01 Int)) (!
  (=>
    (and
      (<= 0 ii@523@01)
      (and
        (<
          ii@523@01
          (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$item_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
            ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
              $t@522@01
              ($Snap.combine
                ($SortWrappers.IntTo$Snap val_int@493@01)
                $Snap.unit))))
            $Snap.unit) ret@230@01))
        (and
          (<= 0 wi@524@01)
          (and
            (<
              wi@524@01
              (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$weight_len$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$ ($Snap.combine
                ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
                  $t@522@01
                  ($Snap.combine
                    ($SortWrappers.IntTo$Snap val_int@493@01)
                    $Snap.unit))))
                $Snap.unit) ret@230@01))
            (or
              (not (= ii@523@01 val_int@510@01))
              (not (= wi@524@01 _134@513@01)))))))
    (=
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
          $t@522@01
          ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01)
      (m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$ ($Snap.combine
        $t@499@01
        ($Snap.combine
          $Snap.unit
          ($Snap.combine
            $Snap.unit
            ($Snap.combine
              $Snap.unit
              ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01)))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    ($Snap.first (MWSF_apply $t@521@01 ($Snap.combine
      $t@522@01
      ($Snap.combine ($SortWrappers.IntTo$Snap val_int@493@01) $Snap.unit))))
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01))
  :pattern ((m_knapsack$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$lookup$opensqu$0$closesqu$__$TY$__m_knapsack$$BestValues$opensqu$0$closesqu$$_beg_$_end_$$int$$$int$$$int$%limited ($Snap.combine
    $t@499@01
    ($Snap.combine
      $Snap.unit
      ($Snap.combine
        $Snap.unit
        ($Snap.combine
          $Snap.unit
          ($Snap.combine $Snap.unit ($Snap.combine $Snap.unit $Snap.unit)))))) ret@230@01 ii@523@01 wi@524@01))
  :qid |prog./home/runner/work/smt-logs/smt-logs/viper/viperserver/silicon/src/test/resources/frontends/prusti/knapsack.rs.vpr@3341@1311@3341@2275|)))
; [state consolidation]
; State saturation: before repetition
(set-option :timeout 10)
(check-sat)
; unknown
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@505@01 ret@207@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@505@01 ret@207@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@508@01 $t@210@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@514@01 ret@213@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@207@01 ret@222@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@505@01 ret@222@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@207@01 ret@222@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@505@01 ret@222@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@210@01 $t@225@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@508@01 $t@225@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@213@01 ret@241@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@514@01 ret@241@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@225@01 ret@253@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@210@01 ret@253@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@508@01 ret@253@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@253@01 ret@379@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@225@01 ret@379@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@210@01 ret@379@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@508@01 ret@379@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@241@01 _1@100@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@213@01 _1@100@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@514@01 _1@100@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@367@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@367@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@213@01 ret@367@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@514@01 ret@367@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@358@01 ret@465@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first $t@516@01))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second $t@369@01))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ret@444@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ret@444@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@379@01 ret@473@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@253@01 ret@473@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@225@01 ret@473@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@210@01 ret@473@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@508@01 ret@473@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@444@01 ret@289@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ret@289@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ret@289@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@367@01 ret@486@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= _1@100@01 ret@486@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@241@01 ret@486@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@213@01 ret@486@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@514@01 ret@486@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@289@01 ret@491@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@444@01 ret@491@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  ret@491@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  ret@491@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($Snap.first ($Snap.second ($Snap.second $t@369@01)))
      ($Snap.second $t@516@01))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($Snap.second $t@516@01)
      ($Snap.first ($Snap.second ($Snap.second $t@369@01))))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= $t@466@01 $t@359@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= $t@359@01 $t@466@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))
    $Perm.Write))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (<
  $Perm.Write
  (+
    $Perm.Write
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ $Perm.Write (read$ $Snap.unit)))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) (read$ $Snap.unit)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) $Perm.Write))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (< $Perm.Write (+ (read$ $Snap.unit) (read$ $Snap.unit)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)) $t@455@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)) $t@453@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)) val_ref@243@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)) val_ref@215@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)) ret@519@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@455@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (and
    (<
      $Perm.No
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit)))
    (<
      $Perm.No
      (+
        (-
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit))))
  (not (= $t@455@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@455@01 val_ref@243@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@455@01 val_ref@215@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@455@01 ret@519@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@453@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01)))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (and
    (<
      $Perm.No
      (+
        (-
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          ($Perm.min
            (+
              (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
              (read$ $Snap.unit))
            (read$ $Snap.unit)))
        (read$ $Snap.unit)))
    (<
      $Perm.No
      (+
        (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
        (read$ $Snap.unit))))
  (not (= $t@453@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@453@01 val_ref@243@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@453@01 val_ref@215@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= $t@453@01 ret@519@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_ref@243@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@243@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@243@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_ref@243@01 val_ref@215@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_ref@243@01 ret@519@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_ref@215@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@215@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= val_ref@215@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_ref@215@01 val_ref@243@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_ref@215@01 ret@519@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= ret@519@01 ($SortWrappers.$SnapTo$Ref ($Snap.first $t@488@01))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= ret@519@01 $t@455@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (<
    $Perm.No
    (+
      (-
        (+
          (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
          (read$ $Snap.unit))
        ($Perm.min
          (+
            (- $Perm.Write ($Perm.min $Perm.Write (read$ $Snap.unit)))
            (read$ $Snap.unit))
          (read$ $Snap.unit)))
      (read$ $Snap.unit)))
  (not (= ret@519@01 $t@453@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= ret@519@01 val_ref@243@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= ret@519@01 val_ref@215@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_int@493@01 ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not
  (=
    val_int@493@01
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      val_int@493@01
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      val_int@493@01
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)) val_int@493@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not
  (=
    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not
  (=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
    val_int@493@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not
  (=
    ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
    ($SortWrappers.$SnapToInt ($Snap.first $t@454@01))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01)))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      val_int@493@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      val_int@493@01)))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      ($SortWrappers.$SnapToInt ($Snap.first $t@454@01)))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (and
  (< $Perm.No (read$ $Snap.unit))
  (not
    (=
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))
      ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= $t@223@01 $t@208@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= $t@223@01 $t@506@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= $t@208@01 $t@223@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= $t@208@01 $t@506@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= $t@506@01 $t@223@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= $t@506@01 $t@208@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_bool@475@01 val_bool@381@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_bool@475@01 val_bool@252@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_bool@475@01 false))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_bool@475@01 false))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_bool@475@01 false))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 val_bool@475@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 val_bool@252@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 false))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 false))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_bool@381@01 false))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 val_bool@475@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 val_bool@381@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 false))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 false))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= val_bool@252@01 false))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= false val_bool@475@01))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= false val_bool@381@01))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= false val_bool@252@01))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= false val_bool@475@01))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= false val_bool@381@01))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= false val_bool@252@01))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= false val_bool@475@01))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= false val_bool@381@01))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= false val_bool@252@01))))
(check-sat)
; unsat
(pop) ; 11
; 0.00s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not false))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= $t@225@01 $t@508@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= $t@210@01 $t@508@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= $t@508@01 $t@225@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (not (= $t@508@01 $t@210@01))))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(assert (and
  (and
    (and
      (not (= ret@486@01 ret@367@01))
      (not (= ret@486@01 _1@100@01))
      (not (= ret@486@01 ret@241@01))
      (not (= ret@486@01 ret@213@01))
      (not (= ret@486@01 ret@514@01)))
    (and
      (not (= ret@367@01 ret@486@01))
      (not (= ret@367@01 _1@100@01))
      (not (= ret@367@01 ret@241@01))
      (not (= ret@367@01 ret@213@01))
      (not (= ret@367@01 ret@514@01)))
    (and
      (not (= _1@100@01 ret@486@01))
      (not (= _1@100@01 ret@367@01))
      (not (= _1@100@01 ret@241@01))
      (not (= _1@100@01 ret@213@01))
      (not (= _1@100@01 ret@514@01)))
    (and
      (not (= ret@241@01 ret@486@01))
      (not (= ret@241@01 ret@367@01))
      (not (= ret@241@01 _1@100@01))
      (not (= ret@241@01 ret@213@01))
      (not (= ret@241@01 ret@514@01)))
    (and
      (not (= ret@213@01 ret@486@01))
      (not (= ret@213@01 ret@367@01))
      (not (= ret@213@01 _1@100@01))
      (not (= ret@213@01 ret@241@01))
      (not (= ret@213@01 ret@514@01)))
    (and
      (not (= ret@514@01 ret@486@01))
      (not (= ret@514@01 ret@367@01))
      (not (= ret@514@01 _1@100@01))
      (not (= ret@514@01 ret@241@01))
      (not (= ret@514@01 ret@213@01))))
  (and
    (and
      (not (= ret@491@01 ret@289@01))
      (not (= ret@491@01 ret@444@01))
      (not
        (=
          ret@491@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      (not
        (=
          ret@491@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
    (and
      (not (= ret@289@01 ret@491@01))
      (not (= ret@289@01 ret@444@01))
      (not
        (=
          ret@289@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      (not
        (=
          ret@289@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
    (and
      (not (= ret@444@01 ret@491@01))
      (not (= ret@444@01 ret@289@01))
      (not
        (=
          ret@444@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
      (not
        (=
          ret@444@01
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01))))))))))
    (and
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
          ret@491@01))
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
          ret@289@01))
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
          ret@444@01)))
    (and
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
          ret@491@01))
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
          ret@289@01))
      (not
        (=
          ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
          ret@444@01))))
  (and
    (and (not (= ret@222@01 ret@207@01)) (not (= ret@222@01 ret@505@01)))
    (and (not (= ret@207@01 ret@222@01)) (not (= ret@207@01 ret@505@01)))
    (and (not (= ret@505@01 ret@222@01)) (not (= ret@505@01 ret@207@01))))
  (and
    (and
      (not (= ret@473@01 ret@379@01))
      (not (= ret@473@01 ret@253@01))
      (not (= ret@473@01 $t@225@01))
      (not (= ret@473@01 $t@210@01))
      (not (= ret@473@01 $t@508@01)))
    (and
      (not (= ret@379@01 ret@473@01))
      (not (= ret@379@01 ret@253@01))
      (not (= ret@379@01 $t@225@01))
      (not (= ret@379@01 $t@210@01))
      (not (= ret@379@01 $t@508@01)))
    (and
      (not (= ret@253@01 ret@473@01))
      (not (= ret@253@01 ret@379@01))
      (not (= ret@253@01 $t@225@01))
      (not (= ret@253@01 $t@210@01))
      (not (= ret@253@01 $t@508@01)))
    (and
      (not (= $t@225@01 ret@473@01))
      (not (= $t@225@01 ret@379@01))
      (not (= $t@225@01 ret@253@01))
      (not (= $t@225@01 $t@210@01))
      (not (= $t@225@01 $t@508@01)))
    (and
      (not (= $t@210@01 ret@473@01))
      (not (= $t@210@01 ret@379@01))
      (not (= $t@210@01 ret@253@01))
      (not (= $t@210@01 $t@225@01))
      (not (= $t@210@01 $t@508@01)))
    (and
      (not (= $t@508@01 ret@473@01))
      (not (= $t@508@01 ret@379@01))
      (not (= $t@508@01 ret@253@01))
      (not (= $t@508@01 $t@225@01))
      (not (= $t@508@01 $t@210@01))))))
(assert (and
  (and
    (not
      (=
        ret@444@01
        ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
    (not
      (=
        ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
        ret@444@01)))
  (and
    (and
      (not (= ret@473@01 $t@225@01))
      (not (= ret@473@01 $t@210@01))
      (not (= ret@473@01 $t@508@01)))
    (and
      (not (= ret@379@01 $t@225@01))
      (not (= ret@379@01 $t@210@01))
      (not (= ret@379@01 $t@508@01)))
    (and
      (not (= ret@253@01 $t@225@01))
      (not (= ret@253@01 $t@210@01))
      (not (= ret@253@01 $t@508@01)))
    (and
      (not (= $t@225@01 ret@473@01))
      (not (= $t@225@01 ret@379@01))
      (not (= $t@225@01 ret@253@01)))
    (and
      (not (= $t@210@01 ret@473@01))
      (not (= $t@210@01 ret@379@01))
      (not (= $t@210@01 ret@253@01)))
    (and
      (not (= $t@508@01 ret@473@01))
      (not (= $t@508@01 ret@379@01))
      (not (= $t@508@01 ret@253@01))))
  (and (not (= ret@222@01 ret@207@01)) (not (= ret@207@01 ret@222@01)))))
; [exec]
; _136 := builtin$havoc_ref()
(declare-const ret@525@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_136.tuple_0, write)
(declare-const $t@526@01 $Ref)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@222@01 ret@525@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@207@01 ret@525@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@505@01 ret@525@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(assert (not (= ret@525@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale acc(_136.tuple_0.val_int, write)
(declare-const $t@527@01 Int)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@491@01 $t@526@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@289@01 $t@526@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@444@01 $t@526@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  $t@526@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  $t@526@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(assert (not (= $t@526@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale acc(_136.tuple_1, write)
(declare-const $t@528@01 $Ref)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@222@01 ret@525@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@207@01 ret@525@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@505@01 ret@525@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale acc(_136.tuple_1.val_bool, write)
(declare-const $t@529@01 Bool)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@473@01 $t@528@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@379@01 $t@528@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@253@01 $t@528@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@225@01 $t@528@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@210@01 $t@528@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@508@01 $t@528@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(assert (not (= $t@528@01 $Ref.null)))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _136.tuple_0.val_int := _51.val_int + 1
; [eval] _51.val_int + 1
(declare-const val_int@530@01 Int)
(assert (=
  val_int@530@01
  (+ ($SortWrappers.$SnapToInt ($Snap.first ($Snap.first $t@452@01))) 1)))
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@491@01 $t@526@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@289@01 $t@526@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@444@01 $t@526@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))
  $t@526@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (=
  ($SortWrappers.$SnapTo$Ref ($Snap.first ($Snap.second ($Snap.second ($Snap.second ($Snap.second ($Snap.second $t@369@01)))))))
  $t@526@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
; [exec]
; _136.tuple_1.val_bool := false
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@473@01 $t@528@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@379@01 $t@528@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@253@01 $t@528@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@225@01 $t@528@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@210@01 $t@528@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= $t@508@01 $t@528@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
; [exec]
; __t62 := _136.tuple_1.val_bool
; [exec]
; assert !__t62
; [eval] !__t62
; [exec]
; label loop9_group3_loop17_group3_bb38
; [exec]
; __t26 := true
; [exec]
; _51 := _136.tuple_0
; [exec]
; label l59
; [exec]
; _18 := builtin$havoc_ref()
(declare-const ret@531@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(tuple0$(_18), write)
(declare-const $t@532@01 $Snap)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@465@01 ret@531@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
(set-option :timeout 0)
(push) ; 11
(set-option :timeout 10)
(assert (not (= ret@358@01 ret@531@01)))
(check-sat)
; unknown
(pop) ; 11
; 0.01s
; (get-info :all-statistics)
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; label loop9_group3_loop17_group4_bb17
; [exec]
; __t11 := true
; [exec]
; _54 := builtin$havoc_int()
(declare-const ret@533@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@534@01 $Snap)
(assert (= $t@534@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; _54 := _51.val_int
; [exec]
; label l60
; [exec]
; _55 := builtin$havoc_int()
(declare-const ret@535@01 Int)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale true
(declare-const $t@536@01 $Snap)
(assert (= $t@536@01 $Snap.unit))
; State saturation: after inhale
(set-option :timeout 20)
(check-sat)
; unknown
; [exec]
; inhale _2 >= 0
(declare-const $t@537@01 $Snap)
(assert (= $t@537@01 $Snap.unit))
; [eval] _2 >= 0
; State saturation: after inhale
(check-sat)
; unknown
; [exec]
; _55 := _2
; [exec]
; label l61
; [exec]
; _53 := builtin$havoc_ref()
(declare-const ret@538@01 $Ref)
; State saturation: after contract
(set-option :timeout 50)
(check-sat)
; unknown
; [exec]
; inhale acc(_53.val_bool, write)
(declare-const $t@539@01 Bool)
