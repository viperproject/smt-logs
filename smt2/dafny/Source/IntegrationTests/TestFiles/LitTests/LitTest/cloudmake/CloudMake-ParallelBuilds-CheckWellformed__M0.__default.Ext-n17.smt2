(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@36 (T@U T@U T@U) Bool)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@U T@U) Bool)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@69 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@91 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@95 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert ($generated@@20 $generated@@21))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (or ($generated@@24 $generated@@28 $generated@@29) (and (< 0 $generated@@22) (and ($generated@@25 $generated@@28 $generated@@21) ($generated@@25 $generated@@29 $generated@@26)))) ($generated@@25 ($generated@@23 $generated@@28 $generated@@29) $generated@@27))
 :pattern ( ($generated@@23 $generated@@28 $generated@@29))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (or ($generated@@31 $generated@@34 $generated@@35) (and (< 1 $generated@@22) (and (and ($generated@@25 $generated@@34 $generated@@21) ($generated@@25 $generated@@35 $generated@@26)) ($generated@@32 ($generated@@33 $generated@@35) $generated@@34)))) ($generated@@25 ($generated@@30 $generated@@34 $generated@@35) $generated@@27))
 :pattern ( ($generated@@30 $generated@@34 $generated@@35))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> (and (or ($generated@@31 $generated@@39 $generated@@40) (and (< 1 $generated@@22) (and (and (and ($generated@@25 $generated@@39 $generated@@21) ($generated@@36 $generated@@39 $generated@@21 $generated@@38)) (and ($generated@@25 $generated@@40 $generated@@26) ($generated@@36 $generated@@40 $generated@@26 $generated@@38))) ($generated@@32 ($generated@@33 $generated@@40) $generated@@39)))) ($generated@@37 $generated@@38)) ($generated@@36 ($generated@@30 $generated@@39 $generated@@40) $generated@@27 $generated@@38))
 :pattern ( ($generated@@36 ($generated@@30 $generated@@39 $generated@@40) $generated@@27 $generated@@38))
))))
(assert (= ($generated@@3 $generated@@43) 3))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (or ($generated@@44 ($generated@@42 $generated@@43 $generated@@47) ($generated@@42 $generated@@43 $generated@@48)) (and (< 2 $generated@@22) (and ($generated@@25 $generated@@47 $generated@@26) ($generated@@25 $generated@@48 $generated@@26)))) (and (and (and ($generated@@45 ($generated@@42 $generated@@43 $generated@@47)) ($generated@@45 ($generated@@42 $generated@@43 $generated@@48))) (=> ($generated@@46 ($generated@@33 ($generated@@42 $generated@@43 $generated@@47)) ($generated@@33 ($generated@@42 $generated@@43 $generated@@48))) (and (forall (($generated@@49 T@U) ) (!  (=> ($generated@@25 $generated@@49 $generated@@21) (and ($generated@@45 ($generated@@42 $generated@@43 $generated@@47)) (=> ($generated@@32 ($generated@@33 ($generated@@42 $generated@@43 $generated@@47)) $generated@@49) (and ($generated@@31 $generated@@49 ($generated@@42 $generated@@43 $generated@@48)) ($generated@@31 $generated@@49 ($generated@@42 $generated@@43 $generated@@47))))))
 :pattern ( ($generated@@30 $generated@@49 $generated@@47))
 :pattern ( ($generated@@30 $generated@@49 $generated@@48))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@47) $generated@@49))
)) (=> (forall (($generated@@50 T@U) ) (!  (=> ($generated@@25 $generated@@50 $generated@@21) (=> ($generated@@32 ($generated@@33 ($generated@@42 $generated@@43 $generated@@47)) $generated@@50) (= ($generated@@30 $generated@@50 ($generated@@42 $generated@@43 $generated@@48)) ($generated@@30 $generated@@50 ($generated@@42 $generated@@43 $generated@@47)))))
 :pattern ( ($generated@@30 $generated@@50 $generated@@47))
 :pattern ( ($generated@@30 $generated@@50 $generated@@48))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@47) $generated@@50))
)) (forall (($generated@@51 T@U) ) (!  (=> ($generated@@25 $generated@@51 $generated@@21) (and ($generated@@45 ($generated@@42 $generated@@43 $generated@@47)) (=> (not ($generated@@32 ($generated@@33 ($generated@@42 $generated@@43 $generated@@47)) $generated@@51)) (and ($generated@@45 ($generated@@42 $generated@@43 $generated@@48)) (=> ($generated@@32 ($generated@@33 ($generated@@42 $generated@@43 $generated@@48)) $generated@@51) (and ($generated@@31 $generated@@51 ($generated@@42 $generated@@43 $generated@@48)) ($generated@@24 $generated@@51 ($generated@@42 $generated@@43 $generated@@47))))))))
 :pattern ( ($generated@@23 $generated@@51 $generated@@47))
 :pattern ( ($generated@@30 $generated@@51 $generated@@48))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@48) $generated@@51))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@47) $generated@@51))
)))))) (= ($generated@@41 ($generated@@42 $generated@@43 $generated@@47) ($generated@@42 $generated@@43 $generated@@48))  (and (and ($generated@@46 ($generated@@33 ($generated@@42 $generated@@43 $generated@@47)) ($generated@@33 ($generated@@42 $generated@@43 $generated@@48))) (forall (($generated@@52 T@U) ) (!  (=> ($generated@@25 $generated@@52 $generated@@21) (=> ($generated@@32 ($generated@@33 ($generated@@42 $generated@@43 $generated@@47)) $generated@@52) (= ($generated@@30 $generated@@52 ($generated@@42 $generated@@43 $generated@@48)) ($generated@@30 $generated@@52 ($generated@@42 $generated@@43 $generated@@47)))))
 :pattern ( ($generated@@30 $generated@@52 $generated@@47))
 :pattern ( ($generated@@30 $generated@@52 $generated@@48))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@47) $generated@@52))
))) (forall (($generated@@53 T@U) ) (!  (=> ($generated@@25 $generated@@53 $generated@@21) (=> (and (not ($generated@@32 ($generated@@33 ($generated@@42 $generated@@43 $generated@@47)) $generated@@53)) ($generated@@32 ($generated@@33 ($generated@@42 $generated@@43 $generated@@48)) $generated@@53)) (= ($generated@@30 $generated@@53 ($generated@@42 $generated@@43 $generated@@48)) ($generated@@23 $generated@@53 ($generated@@42 $generated@@43 $generated@@47)))))
 :pattern ( ($generated@@23 $generated@@53 $generated@@47))
 :pattern ( ($generated@@30 $generated@@53 $generated@@48))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@48) $generated@@53))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@47) $generated@@53))
))))))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@42 $generated@@43 $generated@@47) ($generated@@42 $generated@@43 $generated@@48)))
))))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@42 $generated@@55 $generated@@54) $generated@@54)
 :pattern ( ($generated@@42 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@46 $generated@@56 $generated@@57) (forall (($generated@@58 T@U) ) (!  (=> ($generated@@32 $generated@@56 $generated@@58) ($generated@@32 $generated@@57 $generated@@58))
 :pattern ( ($generated@@32 $generated@@56 $generated@@58))
 :pattern ( ($generated@@32 $generated@@57 $generated@@58))
)))
 :pattern ( ($generated@@46 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 ($generated@@59 $generated@@62 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@59 $generated@@62 $generated@@61))
)))
(assert (= ($generated@@3 $generated@@64) 4))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@63 $generated@@64 $generated@@66 ($generated@@65 $generated@@67)) (forall (($generated@@68 T@U) ) (!  (=> ($generated@@32 $generated@@66 $generated@@68) ($generated@@25 $generated@@68 $generated@@67))
 :pattern ( ($generated@@32 $generated@@66 $generated@@68))
)))
 :pattern ( ($generated@@63 $generated@@64 $generated@@66 ($generated@@65 $generated@@67)))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@36 ($generated@@60 $generated@@73 $generated@@70) $generated@@71 $generated@@72) ($generated@@69 $generated@@73 $generated@@70 $generated@@71 $generated@@72))
 :pattern ( ($generated@@36 ($generated@@60 $generated@@73 $generated@@70) $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@25 $generated@@74 $generated) (and (= ($generated@@60 $generated@@4 ($generated@@59 $generated@@4 $generated@@74)) $generated@@74) ($generated@@63 $generated@@4 ($generated@@59 $generated@@4 $generated@@74) $generated)))
 :pattern ( ($generated@@25 $generated@@74 $generated))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@25 ($generated@@60 $generated@@77 $generated@@75) $generated@@76) ($generated@@63 $generated@@77 $generated@@75 $generated@@76))
 :pattern ( ($generated@@25 ($generated@@60 $generated@@77 $generated@@75) $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@20 $generated@@78) (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> ($generated@@25 $generated@@80 $generated@@78) ($generated@@36 $generated@@80 $generated@@78 $generated@@79))
 :pattern ( ($generated@@36 $generated@@80 $generated@@78 $generated@@79))
)))
 :pattern ( ($generated@@20 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@69 $generated@@64 $generated@@81 ($generated@@65 $generated@@82) $generated@@83) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@32 $generated@@81 $generated@@84) ($generated@@36 $generated@@84 $generated@@82 $generated@@83))
 :pattern ( ($generated@@32 $generated@@81 $generated@@84))
)))
 :pattern ( ($generated@@69 $generated@@64 $generated@@81 ($generated@@65 $generated@@82) $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@85 ($generated@@65 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@65 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@19 ($generated@@65 $generated@@87)) $generated@@1)
 :pattern ( ($generated@@65 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@59 $generated@@89 ($generated@@60 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@60 $generated@@89 $generated@@88))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@90 T@U) ) (!  (=> (or ($generated@@45 $generated@@90) (and (< 0 $generated@@22) ($generated@@25 $generated@@90 $generated@@26))) ($generated@@63 $generated@@64 ($generated@@33 $generated@@90) ($generated@@65 $generated@@21)))
 :pattern ( ($generated@@33 $generated@@90))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@91 $generated@@101 $generated@@102 $generated@@103 ($generated@@97 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@106 $generated@@107) $generated@@104)
 :weight 0
)) (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@113 $generated@@115) (= ($generated@@91 $generated@@108 $generated@@109 $generated@@110 ($generated@@97 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@91 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@91 $generated@@117 $generated@@118 $generated@@119 ($generated@@97 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@91 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)))) (= ($generated@@3 $generated@@92) 5)) (= ($generated@@3 $generated@@93) 6)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@95 $generated@@126 $generated@@127 ($generated@@98 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@128) $generated@@130) $generated@@128)
 :weight 0
))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 $generated@@131 $generated@@132 ($generated@@98 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@131 $generated@@132 $generated@@134 $generated@@136)))
 :weight 0
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@3 ($generated@@96 $generated@@137 $generated@@138)) 7))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@96 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@100 ($generated@@96 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@96 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 Bool) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@8 ($generated@@91 $generated@@92 $generated@@93 $generated@@4 ($generated@@94 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))  (=> (and (or (not (= $generated@@147 $generated@@143)) (not true)) ($generated@@8 ($generated@@59 $generated@@4 ($generated@@95 $generated@@93 $generated@@43 ($generated@@95 $generated@@92 ($generated@@96 $generated@@93 $generated@@43) $generated@@144 $generated@@147) $generated@@145)))) $generated@@146))
 :pattern ( ($generated@@91 $generated@@92 $generated@@93 $generated@@4 ($generated@@94 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (or ($generated@@24 $generated@@150 $generated@@151) (and (< 0 $generated@@22) (and (and ($generated@@25 $generated@@150 $generated@@21) ($generated@@36 $generated@@150 $generated@@21 $generated@@149)) (and ($generated@@25 $generated@@151 $generated@@26) ($generated@@36 $generated@@151 $generated@@26 $generated@@149))))) ($generated@@37 $generated@@149)) ($generated@@36 ($generated@@23 $generated@@150 $generated@@151) $generated@@27 $generated@@149))
 :pattern ( ($generated@@36 ($generated@@23 $generated@@150 $generated@@151) $generated@@27 $generated@@149))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> ($generated@@25 $generated@@152 ($generated@@65 $generated@@153)) (and (= ($generated@@60 $generated@@64 ($generated@@59 $generated@@64 $generated@@152)) $generated@@152) ($generated@@63 $generated@@64 ($generated@@59 $generated@@64 $generated@@152) ($generated@@65 $generated@@153))))
 :pattern ( ($generated@@25 $generated@@152 ($generated@@65 $generated@@153)))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (or ($generated@@44 $generated@@154 $generated@@155) (and (< 2 $generated@@22) (and ($generated@@25 $generated@@154 $generated@@26) ($generated@@25 $generated@@155 $generated@@26)))) (and (and (and ($generated@@45 $generated@@154) ($generated@@45 $generated@@155)) (=> ($generated@@46 ($generated@@33 $generated@@154) ($generated@@33 $generated@@155)) (and (forall (($generated@@156 T@U) ) (!  (=> ($generated@@25 $generated@@156 $generated@@21) (and ($generated@@45 $generated@@154) (=> ($generated@@32 ($generated@@33 $generated@@154) $generated@@156) (and ($generated@@31 $generated@@156 $generated@@155) ($generated@@31 $generated@@156 $generated@@154)))))
 :pattern ( ($generated@@30 $generated@@156 $generated@@154))
 :pattern ( ($generated@@30 $generated@@156 $generated@@155))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@154) $generated@@156))
)) (=> (forall (($generated@@157 T@U) ) (!  (=> ($generated@@25 $generated@@157 $generated@@21) (=> ($generated@@32 ($generated@@33 $generated@@154) $generated@@157) (= ($generated@@30 $generated@@157 $generated@@155) ($generated@@30 $generated@@157 $generated@@154))))
 :pattern ( ($generated@@30 $generated@@157 $generated@@154))
 :pattern ( ($generated@@30 $generated@@157 $generated@@155))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@154) $generated@@157))
)) (forall (($generated@@158 T@U) ) (!  (=> ($generated@@25 $generated@@158 $generated@@21) (and ($generated@@45 $generated@@154) (=> (not ($generated@@32 ($generated@@33 $generated@@154) $generated@@158)) (and ($generated@@45 $generated@@155) (=> ($generated@@32 ($generated@@33 $generated@@155) $generated@@158) (and ($generated@@31 $generated@@158 $generated@@155) ($generated@@24 $generated@@158 $generated@@154)))))))
 :pattern ( ($generated@@23 $generated@@158 $generated@@154))
 :pattern ( ($generated@@30 $generated@@158 $generated@@155))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@155) $generated@@158))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@154) $generated@@158))
)))))) (= ($generated@@41 $generated@@154 $generated@@155)  (and (and ($generated@@46 ($generated@@33 $generated@@154) ($generated@@33 $generated@@155)) (forall (($generated@@159 T@U) ) (!  (=> ($generated@@25 $generated@@159 $generated@@21) (=> ($generated@@32 ($generated@@33 $generated@@154) $generated@@159) (= ($generated@@30 $generated@@159 $generated@@155) ($generated@@30 $generated@@159 $generated@@154))))
 :pattern ( ($generated@@30 $generated@@159 $generated@@154))
 :pattern ( ($generated@@30 $generated@@159 $generated@@155))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@154) $generated@@159))
))) (forall (($generated@@160 T@U) ) (!  (=> ($generated@@25 $generated@@160 $generated@@21) (=> (and (not ($generated@@32 ($generated@@33 $generated@@154) $generated@@160)) ($generated@@32 ($generated@@33 $generated@@155) $generated@@160)) (= ($generated@@30 $generated@@160 $generated@@155) ($generated@@23 $generated@@160 $generated@@154))))
 :pattern ( ($generated@@23 $generated@@160 $generated@@154))
 :pattern ( ($generated@@30 $generated@@160 $generated@@155))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@155) $generated@@160))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@154) $generated@@160))
))))))
 :pattern ( ($generated@@41 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@60 $generated@@162 ($generated@@42 $generated@@162 $generated@@161)) ($generated@@42 $generated@@43 ($generated@@60 $generated@@162 $generated@@161)))
 :pattern ( ($generated@@60 $generated@@162 ($generated@@42 $generated@@162 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! ($generated@@69 $generated@@4 $generated@@164 $generated $generated@@163)
 :pattern ( ($generated@@69 $generated@@4 $generated@@164 $generated $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! ($generated@@63 $generated@@4 $generated@@165 $generated)
 :pattern ( ($generated@@63 $generated@@4 $generated@@165 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@174 true))
(let (($generated@@175  (=> (and (not (and (not ($generated@@32 ($generated@@33 $generated@@166) $generated@@167)) ($generated@@32 ($generated@@33 $generated@@168) $generated@@167))) (= (ControlFlow 0 7) 2)) $generated@@174)))
(let (($generated@@176  (=> (and (and (not ($generated@@32 ($generated@@33 $generated@@166) $generated@@167)) ($generated@@32 ($generated@@33 $generated@@168) $generated@@167)) (and ($generated@@36 $generated@@167 $generated@@21 $generated@@169) ($generated@@36 $generated@@168 $generated@@26 $generated@@169))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@32 ($generated@@33 $generated@@168) $generated@@167)) (=> (and ($generated@@32 ($generated@@33 $generated@@168) $generated@@167) ($generated@@31 $generated@@167 $generated@@168)) (=> (and (and ($generated@@36 $generated@@167 $generated@@21 $generated@@169) ($generated@@36 $generated@@166 $generated@@26 $generated@@169)) (and ($generated@@24 $generated@@167 $generated@@166) (= (ControlFlow 0 5) 2))) $generated@@174))))))
(let (($generated@@177  (=> ($generated@@32 ($generated@@33 $generated@@166) $generated@@167) (and (=> (= (ControlFlow 0 9) 5) $generated@@176) (=> (= (ControlFlow 0 9) 7) $generated@@175)))))
(let (($generated@@178  (=> (not ($generated@@32 ($generated@@33 $generated@@166) $generated@@167)) (=> (and ($generated@@36 $generated@@168 $generated@@26 $generated@@169) ($generated@@45 $generated@@168)) (and (=> (= (ControlFlow 0 8) 5) $generated@@176) (=> (= (ControlFlow 0 8) 7) $generated@@175))))))
(let (($generated@@179  (=> (and (and ($generated@@25 $generated@@167 $generated@@21) ($generated@@36 $generated@@167 $generated@@21 $generated@@169)) (and ($generated@@36 $generated@@166 $generated@@26 $generated@@169) ($generated@@45 $generated@@166))) (and (=> (= (ControlFlow 0 10) 8) $generated@@178) (=> (= (ControlFlow 0 10) 9) $generated@@177)))))
(let (($generated@@180  (=> (and (not (and ($generated@@25 $generated@@167 $generated@@21) ($generated@@36 $generated@@167 $generated@@21 $generated@@169))) (= (ControlFlow 0 4) 2)) $generated@@174)))
(let (($generated@@181  (=> (and ($generated@@46 ($generated@@33 $generated@@166) ($generated@@33 $generated@@168)) (forall (($generated@@182 T@U) ) (!  (=> ($generated@@25 $generated@@182 $generated@@21) (=> ($generated@@32 ($generated@@33 $generated@@166) $generated@@182) (= ($generated@@30 $generated@@182 $generated@@168) ($generated@@30 $generated@@182 $generated@@166))))
 :pattern ( ($generated@@30 $generated@@182 $generated@@166))
 :pattern ( ($generated@@30 $generated@@182 $generated@@168))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@166) $generated@@182))
))) (and (=> (= (ControlFlow 0 11) 10) $generated@@179) (=> (= (ControlFlow 0 11) 4) $generated@@180)))))
(let (($generated@@183  (=> (and (not (and ($generated@@46 ($generated@@33 $generated@@166) ($generated@@33 $generated@@168)) (forall (($generated@@184 T@U) ) (!  (=> ($generated@@25 $generated@@184 $generated@@21) (=> ($generated@@32 ($generated@@33 $generated@@166) $generated@@184) (= ($generated@@30 $generated@@184 $generated@@168) ($generated@@30 $generated@@184 $generated@@166))))
 :pattern ( ($generated@@30 $generated@@184 $generated@@166))
 :pattern ( ($generated@@30 $generated@@184 $generated@@168))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@166) $generated@@184))
)))) (= (ControlFlow 0 3) 2)) $generated@@174)))
(let (($generated@@185  (=> (not ($generated@@32 ($generated@@33 $generated@@166) $generated@@170)) (and (=> (= (ControlFlow 0 17) 11) $generated@@181) (=> (= (ControlFlow 0 17) 3) $generated@@183)))))
(let (($generated@@186  (=> ($generated@@32 ($generated@@33 $generated@@166) $generated@@170) (=> (and ($generated@@36 $generated@@170 $generated@@21 $generated@@169) ($generated@@36 $generated@@168 $generated@@26 $generated@@169)) (and (=> (= (ControlFlow 0 14) (- 0 16)) ($generated@@32 ($generated@@33 $generated@@168) $generated@@170)) (=> (and (and ($generated@@32 ($generated@@33 $generated@@168) $generated@@170) ($generated@@31 $generated@@170 $generated@@168)) (and ($generated@@36 $generated@@170 $generated@@21 $generated@@169) ($generated@@36 $generated@@166 $generated@@26 $generated@@169))) (and (=> (= (ControlFlow 0 14) (- 0 15)) ($generated@@32 ($generated@@33 $generated@@166) $generated@@170)) (=> (and ($generated@@32 ($generated@@33 $generated@@166) $generated@@170) ($generated@@31 $generated@@170 $generated@@166)) (and (=> (= (ControlFlow 0 14) 11) $generated@@181) (=> (= (ControlFlow 0 14) 3) $generated@@183))))))))))
(let (($generated@@187  (=> (and (and ($generated@@25 $generated@@170 $generated@@21) ($generated@@36 $generated@@170 $generated@@21 $generated@@169)) (and ($generated@@36 $generated@@166 $generated@@26 $generated@@169) ($generated@@45 $generated@@166))) (and (=> (= (ControlFlow 0 18) 14) $generated@@186) (=> (= (ControlFlow 0 18) 17) $generated@@185)))))
(let (($generated@@188  (=> (not (and ($generated@@25 $generated@@170 $generated@@21) ($generated@@36 $generated@@170 $generated@@21 $generated@@169))) (and (=> (= (ControlFlow 0 13) 11) $generated@@181) (=> (= (ControlFlow 0 13) 3) $generated@@183)))))
(let (($generated@@189  (=> ($generated@@46 ($generated@@33 $generated@@166) ($generated@@33 $generated@@168)) (and (=> (= (ControlFlow 0 19) 18) $generated@@187) (=> (= (ControlFlow 0 19) 13) $generated@@188)))))
(let (($generated@@190  (=> (not ($generated@@46 ($generated@@33 $generated@@166) ($generated@@33 $generated@@168))) (and (=> (= (ControlFlow 0 12) 11) $generated@@181) (=> (= (ControlFlow 0 12) 3) $generated@@183)))))
(let (($generated@@191  (=> (and (and ($generated@@36 $generated@@166 $generated@@26 $generated@@169) ($generated@@45 $generated@@166)) (and ($generated@@36 $generated@@168 $generated@@26 $generated@@169) ($generated@@45 $generated@@168))) (and (=> (= (ControlFlow 0 20) 19) $generated@@189) (=> (= (ControlFlow 0 20) 12) $generated@@190)))))
(let (($generated@@192 true))
(let (($generated@@193  (=> (= $generated@@171 ($generated@@94 $generated@@172 $generated@@169 $generated@@2 false)) (and (=> (= (ControlFlow 0 21) 1) $generated@@192) (=> (= (ControlFlow 0 21) 20) $generated@@191)))))
(let (($generated@@194  (=> (and ($generated@@37 $generated@@169) ($generated@@173 $generated@@169)) (=> (and (and ($generated@@25 $generated@@166 $generated@@26) ($generated@@25 $generated@@168 $generated@@26)) (and (= 2 $generated@@22) (= (ControlFlow 0 22) 21))) $generated@@193))))
$generated@@194))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
