(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 () Int)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@72 (T@U Bool T@U Bool) T@U)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@U Bool) Bool)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@U T@U Bool) Bool)
(declare-fun $generated@@77 () Bool)
(declare-fun $generated@@78 (T@U T@U Bool) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@106 (T@T T@U) T@U)
(declare-fun $generated@@107 (T@T T@U) T@U)
(declare-fun $generated@@110 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@177 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@3 $generated@@24) 3))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (or ($generated@@22 $generated@@37) (and (< 1 $generated@@19) ($generated@@23 $generated@@24 $generated@@37 ($generated@@25 $generated@@26)))) (and (=> (not ($generated@@27 $generated@@37 $generated@@28)) (and ($generated@@29 $generated@@26 $generated@@37) (let (($generated@@38 ($generated@@30 $generated@@26 $generated@@37)))
 (and ($generated@@31 $generated@@38) ($generated@@22 ($generated@@32 $generated@@37 ($generated@@33 $generated@@28 $generated@@38))))))) (= ($generated@@20 ($generated@@21 $generated@@36) $generated@@37) (ite ($generated@@27 $generated@@37 $generated@@28) $generated@@28 (let (($generated@@39 ($generated@@30 $generated@@26 $generated@@37)))
($generated@@34 ($generated@@35 $generated@@39) ($generated@@20 $generated@@36 ($generated@@32 $generated@@37 ($generated@@33 $generated@@28 $generated@@39)))))))))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@36) $generated@@37))
))))
(assert (= ($generated@@40 $generated) $generated@@0))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! ($generated@@41 ($generated@@33 $generated@@42 $generated@@43) $generated@@43)
 :pattern ( ($generated@@33 $generated@@42 $generated@@43))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (and (or ($generated@@29 $generated@@48 $generated@@49) (and (< 0 $generated@@19) (and (and ($generated@@23 $generated@@24 $generated@@49 ($generated@@25 $generated@@48)) ($generated@@45 $generated@@24 $generated@@49 ($generated@@25 $generated@@48) $generated@@47)) (not ($generated@@27 $generated@@49 $generated@@28))))) ($generated@@46 $generated@@47)) ($generated@@44 ($generated@@30 $generated@@48 $generated@@49) $generated@@48 $generated@@47))
 :pattern ( ($generated@@44 ($generated@@30 $generated@@48 $generated@@49) $generated@@48 $generated@@47))
))))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> ($generated@@41 $generated@@50 $generated@@52) ($generated@@41 ($generated@@33 $generated@@50 $generated@@51) $generated@@52))
 :pattern ( ($generated@@33 $generated@@50 $generated@@51) ($generated@@41 $generated@@50 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> ($generated@@41 $generated@@53 $generated@@55) ($generated@@41 ($generated@@34 $generated@@53 $generated@@54) $generated@@55))
 :pattern ( ($generated@@34 $generated@@53 $generated@@54) ($generated@@41 $generated@@53 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> ($generated@@41 $generated@@57 $generated@@58) ($generated@@41 ($generated@@34 $generated@@56 $generated@@57) $generated@@58))
 :pattern ( ($generated@@34 $generated@@56 $generated@@57) ($generated@@41 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@41 ($generated@@33 $generated@@59 $generated@@60) $generated@@61)  (or (= $generated@@61 $generated@@60) ($generated@@41 $generated@@59 $generated@@61)))
 :pattern ( ($generated@@41 ($generated@@33 $generated@@59 $generated@@60) $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> ($generated@@41 $generated@@63 $generated@@64) (not ($generated@@41 ($generated@@32 $generated@@62 $generated@@63) $generated@@64)))
 :pattern ( ($generated@@32 $generated@@62 $generated@@63) ($generated@@41 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@66 $generated@@67 $generated@@68) ($generated@@41 $generated@@68 ($generated@@65 $generated@@67 $generated@@68)))
 :pattern ( ($generated@@65 $generated@@67 $generated@@68))
)))
(assert ($generated@@69 $generated@@26))
(assert ($generated@@69 $generated@@70))
(assert (forall (($generated@@71 T@U) ) (!  (not ($generated@@41 $generated@@28 $generated@@71))
 :pattern ( ($generated@@41 $generated@@28 $generated@@71))
)))
(assert (= ($generated@@3 $generated@@75) 4))
(assert  (=> (<= 3 $generated@@19) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (or ($generated@@74 ($generated@@73 $generated@@24 $generated@@80) ($generated@@8 ($generated@@73 $generated@@4 $generated@@81))) (and (< 3 $generated@@19) (and ($generated@@23 $generated@@24 $generated@@80 ($generated@@25 $generated@@26)) (not ($generated@@27 $generated@@80 $generated@@28))))) (and (and ($generated@@29 $generated@@26 ($generated@@73 $generated@@24 $generated@@80)) (let (($generated@@82 ($generated@@73 $generated@@75 ($generated@@30 $generated@@26 ($generated@@73 $generated@@24 $generated@@80)))))
 (=> (not ($generated@@27 $generated@@80 ($generated@@33 $generated@@28 $generated@@82))) (and ($generated@@74 ($generated@@32 $generated@@80 ($generated@@33 $generated@@28 $generated@@82)) ($generated@@8 ($generated@@73 $generated@@4 $generated@@81))) ($generated@@76 ($generated@@72 ($generated@@21 $generated@@79) $generated@@77 ($generated@@32 $generated@@80 ($generated@@33 $generated@@28 $generated@@82)) ($generated@@8 ($generated@@73 $generated@@4 $generated@@81))) $generated@@82 ($generated@@8 ($generated@@73 $generated@@4 $generated@@81))))))) (= ($generated@@72 ($generated@@21 $generated@@79) true ($generated@@73 $generated@@24 $generated@@80) ($generated@@8 ($generated@@73 $generated@@4 $generated@@81))) (let (($generated@@83 ($generated@@73 $generated@@75 ($generated@@30 $generated@@26 ($generated@@73 $generated@@24 $generated@@80)))))
(ite ($generated@@27 $generated@@80 ($generated@@33 $generated@@28 $generated@@83)) $generated@@83 ($generated@@78 ($generated@@72 ($generated@@21 $generated@@79) $generated@@77 ($generated@@32 $generated@@80 ($generated@@33 $generated@@28 $generated@@83)) ($generated@@8 ($generated@@73 $generated@@4 $generated@@81))) $generated@@83 ($generated@@8 ($generated@@73 $generated@@4 $generated@@81))))))))
 :weight 3
 :pattern ( ($generated@@72 ($generated@@21 $generated@@79) true ($generated@@73 $generated@@24 $generated@@80) ($generated@@8 ($generated@@73 $generated@@4 $generated@@81))))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@34 ($generated@@34 $generated@@84 $generated@@85) $generated@@85) ($generated@@34 $generated@@84 $generated@@85))
 :pattern ( ($generated@@34 ($generated@@34 $generated@@84 $generated@@85) $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@41 ($generated@@32 $generated@@86 $generated@@87) $generated@@88)  (and ($generated@@41 $generated@@86 $generated@@88) (not ($generated@@41 $generated@@87 $generated@@88))))
 :pattern ( ($generated@@41 ($generated@@32 $generated@@86 $generated@@87) $generated@@88))
)))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (or ($generated@@90 $generated@@93 $generated@@94) (and (< 1 $generated@@19) (and (and ($generated@@91 $generated@@93 $generated@@70) ($generated@@91 $generated@@94 $generated@@26)) ($generated@@41 ($generated@@35 $generated@@94) $generated@@93)))) ($generated@@91 ($generated@@89 $generated@@93 $generated@@94) $generated@@92))
 :pattern ( ($generated@@89 $generated@@93 $generated@@94))
))))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (and (or ($generated@@90 $generated@@96 $generated@@97) (and (< 1 $generated@@19) (and (and (and ($generated@@91 $generated@@96 $generated@@70) ($generated@@44 $generated@@96 $generated@@70 $generated@@95)) (and ($generated@@91 $generated@@97 $generated@@26) ($generated@@44 $generated@@97 $generated@@26 $generated@@95))) ($generated@@41 ($generated@@35 $generated@@97) $generated@@96)))) ($generated@@46 $generated@@95)) ($generated@@44 ($generated@@89 $generated@@96 $generated@@97) $generated@@92 $generated@@95))
 :pattern ( ($generated@@44 ($generated@@89 $generated@@96 $generated@@97) $generated@@92 $generated@@95))
))))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@73 $generated@@99 $generated@@98) $generated@@98)
 :pattern ( ($generated@@73 $generated@@99 $generated@@98))
)))
(assert  (=> (<= 2 $generated@@19) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 Bool) ) (!  (=> (or ($generated@@76 $generated@@101 $generated@@102 $generated@@103) (and (< 2 $generated@@19) (and ($generated@@91 $generated@@101 $generated@@26) ($generated@@91 $generated@@102 $generated@@26)))) (and (let (($generated@@104 ($generated@@78 $generated@@101 $generated@@102 $generated@@103)))
 (and (and ($generated@@27 ($generated@@35 $generated@@104) ($generated@@34 ($generated@@35 $generated@@101) ($generated@@35 $generated@@102))) (forall (($generated@@105 T@U) ) (!  (=> ($generated@@91 $generated@@105 $generated@@70) (=> ($generated@@41 ($generated@@35 $generated@@104) $generated@@105) (= ($generated@@89 $generated@@105 $generated@@104) ($generated@@89 $generated@@105 (ite ($generated@@41 ($generated@@35 $generated@@102) $generated@@105) $generated@@102 $generated@@101)))))
 :pattern ( ($generated@@41 ($generated@@35 $generated@@102) $generated@@105))
 :pattern ( ($generated@@89 $generated@@105 $generated@@104))
 :pattern ( ($generated@@41 ($generated@@35 $generated@@104) $generated@@105))
))) (=> $generated@@103 ($generated@@27 ($generated@@100 $generated@@104) ($generated@@34 ($generated@@100 $generated@@101) ($generated@@100 $generated@@102)))))) ($generated@@91 ($generated@@78 $generated@@101 $generated@@102 $generated@@103) $generated@@26)))
 :pattern ( ($generated@@78 $generated@@101 $generated@@102 $generated@@103))
))))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@107 $generated@@109 ($generated@@106 $generated@@109 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@106 $generated@@109 $generated@@108))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@110 $generated@@111 $generated@@112) (forall (($generated@@113 T@U) ) (!  (or (not ($generated@@41 $generated@@111 $generated@@113)) (not ($generated@@41 $generated@@112 $generated@@113)))
 :pattern ( ($generated@@41 $generated@@111 $generated@@113))
 :pattern ( ($generated@@41 $generated@@112 $generated@@113))
)))
 :pattern ( ($generated@@110 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@23 $generated@@24 $generated@@114 ($generated@@25 $generated@@115)) (forall (($generated@@116 T@U) ) (!  (=> ($generated@@41 $generated@@114 $generated@@116) ($generated@@91 $generated@@116 $generated@@115))
 :pattern ( ($generated@@41 $generated@@114 $generated@@116))
)))
 :pattern ( ($generated@@23 $generated@@24 $generated@@114 ($generated@@25 $generated@@115)))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@44 ($generated@@107 $generated@@120 $generated@@117) $generated@@118 $generated@@119) ($generated@@45 $generated@@120 $generated@@117 $generated@@118 $generated@@119))
 :pattern ( ($generated@@44 ($generated@@107 $generated@@120 $generated@@117) $generated@@118 $generated@@119))
)))
(assert  (=> (<= 3 $generated@@19) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 Bool) ) (!  (=> (or ($generated@@74 $generated@@122 $generated@@123) (and (< 3 $generated@@19) (and ($generated@@23 $generated@@24 $generated@@122 ($generated@@25 $generated@@26)) (not ($generated@@27 $generated@@122 $generated@@28))))) (and (and ($generated@@29 $generated@@26 $generated@@122) (let (($generated@@124 ($generated@@30 $generated@@26 $generated@@122)))
 (=> (not ($generated@@27 $generated@@122 ($generated@@33 $generated@@28 $generated@@124))) (and ($generated@@74 ($generated@@32 $generated@@122 ($generated@@33 $generated@@28 $generated@@124)) $generated@@123) ($generated@@76 ($generated@@72 $generated@@121 $generated@@77 ($generated@@32 $generated@@122 ($generated@@33 $generated@@28 $generated@@124)) $generated@@123) $generated@@124 $generated@@123))))) (= ($generated@@72 ($generated@@21 $generated@@121) true $generated@@122 $generated@@123) (let (($generated@@125 ($generated@@30 $generated@@26 $generated@@122)))
(ite ($generated@@27 $generated@@122 ($generated@@33 $generated@@28 $generated@@125)) $generated@@125 ($generated@@78 ($generated@@72 $generated@@121 $generated@@77 ($generated@@32 $generated@@122 ($generated@@33 $generated@@28 $generated@@125)) $generated@@123) $generated@@125 $generated@@123))))))
 :pattern ( ($generated@@72 ($generated@@21 $generated@@121) true $generated@@122 $generated@@123))
))))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@41 ($generated@@34 $generated@@126 $generated@@127) $generated@@128)  (or ($generated@@41 $generated@@126 $generated@@128) ($generated@@41 $generated@@127 $generated@@128)))
 :pattern ( ($generated@@41 ($generated@@34 $generated@@126 $generated@@127) $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> ($generated@@110 $generated@@129 $generated@@130) (and (= ($generated@@32 ($generated@@34 $generated@@129 $generated@@130) $generated@@129) $generated@@130) (= ($generated@@32 ($generated@@34 $generated@@129 $generated@@130) $generated@@130) $generated@@129)))
 :pattern ( ($generated@@34 $generated@@129 $generated@@130))
)))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or ($generated@@22 ($generated@@73 $generated@@24 $generated@@132)) (and (< 1 $generated@@19) ($generated@@23 $generated@@24 $generated@@132 ($generated@@25 $generated@@26)))) (and (=> (not ($generated@@27 $generated@@132 $generated@@28)) (and ($generated@@29 $generated@@26 ($generated@@73 $generated@@24 $generated@@132)) (let (($generated@@133 ($generated@@73 $generated@@75 ($generated@@30 $generated@@26 ($generated@@73 $generated@@24 $generated@@132)))))
 (and ($generated@@31 $generated@@133) ($generated@@22 ($generated@@32 $generated@@132 ($generated@@33 $generated@@28 $generated@@133))))))) (= ($generated@@20 ($generated@@21 $generated@@131) ($generated@@73 $generated@@24 $generated@@132)) (ite ($generated@@27 $generated@@132 $generated@@28) $generated@@28 (let (($generated@@134 ($generated@@73 $generated@@75 ($generated@@30 $generated@@26 ($generated@@73 $generated@@24 $generated@@132)))))
($generated@@34 ($generated@@35 $generated@@134) ($generated@@20 ($generated@@21 $generated@@131) ($generated@@32 $generated@@132 ($generated@@33 $generated@@28 $generated@@134)))))))))
 :weight 3
 :pattern ( ($generated@@20 ($generated@@21 $generated@@131) ($generated@@73 $generated@@24 $generated@@132)))
))))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (or ($generated@@29 $generated@@135 $generated@@136) (and (< 0 $generated@@19) (and ($generated@@23 $generated@@24 $generated@@136 ($generated@@25 $generated@@135)) (not ($generated@@27 $generated@@136 $generated@@28))))) ($generated@@91 ($generated@@30 $generated@@135 $generated@@136) $generated@@135))
 :pattern ( ($generated@@30 $generated@@135 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> ($generated@@27 $generated@@137 $generated@@138) (= $generated@@137 $generated@@138))
 :pattern ( ($generated@@27 $generated@@137 $generated@@138))
)))
(assert  (=> (<= 3 $generated@@19) (forall (($generated@@139 T@U) ($generated@@140 Bool) ($generated@@141 T@U) ($generated@@142 Bool) ) (!  (=> (or ($generated@@74 $generated@@141 $generated@@142) (and (< 3 $generated@@19) (and ($generated@@23 $generated@@24 $generated@@141 ($generated@@25 $generated@@26)) (not ($generated@@27 $generated@@141 $generated@@28))))) ($generated@@91 ($generated@@72 $generated@@139 $generated@@140 $generated@@141 $generated@@142) $generated@@26))
 :pattern ( ($generated@@72 $generated@@139 $generated@@140 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@91 $generated@@143 $generated) (and (= ($generated@@107 $generated@@4 ($generated@@106 $generated@@4 $generated@@143)) $generated@@143) ($generated@@23 $generated@@4 ($generated@@106 $generated@@4 $generated@@143) $generated)))
 :pattern ( ($generated@@91 $generated@@143 $generated))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@91 ($generated@@107 $generated@@146 $generated@@144) $generated@@145) ($generated@@23 $generated@@146 $generated@@144 $generated@@145))
 :pattern ( ($generated@@91 ($generated@@107 $generated@@146 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> ($generated@@69 $generated@@147) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> ($generated@@91 $generated@@149 $generated@@147) ($generated@@44 $generated@@149 $generated@@147 $generated@@148))
 :pattern ( ($generated@@44 $generated@@149 $generated@@147 $generated@@148))
)))
 :pattern ( ($generated@@69 $generated@@147))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (or ($generated@@29 $generated@@150 $generated@@152) (and (< 0 $generated@@19) (and (and ($generated@@46 $generated@@151) ($generated@@23 $generated@@24 $generated@@152 ($generated@@25 $generated@@150))) (not ($generated@@27 $generated@@152 $generated@@28))))) (and ($generated@@66 $generated@@150 $generated@@152) (= ($generated@@30 $generated@@150 $generated@@152) (let (($generated@@153 ($generated@@65 $generated@@150 $generated@@152)))
$generated@@153))))
 :pattern ( ($generated@@30 $generated@@150 $generated@@152) ($generated@@46 $generated@@151))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@45 $generated@@24 $generated@@154 ($generated@@25 $generated@@155) $generated@@156) (forall (($generated@@157 T@U) ) (!  (=> ($generated@@41 $generated@@154 $generated@@157) ($generated@@44 $generated@@157 $generated@@155 $generated@@156))
 :pattern ( ($generated@@41 $generated@@154 $generated@@157))
)))
 :pattern ( ($generated@@45 $generated@@24 $generated@@154 ($generated@@25 $generated@@155) $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@25 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@25 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@40 ($generated@@25 $generated@@160)) $generated@@1)
 :pattern ( ($generated@@25 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@106 $generated@@162 ($generated@@107 $generated@@162 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@107 $generated@@162 $generated@@161))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@163 T@U) ) (!  (=> (or ($generated@@31 $generated@@163) (and (< 0 $generated@@19) ($generated@@91 $generated@@163 $generated@@26))) ($generated@@23 $generated@@24 ($generated@@35 $generated@@163) ($generated@@25 $generated@@70)))
 :pattern ( ($generated@@35 $generated@@163))
))))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@166 T@U) ) (!  (=> (or ($generated@@164 $generated@@166) (and (< 0 $generated@@19) ($generated@@91 $generated@@166 $generated@@26))) ($generated@@23 $generated@@24 ($generated@@100 $generated@@166) ($generated@@25 $generated@@165)))
 :pattern ( ($generated@@100 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@167) $generated@@168) ($generated@@20 $generated@@167 $generated@@168))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@167) $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@34 $generated@@169 ($generated@@34 $generated@@169 $generated@@170)) ($generated@@34 $generated@@169 $generated@@170))
 :pattern ( ($generated@@34 $generated@@169 ($generated@@34 $generated@@169 $generated@@170)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 Bool) ) (! (= ($generated@@72 ($generated@@21 $generated@@171) $generated@@172 $generated@@173 $generated@@174) ($generated@@72 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
 :pattern ( ($generated@@72 ($generated@@21 $generated@@171) $generated@@172 $generated@@173 $generated@@174))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (or ($generated@@164 $generated@@176) (and (< 0 $generated@@19) (and ($generated@@91 $generated@@176 $generated@@26) ($generated@@44 $generated@@176 $generated@@26 $generated@@175)))) ($generated@@46 $generated@@175)) ($generated@@45 $generated@@24 ($generated@@100 $generated@@176) ($generated@@25 $generated@@165) $generated@@175))
 :pattern ( ($generated@@45 $generated@@24 ($generated@@100 $generated@@176) ($generated@@25 $generated@@165) $generated@@175))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@177 $generated@@187 $generated@@188 $generated@@189 ($generated@@183 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@192 $generated@@193) $generated@@190)
 :weight 0
)) (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@177 $generated@@194 $generated@@195 $generated@@196 ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@177 $generated@@203 $generated@@204 $generated@@205 ($generated@@183 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@177 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (= ($generated@@3 $generated@@178) 5)) (= ($generated@@3 $generated@@179) 6)) (forall (($generated@@212 T@T) ($generated@@213 T@T) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (= ($generated@@181 $generated@@212 $generated@@213 ($generated@@184 $generated@@212 $generated@@213 $generated@@215 $generated@@216 $generated@@214) $generated@@216) $generated@@214)
 :weight 0
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@221 $generated@@222) (= ($generated@@181 $generated@@217 $generated@@218 ($generated@@184 $generated@@217 $generated@@218 $generated@@220 $generated@@221 $generated@@219) $generated@@222) ($generated@@181 $generated@@217 $generated@@218 $generated@@220 $generated@@222)))
 :weight 0
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (= ($generated@@3 ($generated@@182 $generated@@223 $generated@@224)) 7))) (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (! (= ($generated@@185 ($generated@@182 $generated@@225 $generated@@226)) $generated@@225)
 :pattern ( ($generated@@182 $generated@@225 $generated@@226))
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@186 ($generated@@182 $generated@@227 $generated@@228)) $generated@@228)
 :pattern ( ($generated@@182 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (= ($generated@@8 ($generated@@177 $generated@@178 $generated@@179 $generated@@4 ($generated@@180 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (or (not (= $generated@@233 $generated@@229)) (not true)) ($generated@@8 ($generated@@106 $generated@@4 ($generated@@181 $generated@@179 $generated@@75 ($generated@@181 $generated@@178 ($generated@@182 $generated@@179 $generated@@75) $generated@@230 $generated@@233) $generated@@231)))) $generated@@232))
 :pattern ( ($generated@@177 $generated@@178 $generated@@179 $generated@@4 ($generated@@180 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (or ($generated@@22 $generated@@236) (and (< 1 $generated@@19) ($generated@@23 $generated@@24 $generated@@236 ($generated@@25 $generated@@26)))) ($generated@@23 $generated@@24 ($generated@@20 $generated@@235 $generated@@236) ($generated@@25 $generated@@70)))
 :pattern ( ($generated@@20 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> ($generated@@91 $generated@@237 ($generated@@25 $generated@@238)) (and (= ($generated@@107 $generated@@24 ($generated@@106 $generated@@24 $generated@@237)) $generated@@237) ($generated@@23 $generated@@24 ($generated@@106 $generated@@24 $generated@@237) ($generated@@25 $generated@@238))))
 :pattern ( ($generated@@91 $generated@@237 ($generated@@25 $generated@@238)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= ($generated@@27 $generated@@239 $generated@@240) (forall (($generated@@241 T@U) ) (! (= ($generated@@41 $generated@@239 $generated@@241) ($generated@@41 $generated@@240 $generated@@241))
 :pattern ( ($generated@@41 $generated@@239 $generated@@241))
 :pattern ( ($generated@@41 $generated@@240 $generated@@241))
)))
 :pattern ( ($generated@@27 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@T) ) (! (= ($generated@@107 $generated@@243 ($generated@@73 $generated@@243 $generated@@242)) ($generated@@73 $generated@@75 ($generated@@107 $generated@@243 $generated@@242)))
 :pattern ( ($generated@@107 $generated@@243 ($generated@@73 $generated@@243 $generated@@242)))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (or ($generated@@29 $generated@@244 ($generated@@73 $generated@@24 $generated@@246)) (and (< 0 $generated@@19) (and (and ($generated@@46 $generated@@245) ($generated@@23 $generated@@24 $generated@@246 ($generated@@25 $generated@@244))) (not ($generated@@27 $generated@@246 $generated@@28))))) (and ($generated@@66 $generated@@244 ($generated@@73 $generated@@24 $generated@@246)) (= ($generated@@30 $generated@@244 ($generated@@73 $generated@@24 $generated@@246)) (let (($generated@@247 ($generated@@65 $generated@@244 ($generated@@73 $generated@@24 $generated@@246))))
$generated@@247))))
 :weight 3
 :pattern ( ($generated@@30 $generated@@244 ($generated@@73 $generated@@24 $generated@@246)) ($generated@@46 $generated@@245))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! ($generated@@45 $generated@@4 $generated@@249 $generated $generated@@248)
 :pattern ( ($generated@@45 $generated@@4 $generated@@249 $generated $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! ($generated@@23 $generated@@4 $generated@@250 $generated)
 :pattern ( ($generated@@23 $generated@@4 $generated@@250 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 () Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@258  (=> (and (and (and (= $generated@@251 ($generated@@180 $generated@@252 $generated@@253 $generated@@2 false)) (not ($generated@@27 $generated@@254 $generated@@28))) (and ($generated@@46 $generated@@255) ($generated@@256 $generated@@255))) (and (and (= $generated@@253 $generated@@255) ($generated@@45 $generated@@24 $generated@@254 ($generated@@25 $generated@@26) $generated@@255)) (and ($generated@@45 $generated@@4 ($generated@@7 $generated@@257) $generated $generated@@255) (= (ControlFlow 0 2) (- 0 1))))) (not ($generated@@27 $generated@@254 $generated@@28)))))
(let (($generated@@259  (=> (and ($generated@@46 $generated@@253) ($generated@@256 $generated@@253)) (=> (and (and ($generated@@23 $generated@@24 $generated@@254 ($generated@@25 $generated@@26)) ($generated@@45 $generated@@24 $generated@@254 ($generated@@25 $generated@@26) $generated@@253)) (and (= 4 $generated@@19) (= (ControlFlow 0 3) 2))) $generated@@258))))
$generated@@259)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
