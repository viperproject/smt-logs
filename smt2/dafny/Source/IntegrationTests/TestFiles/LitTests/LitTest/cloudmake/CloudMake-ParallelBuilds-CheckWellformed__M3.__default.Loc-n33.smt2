(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U Int) T@U)
(declare-fun $generated@@26 (T@U T@U T@U) T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@U T@U) Bool)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@89 () Int)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@93 () T@U)
(declare-fun $generated@@94 () Bool)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@144 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@148 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@150 (T@T T@T) T@T)
(declare-fun $generated@@151 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@152 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@217 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (= ($generated@@8 $generated@@30) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 Int) ) (!  (=> (and (<= 0 $generated@@34) (< $generated@@34 ($generated@@27 $generated@@31))) (< ($generated@@28 ($generated@@29 $generated@@30 ($generated@@25 $generated@@31 $generated@@34))) ($generated@@28 ($generated@@26 $generated@@31 $generated@@32 $generated@@33))))
 :pattern ( ($generated@@25 $generated@@31 $generated@@34) ($generated@@26 $generated@@31 $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 Int) ) (!  (=> (and (<= 0 $generated@@38) (< $generated@@38 ($generated@@27 $generated@@37))) (< ($generated@@28 ($generated@@29 $generated@@30 ($generated@@25 $generated@@37 $generated@@38))) ($generated@@28 ($generated@@26 $generated@@35 $generated@@36 $generated@@37))))
 :pattern ( ($generated@@25 $generated@@37 $generated@@38) ($generated@@26 $generated@@35 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 Int) ) (!  (=> (and (<= 0 $generated@@41) (< $generated@@41 ($generated@@27 $generated@@40))) (< ($generated@@28 ($generated@@29 $generated@@30 ($generated@@25 $generated@@40 $generated@@41))) ($generated@@28 ($generated@@39 $generated@@40))))
 :pattern ( ($generated@@25 $generated@@40 $generated@@41) ($generated@@39 $generated@@40))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@42 ($generated@@26 $generated@@43 $generated@@44 $generated@@45)) $generated@@5)
 :pattern ( ($generated@@26 $generated@@43 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@46 ($generated@@26 $generated@@47 $generated@@48 $generated@@49)) $generated@@47)
 :pattern ( ($generated@@26 $generated@@47 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@50 ($generated@@26 $generated@@51 $generated@@52 $generated@@53)) $generated@@52)
 :pattern ( ($generated@@26 $generated@@51 $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@54 ($generated@@26 $generated@@55 $generated@@56 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@26 $generated@@55 $generated@@56 $generated@@57))
)))
(assert (= ($generated@@27 $generated@@58) 0))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 $generated@@60) $generated@@60)
 :pattern ( ($generated@@59 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@62 $generated@@63) (= ($generated@@42 $generated@@63) $generated@@5))
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@64 $generated@@65) (= ($generated@@42 $generated@@65) $generated@@6))
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 ($generated@@29 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@29 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@62 $generated@@69) (exists (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (= $generated@@69 ($generated@@26 $generated@@70 $generated@@71 $generated@@72))))
 :pattern ( ($generated@@62 $generated@@69))
)))
(assert (= ($generated@@8 $generated@@74) 4))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@73 $generated@@74 $generated@@78 ($generated@@75 $generated@@79)) (forall (($generated@@80 T@U) ) (!  (=> ($generated@@76 $generated@@78 $generated@@80) ($generated@@77 $generated@@80 $generated@@79))
 :pattern ( ($generated@@76 $generated@@78 $generated@@80))
)))
 :pattern ( ($generated@@73 $generated@@74 $generated@@78 ($generated@@75 $generated@@79)))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@64 $generated@@81) (exists (($generated@@82 T@U) ) (= $generated@@81 ($generated@@39 $generated@@82))))
 :pattern ( ($generated@@64 $generated@@81))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@83 ($generated@@66 $generated@@88 $generated@@85) $generated@@86 $generated@@87) ($generated@@84 $generated@@88 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@83 ($generated@@66 $generated@@88 $generated@@85) $generated@@86 $generated@@87))
)))
(assert  (=> (<= 1 $generated@@89) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or ($generated@@92 $generated@@97) (and (< 1 $generated@@89) (and ($generated@@91 $generated@@96) ($generated@@73 $generated@@30 $generated@@97 $generated@@93)))) (and (=> (not ($generated@@62 $generated@@97)) $generated@@94) (= ($generated@@90 $generated@@97) (ite ($generated@@62 $generated@@97) (let (($generated@@98 ($generated@@50 $generated@@97)))
$generated@@98) (let (($generated@@99 $generated@@95))
$generated@@99)))))
 :pattern ( ($generated@@90 $generated@@97) ($generated@@91 $generated@@96))
))))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@77 $generated@@100 $generated@@93) (and (= ($generated@@66 $generated@@30 ($generated@@29 $generated@@30 $generated@@100)) $generated@@100) ($generated@@73 $generated@@30 ($generated@@29 $generated@@30 $generated@@100) $generated@@93)))
 :pattern ( ($generated@@77 $generated@@100 $generated@@93))
)))
(assert (= ($generated@@8 $generated@@101) 5))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@73 $generated@@30 ($generated@@26 $generated@@103 $generated@@104 $generated@@105) $generated@@93)  (and (and ($generated@@73 $generated@@101 $generated@@103 ($generated@@102 $generated)) ($generated@@73 $generated@@74 $generated@@104 ($generated@@75 $generated@@93))) ($generated@@73 $generated@@101 $generated@@105 ($generated@@102 $generated))))
 :pattern ( ($generated@@73 $generated@@30 ($generated@@26 $generated@@103 $generated@@104 $generated@@105) $generated@@93))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@73 $generated@@30 $generated@@106 $generated@@93) (or ($generated@@62 $generated@@106) ($generated@@64 $generated@@106)))
 :pattern ( ($generated@@64 $generated@@106) ($generated@@73 $generated@@30 $generated@@106 $generated@@93))
 :pattern ( ($generated@@62 $generated@@106) ($generated@@73 $generated@@30 $generated@@106 $generated@@93))
)))
(assert (= ($generated@@8 $generated@@107) 6))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@77 $generated@@108 $generated) (and (= ($generated@@66 $generated@@107 ($generated@@29 $generated@@107 $generated@@108)) $generated@@108) ($generated@@73 $generated@@107 ($generated@@29 $generated@@107 $generated@@108) $generated)))
 :pattern ( ($generated@@77 $generated@@108 $generated))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@77 ($generated@@66 $generated@@111 $generated@@109) $generated@@110) ($generated@@73 $generated@@111 $generated@@109 $generated@@110))
 :pattern ( ($generated@@77 ($generated@@66 $generated@@111 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (<= 0 ($generated@@27 $generated@@112))
 :pattern ( ($generated@@27 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@84 $generated@@74 $generated@@113 ($generated@@75 $generated@@114) $generated@@115) (forall (($generated@@116 T@U) ) (!  (=> ($generated@@76 $generated@@113 $generated@@116) ($generated@@83 $generated@@116 $generated@@114 $generated@@115))
 :pattern ( ($generated@@76 $generated@@113 $generated@@116))
)))
 :pattern ( ($generated@@84 $generated@@74 $generated@@113 ($generated@@75 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@84 $generated@@101 $generated@@117 ($generated@@102 $generated@@118) $generated@@119) (forall (($generated@@120 Int) ) (!  (=> (and (<= 0 $generated@@120) (< $generated@@120 ($generated@@27 $generated@@117))) ($generated@@83 ($generated@@25 $generated@@117 $generated@@120) $generated@@118 $generated@@119))
 :pattern ( ($generated@@25 $generated@@117 $generated@@120))
)))
 :pattern ( ($generated@@84 $generated@@101 $generated@@117 ($generated@@102 $generated@@118) $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@26 ($generated@@59 $generated@@101 $generated@@121) ($generated@@59 $generated@@74 $generated@@122) ($generated@@59 $generated@@101 $generated@@123)) ($generated@@59 $generated@@30 ($generated@@26 $generated@@121 $generated@@122 $generated@@123)))
 :pattern ( ($generated@@26 ($generated@@59 $generated@@101 $generated@@121) ($generated@@59 $generated@@74 $generated@@122) ($generated@@59 $generated@@101 $generated@@123)))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@124 ($generated@@75 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@75 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@24 ($generated@@75 $generated@@126)) $generated@@1)
 :pattern ( ($generated@@75 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@127 ($generated@@102 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@102 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@24 ($generated@@102 $generated@@129)) $generated@@2)
 :pattern ( ($generated@@102 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@42 ($generated@@39 $generated@@130)) $generated@@6)
 :pattern ( ($generated@@39 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@131 ($generated@@39 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@39 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@29 $generated@@134 ($generated@@66 $generated@@134 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@66 $generated@@134 $generated@@133))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (< ($generated@@135 $generated@@136) ($generated@@28 ($generated@@26 $generated@@136 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@26 $generated@@136 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (< ($generated@@135 $generated@@141) ($generated@@28 ($generated@@26 $generated@@139 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@26 $generated@@139 $generated@@140 $generated@@141))
)))
(assert  (=> (<= 1 $generated@@89) (forall (($generated@@142 T@U) ) (!  (=> (or ($generated@@92 $generated@@142) (and (< 1 $generated@@89) ($generated@@73 $generated@@30 $generated@@142 $generated@@93))) ($generated@@73 $generated@@74 ($generated@@90 $generated@@142) ($generated@@75 $generated@@93)))
 :pattern ( ($generated@@90 $generated@@142))
))))
(assert  (=> $generated@@94 (and ($generated@@73 $generated@@74 $generated@@95 ($generated@@75 $generated@@93)) ($generated@@13 ($generated@@59 $generated@@9 ($generated@@12 true))))))
(assert (forall (($generated@@143 T@U) ) (! (< ($generated@@135 $generated@@143) ($generated@@28 ($generated@@39 $generated@@143)))
 :pattern ( ($generated@@39 $generated@@143))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@144 $generated@@155 $generated@@156 $generated@@157 ($generated@@151 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@160 $generated@@161) $generated@@158)
 :weight 0
)) (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@144 $generated@@162 $generated@@163 $generated@@164 ($generated@@151 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@144 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@177 $generated@@179) (= ($generated@@144 $generated@@171 $generated@@172 $generated@@173 ($generated@@151 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@144 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)))) (= ($generated@@8 $generated@@145) 7)) (= ($generated@@8 $generated@@146) 8)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@148 $generated@@180 $generated@@181 ($generated@@152 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@182) $generated@@184) $generated@@182)
 :weight 0
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@189 $generated@@190) (= ($generated@@148 $generated@@185 $generated@@186 ($generated@@152 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@187) $generated@@190) ($generated@@148 $generated@@185 $generated@@186 $generated@@188 $generated@@190)))
 :weight 0
))) (= ($generated@@8 $generated@@149) 9)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (= ($generated@@8 ($generated@@150 $generated@@191 $generated@@192)) 10))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@153 ($generated@@150 $generated@@193 $generated@@194)) $generated@@193)
 :pattern ( ($generated@@150 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@154 ($generated@@150 $generated@@195 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@150 $generated@@195 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 Bool) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@13 ($generated@@144 $generated@@145 $generated@@146 $generated@@9 ($generated@@147 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@201 $generated@@202))  (=> (and (or (not (= $generated@@201 $generated@@197)) (not true)) ($generated@@13 ($generated@@29 $generated@@9 ($generated@@148 $generated@@146 $generated@@149 ($generated@@148 $generated@@145 ($generated@@150 $generated@@146 $generated@@149) $generated@@198 $generated@@201) $generated@@199)))) $generated@@200))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146 $generated@@9 ($generated@@147 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@201 $generated@@202))
)))
(assert  (=> (<= 1 $generated@@89) (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (or ($generated@@92 ($generated@@59 $generated@@30 $generated@@204)) (and (< 1 $generated@@89) (and ($generated@@91 $generated@@203) ($generated@@73 $generated@@30 $generated@@204 $generated@@93)))) (and (=> (not ($generated@@13 ($generated@@59 $generated@@9 ($generated@@12 ($generated@@62 ($generated@@59 $generated@@30 $generated@@204)))))) $generated@@94) (= ($generated@@90 ($generated@@59 $generated@@30 $generated@@204)) (ite ($generated@@62 ($generated@@59 $generated@@30 $generated@@204)) (let (($generated@@205 ($generated@@59 $generated@@74 ($generated@@50 ($generated@@59 $generated@@30 $generated@@204)))))
$generated@@205) (let (($generated@@206 $generated@@95))
$generated@@206)))))
 :weight 3
 :pattern ( ($generated@@90 ($generated@@59 $generated@@30 $generated@@204)) ($generated@@91 $generated@@203))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> ($generated@@76 $generated@@208 ($generated@@66 $generated@@30 $generated@@210)) (< ($generated@@28 $generated@@210) ($generated@@28 ($generated@@26 $generated@@207 $generated@@208 $generated@@209))))
 :pattern ( ($generated@@76 $generated@@208 ($generated@@66 $generated@@30 $generated@@210)) ($generated@@26 $generated@@207 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> ($generated@@77 $generated@@211 ($generated@@75 $generated@@212)) (and (= ($generated@@66 $generated@@74 ($generated@@29 $generated@@74 $generated@@211)) $generated@@211) ($generated@@73 $generated@@74 ($generated@@29 $generated@@74 $generated@@211) ($generated@@75 $generated@@212))))
 :pattern ( ($generated@@77 $generated@@211 ($generated@@75 $generated@@212)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> ($generated@@77 $generated@@213 ($generated@@102 $generated@@214)) (and (= ($generated@@66 $generated@@101 ($generated@@29 $generated@@101 $generated@@213)) $generated@@213) ($generated@@73 $generated@@101 ($generated@@29 $generated@@101 $generated@@213) ($generated@@102 $generated@@214))))
 :pattern ( ($generated@@77 $generated@@213 ($generated@@102 $generated@@214)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and ($generated@@91 $generated@@216) ($generated@@73 $generated@@30 $generated@@215 $generated@@93)) ($generated@@84 $generated@@30 $generated@@215 $generated@@93 $generated@@216))
 :pattern ( ($generated@@84 $generated@@30 $generated@@215 $generated@@93 $generated@@216))
)))
(assert (= ($generated@@24 $generated@@93) $generated@@4))
(assert (= ($generated@@217 $generated@@93) $generated@@7))
(assert (forall (($generated@@218 T@U) ) (! (= ($generated@@73 $generated@@30 ($generated@@39 $generated@@218) $generated@@93) ($generated@@73 $generated@@101 $generated@@218 ($generated@@102 $generated)))
 :pattern ( ($generated@@73 $generated@@30 ($generated@@39 $generated@@218) $generated@@93))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and ($generated@@91 $generated@@220) (and ($generated@@62 $generated@@219) ($generated@@84 $generated@@30 $generated@@219 $generated@@93 $generated@@220))) ($generated@@84 $generated@@101 ($generated@@46 $generated@@219) ($generated@@102 $generated) $generated@@220))
 :pattern ( ($generated@@84 $generated@@101 ($generated@@46 $generated@@219) ($generated@@102 $generated) $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and ($generated@@91 $generated@@222) (and ($generated@@62 $generated@@221) ($generated@@84 $generated@@30 $generated@@221 $generated@@93 $generated@@222))) ($generated@@84 $generated@@101 ($generated@@54 $generated@@221) ($generated@@102 $generated) $generated@@222))
 :pattern ( ($generated@@84 $generated@@101 ($generated@@54 $generated@@221) ($generated@@102 $generated) $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and ($generated@@91 $generated@@224) (and ($generated@@64 $generated@@223) ($generated@@84 $generated@@30 $generated@@223 $generated@@93 $generated@@224))) ($generated@@84 $generated@@101 ($generated@@131 $generated@@223) ($generated@@102 $generated) $generated@@224))
 :pattern ( ($generated@@84 $generated@@101 ($generated@@131 $generated@@223) ($generated@@102 $generated) $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ) (! (= ($generated@@39 ($generated@@59 $generated@@101 $generated@@225)) ($generated@@59 $generated@@30 ($generated@@39 $generated@@225)))
 :pattern ( ($generated@@39 ($generated@@59 $generated@@101 $generated@@225)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@T) ) (! (= ($generated@@66 $generated@@227 ($generated@@59 $generated@@227 $generated@@226)) ($generated@@59 $generated@@149 ($generated@@66 $generated@@227 $generated@@226)))
 :pattern ( ($generated@@66 $generated@@227 ($generated@@59 $generated@@227 $generated@@226)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= ($generated@@27 $generated@@228) 0) (= $generated@@228 $generated@@58))
 :pattern ( ($generated@@27 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and ($generated@@91 $generated@@230) (and ($generated@@62 $generated@@229) ($generated@@84 $generated@@30 $generated@@229 $generated@@93 $generated@@230))) ($generated@@84 $generated@@74 ($generated@@50 $generated@@229) ($generated@@75 $generated@@93) $generated@@230))
 :pattern ( ($generated@@84 $generated@@74 ($generated@@50 $generated@@229) ($generated@@75 $generated@@93) $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! ($generated@@84 $generated@@107 $generated@@232 $generated $generated@@231)
 :pattern ( ($generated@@84 $generated@@107 $generated@@232 $generated $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= ($generated@@73 $generated@@101 $generated@@233 ($generated@@102 $generated@@234)) (forall (($generated@@235 Int) ) (!  (=> (and (<= 0 $generated@@235) (< $generated@@235 ($generated@@27 $generated@@233))) ($generated@@77 ($generated@@25 $generated@@233 $generated@@235) $generated@@234))
 :pattern ( ($generated@@25 $generated@@233 $generated@@235))
)))
 :pattern ( ($generated@@73 $generated@@101 $generated@@233 ($generated@@102 $generated@@234)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 Int) ) (!  (=> (and (<= 0 $generated@@237) (< $generated@@237 ($generated@@27 $generated@@236))) (< ($generated@@28 ($generated@@29 $generated@@30 ($generated@@25 $generated@@236 $generated@@237))) ($generated@@135 $generated@@236)))
 :pattern ( ($generated@@28 ($generated@@29 $generated@@30 ($generated@@25 $generated@@236 $generated@@237))))
)))
(assert (forall (($generated@@238 T@U) ) (! ($generated@@73 $generated@@107 $generated@@238 $generated)
 :pattern ( ($generated@@73 $generated@@107 $generated@@238 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@249  (=> (= (ControlFlow 0 5) (- 0 4)) ($generated@@13 ($generated@@59 $generated@@9 ($generated@@12 true))))))
(let (($generated@@250  (=> (and (not (and ($generated@@73 $generated@@74 $generated@@239 ($generated@@75 $generated@@93)) ($generated@@84 $generated@@74 $generated@@239 ($generated@@75 $generated@@93) $generated@@240))) (= (ControlFlow 0 7) 5)) $generated@@249)))
(let (($generated@@251  (=> (and (and ($generated@@73 $generated@@74 $generated@@239 ($generated@@75 $generated@@93)) ($generated@@84 $generated@@74 $generated@@239 ($generated@@75 $generated@@93) $generated@@240)) (= (ControlFlow 0 6) 5)) $generated@@249)))
(let (($generated@@252  (=> (and (= $generated@@241 ($generated@@39 $generated@@242)) ($generated@@73 $generated@@101 $generated@@242 ($generated@@102 $generated))) (and (=> (= (ControlFlow 0 8) 6) $generated@@251) (=> (= (ControlFlow 0 8) 7) $generated@@250)))))
(let (($generated@@253 true))
(let (($generated@@254  (=> (or (not (= $generated@@241 ($generated@@26 $generated@@243 $generated@@244 $generated@@245))) (not true)) (and (=> (= (ControlFlow 0 9) 8) $generated@@252) (=> (= (ControlFlow 0 9) 3) $generated@@253)))))
(let (($generated@@255 true))
(let (($generated@@256 true))
(let (($generated@@257  (=> (= $generated@@246 ($generated@@147 $generated@@247 $generated@@240 $generated@@3 false)) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@256) (=> (= (ControlFlow 0 10) 2) $generated@@255)) (=> (= (ControlFlow 0 10) 9) $generated@@254)))))
(let (($generated@@258  (=> (and (and (and ($generated@@91 $generated@@240) ($generated@@248 $generated@@240)) ($generated@@73 $generated@@30 $generated@@241 $generated@@93)) (and (= 1 $generated@@89) (= (ControlFlow 0 11) 10))) $generated@@257)))
$generated@@258)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
