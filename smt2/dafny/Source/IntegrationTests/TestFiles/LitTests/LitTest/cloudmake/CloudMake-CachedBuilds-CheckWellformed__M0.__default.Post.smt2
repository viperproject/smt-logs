(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U T@U) T@U)
(declare-fun $generated@@24 (T@U T@U T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (Bool T@U T@U T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 (T@U) Int)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@107 (T@U Int) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@121 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@124 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@125 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@126 (T@T T@T) T@T)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert  (and (= ($generated@@6 $generated@@26) 3) (= ($generated@@6 $generated@@28) 4)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (or ($generated@@24 $generated@@32 $generated@@33 $generated@@34) (and (< 0 $generated@@22) (and (and ($generated@@25 $generated@@26 $generated@@32 ($generated@@27 $generated@@0)) ($generated@@25 $generated@@28 $generated@@33 ($generated@@29 $generated@@30))) ($generated@@25 $generated@@26 $generated@@34 ($generated@@27 $generated@@0))))) ($generated@@31 ($generated@@23 $generated@@32 $generated@@33 $generated@@34) $generated@@30))
 :pattern ( ($generated@@23 $generated@@32 $generated@@33 $generated@@34))
))))
(assert (= ($generated@@35 $generated) $generated@@1))
(assert (= ($generated@@35 $generated@@0) $generated@@2))
(assert (= ($generated@@6 $generated@@38) 5))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (or ($generated@@39 ($generated@@37 $generated@@26 $generated@@49) ($generated@@37 $generated@@28 $generated@@50) ($generated@@37 $generated@@28 $generated@@51) ($generated@@37 $generated@@38 $generated@@52)) (and (< 2 $generated@@22) (and (and (and ($generated@@25 $generated@@26 $generated@@49 ($generated@@27 $generated@@0)) ($generated@@25 $generated@@28 $generated@@50 ($generated@@29 $generated@@30))) ($generated@@25 $generated@@28 $generated@@51 ($generated@@29 ($generated@@27 $generated@@0)))) ($generated@@31 $generated@@52 $generated@@40)))) (and (forall (($generated@@53 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@53 ($generated@@27 $generated@@0)) (and (=> ($generated@@41 ($generated@@37 $generated@@28 $generated@@51) ($generated@@42 $generated@@26 $generated@@53)) (and ($generated@@24 ($generated@@37 $generated@@26 $generated@@49) ($generated@@37 $generated@@28 $generated@@50) $generated@@53) ($generated@@43 ($generated@@37 $generated@@38 $generated@@52)))) (=> (=> ($generated@@41 ($generated@@37 $generated@@28 $generated@@51) ($generated@@42 $generated@@26 $generated@@53)) ($generated@@41 ($generated@@44 ($generated@@37 $generated@@38 $generated@@52)) ($generated@@23 ($generated@@37 $generated@@26 $generated@@49) ($generated@@37 $generated@@28 $generated@@50) $generated@@53))) (=> ($generated@@41 ($generated@@37 $generated@@28 $generated@@51) ($generated@@42 $generated@@26 $generated@@53)) (and (and ($generated@@24 ($generated@@37 $generated@@26 $generated@@49) ($generated@@37 $generated@@28 $generated@@50) $generated@@53) ($generated@@45 ($generated@@23 ($generated@@37 $generated@@26 $generated@@49) ($generated@@37 $generated@@28 $generated@@50) $generated@@53) ($generated@@37 $generated@@38 $generated@@52))) (and ($generated@@24 ($generated@@37 $generated@@26 $generated@@49) ($generated@@37 $generated@@28 $generated@@50) $generated@@53) ($generated@@46 ($generated@@23 ($generated@@37 $generated@@26 $generated@@49) ($generated@@37 $generated@@28 $generated@@50) $generated@@53) ($generated@@37 $generated@@38 $generated@@52))))))))
 :pattern ( ($generated@@23 $generated@@49 $generated@@50 $generated@@53))
 :pattern ( ($generated@@41 $generated@@51 ($generated@@42 $generated@@26 $generated@@53)))
)) (= ($generated@@36 true ($generated@@37 $generated@@26 $generated@@49) ($generated@@37 $generated@@28 $generated@@50) ($generated@@37 $generated@@28 $generated@@51) ($generated@@37 $generated@@38 $generated@@52)) (forall (($generated@@54 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@54 ($generated@@27 $generated@@0)) (and (=> ($generated@@41 ($generated@@37 $generated@@28 $generated@@51) ($generated@@42 $generated@@26 $generated@@54)) ($generated@@41 ($generated@@44 ($generated@@37 $generated@@38 $generated@@52)) ($generated@@23 ($generated@@37 $generated@@26 $generated@@49) ($generated@@37 $generated@@28 $generated@@50) $generated@@54))) (=> ($generated@@41 ($generated@@37 $generated@@28 $generated@@51) ($generated@@42 $generated@@26 $generated@@54)) (= ($generated@@47 ($generated@@23 ($generated@@37 $generated@@26 $generated@@49) ($generated@@37 $generated@@28 $generated@@50) $generated@@54) ($generated@@37 $generated@@38 $generated@@52)) ($generated@@48 ($generated@@23 ($generated@@37 $generated@@26 $generated@@49) ($generated@@37 $generated@@28 $generated@@50) $generated@@54) ($generated@@37 $generated@@38 $generated@@52))))))
 :pattern ( ($generated@@23 $generated@@49 $generated@@50 $generated@@54))
 :pattern ( ($generated@@41 $generated@@51 ($generated@@42 $generated@@26 $generated@@54)))
)))))
 :weight 3
 :pattern ( ($generated@@36 true ($generated@@37 $generated@@26 $generated@@49) ($generated@@37 $generated@@28 $generated@@50) ($generated@@37 $generated@@28 $generated@@51) ($generated@@37 $generated@@38 $generated@@52)))
))))
(assert ($generated@@55 $generated@@40))
(assert ($generated@@55 $generated@@30))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (or ($generated@@46 $generated@@57 $generated@@58) (and (< 0 $generated@@22) (and ($generated@@31 $generated@@57 $generated@@30) ($generated@@31 $generated@@58 $generated@@40)))) ($generated@@31 ($generated@@48 $generated@@57 $generated@@58) $generated@@56))
 :pattern ( ($generated@@48 $generated@@57 $generated@@58))
))))
(assert (= ($generated@@59 $generated@@60) 0))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@39 ($generated@@37 $generated@@26 $generated@@61) ($generated@@37 $generated@@28 $generated@@62) ($generated@@37 $generated@@28 $generated@@63) $generated@@64) (and (< 2 $generated@@22) (and (and (and ($generated@@25 $generated@@26 $generated@@61 ($generated@@27 $generated@@0)) ($generated@@25 $generated@@28 $generated@@62 ($generated@@29 $generated@@30))) ($generated@@25 $generated@@28 $generated@@63 ($generated@@29 ($generated@@27 $generated@@0)))) ($generated@@31 $generated@@64 $generated@@40)))) (and (forall (($generated@@65 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@65 ($generated@@27 $generated@@0)) (and (=> ($generated@@41 ($generated@@37 $generated@@28 $generated@@63) ($generated@@42 $generated@@26 $generated@@65)) (and ($generated@@24 ($generated@@37 $generated@@26 $generated@@61) ($generated@@37 $generated@@28 $generated@@62) $generated@@65) ($generated@@43 $generated@@64))) (=> (=> ($generated@@41 ($generated@@37 $generated@@28 $generated@@63) ($generated@@42 $generated@@26 $generated@@65)) ($generated@@41 ($generated@@44 $generated@@64) ($generated@@23 ($generated@@37 $generated@@26 $generated@@61) ($generated@@37 $generated@@28 $generated@@62) $generated@@65))) (=> ($generated@@41 ($generated@@37 $generated@@28 $generated@@63) ($generated@@42 $generated@@26 $generated@@65)) (and (and ($generated@@24 ($generated@@37 $generated@@26 $generated@@61) ($generated@@37 $generated@@28 $generated@@62) $generated@@65) ($generated@@45 ($generated@@23 ($generated@@37 $generated@@26 $generated@@61) ($generated@@37 $generated@@28 $generated@@62) $generated@@65) $generated@@64)) (and ($generated@@24 ($generated@@37 $generated@@26 $generated@@61) ($generated@@37 $generated@@28 $generated@@62) $generated@@65) ($generated@@46 ($generated@@23 ($generated@@37 $generated@@26 $generated@@61) ($generated@@37 $generated@@28 $generated@@62) $generated@@65) $generated@@64)))))))
 :pattern ( ($generated@@23 $generated@@61 $generated@@62 $generated@@65))
 :pattern ( ($generated@@41 $generated@@63 ($generated@@42 $generated@@26 $generated@@65)))
)) (= ($generated@@36 true ($generated@@37 $generated@@26 $generated@@61) ($generated@@37 $generated@@28 $generated@@62) ($generated@@37 $generated@@28 $generated@@63) $generated@@64) (forall (($generated@@66 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@66 ($generated@@27 $generated@@0)) (and (=> ($generated@@41 ($generated@@37 $generated@@28 $generated@@63) ($generated@@42 $generated@@26 $generated@@66)) ($generated@@41 ($generated@@44 $generated@@64) ($generated@@23 ($generated@@37 $generated@@26 $generated@@61) ($generated@@37 $generated@@28 $generated@@62) $generated@@66))) (=> ($generated@@41 ($generated@@37 $generated@@28 $generated@@63) ($generated@@42 $generated@@26 $generated@@66)) (= ($generated@@47 ($generated@@23 ($generated@@37 $generated@@26 $generated@@61) ($generated@@37 $generated@@28 $generated@@62) $generated@@66) $generated@@64) ($generated@@48 ($generated@@23 ($generated@@37 $generated@@26 $generated@@61) ($generated@@37 $generated@@28 $generated@@62) $generated@@66) $generated@@64)))))
 :pattern ( ($generated@@23 $generated@@61 $generated@@62 $generated@@66))
 :pattern ( ($generated@@41 $generated@@63 ($generated@@42 $generated@@26 $generated@@66)))
)))))
 :weight 3
 :pattern ( ($generated@@36 true ($generated@@37 $generated@@26 $generated@@61) ($generated@@37 $generated@@28 $generated@@62) ($generated@@37 $generated@@28 $generated@@63) $generated@@64))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> (or ($generated@@45 $generated@@67 $generated@@68) (and (< 1 $generated@@22) (and (and ($generated@@31 $generated@@67 $generated@@30) ($generated@@31 $generated@@68 $generated@@40)) ($generated@@41 ($generated@@44 $generated@@68) $generated@@67)))) ($generated@@31 ($generated@@47 $generated@@67 $generated@@68) $generated@@56))
 :pattern ( ($generated@@47 $generated@@67 $generated@@68))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (and (or ($generated@@45 $generated@@72 $generated@@73) (and (< 1 $generated@@22) (and (and (and ($generated@@31 $generated@@72 $generated@@30) ($generated@@69 $generated@@72 $generated@@30 $generated@@71)) (and ($generated@@31 $generated@@73 $generated@@40) ($generated@@69 $generated@@73 $generated@@40 $generated@@71))) ($generated@@41 ($generated@@44 $generated@@73) $generated@@72)))) ($generated@@70 $generated@@71)) ($generated@@69 ($generated@@47 $generated@@72 $generated@@73) $generated@@56 $generated@@71))
 :pattern ( ($generated@@69 ($generated@@47 $generated@@72 $generated@@73) $generated@@56 $generated@@71))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@37 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@37 $generated@@75 $generated@@74))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@39 $generated@@76 $generated@@77 $generated@@78 $generated@@79) (and (< 2 $generated@@22) (and (and (and ($generated@@25 $generated@@26 $generated@@76 ($generated@@27 $generated@@0)) ($generated@@25 $generated@@28 $generated@@77 ($generated@@29 $generated@@30))) ($generated@@25 $generated@@28 $generated@@78 ($generated@@29 ($generated@@27 $generated@@0)))) ($generated@@31 $generated@@79 $generated@@40)))) (and (forall (($generated@@80 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@80 ($generated@@27 $generated@@0)) (and (=> ($generated@@41 $generated@@78 ($generated@@42 $generated@@26 $generated@@80)) (and ($generated@@24 $generated@@76 $generated@@77 $generated@@80) ($generated@@43 $generated@@79))) (=> (=> ($generated@@41 $generated@@78 ($generated@@42 $generated@@26 $generated@@80)) ($generated@@41 ($generated@@44 $generated@@79) ($generated@@23 $generated@@76 $generated@@77 $generated@@80))) (=> ($generated@@41 $generated@@78 ($generated@@42 $generated@@26 $generated@@80)) (and (and ($generated@@24 $generated@@76 $generated@@77 $generated@@80) ($generated@@45 ($generated@@23 $generated@@76 $generated@@77 $generated@@80) $generated@@79)) (and ($generated@@24 $generated@@76 $generated@@77 $generated@@80) ($generated@@46 ($generated@@23 $generated@@76 $generated@@77 $generated@@80) $generated@@79)))))))
 :pattern ( ($generated@@23 $generated@@76 $generated@@77 $generated@@80))
 :pattern ( ($generated@@41 $generated@@78 ($generated@@42 $generated@@26 $generated@@80)))
)) (= ($generated@@36 true $generated@@76 $generated@@77 $generated@@78 $generated@@79) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@81 ($generated@@27 $generated@@0)) (and (=> ($generated@@41 $generated@@78 ($generated@@42 $generated@@26 $generated@@81)) ($generated@@41 ($generated@@44 $generated@@79) ($generated@@23 $generated@@76 $generated@@77 $generated@@81))) (=> ($generated@@41 $generated@@78 ($generated@@42 $generated@@26 $generated@@81)) (= ($generated@@47 ($generated@@23 $generated@@76 $generated@@77 $generated@@81) $generated@@79) ($generated@@48 ($generated@@23 $generated@@76 $generated@@77 $generated@@81) $generated@@79)))))
 :pattern ( ($generated@@23 $generated@@76 $generated@@77 $generated@@81))
 :pattern ( ($generated@@41 $generated@@78 ($generated@@42 $generated@@26 $generated@@81)))
)))))
 :pattern ( ($generated@@36 true $generated@@76 $generated@@77 $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@42 $generated@@84 ($generated@@82 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@25 $generated@@28 $generated@@85 ($generated@@29 $generated@@86)) (forall (($generated@@87 T@U) ) (!  (=> ($generated@@41 $generated@@85 $generated@@87) ($generated@@31 $generated@@87 $generated@@86))
 :pattern ( ($generated@@41 $generated@@85 $generated@@87))
)))
 :pattern ( ($generated@@25 $generated@@28 $generated@@85 ($generated@@29 $generated@@86)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@69 ($generated@@42 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@88 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@69 ($generated@@42 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@31 $generated@@93 $generated) (and (= ($generated@@42 $generated@@7 ($generated@@82 $generated@@7 $generated@@93)) $generated@@93) ($generated@@25 $generated@@7 ($generated@@82 $generated@@7 $generated@@93) $generated)))
 :pattern ( ($generated@@31 $generated@@93 $generated))
)))
(assert (= ($generated@@6 $generated@@94) 6))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@31 $generated@@95 $generated@@0) (and (= ($generated@@42 $generated@@94 ($generated@@82 $generated@@94 $generated@@95)) $generated@@95) ($generated@@25 $generated@@94 ($generated@@82 $generated@@94 $generated@@95) $generated@@0)))
 :pattern ( ($generated@@31 $generated@@95 $generated@@0))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@31 ($generated@@42 $generated@@98 $generated@@96) $generated@@97) ($generated@@25 $generated@@98 $generated@@96 $generated@@97))
 :pattern ( ($generated@@31 ($generated@@42 $generated@@98 $generated@@96) $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (<= 0 ($generated@@59 $generated@@99))
 :pattern ( ($generated@@59 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@55 $generated@@100) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> ($generated@@31 $generated@@102 $generated@@100) ($generated@@69 $generated@@102 $generated@@100 $generated@@101))
 :pattern ( ($generated@@69 $generated@@102 $generated@@100 $generated@@101))
)))
 :pattern ( ($generated@@55 $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@88 $generated@@28 $generated@@103 ($generated@@29 $generated@@104) $generated@@105) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@41 $generated@@103 $generated@@106) ($generated@@69 $generated@@106 $generated@@104 $generated@@105))
 :pattern ( ($generated@@41 $generated@@103 $generated@@106))
)))
 :pattern ( ($generated@@88 $generated@@28 $generated@@103 ($generated@@29 $generated@@104) $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@88 $generated@@26 $generated@@108 ($generated@@27 $generated@@109) $generated@@110) (forall (($generated@@111 Int) ) (!  (=> (and (<= 0 $generated@@111) (< $generated@@111 ($generated@@59 $generated@@108))) ($generated@@69 ($generated@@107 $generated@@108 $generated@@111) $generated@@109 $generated@@110))
 :pattern ( ($generated@@107 $generated@@108 $generated@@111))
)))
 :pattern ( ($generated@@88 $generated@@26 $generated@@108 ($generated@@27 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@112 ($generated@@29 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@29 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@35 ($generated@@29 $generated@@114)) $generated@@3)
 :pattern ( ($generated@@29 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@115 ($generated@@27 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@27 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@35 ($generated@@27 $generated@@117)) $generated@@4)
 :pattern ( ($generated@@27 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@82 $generated@@119 ($generated@@42 $generated@@119 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@42 $generated@@119 $generated@@118))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@120 T@U) ) (!  (=> (or ($generated@@43 $generated@@120) (and (< 0 $generated@@22) ($generated@@31 $generated@@120 $generated@@40))) ($generated@@25 $generated@@28 ($generated@@44 $generated@@120) ($generated@@29 $generated@@30)))
 :pattern ( ($generated@@44 $generated@@120))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@121 $generated@@131 $generated@@132 $generated@@133 ($generated@@127 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@136 $generated@@137) $generated@@134)
 :weight 0
)) (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@121 $generated@@138 $generated@@139 $generated@@140 ($generated@@127 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@121 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@121 $generated@@147 $generated@@148 $generated@@149 ($generated@@127 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@121 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)))) (= ($generated@@6 $generated@@122) 7)) (= ($generated@@6 $generated@@123) 8)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@125 $generated@@156 $generated@@157 ($generated@@128 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@158) $generated@@160) $generated@@158)
 :weight 0
))) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@165 $generated@@166) (= ($generated@@125 $generated@@161 $generated@@162 ($generated@@128 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@163) $generated@@166) ($generated@@125 $generated@@161 $generated@@162 $generated@@164 $generated@@166)))
 :weight 0
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@6 ($generated@@126 $generated@@167 $generated@@168)) 9))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@129 ($generated@@126 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@126 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@130 ($generated@@126 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@126 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 Bool) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@11 ($generated@@121 $generated@@122 $generated@@123 $generated@@7 ($generated@@124 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@177 $generated@@178))  (=> (and (or (not (= $generated@@177 $generated@@173)) (not true)) ($generated@@11 ($generated@@82 $generated@@7 ($generated@@125 $generated@@123 $generated@@38 ($generated@@125 $generated@@122 ($generated@@126 $generated@@123 $generated@@38) $generated@@174 $generated@@177) $generated@@175)))) $generated@@176))
 :pattern ( ($generated@@121 $generated@@122 $generated@@123 $generated@@7 ($generated@@124 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@177 $generated@@178))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (or ($generated@@46 $generated@@180 $generated@@181) (and (< 0 $generated@@22) (and (and ($generated@@31 $generated@@180 $generated@@30) ($generated@@69 $generated@@180 $generated@@30 $generated@@179)) (and ($generated@@31 $generated@@181 $generated@@40) ($generated@@69 $generated@@181 $generated@@40 $generated@@179))))) ($generated@@70 $generated@@179)) ($generated@@69 ($generated@@48 $generated@@180 $generated@@181) $generated@@56 $generated@@179))
 :pattern ( ($generated@@69 ($generated@@48 $generated@@180 $generated@@181) $generated@@56 $generated@@179))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> ($generated@@31 $generated@@182 ($generated@@29 $generated@@183)) (and (= ($generated@@42 $generated@@28 ($generated@@82 $generated@@28 $generated@@182)) $generated@@182) ($generated@@25 $generated@@28 ($generated@@82 $generated@@28 $generated@@182) ($generated@@29 $generated@@183))))
 :pattern ( ($generated@@31 $generated@@182 ($generated@@29 $generated@@183)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> ($generated@@31 $generated@@184 ($generated@@27 $generated@@185)) (and (= ($generated@@42 $generated@@26 ($generated@@82 $generated@@26 $generated@@184)) $generated@@184) ($generated@@25 $generated@@26 ($generated@@82 $generated@@26 $generated@@184) ($generated@@27 $generated@@185))))
 :pattern ( ($generated@@31 $generated@@184 ($generated@@27 $generated@@185)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@T) ) (! (= ($generated@@42 $generated@@187 ($generated@@37 $generated@@187 $generated@@186)) ($generated@@37 $generated@@38 ($generated@@42 $generated@@187 $generated@@186)))
 :pattern ( ($generated@@42 $generated@@187 ($generated@@37 $generated@@187 $generated@@186)))
)))
(assert (forall (($generated@@188 T@U) ) (!  (=> (= ($generated@@59 $generated@@188) 0) (= $generated@@188 $generated@@60))
 :pattern ( ($generated@@59 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! ($generated@@88 $generated@@7 $generated@@190 $generated $generated@@189)
 :pattern ( ($generated@@88 $generated@@7 $generated@@190 $generated $generated@@189))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! ($generated@@88 $generated@@94 $generated@@192 $generated@@0 $generated@@191)
 :pattern ( ($generated@@88 $generated@@94 $generated@@192 $generated@@0 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@193 ($generated@@27 $generated@@194)) (forall (($generated@@195 Int) ) (!  (=> (and (<= 0 $generated@@195) (< $generated@@195 ($generated@@59 $generated@@193))) ($generated@@31 ($generated@@107 $generated@@193 $generated@@195) $generated@@194))
 :pattern ( ($generated@@107 $generated@@193 $generated@@195))
)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@193 ($generated@@27 $generated@@194)))
)))
(assert (forall (($generated@@196 T@U) ) (! ($generated@@25 $generated@@7 $generated@@196 $generated)
 :pattern ( ($generated@@25 $generated@@7 $generated@@196 $generated))
)))
(assert (forall (($generated@@197 T@U) ) (! ($generated@@25 $generated@@94 $generated@@197 $generated@@0)
 :pattern ( ($generated@@25 $generated@@94 $generated@@197 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@209 true))
(let (($generated@@210  (=> (and (not ($generated@@41 ($generated@@44 $generated@@198) ($generated@@23 $generated@@199 $generated@@200 $generated@@201))) (= (ControlFlow 0 7) 2)) $generated@@209)))
(let (($generated@@211  (=> (and (and (and ($generated@@41 ($generated@@44 $generated@@198) ($generated@@23 $generated@@199 $generated@@200 $generated@@201)) ($generated@@88 $generated@@26 $generated@@199 ($generated@@27 $generated@@0) $generated@@202)) (and ($generated@@88 $generated@@28 $generated@@200 ($generated@@29 $generated@@30) $generated@@202) ($generated@@88 $generated@@26 $generated@@201 ($generated@@27 $generated@@0) $generated@@202))) (and (and ($generated@@24 $generated@@199 $generated@@200 $generated@@201) (= $generated@@203 ($generated@@23 $generated@@199 $generated@@200 $generated@@201))) (and ($generated@@69 $generated@@203 $generated@@30 $generated@@202) ($generated@@69 $generated@@198 $generated@@40 $generated@@202)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@41 ($generated@@44 $generated@@198) $generated@@203)) (=> ($generated@@41 ($generated@@44 $generated@@198) $generated@@203) (=> (and ($generated@@45 ($generated@@23 $generated@@199 $generated@@200 $generated@@201) $generated@@198) ($generated@@88 $generated@@26 $generated@@199 ($generated@@27 $generated@@0) $generated@@202)) (=> (and (and (and ($generated@@88 $generated@@28 $generated@@200 ($generated@@29 $generated@@30) $generated@@202) ($generated@@88 $generated@@26 $generated@@201 ($generated@@27 $generated@@0) $generated@@202)) (and ($generated@@24 $generated@@199 $generated@@200 $generated@@201) (= $generated@@204 ($generated@@23 $generated@@199 $generated@@200 $generated@@201)))) (and (and ($generated@@69 $generated@@204 $generated@@30 $generated@@202) ($generated@@69 $generated@@198 $generated@@40 $generated@@202)) (and ($generated@@46 ($generated@@23 $generated@@199 $generated@@200 $generated@@201) $generated@@198) (= (ControlFlow 0 5) 2)))) $generated@@209)))))))
(let (($generated@@212  (=> ($generated@@41 $generated@@205 ($generated@@42 $generated@@26 $generated@@201)) (=> (and ($generated@@88 $generated@@26 $generated@@199 ($generated@@27 $generated@@0) $generated@@202) ($generated@@88 $generated@@28 $generated@@200 ($generated@@29 $generated@@30) $generated@@202)) (=> (and (and ($generated@@88 $generated@@26 $generated@@201 ($generated@@27 $generated@@0) $generated@@202) ($generated@@24 $generated@@199 $generated@@200 $generated@@201)) (and ($generated@@69 $generated@@198 $generated@@40 $generated@@202) ($generated@@43 $generated@@198))) (and (=> (= (ControlFlow 0 8) 5) $generated@@211) (=> (= (ControlFlow 0 8) 7) $generated@@210)))))))
(let (($generated@@213  (=> (and (not ($generated@@41 $generated@@205 ($generated@@42 $generated@@26 $generated@@201))) (= (ControlFlow 0 4) 2)) $generated@@209)))
(let (($generated@@214  (=> (and ($generated@@25 $generated@@26 $generated@@201 ($generated@@27 $generated@@0)) ($generated@@88 $generated@@26 $generated@@201 ($generated@@27 $generated@@0) $generated@@202)) (and (=> (= (ControlFlow 0 9) 8) $generated@@212) (=> (= (ControlFlow 0 9) 4) $generated@@213)))))
(let (($generated@@215  (=> (and (not (and ($generated@@25 $generated@@26 $generated@@201 ($generated@@27 $generated@@0)) ($generated@@88 $generated@@26 $generated@@201 ($generated@@27 $generated@@0) $generated@@202))) (= (ControlFlow 0 3) 2)) $generated@@209)))
(let (($generated@@216 true))
(let (($generated@@217  (=> (= $generated@@206 ($generated@@124 $generated@@207 $generated@@202 $generated@@5 false)) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@216) (=> (= (ControlFlow 0 10) 9) $generated@@214)) (=> (= (ControlFlow 0 10) 3) $generated@@215)))))
(let (($generated@@218  (=> (and (and (and ($generated@@70 $generated@@202) ($generated@@208 $generated@@202)) (and ($generated@@25 $generated@@26 $generated@@199 ($generated@@27 $generated@@0)) ($generated@@25 $generated@@28 $generated@@200 ($generated@@29 $generated@@30)))) (and (and ($generated@@25 $generated@@28 $generated@@205 ($generated@@29 ($generated@@27 $generated@@0))) ($generated@@31 $generated@@198 $generated@@40)) (and (= 2 $generated@@22) (= (ControlFlow 0 11) 10)))) $generated@@217)))
$generated@@218)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
