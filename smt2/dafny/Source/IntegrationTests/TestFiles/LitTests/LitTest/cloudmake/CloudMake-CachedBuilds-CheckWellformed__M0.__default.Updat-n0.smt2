(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U T@U T@U) Bool)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@54 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@55 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@70 (T@U T@U T@U) Bool)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@110 (T@U Int) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 () T@T)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@133 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T T@T) T@T)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@139 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (and (= ($generated@@4 $generated@@24) 3) (= ($generated@@4 $generated@@26) 4)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (or ($generated@@22 $generated@@30 $generated@@31 $generated@@32) (and (< 0 $generated@@20) (and (and ($generated@@23 $generated@@24 $generated@@30 ($generated@@25 $generated)) ($generated@@23 $generated@@26 $generated@@31 ($generated@@27 $generated@@28))) ($generated@@23 $generated@@24 $generated@@32 ($generated@@25 $generated))))) ($generated@@29 ($generated@@21 $generated@@30 $generated@@31 $generated@@32) $generated@@28))
 :pattern ( ($generated@@21 $generated@@30 $generated@@31 $generated@@32))
))))
(assert (= ($generated@@33 $generated) $generated@@0))
(assert ($generated@@34 $generated@@35))
(assert ($generated@@34 $generated@@28))
(assert (= ($generated@@36 $generated@@37) 0))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@47 T@U) ) (!  (=> (or ($generated@@39 $generated@@47) (and (< 1 $generated@@20) ($generated@@29 $generated@@47 $generated@@35))) (and (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (and (and ($generated@@23 $generated@@24 $generated@@48 ($generated@@25 $generated)) ($generated@@23 $generated@@26 $generated@@49 ($generated@@27 $generated@@28))) ($generated@@23 $generated@@24 $generated@@50 ($generated@@25 $generated))) (and (and (and ($generated@@22 $generated@@48 $generated@@49 $generated@@50) ($generated@@40 ($generated@@21 $generated@@48 $generated@@49 $generated@@50))) ($generated@@41 $generated@@47)) (=> ($generated@@42 ($generated@@43 $generated@@47) ($generated@@44 ($generated@@21 $generated@@48 $generated@@49 $generated@@50))) (and ($generated@@22 $generated@@48 $generated@@49 $generated@@50) ($generated@@45 $generated@@47)))))
 :pattern ( ($generated@@21 $generated@@48 $generated@@49 $generated@@50))
)) (= ($generated@@38 $generated@@47) (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (and (and ($generated@@23 $generated@@24 $generated@@51 ($generated@@25 $generated)) ($generated@@23 $generated@@26 $generated@@52 ($generated@@27 $generated@@28))) ($generated@@23 $generated@@24 $generated@@53 ($generated@@25 $generated))) (=> ($generated@@42 ($generated@@43 $generated@@47) ($generated@@44 ($generated@@21 $generated@@51 $generated@@52 $generated@@53))) ($generated@@42 ($generated@@46 $generated@@47) ($generated@@21 $generated@@51 $generated@@52 $generated@@53))))
 :pattern ( ($generated@@21 $generated@@51 $generated@@52 $generated@@53))
)))))
 :pattern ( ($generated@@38 $generated@@47))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (or ($generated@@55 $generated@@59 $generated@@60 $generated@@61 $generated@@62) (and (< 2 $generated@@20) (and (and (and ($generated@@23 $generated@@24 $generated@@59 ($generated@@25 $generated)) ($generated@@23 $generated@@26 $generated@@60 ($generated@@27 $generated@@28))) ($generated@@23 $generated@@26 $generated@@61 ($generated@@27 ($generated@@25 $generated)))) ($generated@@29 $generated@@62 $generated@@35)))) (and (let (($generated@@63 ($generated@@54 $generated@@59 $generated@@60 $generated@@61 $generated@@62)))
 (and (and (and ($generated@@56 ($generated@@46 $generated@@62) ($generated@@46 $generated@@63)) (forall (($generated@@64 T@U) ) (!  (=> ($generated@@29 $generated@@64 $generated@@28) (=> ($generated@@42 ($generated@@46 $generated@@62) $generated@@64) (= ($generated@@57 $generated@@64 $generated@@62) ($generated@@57 $generated@@64 $generated@@63))))
 :pattern ( ($generated@@57 $generated@@64 $generated@@63))
 :pattern ( ($generated@@57 $generated@@64 $generated@@62))
 :pattern ( ($generated@@42 ($generated@@46 $generated@@62) $generated@@64))
))) (=> ($generated@@38 $generated@@62) ($generated@@38 $generated@@63))) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@65 ($generated@@25 $generated)) (=> ($generated@@42 $generated@@61 ($generated@@58 $generated@@24 $generated@@65)) ($generated@@42 ($generated@@43 $generated@@63) ($generated@@44 ($generated@@21 $generated@@59 $generated@@60 $generated@@65)))))
 :pattern ( ($generated@@21 $generated@@59 $generated@@60 $generated@@65))
 :pattern ( ($generated@@42 $generated@@61 ($generated@@58 $generated@@24 $generated@@65)))
)))) ($generated@@29 ($generated@@54 $generated@@59 $generated@@60 $generated@@61 $generated@@62) $generated@@35)))
 :pattern ( ($generated@@54 $generated@@59 $generated@@60 $generated@@61 $generated@@62))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (or ($generated@@66 $generated@@68 $generated@@69) (and (< 1 $generated@@20) (and (and ($generated@@29 $generated@@68 $generated@@28) ($generated@@29 $generated@@69 $generated@@35)) ($generated@@42 ($generated@@46 $generated@@69) $generated@@68)))) ($generated@@29 ($generated@@57 $generated@@68 $generated@@69) $generated@@67))
 :pattern ( ($generated@@57 $generated@@68 $generated@@69))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (and (or ($generated@@66 $generated@@73 $generated@@74) (and (< 1 $generated@@20) (and (and (and ($generated@@29 $generated@@73 $generated@@28) ($generated@@70 $generated@@73 $generated@@28 $generated@@72)) (and ($generated@@29 $generated@@74 $generated@@35) ($generated@@70 $generated@@74 $generated@@35 $generated@@72))) ($generated@@42 ($generated@@46 $generated@@74) $generated@@73)))) ($generated@@71 $generated@@72)) ($generated@@70 ($generated@@57 $generated@@73 $generated@@74) $generated@@67 $generated@@72))
 :pattern ( ($generated@@70 ($generated@@57 $generated@@73 $generated@@74) $generated@@67 $generated@@72))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@78 $generated@@79 $generated@@80) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@42 $generated@@79 $generated@@81) ($generated@@42 $generated@@80 $generated@@81))
 :pattern ( ($generated@@42 $generated@@79 $generated@@81))
 :pattern ( ($generated@@42 $generated@@80 $generated@@81))
)))
 :pattern ( ($generated@@78 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@58 $generated@@84 ($generated@@82 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@23 $generated@@26 $generated@@85 ($generated@@27 $generated@@86)) (forall (($generated@@87 T@U) ) (!  (=> ($generated@@42 $generated@@85 $generated@@87) ($generated@@29 $generated@@87 $generated@@86))
 :pattern ( ($generated@@42 $generated@@85 $generated@@87))
)))
 :pattern ( ($generated@@23 $generated@@26 $generated@@85 ($generated@@27 $generated@@86)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@70 ($generated@@58 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@88 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@70 ($generated@@58 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@56 $generated@@93 $generated@@94) (= $generated@@93 $generated@@94))
 :pattern ( ($generated@@56 $generated@@93 $generated@@94))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@96 T@U) ) (!  (=> (or ($generated@@40 $generated@@96) (and (< 0 $generated@@20) ($generated@@29 $generated@@96 $generated@@28))) ($generated@@29 ($generated@@44 $generated@@96) $generated@@95))
 :pattern ( ($generated@@44 $generated@@96))
))))
(assert (= ($generated@@4 $generated@@97) 5))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@29 $generated@@98 $generated) (and (= ($generated@@58 $generated@@97 ($generated@@82 $generated@@97 $generated@@98)) $generated@@98) ($generated@@23 $generated@@97 ($generated@@82 $generated@@97 $generated@@98) $generated)))
 :pattern ( ($generated@@29 $generated@@98 $generated))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@29 ($generated@@58 $generated@@101 $generated@@99) $generated@@100) ($generated@@23 $generated@@101 $generated@@99 $generated@@100))
 :pattern ( ($generated@@29 ($generated@@58 $generated@@101 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (! (<= 0 ($generated@@36 $generated@@102))
 :pattern ( ($generated@@36 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@34 $generated@@103) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> ($generated@@29 $generated@@105 $generated@@103) ($generated@@70 $generated@@105 $generated@@103 $generated@@104))
 :pattern ( ($generated@@70 $generated@@105 $generated@@103 $generated@@104))
)))
 :pattern ( ($generated@@34 $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@88 $generated@@26 $generated@@106 ($generated@@27 $generated@@107) $generated@@108) (forall (($generated@@109 T@U) ) (!  (=> ($generated@@42 $generated@@106 $generated@@109) ($generated@@70 $generated@@109 $generated@@107 $generated@@108))
 :pattern ( ($generated@@42 $generated@@106 $generated@@109))
)))
 :pattern ( ($generated@@88 $generated@@26 $generated@@106 ($generated@@27 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@88 $generated@@24 $generated@@111 ($generated@@25 $generated@@112) $generated@@113) (forall (($generated@@114 Int) ) (!  (=> (and (<= 0 $generated@@114) (< $generated@@114 ($generated@@36 $generated@@111))) ($generated@@70 ($generated@@110 $generated@@111 $generated@@114) $generated@@112 $generated@@113))
 :pattern ( ($generated@@110 $generated@@111 $generated@@114))
)))
 :pattern ( ($generated@@88 $generated@@24 $generated@@111 ($generated@@25 $generated@@112) $generated@@113))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (and (or ($generated@@40 $generated@@116) (and (< 0 $generated@@20) (and ($generated@@29 $generated@@116 $generated@@28) ($generated@@70 $generated@@116 $generated@@28 $generated@@115)))) ($generated@@71 $generated@@115)) ($generated@@70 ($generated@@44 $generated@@116) $generated@@95 $generated@@115))
 :pattern ( ($generated@@70 ($generated@@44 $generated@@116) $generated@@95 $generated@@115))
))))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 ($generated@@27 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@27 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@33 ($generated@@27 $generated@@119)) $generated@@1)
 :pattern ( ($generated@@27 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@25 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@25 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@33 ($generated@@25 $generated@@122)) $generated@@2)
 :pattern ( ($generated@@25 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@82 $generated@@124 ($generated@@58 $generated@@124 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@58 $generated@@124 $generated@@123))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@125 T@U) ) (!  (=> (or ($generated@@45 $generated@@125) (and (< 0 $generated@@20) ($generated@@29 $generated@@125 $generated@@35))) ($generated@@23 $generated@@26 ($generated@@46 $generated@@125) ($generated@@27 $generated@@28)))
 :pattern ( ($generated@@46 $generated@@125))
))))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@126 T@U) ) (!  (=> (or ($generated@@41 $generated@@126) (and (< 0 $generated@@20) ($generated@@29 $generated@@126 $generated@@35))) ($generated@@23 $generated@@26 ($generated@@43 $generated@@126) ($generated@@27 $generated@@95)))
 :pattern ( ($generated@@43 $generated@@126))
))))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (and (or ($generated@@41 $generated@@128) (and (< 0 $generated@@20) (and ($generated@@29 $generated@@128 $generated@@35) ($generated@@70 $generated@@128 $generated@@35 $generated@@127)))) ($generated@@71 $generated@@127)) ($generated@@88 $generated@@26 ($generated@@43 $generated@@128) ($generated@@27 $generated@@95) $generated@@127))
 :pattern ( ($generated@@88 $generated@@26 ($generated@@43 $generated@@128) ($generated@@27 $generated@@95) $generated@@127))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@129 $generated@@140 $generated@@141 $generated@@142 ($generated@@136 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@145 $generated@@146) $generated@@143)
 :weight 0
)) (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@129 $generated@@147 $generated@@148 $generated@@149 ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@129 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@129 $generated@@156 $generated@@157 $generated@@158 ($generated@@136 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)))) (= ($generated@@4 $generated@@130) 6)) (= ($generated@@4 $generated@@131) 7)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@133 $generated@@165 $generated@@166 ($generated@@137 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@167) $generated@@169) $generated@@167)
 :weight 0
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@174 $generated@@175) (= ($generated@@133 $generated@@170 $generated@@171 ($generated@@137 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@172) $generated@@175) ($generated@@133 $generated@@170 $generated@@171 $generated@@173 $generated@@175)))
 :weight 0
))) (= ($generated@@4 $generated@@134) 8)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@4 ($generated@@135 $generated@@176 $generated@@177)) 9))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@138 ($generated@@135 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@135 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@139 ($generated@@135 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@135 $generated@@180 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Bool) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@9 ($generated@@129 $generated@@130 $generated@@131 $generated@@5 ($generated@@132 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))  (=> (and (or (not (= $generated@@186 $generated@@182)) (not true)) ($generated@@9 ($generated@@82 $generated@@5 ($generated@@133 $generated@@131 $generated@@134 ($generated@@133 $generated@@130 ($generated@@135 $generated@@131 $generated@@134) $generated@@183 $generated@@186) $generated@@184)))) $generated@@185))
 :pattern ( ($generated@@129 $generated@@130 $generated@@131 $generated@@5 ($generated@@132 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@29 $generated@@188 ($generated@@27 $generated@@189)) (and (= ($generated@@58 $generated@@26 ($generated@@82 $generated@@26 $generated@@188)) $generated@@188) ($generated@@23 $generated@@26 ($generated@@82 $generated@@26 $generated@@188) ($generated@@27 $generated@@189))))
 :pattern ( ($generated@@29 $generated@@188 ($generated@@27 $generated@@189)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@29 $generated@@190 ($generated@@25 $generated@@191)) (and (= ($generated@@58 $generated@@24 ($generated@@82 $generated@@24 $generated@@190)) $generated@@190) ($generated@@23 $generated@@24 ($generated@@82 $generated@@24 $generated@@190) ($generated@@25 $generated@@191))))
 :pattern ( ($generated@@29 $generated@@190 ($generated@@25 $generated@@191)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@56 $generated@@192 $generated@@193) (forall (($generated@@194 T@U) ) (! (= ($generated@@42 $generated@@192 $generated@@194) ($generated@@42 $generated@@193 $generated@@194))
 :pattern ( ($generated@@42 $generated@@192 $generated@@194))
 :pattern ( ($generated@@42 $generated@@193 $generated@@194))
)))
 :pattern ( ($generated@@56 $generated@@192 $generated@@193))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@195 T@U) ) (!  (=> (or ($generated@@39 ($generated@@75 $generated@@134 $generated@@195)) (and (< 1 $generated@@20) ($generated@@29 $generated@@195 $generated@@35))) (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and ($generated@@23 $generated@@24 $generated@@196 ($generated@@25 $generated)) ($generated@@23 $generated@@26 $generated@@197 ($generated@@27 $generated@@28))) ($generated@@23 $generated@@24 $generated@@198 ($generated@@25 $generated))) (and (and (and ($generated@@22 $generated@@196 $generated@@197 $generated@@198) ($generated@@40 ($generated@@21 $generated@@196 $generated@@197 $generated@@198))) ($generated@@41 ($generated@@75 $generated@@134 $generated@@195))) (=> ($generated@@42 ($generated@@43 ($generated@@75 $generated@@134 $generated@@195)) ($generated@@44 ($generated@@21 $generated@@196 $generated@@197 $generated@@198))) (and ($generated@@22 $generated@@196 $generated@@197 $generated@@198) ($generated@@45 ($generated@@75 $generated@@134 $generated@@195))))))
 :pattern ( ($generated@@21 $generated@@196 $generated@@197 $generated@@198))
)) (= ($generated@@38 ($generated@@75 $generated@@134 $generated@@195)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and ($generated@@23 $generated@@24 $generated@@199 ($generated@@25 $generated)) ($generated@@23 $generated@@26 $generated@@200 ($generated@@27 $generated@@28))) ($generated@@23 $generated@@24 $generated@@201 ($generated@@25 $generated))) (=> ($generated@@42 ($generated@@43 ($generated@@75 $generated@@134 $generated@@195)) ($generated@@44 ($generated@@21 $generated@@199 $generated@@200 $generated@@201))) ($generated@@42 ($generated@@46 ($generated@@75 $generated@@134 $generated@@195)) ($generated@@21 $generated@@199 $generated@@200 $generated@@201))))
 :pattern ( ($generated@@21 $generated@@199 $generated@@200 $generated@@201))
)))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@75 $generated@@134 $generated@@195)))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@T) ) (! (= ($generated@@58 $generated@@203 ($generated@@75 $generated@@203 $generated@@202)) ($generated@@75 $generated@@134 ($generated@@58 $generated@@203 $generated@@202)))
 :pattern ( ($generated@@58 $generated@@203 ($generated@@75 $generated@@203 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ) (!  (=> (= ($generated@@36 $generated@@204) 0) (= $generated@@204 $generated@@37))
 :pattern ( ($generated@@36 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (! ($generated@@88 $generated@@97 $generated@@206 $generated $generated@@205)
 :pattern ( ($generated@@88 $generated@@97 $generated@@206 $generated $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@23 $generated@@24 $generated@@207 ($generated@@25 $generated@@208)) (forall (($generated@@209 Int) ) (!  (=> (and (<= 0 $generated@@209) (< $generated@@209 ($generated@@36 $generated@@207))) ($generated@@29 ($generated@@110 $generated@@207 $generated@@209) $generated@@208))
 :pattern ( ($generated@@110 $generated@@207 $generated@@209))
)))
 :pattern ( ($generated@@23 $generated@@24 $generated@@207 ($generated@@25 $generated@@208)))
)))
(assert (forall (($generated@@210 T@U) ) (! ($generated@@23 $generated@@97 $generated@@210 $generated)
 :pattern ( ($generated@@23 $generated@@97 $generated@@210 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 (T@U) Int)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@225 true))
(let (($generated@@226  (=> (and (not ($generated@@42 $generated@@211 ($generated@@58 $generated@@24 $generated@@212))) (= (ControlFlow 0 6) 2)) $generated@@225)))
(let (($generated@@227  (=> ($generated@@42 $generated@@211 ($generated@@58 $generated@@24 $generated@@212)) (=> (and ($generated@@88 $generated@@24 $generated@@213 ($generated@@25 $generated) $generated@@214) ($generated@@88 $generated@@26 $generated@@215 ($generated@@27 $generated@@28) $generated@@214)) (=> (and (and (and ($generated@@88 $generated@@24 $generated@@212 ($generated@@25 $generated) $generated@@214) ($generated@@22 $generated@@213 $generated@@215 $generated@@212)) (and (= $generated@@216 ($generated@@21 $generated@@213 $generated@@215 $generated@@212)) ($generated@@70 $generated@@216 $generated@@28 $generated@@214))) (and (and ($generated@@40 ($generated@@21 $generated@@213 $generated@@215 $generated@@212)) ($generated@@70 $generated@@217 $generated@@35 $generated@@214)) (and ($generated@@41 $generated@@217) (= (ControlFlow 0 5) 2)))) $generated@@225)))))
(let (($generated@@228  (=> (and ($generated@@23 $generated@@24 $generated@@212 ($generated@@25 $generated)) ($generated@@88 $generated@@24 $generated@@212 ($generated@@25 $generated) $generated@@214)) (and (=> (= (ControlFlow 0 7) 5) $generated@@227) (=> (= (ControlFlow 0 7) 6) $generated@@226)))))
(let (($generated@@229  (=> (and (not (and ($generated@@23 $generated@@24 $generated@@212 ($generated@@25 $generated)) ($generated@@88 $generated@@24 $generated@@212 ($generated@@25 $generated) $generated@@214))) (= (ControlFlow 0 4) 2)) $generated@@225)))
(let (($generated@@230  (=> (and (and ($generated@@56 ($generated@@46 $generated@@218) ($generated@@46 $generated@@217)) (forall (($generated@@231 T@U) ) (!  (=> ($generated@@29 $generated@@231 $generated@@28) (=> ($generated@@42 ($generated@@46 $generated@@218) $generated@@231) (= ($generated@@57 $generated@@231 $generated@@218) ($generated@@57 $generated@@231 $generated@@217))))
 :pattern ( ($generated@@57 $generated@@231 $generated@@217))
 :pattern ( ($generated@@57 $generated@@231 $generated@@218))
 :pattern ( ($generated@@42 ($generated@@46 $generated@@218) $generated@@231))
))) (=> ($generated@@38 $generated@@218) ($generated@@38 $generated@@217))) (and (=> (= (ControlFlow 0 8) 7) $generated@@228) (=> (= (ControlFlow 0 8) 4) $generated@@229)))))
(let (($generated@@232  (=> (and (not (and (and ($generated@@56 ($generated@@46 $generated@@218) ($generated@@46 $generated@@217)) (forall (($generated@@233 T@U) ) (!  (=> ($generated@@29 $generated@@233 $generated@@28) (=> ($generated@@42 ($generated@@46 $generated@@218) $generated@@233) (= ($generated@@57 $generated@@233 $generated@@218) ($generated@@57 $generated@@233 $generated@@217))))
 :pattern ( ($generated@@57 $generated@@233 $generated@@217))
 :pattern ( ($generated@@57 $generated@@233 $generated@@218))
 :pattern ( ($generated@@42 ($generated@@46 $generated@@218) $generated@@233))
))) (=> ($generated@@38 $generated@@218) ($generated@@38 $generated@@217)))) (= (ControlFlow 0 3) 2)) $generated@@225)))
(let (($generated@@234  (=> (not ($generated@@38 $generated@@218)) (and (=> (= (ControlFlow 0 11) 8) $generated@@230) (=> (= (ControlFlow 0 11) 3) $generated@@232)))))
(let (($generated@@235  (=> ($generated@@38 $generated@@218) (=> (and ($generated@@70 $generated@@217 $generated@@35 $generated@@214) ($generated@@39 $generated@@217)) (and (=> (= (ControlFlow 0 10) 8) $generated@@230) (=> (= (ControlFlow 0 10) 3) $generated@@232))))))
(let (($generated@@236  (=> (and (and ($generated@@56 ($generated@@46 $generated@@218) ($generated@@46 $generated@@217)) (forall (($generated@@237 T@U) ) (!  (=> ($generated@@29 $generated@@237 $generated@@28) (=> ($generated@@42 ($generated@@46 $generated@@218) $generated@@237) (= ($generated@@57 $generated@@237 $generated@@218) ($generated@@57 $generated@@237 $generated@@217))))
 :pattern ( ($generated@@57 $generated@@237 $generated@@217))
 :pattern ( ($generated@@57 $generated@@237 $generated@@218))
 :pattern ( ($generated@@42 ($generated@@46 $generated@@218) $generated@@237))
))) (and ($generated@@70 $generated@@218 $generated@@35 $generated@@214) ($generated@@39 $generated@@218))) (and (=> (= (ControlFlow 0 12) 10) $generated@@235) (=> (= (ControlFlow 0 12) 11) $generated@@234)))))
(let (($generated@@238  (=> (not (and ($generated@@56 ($generated@@46 $generated@@218) ($generated@@46 $generated@@217)) (forall (($generated@@239 T@U) ) (!  (=> ($generated@@29 $generated@@239 $generated@@28) (=> ($generated@@42 ($generated@@46 $generated@@218) $generated@@239) (= ($generated@@57 $generated@@239 $generated@@218) ($generated@@57 $generated@@239 $generated@@217))))
 :pattern ( ($generated@@57 $generated@@239 $generated@@217))
 :pattern ( ($generated@@57 $generated@@239 $generated@@218))
 :pattern ( ($generated@@42 ($generated@@46 $generated@@218) $generated@@239))
)))) (and (=> (= (ControlFlow 0 9) 8) $generated@@230) (=> (= (ControlFlow 0 9) 3) $generated@@232)))))
(let (($generated@@240  (=> (not ($generated@@42 ($generated@@46 $generated@@218) $generated@@219)) (and (=> (= (ControlFlow 0 18) 12) $generated@@236) (=> (= (ControlFlow 0 18) 9) $generated@@238)))))
(let (($generated@@241  (=> ($generated@@42 ($generated@@46 $generated@@218) $generated@@219) (=> (and ($generated@@70 $generated@@219 $generated@@28 $generated@@214) ($generated@@70 $generated@@218 $generated@@35 $generated@@214)) (and (=> (= (ControlFlow 0 15) (- 0 17)) ($generated@@42 ($generated@@46 $generated@@218) $generated@@219)) (=> (and (and ($generated@@42 ($generated@@46 $generated@@218) $generated@@219) ($generated@@66 $generated@@219 $generated@@218)) (and ($generated@@70 $generated@@219 $generated@@28 $generated@@214) ($generated@@70 $generated@@217 $generated@@35 $generated@@214))) (and (=> (= (ControlFlow 0 15) (- 0 16)) ($generated@@42 ($generated@@46 $generated@@217) $generated@@219)) (=> (and ($generated@@42 ($generated@@46 $generated@@217) $generated@@219) ($generated@@66 $generated@@219 $generated@@217)) (and (=> (= (ControlFlow 0 15) 12) $generated@@236) (=> (= (ControlFlow 0 15) 9) $generated@@238))))))))))
(let (($generated@@242  (=> (and (and ($generated@@29 $generated@@219 $generated@@28) ($generated@@70 $generated@@219 $generated@@28 $generated@@214)) (and ($generated@@70 $generated@@218 $generated@@35 $generated@@214) ($generated@@45 $generated@@218))) (and (=> (= (ControlFlow 0 19) 15) $generated@@241) (=> (= (ControlFlow 0 19) 18) $generated@@240)))))
(let (($generated@@243  (=> (not (and ($generated@@29 $generated@@219 $generated@@28) ($generated@@70 $generated@@219 $generated@@28 $generated@@214))) (and (=> (= (ControlFlow 0 14) 12) $generated@@236) (=> (= (ControlFlow 0 14) 9) $generated@@238)))))
(let (($generated@@244  (=> ($generated@@56 ($generated@@46 $generated@@218) ($generated@@46 $generated@@217)) (and (=> (= (ControlFlow 0 20) 19) $generated@@242) (=> (= (ControlFlow 0 20) 14) $generated@@243)))))
(let (($generated@@245  (=> (not ($generated@@56 ($generated@@46 $generated@@218) ($generated@@46 $generated@@217))) (and (=> (= (ControlFlow 0 13) 12) $generated@@236) (=> (= (ControlFlow 0 13) 9) $generated@@238)))))
(let (($generated@@246  (=> ($generated@@29 ($generated@@54 $generated@@213 $generated@@215 $generated@@211 $generated@@218) $generated@@35) (=> (and (and ($generated@@88 $generated@@24 $generated@@213 ($generated@@25 $generated) $generated@@214) ($generated@@88 $generated@@26 $generated@@215 ($generated@@27 $generated@@28) $generated@@214)) (and ($generated@@88 $generated@@26 $generated@@211 ($generated@@27 ($generated@@25 $generated)) $generated@@214) ($generated@@70 $generated@@218 $generated@@35 $generated@@214))) (and (=> (= (ControlFlow 0 21) (- 0 22)) (or (and (and (and (= $generated@@213 $generated@@213) ($generated@@56 $generated@@215 $generated@@215)) ($generated@@56 $generated@@211 $generated@@211)) (= $generated@@218 $generated@@218)) (or (< ($generated@@220 $generated@@213) ($generated@@220 $generated@@213)) (and (= ($generated@@220 $generated@@213) ($generated@@220 $generated@@213)) (or (and ($generated@@78 $generated@@215 $generated@@215) (not ($generated@@78 $generated@@215 $generated@@215))) (and ($generated@@56 $generated@@215 $generated@@215) (and ($generated@@78 $generated@@211 $generated@@211) (not ($generated@@78 $generated@@211 $generated@@211))))))))) (=> (or (and (and (and (= $generated@@213 $generated@@213) ($generated@@56 $generated@@215 $generated@@215)) ($generated@@56 $generated@@211 $generated@@211)) (= $generated@@218 $generated@@218)) (or (< ($generated@@220 $generated@@213) ($generated@@220 $generated@@213)) (and (= ($generated@@220 $generated@@213) ($generated@@220 $generated@@213)) (or (and ($generated@@78 $generated@@215 $generated@@215) (not ($generated@@78 $generated@@215 $generated@@215))) (and ($generated@@56 $generated@@215 $generated@@215) (and ($generated@@78 $generated@@211 $generated@@211) (not ($generated@@78 $generated@@211 $generated@@211)))))))) (=> (or (and (and (and (= $generated@@213 $generated@@213) ($generated@@56 $generated@@215 $generated@@215)) ($generated@@56 $generated@@211 $generated@@211)) (= $generated@@218 $generated@@218)) ($generated@@55 $generated@@213 $generated@@215 $generated@@211 $generated@@218)) (=> (and (and (and (= $generated@@221 ($generated@@54 $generated@@213 $generated@@215 $generated@@211 $generated@@218)) ($generated@@55 $generated@@213 $generated@@215 $generated@@211 $generated@@218)) (and ($generated@@29 $generated@@221 $generated@@35) (= $generated@@217 $generated@@221))) (and (and ($generated@@70 $generated@@218 $generated@@35 $generated@@214) ($generated@@45 $generated@@218)) (and ($generated@@70 $generated@@217 $generated@@35 $generated@@214) ($generated@@45 $generated@@217)))) (and (=> (= (ControlFlow 0 21) 20) $generated@@244) (=> (= (ControlFlow 0 21) 13) $generated@@245))))))))))
(let (($generated@@247 true))
(let (($generated@@248  (=> (= $generated@@222 ($generated@@132 $generated@@223 $generated@@214 $generated@@3 false)) (and (=> (= (ControlFlow 0 23) 21) $generated@@246) (=> (= (ControlFlow 0 23) 1) $generated@@247)))))
(let (($generated@@249  (=> (and (and (and ($generated@@71 $generated@@214) ($generated@@224 $generated@@214)) (and ($generated@@23 $generated@@24 $generated@@213 ($generated@@25 $generated)) ($generated@@23 $generated@@26 $generated@@215 ($generated@@27 $generated@@28)))) (and (and ($generated@@23 $generated@@26 $generated@@211 ($generated@@27 ($generated@@25 $generated))) ($generated@@29 $generated@@218 $generated@@35)) (and (= 2 $generated@@20) (= (ControlFlow 0 24) 23)))) $generated@@248)))
$generated@@249))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
