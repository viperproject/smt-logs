(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@63 (T@U Bool T@U Bool) T@U)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@U Bool) Bool)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@U T@U Bool) Bool)
(declare-fun $generated@@69 () Bool)
(declare-fun $generated@@70 (T@U T@U Bool) T@U)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@99 (T@T T@U) T@U)
(declare-fun $generated@@100 (T@T T@U) T@U)
(declare-fun $generated@@103 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@165 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ) (! ($generated@@21 ($generated@@20 $generated@@22 $generated@@23) $generated@@23)
 :pattern ( ($generated@@20 $generated@@22 $generated@@23))
)))
(assert (= ($generated@@3 $generated@@29) 3))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (and (or ($generated@@27 $generated@@36 $generated@@37) (and (< 0 $generated@@24) (and (and ($generated@@28 $generated@@29 $generated@@37 ($generated@@30 $generated@@36)) ($generated@@31 $generated@@29 $generated@@37 ($generated@@30 $generated@@36) $generated@@35)) (not ($generated@@32 $generated@@37 $generated@@33))))) ($generated@@34 $generated@@35)) ($generated@@25 ($generated@@26 $generated@@36 $generated@@37) $generated@@36 $generated@@35))
 :pattern ( ($generated@@25 ($generated@@26 $generated@@36 $generated@@37) $generated@@36 $generated@@35))
))))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@21 $generated@@38 $generated@@40) ($generated@@21 ($generated@@20 $generated@@38 $generated@@39) $generated@@40))
 :pattern ( ($generated@@20 $generated@@38 $generated@@39) ($generated@@21 $generated@@38 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated@@21 $generated@@42 $generated@@44) ($generated@@21 ($generated@@41 $generated@@42 $generated@@43) $generated@@44))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43) ($generated@@21 $generated@@42 $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> ($generated@@21 $generated@@46 $generated@@47) ($generated@@21 ($generated@@41 $generated@@45 $generated@@46) $generated@@47))
 :pattern ( ($generated@@41 $generated@@45 $generated@@46) ($generated@@21 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@21 ($generated@@20 $generated@@48 $generated@@49) $generated@@50)  (or (= $generated@@50 $generated@@49) ($generated@@21 $generated@@48 $generated@@50)))
 :pattern ( ($generated@@21 ($generated@@20 $generated@@48 $generated@@49) $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> ($generated@@21 $generated@@53 $generated@@54) (not ($generated@@21 ($generated@@51 $generated@@52 $generated@@53) $generated@@54)))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53) ($generated@@21 $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> ($generated@@56 $generated@@57 $generated@@58) ($generated@@21 $generated@@58 ($generated@@55 $generated@@57 $generated@@58)))
 :pattern ( ($generated@@55 $generated@@57 $generated@@58))
)))
(assert ($generated@@59 $generated@@60))
(assert ($generated@@59 $generated@@61))
(assert (forall (($generated@@62 T@U) ) (!  (not ($generated@@21 $generated@@33 $generated@@62))
 :pattern ( ($generated@@21 $generated@@33 $generated@@62))
)))
(assert (= ($generated@@3 $generated@@67) 4))
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (or ($generated@@66 ($generated@@65 $generated@@29 $generated@@72) ($generated@@8 ($generated@@65 $generated@@4 $generated@@73))) (and (< 3 $generated@@24) (and ($generated@@28 $generated@@29 $generated@@72 ($generated@@30 $generated@@60)) (not ($generated@@32 $generated@@72 $generated@@33))))) (and (and ($generated@@27 $generated@@60 ($generated@@65 $generated@@29 $generated@@72)) (let (($generated@@74 ($generated@@65 $generated@@67 ($generated@@26 $generated@@60 ($generated@@65 $generated@@29 $generated@@72)))))
 (=> (not ($generated@@32 $generated@@72 ($generated@@20 $generated@@33 $generated@@74))) (and ($generated@@66 ($generated@@51 $generated@@72 ($generated@@20 $generated@@33 $generated@@74)) ($generated@@8 ($generated@@65 $generated@@4 $generated@@73))) ($generated@@68 ($generated@@63 ($generated@@64 $generated@@71) $generated@@69 ($generated@@51 $generated@@72 ($generated@@20 $generated@@33 $generated@@74)) ($generated@@8 ($generated@@65 $generated@@4 $generated@@73))) $generated@@74 ($generated@@8 ($generated@@65 $generated@@4 $generated@@73))))))) (= ($generated@@63 ($generated@@64 $generated@@71) true ($generated@@65 $generated@@29 $generated@@72) ($generated@@8 ($generated@@65 $generated@@4 $generated@@73))) (let (($generated@@75 ($generated@@65 $generated@@67 ($generated@@26 $generated@@60 ($generated@@65 $generated@@29 $generated@@72)))))
(ite ($generated@@32 $generated@@72 ($generated@@20 $generated@@33 $generated@@75)) $generated@@75 ($generated@@70 ($generated@@63 ($generated@@64 $generated@@71) $generated@@69 ($generated@@51 $generated@@72 ($generated@@20 $generated@@33 $generated@@75)) ($generated@@8 ($generated@@65 $generated@@4 $generated@@73))) $generated@@75 ($generated@@8 ($generated@@65 $generated@@4 $generated@@73))))))))
 :weight 3
 :pattern ( ($generated@@63 ($generated@@64 $generated@@71) true ($generated@@65 $generated@@29 $generated@@72) ($generated@@8 ($generated@@65 $generated@@4 $generated@@73))))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@41 ($generated@@41 $generated@@76 $generated@@77) $generated@@77) ($generated@@41 $generated@@76 $generated@@77))
 :pattern ( ($generated@@41 ($generated@@41 $generated@@76 $generated@@77) $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@21 ($generated@@51 $generated@@78 $generated@@79) $generated@@80)  (and ($generated@@21 $generated@@78 $generated@@80) (not ($generated@@21 $generated@@79 $generated@@80))))
 :pattern ( ($generated@@21 ($generated@@51 $generated@@78 $generated@@79) $generated@@80))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (or ($generated@@82 $generated@@86 $generated@@87) (and (< 1 $generated@@24) (and (and ($generated@@83 $generated@@86 $generated@@61) ($generated@@83 $generated@@87 $generated@@60)) ($generated@@21 ($generated@@84 $generated@@87) $generated@@86)))) ($generated@@83 ($generated@@81 $generated@@86 $generated@@87) $generated@@85))
 :pattern ( ($generated@@81 $generated@@86 $generated@@87))
))))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (and (or ($generated@@82 $generated@@89 $generated@@90) (and (< 1 $generated@@24) (and (and (and ($generated@@83 $generated@@89 $generated@@61) ($generated@@25 $generated@@89 $generated@@61 $generated@@88)) (and ($generated@@83 $generated@@90 $generated@@60) ($generated@@25 $generated@@90 $generated@@60 $generated@@88))) ($generated@@21 ($generated@@84 $generated@@90) $generated@@89)))) ($generated@@34 $generated@@88)) ($generated@@25 ($generated@@81 $generated@@89 $generated@@90) $generated@@85 $generated@@88))
 :pattern ( ($generated@@25 ($generated@@81 $generated@@89 $generated@@90) $generated@@85 $generated@@88))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@65 $generated@@92 $generated@@91) $generated@@91)
 :pattern ( ($generated@@65 $generated@@92 $generated@@91))
)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 Bool) ) (!  (=> (or ($generated@@68 $generated@@94 $generated@@95 $generated@@96) (and (< 2 $generated@@24) (and ($generated@@83 $generated@@94 $generated@@60) ($generated@@83 $generated@@95 $generated@@60)))) (and (let (($generated@@97 ($generated@@70 $generated@@94 $generated@@95 $generated@@96)))
 (and (and ($generated@@32 ($generated@@84 $generated@@97) ($generated@@41 ($generated@@84 $generated@@94) ($generated@@84 $generated@@95))) (forall (($generated@@98 T@U) ) (!  (=> ($generated@@83 $generated@@98 $generated@@61) (=> ($generated@@21 ($generated@@84 $generated@@97) $generated@@98) (= ($generated@@81 $generated@@98 $generated@@97) ($generated@@81 $generated@@98 (ite ($generated@@21 ($generated@@84 $generated@@95) $generated@@98) $generated@@95 $generated@@94)))))
 :pattern ( ($generated@@21 ($generated@@84 $generated@@95) $generated@@98))
 :pattern ( ($generated@@81 $generated@@98 $generated@@97))
 :pattern ( ($generated@@21 ($generated@@84 $generated@@97) $generated@@98))
))) (=> $generated@@96 ($generated@@32 ($generated@@93 $generated@@97) ($generated@@41 ($generated@@93 $generated@@94) ($generated@@93 $generated@@95)))))) ($generated@@83 ($generated@@70 $generated@@94 $generated@@95 $generated@@96) $generated@@60)))
 :pattern ( ($generated@@70 $generated@@94 $generated@@95 $generated@@96))
))))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@100 $generated@@102 ($generated@@99 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@99 $generated@@102 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@103 $generated@@104 $generated@@105) (forall (($generated@@106 T@U) ) (!  (or (not ($generated@@21 $generated@@104 $generated@@106)) (not ($generated@@21 $generated@@105 $generated@@106)))
 :pattern ( ($generated@@21 $generated@@104 $generated@@106))
 :pattern ( ($generated@@21 $generated@@105 $generated@@106))
)))
 :pattern ( ($generated@@103 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@107 ($generated@@30 $generated@@108)) (forall (($generated@@109 T@U) ) (!  (=> ($generated@@21 $generated@@107 $generated@@109) ($generated@@83 $generated@@109 $generated@@108))
 :pattern ( ($generated@@21 $generated@@107 $generated@@109))
)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@107 ($generated@@30 $generated@@108)))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@25 ($generated@@100 $generated@@113 $generated@@110) $generated@@111 $generated@@112) ($generated@@31 $generated@@113 $generated@@110 $generated@@111 $generated@@112))
 :pattern ( ($generated@@25 ($generated@@100 $generated@@113 $generated@@110) $generated@@111 $generated@@112))
)))
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 Bool) ) (!  (=> (or ($generated@@66 $generated@@115 $generated@@116) (and (< 3 $generated@@24) (and ($generated@@28 $generated@@29 $generated@@115 ($generated@@30 $generated@@60)) (not ($generated@@32 $generated@@115 $generated@@33))))) (and (and ($generated@@27 $generated@@60 $generated@@115) (let (($generated@@117 ($generated@@26 $generated@@60 $generated@@115)))
 (=> (not ($generated@@32 $generated@@115 ($generated@@20 $generated@@33 $generated@@117))) (and ($generated@@66 ($generated@@51 $generated@@115 ($generated@@20 $generated@@33 $generated@@117)) $generated@@116) ($generated@@68 ($generated@@63 $generated@@114 $generated@@69 ($generated@@51 $generated@@115 ($generated@@20 $generated@@33 $generated@@117)) $generated@@116) $generated@@117 $generated@@116))))) (= ($generated@@63 ($generated@@64 $generated@@114) true $generated@@115 $generated@@116) (let (($generated@@118 ($generated@@26 $generated@@60 $generated@@115)))
(ite ($generated@@32 $generated@@115 ($generated@@20 $generated@@33 $generated@@118)) $generated@@118 ($generated@@70 ($generated@@63 $generated@@114 $generated@@69 ($generated@@51 $generated@@115 ($generated@@20 $generated@@33 $generated@@118)) $generated@@116) $generated@@118 $generated@@116))))))
 :pattern ( ($generated@@63 ($generated@@64 $generated@@114) true $generated@@115 $generated@@116))
))))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@21 ($generated@@41 $generated@@119 $generated@@120) $generated@@121)  (or ($generated@@21 $generated@@119 $generated@@121) ($generated@@21 $generated@@120 $generated@@121)))
 :pattern ( ($generated@@21 ($generated@@41 $generated@@119 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@103 $generated@@122 $generated@@123) (and (= ($generated@@51 ($generated@@41 $generated@@122 $generated@@123) $generated@@122) $generated@@123) (= ($generated@@51 ($generated@@41 $generated@@122 $generated@@123) $generated@@123) $generated@@122)))
 :pattern ( ($generated@@41 $generated@@122 $generated@@123))
)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (or ($generated@@27 $generated@@124 $generated@@125) (and (< 0 $generated@@24) (and ($generated@@28 $generated@@29 $generated@@125 ($generated@@30 $generated@@124)) (not ($generated@@32 $generated@@125 $generated@@33))))) ($generated@@83 ($generated@@26 $generated@@124 $generated@@125) $generated@@124))
 :pattern ( ($generated@@26 $generated@@124 $generated@@125))
))))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> ($generated@@32 $generated@@126 $generated@@127) (= $generated@@126 $generated@@127))
 :pattern ( ($generated@@32 $generated@@126 $generated@@127))
)))
(assert  (=> (<= 3 $generated@@24) (forall (($generated@@128 T@U) ($generated@@129 Bool) ($generated@@130 T@U) ($generated@@131 Bool) ) (!  (=> (or ($generated@@66 $generated@@130 $generated@@131) (and (< 3 $generated@@24) (and ($generated@@28 $generated@@29 $generated@@130 ($generated@@30 $generated@@60)) (not ($generated@@32 $generated@@130 $generated@@33))))) ($generated@@83 ($generated@@63 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@60))
 :pattern ( ($generated@@63 $generated@@128 $generated@@129 $generated@@130 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@83 $generated@@132 $generated) (and (= ($generated@@100 $generated@@4 ($generated@@99 $generated@@4 $generated@@132)) $generated@@132) ($generated@@28 $generated@@4 ($generated@@99 $generated@@4 $generated@@132) $generated)))
 :pattern ( ($generated@@83 $generated@@132 $generated))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@83 ($generated@@100 $generated@@135 $generated@@133) $generated@@134) ($generated@@28 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@83 ($generated@@100 $generated@@135 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@59 $generated@@136) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> ($generated@@83 $generated@@138 $generated@@136) ($generated@@25 $generated@@138 $generated@@136 $generated@@137))
 :pattern ( ($generated@@25 $generated@@138 $generated@@136 $generated@@137))
)))
 :pattern ( ($generated@@59 $generated@@136))
)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (or ($generated@@27 $generated@@139 $generated@@141) (and (< 0 $generated@@24) (and (and ($generated@@34 $generated@@140) ($generated@@28 $generated@@29 $generated@@141 ($generated@@30 $generated@@139))) (not ($generated@@32 $generated@@141 $generated@@33))))) (and ($generated@@56 $generated@@139 $generated@@141) (= ($generated@@26 $generated@@139 $generated@@141) (let (($generated@@142 ($generated@@55 $generated@@139 $generated@@141)))
$generated@@142))))
 :pattern ( ($generated@@26 $generated@@139 $generated@@141) ($generated@@34 $generated@@140))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@31 $generated@@29 $generated@@143 ($generated@@30 $generated@@144) $generated@@145) (forall (($generated@@146 T@U) ) (!  (=> ($generated@@21 $generated@@143 $generated@@146) ($generated@@25 $generated@@146 $generated@@144 $generated@@145))
 :pattern ( ($generated@@21 $generated@@143 $generated@@146))
)))
 :pattern ( ($generated@@31 $generated@@29 $generated@@143 ($generated@@30 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@147 ($generated@@30 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@30 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@19 ($generated@@30 $generated@@149)) $generated@@1)
 :pattern ( ($generated@@30 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@99 $generated@@151 ($generated@@100 $generated@@151 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@100 $generated@@151 $generated@@150))
)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@153 T@U) ) (!  (=> (or ($generated@@152 $generated@@153) (and (< 0 $generated@@24) ($generated@@83 $generated@@153 $generated@@60))) ($generated@@28 $generated@@29 ($generated@@84 $generated@@153) ($generated@@30 $generated@@61)))
 :pattern ( ($generated@@84 $generated@@153))
))))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@156 T@U) ) (!  (=> (or ($generated@@154 $generated@@156) (and (< 0 $generated@@24) ($generated@@83 $generated@@156 $generated@@60))) ($generated@@28 $generated@@29 ($generated@@93 $generated@@156) ($generated@@30 $generated@@155)))
 :pattern ( ($generated@@93 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@41 $generated@@157 ($generated@@41 $generated@@157 $generated@@158)) ($generated@@41 $generated@@157 $generated@@158))
 :pattern ( ($generated@@41 $generated@@157 ($generated@@41 $generated@@157 $generated@@158)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 Bool) ) (! (= ($generated@@63 ($generated@@64 $generated@@159) $generated@@160 $generated@@161 $generated@@162) ($generated@@63 $generated@@159 $generated@@160 $generated@@161 $generated@@162))
 :pattern ( ($generated@@63 ($generated@@64 $generated@@159) $generated@@160 $generated@@161 $generated@@162))
)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (or ($generated@@154 $generated@@164) (and (< 0 $generated@@24) (and ($generated@@83 $generated@@164 $generated@@60) ($generated@@25 $generated@@164 $generated@@60 $generated@@163)))) ($generated@@34 $generated@@163)) ($generated@@31 $generated@@29 ($generated@@93 $generated@@164) ($generated@@30 $generated@@155) $generated@@163))
 :pattern ( ($generated@@31 $generated@@29 ($generated@@93 $generated@@164) ($generated@@30 $generated@@155) $generated@@163))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@165 $generated@@175 $generated@@176 $generated@@177 ($generated@@171 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@180 $generated@@181) $generated@@178)
 :weight 0
)) (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@165 $generated@@182 $generated@@183 $generated@@184 ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@165 $generated@@191 $generated@@192 $generated@@193 ($generated@@171 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@165 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (= ($generated@@3 $generated@@166) 5)) (= ($generated@@3 $generated@@167) 6)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@169 $generated@@200 $generated@@201 ($generated@@172 $generated@@200 $generated@@201 $generated@@203 $generated@@204 $generated@@202) $generated@@204) $generated@@202)
 :weight 0
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@209 $generated@@210) (= ($generated@@169 $generated@@205 $generated@@206 ($generated@@172 $generated@@205 $generated@@206 $generated@@208 $generated@@209 $generated@@207) $generated@@210) ($generated@@169 $generated@@205 $generated@@206 $generated@@208 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@3 ($generated@@170 $generated@@211 $generated@@212)) 7))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@173 ($generated@@170 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@170 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@174 ($generated@@170 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@170 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@8 ($generated@@165 $generated@@166 $generated@@167 $generated@@4 ($generated@@168 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (or (not (= $generated@@221 $generated@@217)) (not true)) ($generated@@8 ($generated@@99 $generated@@4 ($generated@@169 $generated@@167 $generated@@67 ($generated@@169 $generated@@166 ($generated@@170 $generated@@167 $generated@@67) $generated@@218 $generated@@221) $generated@@219)))) $generated@@220))
 :pattern ( ($generated@@165 $generated@@166 $generated@@167 $generated@@4 ($generated@@168 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> ($generated@@83 $generated@@223 ($generated@@30 $generated@@224)) (and (= ($generated@@100 $generated@@29 ($generated@@99 $generated@@29 $generated@@223)) $generated@@223) ($generated@@28 $generated@@29 ($generated@@99 $generated@@29 $generated@@223) ($generated@@30 $generated@@224))))
 :pattern ( ($generated@@83 $generated@@223 ($generated@@30 $generated@@224)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@32 $generated@@225 $generated@@226) (forall (($generated@@227 T@U) ) (! (= ($generated@@21 $generated@@225 $generated@@227) ($generated@@21 $generated@@226 $generated@@227))
 :pattern ( ($generated@@21 $generated@@225 $generated@@227))
 :pattern ( ($generated@@21 $generated@@226 $generated@@227))
)))
 :pattern ( ($generated@@32 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@T) ) (! (= ($generated@@100 $generated@@229 ($generated@@65 $generated@@229 $generated@@228)) ($generated@@65 $generated@@67 ($generated@@100 $generated@@229 $generated@@228)))
 :pattern ( ($generated@@100 $generated@@229 ($generated@@65 $generated@@229 $generated@@228)))
)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (or ($generated@@27 $generated@@230 ($generated@@65 $generated@@29 $generated@@232)) (and (< 0 $generated@@24) (and (and ($generated@@34 $generated@@231) ($generated@@28 $generated@@29 $generated@@232 ($generated@@30 $generated@@230))) (not ($generated@@32 $generated@@232 $generated@@33))))) (and ($generated@@56 $generated@@230 ($generated@@65 $generated@@29 $generated@@232)) (= ($generated@@26 $generated@@230 ($generated@@65 $generated@@29 $generated@@232)) (let (($generated@@233 ($generated@@55 $generated@@230 ($generated@@65 $generated@@29 $generated@@232))))
$generated@@233))))
 :weight 3
 :pattern ( ($generated@@26 $generated@@230 ($generated@@65 $generated@@29 $generated@@232)) ($generated@@34 $generated@@231))
))))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! ($generated@@31 $generated@@4 $generated@@235 $generated $generated@@234)
 :pattern ( ($generated@@31 $generated@@4 $generated@@235 $generated $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! ($generated@@28 $generated@@4 $generated@@236 $generated)
 :pattern ( ($generated@@28 $generated@@4 $generated@@236 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () Bool)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@246 true))
(let (($generated@@247  (=> (and ($generated@@25 $generated@@237 $generated@@60 $generated@@238) ($generated@@152 $generated@@237)) (=> (and (and ($generated@@21 ($generated@@84 $generated@@237) $generated@@239) ($generated@@31 $generated@@29 $generated@@240 ($generated@@30 $generated@@60) $generated@@238)) (and ($generated@@31 $generated@@4 ($generated@@7 $generated@@241) $generated $generated@@238) (= (ControlFlow 0 2) (- 0 1)))) (not ($generated@@32 $generated@@240 $generated@@33))))))
(let (($generated@@248  (=> (and (= $generated@@242 ($generated@@168 $generated@@243 $generated@@244 $generated@@2 false)) ($generated@@21 $generated@@240 $generated@@237)) (=> (and (and ($generated@@34 $generated@@238) ($generated@@245 $generated@@238)) (= $generated@@244 $generated@@238)) (and (=> (= (ControlFlow 0 4) 2) $generated@@247) (=> (= (ControlFlow 0 4) 3) $generated@@246))))))
(let (($generated@@249  (=> (and ($generated@@34 $generated@@244) ($generated@@245 $generated@@244)) (=> (and (and (and ($generated@@83 $generated@@239 $generated@@61) ($generated@@25 $generated@@239 $generated@@61 $generated@@244)) (and ($generated@@83 $generated@@237 $generated@@60) ($generated@@25 $generated@@237 $generated@@60 $generated@@244))) (and (and ($generated@@28 $generated@@29 $generated@@240 ($generated@@30 $generated@@60)) ($generated@@31 $generated@@29 $generated@@240 ($generated@@30 $generated@@60) $generated@@244)) (and (= 4 $generated@@24) (= (ControlFlow 0 5) 4)))) $generated@@248))))
$generated@@249)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
