(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 () Int)
(declare-fun $generated@@18 (T@U T@U) T@U)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (T@T T@U T@U) Bool)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@63 (T@U T@U) Bool)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@140 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@145 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (= ($generated@@1 $generated@@22) 3))
(assert  (=> (<= 1 $generated@@17) (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (or ($generated@@20 $generated@@35) (and (< 1 $generated@@17) ($generated@@21 $generated@@22 $generated@@35 ($generated@@23 $generated@@24)))) (and (=> (not ($generated@@25 $generated@@35 $generated@@26)) (and ($generated@@27 $generated@@24 $generated@@35) (let (($generated@@36 ($generated@@28 $generated@@24 $generated@@35)))
 (and ($generated@@29 $generated@@36) ($generated@@20 ($generated@@30 $generated@@35 ($generated@@31 $generated@@26 $generated@@36))))))) (= ($generated@@18 ($generated@@19 $generated@@34) $generated@@35) (ite ($generated@@25 $generated@@35 $generated@@26) $generated@@26 (let (($generated@@37 ($generated@@28 $generated@@24 $generated@@35)))
($generated@@32 ($generated@@33 $generated@@37) ($generated@@18 $generated@@34 ($generated@@30 $generated@@35 ($generated@@31 $generated@@26 $generated@@37)))))))))
 :pattern ( ($generated@@18 ($generated@@19 $generated@@34) $generated@@35))
))))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! ($generated@@38 ($generated@@31 $generated@@39 $generated@@40) $generated@@40)
 :pattern ( ($generated@@31 $generated@@39 $generated@@40))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> (and (or ($generated@@27 $generated@@45 $generated@@46) (and (< 0 $generated@@17) (and (and ($generated@@21 $generated@@22 $generated@@46 ($generated@@23 $generated@@45)) ($generated@@42 $generated@@22 $generated@@46 ($generated@@23 $generated@@45) $generated@@44)) (not ($generated@@25 $generated@@46 $generated@@26))))) ($generated@@43 $generated@@44)) ($generated@@41 ($generated@@28 $generated@@45 $generated@@46) $generated@@45 $generated@@44))
 :pattern ( ($generated@@41 ($generated@@28 $generated@@45 $generated@@46) $generated@@45 $generated@@44))
))))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> ($generated@@38 $generated@@47 $generated@@49) ($generated@@38 ($generated@@31 $generated@@47 $generated@@48) $generated@@49))
 :pattern ( ($generated@@31 $generated@@47 $generated@@48) ($generated@@38 $generated@@47 $generated@@49))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> ($generated@@38 $generated@@50 $generated@@52) ($generated@@38 ($generated@@32 $generated@@50 $generated@@51) $generated@@52))
 :pattern ( ($generated@@32 $generated@@50 $generated@@51) ($generated@@38 $generated@@50 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> ($generated@@38 $generated@@54 $generated@@55) ($generated@@38 ($generated@@32 $generated@@53 $generated@@54) $generated@@55))
 :pattern ( ($generated@@32 $generated@@53 $generated@@54) ($generated@@38 $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@38 ($generated@@31 $generated@@56 $generated@@57) $generated@@58)  (or (= $generated@@58 $generated@@57) ($generated@@38 $generated@@56 $generated@@58)))
 :pattern ( ($generated@@38 ($generated@@31 $generated@@56 $generated@@57) $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@38 $generated@@60 $generated@@61) (not ($generated@@38 ($generated@@30 $generated@@59 $generated@@60) $generated@@61)))
 :pattern ( ($generated@@30 $generated@@59 $generated@@60) ($generated@@38 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@63 $generated@@64 $generated@@65) ($generated@@38 $generated@@65 ($generated@@62 $generated@@64 $generated@@65)))
 :pattern ( ($generated@@62 $generated@@64 $generated@@65))
)))
(assert ($generated@@66 $generated@@24))
(assert ($generated@@66 $generated@@67))
(assert (forall (($generated@@68 T@U) ) (!  (not ($generated@@38 $generated@@26 $generated@@68))
 :pattern ( ($generated@@38 $generated@@26 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@32 ($generated@@32 $generated@@69 $generated@@70) $generated@@70) ($generated@@32 $generated@@69 $generated@@70))
 :pattern ( ($generated@@32 ($generated@@32 $generated@@69 $generated@@70) $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@38 ($generated@@30 $generated@@71 $generated@@72) $generated@@73)  (and ($generated@@38 $generated@@71 $generated@@73) (not ($generated@@38 $generated@@72 $generated@@73))))
 :pattern ( ($generated@@38 ($generated@@30 $generated@@71 $generated@@72) $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 $generated@@75) $generated@@75)
 :pattern ( ($generated@@74 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@77 $generated@@78 $generated@@79) (forall (($generated@@80 T@U) ) (!  (=> ($generated@@38 $generated@@78 $generated@@80) ($generated@@38 $generated@@79 $generated@@80))
 :pattern ( ($generated@@38 $generated@@78 $generated@@80))
 :pattern ( ($generated@@38 $generated@@79 $generated@@80))
)))
 :pattern ( ($generated@@77 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@81 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@81 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@85 $generated@@86 $generated@@87) (forall (($generated@@88 T@U) ) (!  (or (not ($generated@@38 $generated@@86 $generated@@88)) (not ($generated@@38 $generated@@87 $generated@@88)))
 :pattern ( ($generated@@38 $generated@@86 $generated@@88))
 :pattern ( ($generated@@38 $generated@@87 $generated@@88))
)))
 :pattern ( ($generated@@85 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@21 $generated@@22 $generated@@90 ($generated@@23 $generated@@91)) (forall (($generated@@92 T@U) ) (!  (=> ($generated@@38 $generated@@90 $generated@@92) ($generated@@89 $generated@@92 $generated@@91))
 :pattern ( ($generated@@38 $generated@@90 $generated@@92))
)))
 :pattern ( ($generated@@21 $generated@@22 $generated@@90 ($generated@@23 $generated@@91)))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@41 ($generated@@82 $generated@@96 $generated@@93) $generated@@94 $generated@@95) ($generated@@42 $generated@@96 $generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@41 ($generated@@82 $generated@@96 $generated@@93) $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@38 ($generated@@32 $generated@@97 $generated@@98) $generated@@99)  (or ($generated@@38 $generated@@97 $generated@@99) ($generated@@38 $generated@@98 $generated@@99)))
 :pattern ( ($generated@@38 ($generated@@32 $generated@@97 $generated@@98) $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@85 $generated@@100 $generated@@101) (and (= ($generated@@30 ($generated@@32 $generated@@100 $generated@@101) $generated@@100) $generated@@101) (= ($generated@@30 ($generated@@32 $generated@@100 $generated@@101) $generated@@101) $generated@@100)))
 :pattern ( ($generated@@32 $generated@@100 $generated@@101))
)))
(assert (= ($generated@@1 $generated@@102) 4))
(assert  (=> (<= 1 $generated@@17) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@20 ($generated@@74 $generated@@22 $generated@@104)) (and (< 1 $generated@@17) ($generated@@21 $generated@@22 $generated@@104 ($generated@@23 $generated@@24)))) (and (=> (not ($generated@@25 $generated@@104 $generated@@26)) (and ($generated@@27 $generated@@24 ($generated@@74 $generated@@22 $generated@@104)) (let (($generated@@105 ($generated@@74 $generated@@102 ($generated@@28 $generated@@24 ($generated@@74 $generated@@22 $generated@@104)))))
 (and ($generated@@29 $generated@@105) ($generated@@20 ($generated@@30 $generated@@104 ($generated@@31 $generated@@26 $generated@@105))))))) (= ($generated@@18 ($generated@@19 $generated@@103) ($generated@@74 $generated@@22 $generated@@104)) (ite ($generated@@25 $generated@@104 $generated@@26) $generated@@26 (let (($generated@@106 ($generated@@74 $generated@@102 ($generated@@28 $generated@@24 ($generated@@74 $generated@@22 $generated@@104)))))
($generated@@32 ($generated@@33 $generated@@106) ($generated@@18 ($generated@@19 $generated@@103) ($generated@@30 $generated@@104 ($generated@@31 $generated@@26 $generated@@106)))))))))
 :weight 3
 :pattern ( ($generated@@18 ($generated@@19 $generated@@103) ($generated@@74 $generated@@22 $generated@@104)))
))))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (or ($generated@@27 $generated@@107 $generated@@108) (and (< 0 $generated@@17) (and ($generated@@21 $generated@@22 $generated@@108 ($generated@@23 $generated@@107)) (not ($generated@@25 $generated@@108 $generated@@26))))) ($generated@@89 ($generated@@28 $generated@@107 $generated@@108) $generated@@107))
 :pattern ( ($generated@@28 $generated@@107 $generated@@108))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> ($generated@@25 $generated@@109 $generated@@110) (= $generated@@109 $generated@@110))
 :pattern ( ($generated@@25 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@89 ($generated@@82 $generated@@113 $generated@@111) $generated@@112) ($generated@@21 $generated@@113 $generated@@111 $generated@@112))
 :pattern ( ($generated@@89 ($generated@@82 $generated@@113 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@66 $generated@@114) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@89 $generated@@116 $generated@@114) ($generated@@41 $generated@@116 $generated@@114 $generated@@115))
 :pattern ( ($generated@@41 $generated@@116 $generated@@114 $generated@@115))
)))
 :pattern ( ($generated@@66 $generated@@114))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (or ($generated@@27 $generated@@117 $generated@@119) (and (< 0 $generated@@17) (and (and ($generated@@43 $generated@@118) ($generated@@21 $generated@@22 $generated@@119 ($generated@@23 $generated@@117))) (not ($generated@@25 $generated@@119 $generated@@26))))) (and ($generated@@63 $generated@@117 $generated@@119) (= ($generated@@28 $generated@@117 $generated@@119) (let (($generated@@120 ($generated@@62 $generated@@117 $generated@@119)))
$generated@@120))))
 :pattern ( ($generated@@28 $generated@@117 $generated@@119) ($generated@@43 $generated@@118))
))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@42 $generated@@22 $generated@@121 ($generated@@23 $generated@@122) $generated@@123) (forall (($generated@@124 T@U) ) (!  (=> ($generated@@38 $generated@@121 $generated@@124) ($generated@@41 $generated@@124 $generated@@122 $generated@@123))
 :pattern ( ($generated@@38 $generated@@121 $generated@@124))
)))
 :pattern ( ($generated@@42 $generated@@22 $generated@@121 ($generated@@23 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@23 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@23 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@127 ($generated@@23 $generated@@128)) $generated)
 :pattern ( ($generated@@23 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@81 $generated@@130 ($generated@@82 $generated@@130 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@82 $generated@@130 $generated@@129))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@131 T@U) ) (!  (=> (or ($generated@@29 $generated@@131) (and (< 0 $generated@@17) ($generated@@89 $generated@@131 $generated@@24))) ($generated@@21 $generated@@22 ($generated@@33 $generated@@131) ($generated@@23 $generated@@67)))
 :pattern ( ($generated@@33 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@132) $generated@@133) ($generated@@18 $generated@@132 $generated@@133))
 :pattern ( ($generated@@18 ($generated@@19 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@32 $generated@@134 ($generated@@32 $generated@@134 $generated@@135)) ($generated@@32 $generated@@134 $generated@@135))
 :pattern ( ($generated@@32 $generated@@134 ($generated@@32 $generated@@134 $generated@@135)))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@136 $generated@@146 $generated@@147 $generated@@148 ($generated@@142 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@151 $generated@@152) $generated@@149)
 :weight 0
)) (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@136 $generated@@153 $generated@@154 $generated@@155 ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@136 $generated@@162 $generated@@163 $generated@@164 ($generated@@142 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@136 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)))) (= ($generated@@1 $generated@@137) 5)) (= ($generated@@1 $generated@@138) 6)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@140 $generated@@171 $generated@@172 ($generated@@143 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@173) $generated@@175) $generated@@173)
 :weight 0
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@180 $generated@@181) (= ($generated@@140 $generated@@176 $generated@@177 ($generated@@143 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@178) $generated@@181) ($generated@@140 $generated@@176 $generated@@177 $generated@@179 $generated@@181)))
 :weight 0
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@141 $generated@@182 $generated@@183)) 7))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@144 ($generated@@141 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@141 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@145 ($generated@@141 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@141 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@6 ($generated@@136 $generated@@137 $generated@@138 $generated@@2 ($generated@@139 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (or (not (= $generated@@192 $generated@@188)) (not true)) ($generated@@6 ($generated@@81 $generated@@2 ($generated@@140 $generated@@138 $generated@@102 ($generated@@140 $generated@@137 ($generated@@141 $generated@@138 $generated@@102) $generated@@189 $generated@@192) $generated@@190)))) $generated@@191))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138 $generated@@2 ($generated@@139 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert  (=> (<= 1 $generated@@17) (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (or ($generated@@20 $generated@@195) (and (< 1 $generated@@17) ($generated@@21 $generated@@22 $generated@@195 ($generated@@23 $generated@@24)))) ($generated@@21 $generated@@22 ($generated@@18 $generated@@194 $generated@@195) ($generated@@23 $generated@@67)))
 :pattern ( ($generated@@18 $generated@@194 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@89 $generated@@196 ($generated@@23 $generated@@197)) (and (= ($generated@@82 $generated@@22 ($generated@@81 $generated@@22 $generated@@196)) $generated@@196) ($generated@@21 $generated@@22 ($generated@@81 $generated@@22 $generated@@196) ($generated@@23 $generated@@197))))
 :pattern ( ($generated@@89 $generated@@196 ($generated@@23 $generated@@197)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@25 $generated@@198 $generated@@199) (forall (($generated@@200 T@U) ) (! (= ($generated@@38 $generated@@198 $generated@@200) ($generated@@38 $generated@@199 $generated@@200))
 :pattern ( ($generated@@38 $generated@@198 $generated@@200))
 :pattern ( ($generated@@38 $generated@@199 $generated@@200))
)))
 :pattern ( ($generated@@25 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@T) ) (! (= ($generated@@82 $generated@@202 ($generated@@74 $generated@@202 $generated@@201)) ($generated@@74 $generated@@102 ($generated@@82 $generated@@202 $generated@@201)))
 :pattern ( ($generated@@82 $generated@@202 ($generated@@74 $generated@@202 $generated@@201)))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (or ($generated@@27 $generated@@203 ($generated@@74 $generated@@22 $generated@@205)) (and (< 0 $generated@@17) (and (and ($generated@@43 $generated@@204) ($generated@@21 $generated@@22 $generated@@205 ($generated@@23 $generated@@203))) (not ($generated@@25 $generated@@205 $generated@@26))))) (and ($generated@@63 $generated@@203 ($generated@@74 $generated@@22 $generated@@205)) (= ($generated@@28 $generated@@203 ($generated@@74 $generated@@22 $generated@@205)) (let (($generated@@206 ($generated@@62 $generated@@203 ($generated@@74 $generated@@22 $generated@@205))))
$generated@@206))))
 :weight 3
 :pattern ( ($generated@@28 $generated@@203 ($generated@@74 $generated@@22 $generated@@205)) ($generated@@43 $generated@@204))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@215  (=> (and (not ($generated@@25 $generated@@207 $generated@@26)) ($generated@@42 $generated@@22 $generated@@207 ($generated@@23 $generated@@24) $generated@@208)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not ($generated@@25 $generated@@207 $generated@@26))) (=> (not ($generated@@25 $generated@@207 $generated@@26)) (=> (and ($generated@@27 $generated@@24 $generated@@207) (= $generated@@209 ($generated@@28 $generated@@24 $generated@@207))) (=> (and (and (and ($generated@@27 $generated@@24 $generated@@207) ($generated@@89 $generated@@209 $generated@@24)) (and (= $generated@@210 $generated@@209) ($generated@@41 $generated@@210 $generated@@24 $generated@@208))) (and (and ($generated@@29 $generated@@210) (= $generated@@211 ($generated@@30 $generated@@207 ($generated@@31 $generated@@26 $generated@@210)))) (and ($generated@@42 $generated@@22 $generated@@211 ($generated@@23 $generated@@24) $generated@@208) (= (ControlFlow 0 4) (- 0 3))))) (and ($generated@@77 $generated@@211 $generated@@207) (not ($generated@@77 $generated@@207 $generated@@211))))))))))
(let (($generated@@216 true))
(let (($generated@@217 true))
(let (($generated@@218  (=> (= $generated@@212 ($generated@@139 $generated@@213 $generated@@208 $generated@@0 false)) (and (and (=> (= (ControlFlow 0 6) 1) $generated@@217) (=> (= (ControlFlow 0 6) 2) $generated@@216)) (=> (= (ControlFlow 0 6) 4) $generated@@215)))))
(let (($generated@@219  (=> (and (and (and ($generated@@43 $generated@@208) ($generated@@214 $generated@@208)) ($generated@@21 $generated@@22 $generated@@207 ($generated@@23 $generated@@24))) (and (= 1 $generated@@17) (= (ControlFlow 0 7) 6))) $generated@@218)))
$generated@@219))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
