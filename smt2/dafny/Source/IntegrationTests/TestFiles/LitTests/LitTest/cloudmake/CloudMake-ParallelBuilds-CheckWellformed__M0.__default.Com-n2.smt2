(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U) T@U)
(declare-fun $generated@@18 (T@U T@U) Bool)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@34 () Int)
(declare-fun $generated@@35 (T@U T@U T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@61 (T@U T@U) T@U)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U T@U) Bool)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@130 (T@U) Bool)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@140 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@T T@T) T@T)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@19 T@U) ($generated@@20 T@U) ) (! ($generated@@18 ($generated@@17 $generated@@19 $generated@@20) $generated@@20)
 :pattern ( ($generated@@17 $generated@@19 $generated@@20))
)))
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ($generated@@23 T@U) ) (!  (=> ($generated@@18 $generated@@21 $generated@@23) ($generated@@18 ($generated@@17 $generated@@21 $generated@@22) $generated@@23))
 :pattern ( ($generated@@17 $generated@@21 $generated@@22) ($generated@@18 $generated@@21 $generated@@23))
)))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@18 $generated@@25 $generated@@27) ($generated@@18 ($generated@@24 $generated@@25 $generated@@26) $generated@@27))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26) ($generated@@18 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@18 $generated@@29 $generated@@30) ($generated@@18 ($generated@@24 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@24 $generated@@28 $generated@@29) ($generated@@18 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@18 ($generated@@17 $generated@@31 $generated@@32) $generated@@33)  (or (= $generated@@33 $generated@@32) ($generated@@18 $generated@@31 $generated@@33)))
 :pattern ( ($generated@@18 ($generated@@17 $generated@@31 $generated@@32) $generated@@33))
)))
(assert (= ($generated@@1 $generated@@40) 3))
(assert  (=> (<= 3 $generated@@34) (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (or ($generated@@38 $generated@@48) (and (< 3 $generated@@34) (and (and ($generated@@39 $generated@@40 $generated@@48 ($generated@@41 $generated@@37)) ($generated@@42 $generated@@40 $generated@@48 ($generated@@41 $generated@@37) $generated@@46)) (not ($generated@@43 $generated@@48 $generated@@44))))) ($generated@@45 $generated@@46)) ($generated@@35 ($generated@@36 $generated@@47 $generated@@48) $generated@@37 $generated@@46))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@47 $generated@@48) $generated@@37 $generated@@46))
))))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> ($generated@@18 $generated@@51 $generated@@52) (not ($generated@@18 ($generated@@49 $generated@@50 $generated@@51) $generated@@52)))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51) ($generated@@18 $generated@@51 $generated@@52))
)))
(assert ($generated@@53 $generated@@54))
(assert (forall (($generated@@55 T@U) ) (!  (not ($generated@@18 $generated@@44 $generated@@55))
 :pattern ( ($generated@@18 $generated@@44 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@24 ($generated@@24 $generated@@56 $generated@@57) $generated@@57) ($generated@@24 $generated@@56 $generated@@57))
 :pattern ( ($generated@@24 ($generated@@24 $generated@@56 $generated@@57) $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@18 ($generated@@49 $generated@@58 $generated@@59) $generated@@60)  (and ($generated@@18 $generated@@58 $generated@@60) (not ($generated@@18 $generated@@59 $generated@@60))))
 :pattern ( ($generated@@18 ($generated@@49 $generated@@58 $generated@@59) $generated@@60))
)))
(assert  (=> (<= 2 $generated@@34) (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@62 $generated@@66 $generated@@67) (and (< 2 $generated@@34) (and ($generated@@63 $generated@@66 $generated@@37) ($generated@@63 $generated@@67 $generated@@37)))) (and (let (($generated@@68 ($generated@@61 $generated@@66 $generated@@67)))
 (and ($generated@@43 ($generated@@64 $generated@@68) ($generated@@24 ($generated@@64 $generated@@66) ($generated@@64 $generated@@67))) (forall (($generated@@69 T@U) ) (!  (=> ($generated@@63 $generated@@69 $generated@@54) (=> ($generated@@18 ($generated@@64 $generated@@68) $generated@@69) (= ($generated@@65 $generated@@69 $generated@@68) ($generated@@65 $generated@@69 (ite ($generated@@18 ($generated@@64 $generated@@66) $generated@@69) $generated@@66 $generated@@67)))))
 :pattern ( ($generated@@18 ($generated@@64 $generated@@66) $generated@@69))
 :pattern ( ($generated@@65 $generated@@69 $generated@@68))
 :pattern ( ($generated@@18 ($generated@@64 $generated@@68) $generated@@69))
)))) ($generated@@63 ($generated@@61 $generated@@66 $generated@@67) $generated@@37)))
 :pattern ( ($generated@@61 $generated@@66 $generated@@67))
))))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (or ($generated@@70 $generated@@72 $generated@@73) (and (< 1 $generated@@34) (and (and ($generated@@63 $generated@@72 $generated@@54) ($generated@@63 $generated@@73 $generated@@37)) ($generated@@18 ($generated@@64 $generated@@73) $generated@@72)))) ($generated@@63 ($generated@@65 $generated@@72 $generated@@73) $generated@@71))
 :pattern ( ($generated@@65 $generated@@72 $generated@@73))
))))
(assert  (=> (<= 1 $generated@@34) (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (and (or ($generated@@70 $generated@@75 $generated@@76) (and (< 1 $generated@@34) (and (and (and ($generated@@63 $generated@@75 $generated@@54) ($generated@@35 $generated@@75 $generated@@54 $generated@@74)) (and ($generated@@63 $generated@@76 $generated@@37) ($generated@@35 $generated@@76 $generated@@37 $generated@@74))) ($generated@@18 ($generated@@64 $generated@@76) $generated@@75)))) ($generated@@45 $generated@@74)) ($generated@@35 ($generated@@65 $generated@@75 $generated@@76) $generated@@71 $generated@@74))
 :pattern ( ($generated@@35 ($generated@@65 $generated@@75 $generated@@76) $generated@@71 $generated@@74))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@80 $generated@@81 $generated@@82) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@18 $generated@@81 $generated@@83) ($generated@@18 $generated@@82 $generated@@83))
 :pattern ( ($generated@@18 $generated@@81 $generated@@83))
 :pattern ( ($generated@@18 $generated@@82 $generated@@83))
)))
 :pattern ( ($generated@@80 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@84 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@84 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 $generated@@89 $generated@@90) (forall (($generated@@91 T@U) ) (!  (or (not ($generated@@18 $generated@@89 $generated@@91)) (not ($generated@@18 $generated@@90 $generated@@91)))
 :pattern ( ($generated@@18 $generated@@89 $generated@@91))
 :pattern ( ($generated@@18 $generated@@90 $generated@@91))
)))
 :pattern ( ($generated@@88 $generated@@89 $generated@@90))
)))
(assert  (=> (<= 3 $generated@@34) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or ($generated@@38 $generated@@97) (and (< 3 $generated@@34) (and (and ($generated@@45 $generated@@96) ($generated@@39 $generated@@40 $generated@@97 ($generated@@41 $generated@@37))) (not ($generated@@43 $generated@@97 $generated@@44))))) (and (and ($generated@@93 $generated@@97) (=> (not ($generated@@43 $generated@@97 ($generated@@17 $generated@@44 ($generated@@94 $generated@@97)))) (and ($generated@@38 ($generated@@49 $generated@@97 ($generated@@17 $generated@@44 ($generated@@94 $generated@@97)))) ($generated@@62 ($generated@@94 $generated@@97) ($generated@@36 $generated@@95 ($generated@@49 $generated@@97 ($generated@@17 $generated@@44 ($generated@@94 $generated@@97)))))))) (= ($generated@@36 ($generated@@92 $generated@@95) $generated@@97) (let (($generated@@98 ($generated@@94 $generated@@97)))
(ite ($generated@@43 $generated@@97 ($generated@@17 $generated@@44 $generated@@98)) $generated@@98 ($generated@@61 $generated@@98 ($generated@@36 $generated@@95 ($generated@@49 $generated@@97 ($generated@@17 $generated@@44 $generated@@98)))))))))
 :pattern ( ($generated@@36 ($generated@@92 $generated@@95) $generated@@97) ($generated@@45 $generated@@96))
))))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@93 $generated@@99) (and ($generated@@63 ($generated@@94 $generated@@99) $generated@@37) ($generated@@18 $generated@@99 ($generated@@94 $generated@@99))))
 :pattern ( ($generated@@94 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@100 ($generated@@41 $generated@@101)) (forall (($generated@@102 T@U) ) (!  (=> ($generated@@18 $generated@@100 $generated@@102) ($generated@@63 $generated@@102 $generated@@101))
 :pattern ( ($generated@@18 $generated@@100 $generated@@102))
)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@100 ($generated@@41 $generated@@101)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@35 ($generated@@85 $generated@@106 $generated@@103) $generated@@104 $generated@@105) ($generated@@42 $generated@@106 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@35 ($generated@@85 $generated@@106 $generated@@103) $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@18 ($generated@@24 $generated@@107 $generated@@108) $generated@@109)  (or ($generated@@18 $generated@@107 $generated@@109) ($generated@@18 $generated@@108 $generated@@109)))
 :pattern ( ($generated@@18 ($generated@@24 $generated@@107 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> ($generated@@88 $generated@@110 $generated@@111) (and (= ($generated@@49 ($generated@@24 $generated@@110 $generated@@111) $generated@@110) $generated@@111) (= ($generated@@49 ($generated@@24 $generated@@110 $generated@@111) $generated@@111) $generated@@110)))
 :pattern ( ($generated@@24 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> ($generated@@43 $generated@@112 $generated@@113) (= $generated@@112 $generated@@113))
 :pattern ( ($generated@@43 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@63 ($generated@@85 $generated@@116 $generated@@114) $generated@@115) ($generated@@39 $generated@@116 $generated@@114 $generated@@115))
 :pattern ( ($generated@@63 ($generated@@85 $generated@@116 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@53 $generated@@117) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> ($generated@@63 $generated@@119 $generated@@117) ($generated@@35 $generated@@119 $generated@@117 $generated@@118))
 :pattern ( ($generated@@35 $generated@@119 $generated@@117 $generated@@118))
)))
 :pattern ( ($generated@@53 $generated@@117))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@42 $generated@@40 $generated@@120 ($generated@@41 $generated@@121) $generated@@122) (forall (($generated@@123 T@U) ) (!  (=> ($generated@@18 $generated@@120 $generated@@123) ($generated@@35 $generated@@123 $generated@@121 $generated@@122))
 :pattern ( ($generated@@18 $generated@@120 $generated@@123))
)))
 :pattern ( ($generated@@42 $generated@@40 $generated@@120 ($generated@@41 $generated@@121) $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@124 ($generated@@41 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@41 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@126 ($generated@@41 $generated@@127)) $generated)
 :pattern ( ($generated@@41 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@84 $generated@@129 ($generated@@85 $generated@@129 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@85 $generated@@129 $generated@@128))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@131 T@U) ) (!  (=> (or ($generated@@130 $generated@@131) (and (< 0 $generated@@34) ($generated@@63 $generated@@131 $generated@@37))) ($generated@@39 $generated@@40 ($generated@@64 $generated@@131) ($generated@@41 $generated@@54)))
 :pattern ( ($generated@@64 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@36 ($generated@@92 $generated@@132) $generated@@133) ($generated@@36 $generated@@132 $generated@@133))
 :pattern ( ($generated@@36 ($generated@@92 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@24 $generated@@134 ($generated@@24 $generated@@134 $generated@@135)) ($generated@@24 $generated@@134 $generated@@135))
 :pattern ( ($generated@@24 $generated@@134 ($generated@@24 $generated@@134 $generated@@135)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@136 $generated@@147 $generated@@148 $generated@@149 ($generated@@143 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@152 $generated@@153) $generated@@150)
 :weight 0
)) (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@136 $generated@@154 $generated@@155 $generated@@156 ($generated@@143 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@136 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@136 $generated@@163 $generated@@164 $generated@@165 ($generated@@143 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@136 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (= ($generated@@1 $generated@@137) 4)) (= ($generated@@1 $generated@@138) 5)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@140 $generated@@172 $generated@@173 ($generated@@144 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@174) $generated@@176) $generated@@174)
 :weight 0
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@181 $generated@@182) (= ($generated@@140 $generated@@177 $generated@@178 ($generated@@144 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@179) $generated@@182) ($generated@@140 $generated@@177 $generated@@178 $generated@@180 $generated@@182)))
 :weight 0
))) (= ($generated@@1 $generated@@141) 6)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@142 $generated@@183 $generated@@184)) 7))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@145 ($generated@@142 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@142 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@146 ($generated@@142 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@142 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 Bool) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@6 ($generated@@136 $generated@@137 $generated@@138 $generated@@2 ($generated@@139 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))  (=> (and (or (not (= $generated@@193 $generated@@189)) (not true)) ($generated@@6 ($generated@@84 $generated@@2 ($generated@@140 $generated@@138 $generated@@141 ($generated@@140 $generated@@137 ($generated@@142 $generated@@138 $generated@@141) $generated@@190 $generated@@193) $generated@@191)))) $generated@@192))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138 $generated@@2 ($generated@@139 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))
)))
(assert  (=> (<= 2 $generated@@34) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (or ($generated@@62 $generated@@196 $generated@@197) (and (< 2 $generated@@34) (and (and ($generated@@63 $generated@@196 $generated@@37) ($generated@@35 $generated@@196 $generated@@37 $generated@@195)) (and ($generated@@63 $generated@@197 $generated@@37) ($generated@@35 $generated@@197 $generated@@37 $generated@@195))))) ($generated@@45 $generated@@195)) ($generated@@35 ($generated@@61 $generated@@196 $generated@@197) $generated@@37 $generated@@195))
 :pattern ( ($generated@@35 ($generated@@61 $generated@@196 $generated@@197) $generated@@37 $generated@@195))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> ($generated@@63 $generated@@198 ($generated@@41 $generated@@199)) (and (= ($generated@@85 $generated@@40 ($generated@@84 $generated@@40 $generated@@198)) $generated@@198) ($generated@@39 $generated@@40 ($generated@@84 $generated@@40 $generated@@198) ($generated@@41 $generated@@199))))
 :pattern ( ($generated@@63 $generated@@198 ($generated@@41 $generated@@199)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@43 $generated@@200 $generated@@201) (forall (($generated@@202 T@U) ) (! (= ($generated@@18 $generated@@200 $generated@@202) ($generated@@18 $generated@@201 $generated@@202))
 :pattern ( ($generated@@18 $generated@@200 $generated@@202))
 :pattern ( ($generated@@18 $generated@@201 $generated@@202))
)))
 :pattern ( ($generated@@43 $generated@@200 $generated@@201))
)))
(assert  (=> (<= 3 $generated@@34) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (or ($generated@@38 ($generated@@77 $generated@@40 $generated@@205)) (and (< 3 $generated@@34) (and (and ($generated@@45 $generated@@204) ($generated@@39 $generated@@40 $generated@@205 ($generated@@41 $generated@@37))) (not ($generated@@43 $generated@@205 $generated@@44))))) (and (and ($generated@@93 ($generated@@77 $generated@@40 $generated@@205)) (=> (not ($generated@@43 $generated@@205 ($generated@@17 $generated@@44 ($generated@@94 ($generated@@77 $generated@@40 $generated@@205))))) (and ($generated@@38 ($generated@@49 $generated@@205 ($generated@@17 $generated@@44 ($generated@@94 ($generated@@77 $generated@@40 $generated@@205))))) ($generated@@62 ($generated@@94 ($generated@@77 $generated@@40 $generated@@205)) ($generated@@36 ($generated@@92 $generated@@203) ($generated@@49 $generated@@205 ($generated@@17 $generated@@44 ($generated@@94 ($generated@@77 $generated@@40 $generated@@205))))))))) (= ($generated@@36 ($generated@@92 $generated@@203) ($generated@@77 $generated@@40 $generated@@205)) (let (($generated@@206 ($generated@@94 ($generated@@77 $generated@@40 $generated@@205))))
(ite ($generated@@43 $generated@@205 ($generated@@17 $generated@@44 $generated@@206)) $generated@@206 ($generated@@61 $generated@@206 ($generated@@36 ($generated@@92 $generated@@203) ($generated@@49 $generated@@205 ($generated@@17 $generated@@44 $generated@@206)))))))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@92 $generated@@203) ($generated@@77 $generated@@40 $generated@@205)) ($generated@@45 $generated@@204))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@T) ) (! (= ($generated@@85 $generated@@208 ($generated@@77 $generated@@208 $generated@@207)) ($generated@@77 $generated@@141 ($generated@@85 $generated@@208 $generated@@207)))
 :pattern ( ($generated@@85 $generated@@208 ($generated@@77 $generated@@208 $generated@@207)))
)))
(assert  (=> (<= 3 $generated@@34) (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (or ($generated@@38 $generated@@210) (and (< 3 $generated@@34) (and ($generated@@39 $generated@@40 $generated@@210 ($generated@@41 $generated@@37)) (not ($generated@@43 $generated@@210 $generated@@44))))) ($generated@@63 ($generated@@36 $generated@@209 $generated@@210) $generated@@37))
 :pattern ( ($generated@@36 $generated@@209 $generated@@210))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@220 true))
(let (($generated@@221  (=> (and (and (not ($generated@@43 $generated@@211 ($generated@@17 $generated@@44 $generated@@212))) ($generated@@35 $generated@@212 $generated@@37 $generated@@213)) (and (= $generated@@214 ($generated@@49 $generated@@211 ($generated@@17 $generated@@44 $generated@@212))) ($generated@@42 $generated@@40 $generated@@214 ($generated@@41 $generated@@37) $generated@@213))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (not ($generated@@43 $generated@@214 $generated@@44))) (=> (not ($generated@@43 $generated@@214 $generated@@44)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and ($generated@@80 $generated@@214 $generated@@211) (not ($generated@@80 $generated@@211 $generated@@214)))) (=> (and ($generated@@80 $generated@@214 $generated@@211) (not ($generated@@80 $generated@@211 $generated@@214))) (=> ($generated@@38 ($generated@@49 $generated@@211 ($generated@@17 $generated@@44 $generated@@212))) (=> (and (and (= $generated@@215 ($generated@@36 ($generated@@92 $generated@@216) ($generated@@49 $generated@@211 ($generated@@17 $generated@@44 $generated@@212)))) ($generated@@35 $generated@@215 $generated@@37 $generated@@213)) (and ($generated@@62 $generated@@212 ($generated@@36 ($generated@@92 $generated@@216) ($generated@@49 $generated@@211 ($generated@@17 $generated@@44 $generated@@212)))) (= (ControlFlow 0 4) 2))) $generated@@220)))))))))
(let (($generated@@222  (=> (and ($generated@@43 $generated@@211 ($generated@@17 $generated@@44 $generated@@212)) (= (ControlFlow 0 3) 2)) $generated@@220)))
(let (($generated@@223  (and (=> (= (ControlFlow 0 7) (- 0 8)) (exists (($generated@@224 T@U) )  (and ($generated@@63 $generated@@224 $generated@@37) ($generated@@18 $generated@@211 $generated@@224)))) (=> (exists (($generated@@225 T@U) )  (and ($generated@@63 $generated@@225 $generated@@37) ($generated@@18 $generated@@211 $generated@@225))) (=> (and (and ($generated@@63 $generated@@212 $generated@@37) ($generated@@35 $generated@@212 $generated@@37 $generated@@213)) ($generated@@18 $generated@@211 $generated@@212)) (and (=> (= (ControlFlow 0 7) 3) $generated@@222) (=> (= (ControlFlow 0 7) 4) $generated@@221)))))))
(let (($generated@@226  (=> (and (not (and ($generated@@63 $generated@@212 $generated@@37) ($generated@@35 $generated@@212 $generated@@37 $generated@@213))) (= (ControlFlow 0 10) 7)) $generated@@223)))
(let (($generated@@227  (=> (and (and ($generated@@63 $generated@@212 $generated@@37) ($generated@@35 $generated@@212 $generated@@37 $generated@@213)) (= (ControlFlow 0 9) 7)) $generated@@223)))
(let (($generated@@228 true))
(let (($generated@@229  (=> (and (= $generated@@217 ($generated@@139 $generated@@218 $generated@@213 $generated@@0 false)) (not ($generated@@43 $generated@@211 $generated@@44))) (and (and (=> (= (ControlFlow 0 11) 1) $generated@@228) (=> (= (ControlFlow 0 11) 9) $generated@@227)) (=> (= (ControlFlow 0 11) 10) $generated@@226)))))
(let (($generated@@230  (=> (and (and (and ($generated@@45 $generated@@213) ($generated@@219 $generated@@213)) ($generated@@39 $generated@@40 $generated@@211 ($generated@@41 $generated@@37))) (and (= 3 $generated@@34) (= (ControlFlow 0 12) 11))) $generated@@229)))
$generated@@230))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
