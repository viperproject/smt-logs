(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U) T@U)
(declare-fun $generated@@18 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@36 () Int)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 (T@U T@U T@U) Bool)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@65 (T@T T@U T@U) Bool)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@71 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@99 (T@U) Bool)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@107 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@T T@T) T@T)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@T) T@T)
(declare-fun $generated@@113 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@19 T@U) ($generated@@20 T@U) ($generated@@21 T@U) ) (!  (=> ($generated@@18 $generated@@19 $generated@@21) ($generated@@18 ($generated@@17 $generated@@19 $generated@@20) $generated@@21))
 :pattern ( ($generated@@17 $generated@@19 $generated@@20) ($generated@@18 $generated@@19 $generated@@21))
)))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (!  (=> ($generated@@18 $generated@@23 $generated@@24) ($generated@@18 ($generated@@17 $generated@@22 $generated@@23) $generated@@24))
 :pattern ( ($generated@@17 $generated@@22 $generated@@23) ($generated@@18 $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@18 $generated@@27 $generated@@28) (not ($generated@@18 ($generated@@25 $generated@@26 $generated@@27) $generated@@28)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@18 $generated@@27 $generated@@28))
)))
(assert ($generated@@29 $generated@@30))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@17 ($generated@@17 $generated@@31 $generated@@32) $generated@@32) ($generated@@17 $generated@@31 $generated@@32))
 :pattern ( ($generated@@17 ($generated@@17 $generated@@31 $generated@@32) $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@18 ($generated@@25 $generated@@33 $generated@@34) $generated@@35)  (and ($generated@@18 $generated@@33 $generated@@35) (not ($generated@@18 $generated@@34 $generated@@35))))
 :pattern ( ($generated@@18 ($generated@@25 $generated@@33 $generated@@34) $generated@@35))
)))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (or ($generated@@38 $generated@@44 $generated@@45) (and (< 2 $generated@@36) (and ($generated@@39 $generated@@44 $generated@@40) ($generated@@39 $generated@@45 $generated@@40)))) (and (let (($generated@@46 ($generated@@37 $generated@@44 $generated@@45)))
 (and ($generated@@41 ($generated@@42 $generated@@46) ($generated@@17 ($generated@@42 $generated@@44) ($generated@@42 $generated@@45))) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@39 $generated@@47 $generated@@30) (=> ($generated@@18 ($generated@@42 $generated@@46) $generated@@47) (= ($generated@@43 $generated@@47 $generated@@46) ($generated@@43 $generated@@47 (ite ($generated@@18 ($generated@@42 $generated@@44) $generated@@47) $generated@@44 $generated@@45)))))
 :pattern ( ($generated@@18 ($generated@@42 $generated@@44) $generated@@47))
 :pattern ( ($generated@@43 $generated@@47 $generated@@46))
 :pattern ( ($generated@@18 ($generated@@42 $generated@@46) $generated@@47))
)))) ($generated@@39 ($generated@@37 $generated@@44 $generated@@45) $generated@@40)))
 :pattern ( ($generated@@37 $generated@@44 $generated@@45))
))))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (or ($generated@@48 $generated@@50 $generated@@51) (and (< 1 $generated@@36) (and (and ($generated@@39 $generated@@50 $generated@@30) ($generated@@39 $generated@@51 $generated@@40)) ($generated@@18 ($generated@@42 $generated@@51) $generated@@50)))) ($generated@@39 ($generated@@43 $generated@@50 $generated@@51) $generated@@49))
 :pattern ( ($generated@@43 $generated@@50 $generated@@51))
))))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (and (or ($generated@@48 $generated@@55 $generated@@56) (and (< 1 $generated@@36) (and (and (and ($generated@@39 $generated@@55 $generated@@30) ($generated@@52 $generated@@55 $generated@@30 $generated@@54)) (and ($generated@@39 $generated@@56 $generated@@40) ($generated@@52 $generated@@56 $generated@@40 $generated@@54))) ($generated@@18 ($generated@@42 $generated@@56) $generated@@55)))) ($generated@@53 $generated@@54)) ($generated@@52 ($generated@@43 $generated@@55 $generated@@56) $generated@@49 $generated@@54))
 :pattern ( ($generated@@52 ($generated@@43 $generated@@55 $generated@@56) $generated@@49 $generated@@54))
))))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@58 $generated@@60 ($generated@@57 $generated@@60 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@57 $generated@@60 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@61 $generated@@62 $generated@@63) (forall (($generated@@64 T@U) ) (!  (or (not ($generated@@18 $generated@@62 $generated@@64)) (not ($generated@@18 $generated@@63 $generated@@64)))
 :pattern ( ($generated@@18 $generated@@62 $generated@@64))
 :pattern ( ($generated@@18 $generated@@63 $generated@@64))
)))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63))
)))
(assert (= ($generated@@1 $generated@@66) 3))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@65 $generated@@66 $generated@@68 ($generated@@67 $generated@@69)) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@18 $generated@@68 $generated@@70) ($generated@@39 $generated@@70 $generated@@69))
 :pattern ( ($generated@@18 $generated@@68 $generated@@70))
)))
 :pattern ( ($generated@@65 $generated@@66 $generated@@68 ($generated@@67 $generated@@69)))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@52 ($generated@@58 $generated@@75 $generated@@72) $generated@@73 $generated@@74) ($generated@@71 $generated@@75 $generated@@72 $generated@@73 $generated@@74))
 :pattern ( ($generated@@52 ($generated@@58 $generated@@75 $generated@@72) $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@18 ($generated@@17 $generated@@76 $generated@@77) $generated@@78)  (or ($generated@@18 $generated@@76 $generated@@78) ($generated@@18 $generated@@77 $generated@@78)))
 :pattern ( ($generated@@18 ($generated@@17 $generated@@76 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> ($generated@@61 $generated@@79 $generated@@80) (and (= ($generated@@25 ($generated@@17 $generated@@79 $generated@@80) $generated@@79) $generated@@80) (= ($generated@@25 ($generated@@17 $generated@@79 $generated@@80) $generated@@80) $generated@@79)))
 :pattern ( ($generated@@17 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> ($generated@@41 $generated@@81 $generated@@82) (= $generated@@81 $generated@@82))
 :pattern ( ($generated@@41 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@39 ($generated@@58 $generated@@85 $generated@@83) $generated@@84) ($generated@@65 $generated@@85 $generated@@83 $generated@@84))
 :pattern ( ($generated@@39 ($generated@@58 $generated@@85 $generated@@83) $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@29 $generated@@86) (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@39 $generated@@88 $generated@@86) ($generated@@52 $generated@@88 $generated@@86 $generated@@87))
 :pattern ( ($generated@@52 $generated@@88 $generated@@86 $generated@@87))
)))
 :pattern ( ($generated@@29 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@71 $generated@@66 $generated@@89 ($generated@@67 $generated@@90) $generated@@91) (forall (($generated@@92 T@U) ) (!  (=> ($generated@@18 $generated@@89 $generated@@92) ($generated@@52 $generated@@92 $generated@@90 $generated@@91))
 :pattern ( ($generated@@18 $generated@@89 $generated@@92))
)))
 :pattern ( ($generated@@71 $generated@@66 $generated@@89 ($generated@@67 $generated@@90) $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@93 ($generated@@67 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@67 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@95 ($generated@@67 $generated@@96)) $generated)
 :pattern ( ($generated@@67 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@57 $generated@@98 ($generated@@58 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@58 $generated@@98 $generated@@97))
)))
(assert  (=> (<= 0 $generated@@36) (forall (($generated@@100 T@U) ) (!  (=> (or ($generated@@99 $generated@@100) (and (< 0 $generated@@36) ($generated@@39 $generated@@100 $generated@@40))) ($generated@@65 $generated@@66 ($generated@@42 $generated@@100) ($generated@@67 $generated@@30)))
 :pattern ( ($generated@@42 $generated@@100))
))))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@17 $generated@@101 ($generated@@17 $generated@@101 $generated@@102)) ($generated@@17 $generated@@101 $generated@@102))
 :pattern ( ($generated@@17 $generated@@101 ($generated@@17 $generated@@101 $generated@@102)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@103 $generated@@114 $generated@@115 $generated@@116 ($generated@@110 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@119 $generated@@120) $generated@@117)
 :weight 0
)) (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@103 $generated@@121 $generated@@122 $generated@@123 ($generated@@110 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@103 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@136 $generated@@138) (= ($generated@@103 $generated@@130 $generated@@131 $generated@@132 ($generated@@110 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)))) (= ($generated@@1 $generated@@104) 4)) (= ($generated@@1 $generated@@105) 5)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@107 $generated@@139 $generated@@140 ($generated@@111 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@141) $generated@@143) $generated@@141)
 :weight 0
))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@148 $generated@@149) (= ($generated@@107 $generated@@144 $generated@@145 ($generated@@111 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@107 $generated@@144 $generated@@145 $generated@@147 $generated@@149)))
 :weight 0
))) (= ($generated@@1 $generated@@108) 6)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (= ($generated@@1 ($generated@@109 $generated@@150 $generated@@151)) 7))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@112 ($generated@@109 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@109 $generated@@152 $generated@@153))
))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@113 ($generated@@109 $generated@@154 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@109 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Bool) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@6 ($generated@@103 $generated@@104 $generated@@105 $generated@@2 ($generated@@106 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))  (=> (and (or (not (= $generated@@160 $generated@@156)) (not true)) ($generated@@6 ($generated@@57 $generated@@2 ($generated@@107 $generated@@105 $generated@@108 ($generated@@107 $generated@@104 ($generated@@109 $generated@@105 $generated@@108) $generated@@157 $generated@@160) $generated@@158)))) $generated@@159))
 :pattern ( ($generated@@103 $generated@@104 $generated@@105 $generated@@2 ($generated@@106 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))
)))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (or ($generated@@38 $generated@@163 $generated@@164) (and (< 2 $generated@@36) (and (and ($generated@@39 $generated@@163 $generated@@40) ($generated@@52 $generated@@163 $generated@@40 $generated@@162)) (and ($generated@@39 $generated@@164 $generated@@40) ($generated@@52 $generated@@164 $generated@@40 $generated@@162))))) ($generated@@53 $generated@@162)) ($generated@@52 ($generated@@37 $generated@@163 $generated@@164) $generated@@40 $generated@@162))
 :pattern ( ($generated@@52 ($generated@@37 $generated@@163 $generated@@164) $generated@@40 $generated@@162))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> ($generated@@39 $generated@@165 ($generated@@67 $generated@@166)) (and (= ($generated@@58 $generated@@66 ($generated@@57 $generated@@66 $generated@@165)) $generated@@165) ($generated@@65 $generated@@66 ($generated@@57 $generated@@66 $generated@@165) ($generated@@67 $generated@@166))))
 :pattern ( ($generated@@39 $generated@@165 ($generated@@67 $generated@@166)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@41 $generated@@167 $generated@@168) (forall (($generated@@169 T@U) ) (! (= ($generated@@18 $generated@@167 $generated@@169) ($generated@@18 $generated@@168 $generated@@169))
 :pattern ( ($generated@@18 $generated@@167 $generated@@169))
 :pattern ( ($generated@@18 $generated@@168 $generated@@169))
)))
 :pattern ( ($generated@@41 $generated@@167 $generated@@168))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@180 true))
(let (($generated@@181  (=> (and (= $generated@@170 (ite ($generated@@18 ($generated@@42 $generated@@171) $generated@@172) $generated@@171 $generated@@173)) ($generated@@52 $generated@@170 $generated@@40 $generated@@174)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@18 ($generated@@42 $generated@@170) $generated@@172)) (=> ($generated@@18 ($generated@@42 $generated@@170) $generated@@172) (=> (and ($generated@@48 $generated@@172 (ite ($generated@@18 ($generated@@42 $generated@@171) $generated@@172) $generated@@171 $generated@@173)) (= (ControlFlow 0 6) 2)) $generated@@180))))))
(let (($generated@@182  (=> (and (not ($generated@@18 ($generated@@42 $generated@@171) $generated@@172)) (= (ControlFlow 0 9) 6)) $generated@@181)))
(let (($generated@@183  (=> (and ($generated@@18 ($generated@@42 $generated@@171) $generated@@172) (= (ControlFlow 0 8) 6)) $generated@@181)))
(let (($generated@@184  (=> ($generated@@18 ($generated@@42 $generated@@175) $generated@@172) (=> (and ($generated@@52 $generated@@172 $generated@@30 $generated@@174) ($generated@@52 $generated@@175 $generated@@40 $generated@@174)) (and (=> (= (ControlFlow 0 10) (- 0 11)) ($generated@@18 ($generated@@42 $generated@@175) $generated@@172)) (=> ($generated@@18 ($generated@@42 $generated@@175) $generated@@172) (=> (and (and ($generated@@48 $generated@@172 $generated@@175) ($generated@@52 $generated@@172 $generated@@30 $generated@@174)) (and ($generated@@52 $generated@@171 $generated@@40 $generated@@174) ($generated@@99 $generated@@171))) (and (=> (= (ControlFlow 0 10) 8) $generated@@183) (=> (= (ControlFlow 0 10) 9) $generated@@182)))))))))
(let (($generated@@185  (=> (and (not ($generated@@18 ($generated@@42 $generated@@175) $generated@@172)) (= (ControlFlow 0 5) 2)) $generated@@180)))
(let (($generated@@186  (=> (and (and ($generated@@39 $generated@@172 $generated@@30) ($generated@@52 $generated@@172 $generated@@30 $generated@@174)) (and ($generated@@52 $generated@@175 $generated@@40 $generated@@174) ($generated@@99 $generated@@175))) (and (=> (= (ControlFlow 0 12) 10) $generated@@184) (=> (= (ControlFlow 0 12) 5) $generated@@185)))))
(let (($generated@@187  (=> (and (not (and ($generated@@39 $generated@@172 $generated@@30) ($generated@@52 $generated@@172 $generated@@30 $generated@@174))) (= (ControlFlow 0 4) 2)) $generated@@180)))
(let (($generated@@188  (=> ($generated@@41 ($generated@@42 $generated@@175) ($generated@@17 ($generated@@42 $generated@@171) ($generated@@42 $generated@@173))) (and (=> (= (ControlFlow 0 13) 12) $generated@@186) (=> (= (ControlFlow 0 13) 4) $generated@@187)))))
(let (($generated@@189  (=> (and (not ($generated@@41 ($generated@@42 $generated@@175) ($generated@@17 ($generated@@42 $generated@@171) ($generated@@42 $generated@@173)))) (= (ControlFlow 0 3) 2)) $generated@@180)))
(let (($generated@@190  (=> ($generated@@39 ($generated@@37 $generated@@171 $generated@@173) $generated@@40) (=> (and ($generated@@52 $generated@@171 $generated@@40 $generated@@174) ($generated@@52 $generated@@173 $generated@@40 $generated@@174)) (and (=> (= (ControlFlow 0 14) (- 0 15)) (and (= $generated@@171 $generated@@171) (= $generated@@173 $generated@@173))) (=> (and (= $generated@@171 $generated@@171) (= $generated@@173 $generated@@173)) (=> (or (and (= $generated@@171 $generated@@171) (= $generated@@173 $generated@@173)) ($generated@@38 $generated@@171 $generated@@173)) (=> (and (= $generated@@176 ($generated@@37 $generated@@171 $generated@@173)) ($generated@@38 $generated@@171 $generated@@173)) (=> (and (and (and ($generated@@39 $generated@@176 $generated@@40) (= $generated@@175 $generated@@176)) (and ($generated@@52 $generated@@175 $generated@@40 $generated@@174) ($generated@@99 $generated@@175))) (and (and ($generated@@52 $generated@@171 $generated@@40 $generated@@174) ($generated@@99 $generated@@171)) (and ($generated@@52 $generated@@173 $generated@@40 $generated@@174) ($generated@@99 $generated@@173)))) (and (=> (= (ControlFlow 0 14) 13) $generated@@188) (=> (= (ControlFlow 0 14) 3) $generated@@189)))))))))))
(let (($generated@@191 true))
(let (($generated@@192  (=> (= $generated@@177 ($generated@@106 $generated@@178 $generated@@174 $generated@@0 false)) (and (=> (= (ControlFlow 0 16) 14) $generated@@190) (=> (= (ControlFlow 0 16) 1) $generated@@191)))))
(let (($generated@@193  (=> (and ($generated@@53 $generated@@174) ($generated@@179 $generated@@174)) (=> (and (and ($generated@@39 $generated@@171 $generated@@40) ($generated@@39 $generated@@173 $generated@@40)) (and (= 2 $generated@@36) (= (ControlFlow 0 17) 16))) $generated@@192))))
$generated@@193)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
