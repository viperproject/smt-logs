(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 () Bool)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@52 (T@U) Int)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@89 () T@U)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@104 (T@U) Bool)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@125 (T@U Int) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@147 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@148 (T@T T@T) T@T)
(declare-fun $generated@@149 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Int)
(declare-fun $generated@@246 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@11 $generated@@29) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@35 $generated@@36) $generated@@31)  (and ($generated@@32 $generated@@35 $generated@@33) ($generated@@32 $generated@@36 $generated@@34)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@35 $generated@@36) $generated@@31))
)))
(assert  (=> (<= 1 $generated@@37) (=> (or $generated@@38 (< 1 $generated@@37)) (and ($generated@@39 ($generated@@40 $generated@@41) $generated@@42) ($generated@@32 $generated@@41 $generated@@34)))))
(assert ($generated@@43 $generated@@33))
(assert ($generated@@43 $generated@@34))
(assert ($generated@@43 $generated@@44))
(assert (forall (($generated@@46 T@U) ) (!  (not ($generated@@45 $generated@@42 $generated@@46))
 :pattern ( ($generated@@45 $generated@@42 $generated@@46))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@47 $generated@@50 $generated@@51)  (and (= ($generated@@48 $generated@@50) ($generated@@48 $generated@@51)) (= ($generated@@49 $generated@@50) ($generated@@49 $generated@@51))))
 :pattern ( ($generated@@47 $generated@@50 $generated@@51))
)))
(assert (= ($generated@@52 $generated@@53) 0))
(assert  (=> (<= 4 $generated@@37) (forall (($generated@@57 T@U) ) (!  (=> (or ($generated@@55 $generated@@57) (and (< 4 $generated@@37) ($generated@@28 $generated@@29 $generated@@57 $generated@@31))) (and (and ($generated@@56 $generated@@57) $generated@@38) (= ($generated@@54 $generated@@57) ($generated@@30 ($generated@@48 $generated@@57) $generated@@41))))
 :pattern ( ($generated@@54 $generated@@57))
))))
(assert (forall (($generated@@58 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@58 $generated@@31) ($generated@@56 $generated@@58))
 :pattern ( ($generated@@56 $generated@@58) ($generated@@28 $generated@@29 $generated@@58 $generated@@31))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@47 $generated@@59 $generated@@60) (= $generated@@59 $generated@@60))
 :pattern ( ($generated@@47 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 $generated@@62) $generated@@62)
 :pattern ( ($generated@@61 $generated@@63 $generated@@62))
)))
(assert  (=> (<= 4 $generated@@37) (forall (($generated@@65 T@U) ) (!  (=> (or ($generated@@55 $generated@@65) (and (< 4 $generated@@37) ($generated@@28 $generated@@29 $generated@@65 $generated@@31))) (and (let (($generated@@66 ($generated@@54 $generated@@65)))
 (and (and (= ($generated@@48 $generated@@65) ($generated@@48 $generated@@66)) ($generated@@39 ($generated@@40 ($generated@@49 $generated@@66)) $generated@@42)) ($generated@@64 $generated@@66))) ($generated@@28 $generated@@29 ($generated@@54 $generated@@65) $generated@@31)))
 :pattern ( ($generated@@54 $generated@@65))
))))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@56 $generated@@68) (= ($generated@@67 $generated@@68) $generated@@7))
 :pattern ( ($generated@@56 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@69 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@69 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@56 $generated@@73) (exists (($generated@@74 T@U) ($generated@@75 T@U) ) (= $generated@@73 ($generated@@30 $generated@@74 $generated@@75))))
 :pattern ( ($generated@@56 $generated@@73))
)))
(assert (= ($generated@@11 $generated@@76) 4))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@28 $generated@@76 $generated@@78 ($generated@@77 $generated@@79)) (forall (($generated@@80 T@U) ) (!  (=> ($generated@@45 $generated@@78 $generated@@80) ($generated@@32 $generated@@80 $generated@@79))
 :pattern ( ($generated@@45 $generated@@78 $generated@@80))
)))
 :pattern ( ($generated@@28 $generated@@76 $generated@@78 ($generated@@77 $generated@@79)))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@81 ($generated@@70 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@82 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@81 ($generated@@70 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (= ($generated@@11 $generated@@87) 5))
(assert  (=> (<= 4 $generated@@37) (forall (($generated@@88 T@U) ) (!  (=> (or ($generated@@55 ($generated@@61 $generated@@29 $generated@@88)) (and (< 4 $generated@@37) ($generated@@28 $generated@@29 $generated@@88 $generated@@31))) (and (and ($generated@@56 ($generated@@61 $generated@@29 $generated@@88)) $generated@@38) (= ($generated@@54 ($generated@@61 $generated@@29 $generated@@88)) ($generated@@30 ($generated@@61 $generated@@87 ($generated@@48 ($generated@@61 $generated@@29 $generated@@88))) $generated@@41))))
 :weight 3
 :pattern ( ($generated@@54 ($generated@@61 $generated@@29 $generated@@88)))
))))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@32 $generated@@90 $generated@@89) (and (= ($generated@@70 $generated@@29 ($generated@@69 $generated@@29 $generated@@90)) $generated@@90) ($generated@@28 $generated@@29 ($generated@@69 $generated@@29 $generated@@90) $generated@@89)))
 :pattern ( ($generated@@32 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@32 $generated@@92 $generated@@91) (and (= ($generated@@70 $generated@@29 ($generated@@69 $generated@@29 $generated@@92)) $generated@@92) ($generated@@28 $generated@@29 ($generated@@69 $generated@@29 $generated@@92) $generated@@91)))
 :pattern ( ($generated@@32 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@32 $generated@@93 $generated@@31) (and (= ($generated@@70 $generated@@29 ($generated@@69 $generated@@29 $generated@@93)) $generated@@93) ($generated@@28 $generated@@29 ($generated@@69 $generated@@29 $generated@@93) $generated@@31)))
 :pattern ( ($generated@@32 $generated@@93 $generated@@31))
)))
(assert (= ($generated@@11 $generated@@96) 6))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (or ($generated@@95 $generated@@98 $generated@@99 $generated@@100) (and (< 2 $generated@@37) (and (and ($generated@@28 $generated@@29 $generated@@98 $generated@@91) ($generated@@28 $generated@@29 $generated@@99 $generated@@91)) ($generated@@28 $generated@@96 $generated@@100 ($generated@@97 $generated))))) ($generated@@28 $generated@@29 ($generated@@94 $generated@@98 $generated@@99 $generated@@100) $generated@@89))
 :pattern ( ($generated@@94 $generated@@98 $generated@@99 $generated@@100))
))))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> ($generated@@39 $generated@@101 $generated@@102) (= $generated@@101 $generated@@102))
 :pattern ( ($generated@@39 $generated@@101 $generated@@102))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@105 T@U) ) (!  (=> (or ($generated@@104 $generated@@105) (and (< 1 $generated@@37) ($generated@@28 $generated@@29 $generated@@105 $generated@@89))) ($generated@@32 ($generated@@103 $generated@@105) $generated@@44))
 :pattern ( ($generated@@103 $generated@@105))
))))
(assert (= ($generated@@11 $generated@@106) 7))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@32 $generated@@107 $generated) (and (= ($generated@@70 $generated@@106 ($generated@@69 $generated@@106 $generated@@107)) $generated@@107) ($generated@@28 $generated@@106 ($generated@@69 $generated@@106 $generated@@107) $generated)))
 :pattern ( ($generated@@32 $generated@@107 $generated))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@32 ($generated@@70 $generated@@110 $generated@@108) $generated@@109) ($generated@@28 $generated@@110 $generated@@108 $generated@@109))
 :pattern ( ($generated@@32 ($generated@@70 $generated@@110 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (<= 0 ($generated@@52 $generated@@111))
 :pattern ( ($generated@@52 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@43 $generated@@112) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> ($generated@@32 $generated@@114 $generated@@112) ($generated@@81 $generated@@114 $generated@@112 $generated@@113))
 :pattern ( ($generated@@81 $generated@@114 $generated@@112 $generated@@113))
)))
 :pattern ( ($generated@@43 $generated@@112))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@82 $generated@@76 $generated@@115 ($generated@@77 $generated@@116) $generated@@117) (forall (($generated@@118 T@U) ) (!  (=> ($generated@@45 $generated@@115 $generated@@118) ($generated@@81 $generated@@118 $generated@@116 $generated@@117))
 :pattern ( ($generated@@45 $generated@@115 $generated@@118))
)))
 :pattern ( ($generated@@82 $generated@@76 $generated@@115 ($generated@@77 $generated@@116) $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@67 ($generated@@30 $generated@@119 $generated@@120)) $generated@@7)
 :pattern ( ($generated@@30 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@48 ($generated@@30 $generated@@121 $generated@@122)) $generated@@121)
 :pattern ( ($generated@@30 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@49 ($generated@@30 $generated@@123 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@30 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@82 $generated@@96 $generated@@126 ($generated@@97 $generated@@127) $generated@@128) (forall (($generated@@129 Int) ) (!  (=> (and (<= 0 $generated@@129) (< $generated@@129 ($generated@@52 $generated@@126))) ($generated@@81 ($generated@@125 $generated@@126 $generated@@129) $generated@@127 $generated@@128))
 :pattern ( ($generated@@125 $generated@@126 $generated@@129))
)))
 :pattern ( ($generated@@82 $generated@@96 $generated@@126 ($generated@@97 $generated@@127) $generated@@128))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 ($generated@@77 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@77 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@27 ($generated@@77 $generated@@132)) $generated@@1)
 :pattern ( ($generated@@77 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@133 ($generated@@97 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@97 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@27 ($generated@@97 $generated@@135)) $generated@@2)
 :pattern ( ($generated@@97 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@69 $generated@@137 ($generated@@70 $generated@@137 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@70 $generated@@137 $generated@@136))
)))
(assert  (=> (<= 0 $generated@@37) (forall (($generated@@139 T@U) ) (!  (=> (or ($generated@@138 $generated@@139) (and (< 0 $generated@@37) ($generated@@32 $generated@@139 $generated@@34))) ($generated@@28 $generated@@76 ($generated@@40 $generated@@139) ($generated@@77 $generated@@44)))
 :pattern ( ($generated@@40 $generated@@139))
))))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@142 T@U) ) (!  (=> (or ($generated@@141 $generated@@142) (and (< 1 $generated@@37) ($generated@@32 $generated@@142 $generated@@33))) ($generated@@28 $generated@@76 ($generated@@140 $generated@@142) ($generated@@77 $generated@@89)))
 :pattern ( ($generated@@140 $generated@@142))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@143 $generated@@153 $generated@@154 $generated@@155 ($generated@@149 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@158 $generated@@159) $generated@@156)
 :weight 0
)) (and (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@143 $generated@@160 $generated@@161 $generated@@162 ($generated@@149 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@143 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@143 $generated@@169 $generated@@170 $generated@@171 ($generated@@149 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@143 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)))) (= ($generated@@11 $generated@@144) 8)) (= ($generated@@11 $generated@@145) 9)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@147 $generated@@178 $generated@@179 ($generated@@150 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@180) $generated@@182) $generated@@180)
 :weight 0
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@187 $generated@@188) (= ($generated@@147 $generated@@183 $generated@@184 ($generated@@150 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@185) $generated@@188) ($generated@@147 $generated@@183 $generated@@184 $generated@@186 $generated@@188)))
 :weight 0
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@11 ($generated@@148 $generated@@189 $generated@@190)) 10))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@151 ($generated@@148 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@148 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@152 ($generated@@148 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@148 $generated@@193 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 Bool) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@16 ($generated@@143 $generated@@144 $generated@@145 $generated@@12 ($generated@@146 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))  (=> (and (or (not (= $generated@@199 $generated@@195)) (not true)) ($generated@@16 ($generated@@69 $generated@@12 ($generated@@147 $generated@@145 $generated@@87 ($generated@@147 $generated@@144 ($generated@@148 $generated@@145 $generated@@87) $generated@@196 $generated@@199) $generated@@197)))) $generated@@198))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145 $generated@@12 ($generated@@146 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))
)))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@202 T@U) ) (!  (=> (or ($generated@@201 ($generated@@61 $generated@@29 $generated@@202)) (and (< 3 $generated@@37) ($generated@@28 $generated@@29 $generated@@202 $generated@@31))) (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@29 $generated@@203 $generated@@91) ($generated@@28 $generated@@29 $generated@@204 $generated@@91)) ($generated@@28 $generated@@96 $generated@@205 ($generated@@97 $generated))) (and (and (and ($generated@@95 $generated@@203 $generated@@204 $generated@@205) ($generated@@104 ($generated@@94 $generated@@203 $generated@@204 $generated@@205))) (and ($generated@@56 ($generated@@61 $generated@@29 $generated@@202)) ($generated@@138 ($generated@@61 $generated@@87 ($generated@@49 ($generated@@61 $generated@@29 $generated@@202)))))) (=> ($generated@@45 ($generated@@40 ($generated@@61 $generated@@87 ($generated@@49 ($generated@@61 $generated@@29 $generated@@202)))) ($generated@@103 ($generated@@94 $generated@@203 $generated@@204 $generated@@205))) (and ($generated@@95 $generated@@203 $generated@@204 $generated@@205) (and ($generated@@56 ($generated@@61 $generated@@29 $generated@@202)) ($generated@@141 ($generated@@61 $generated@@87 ($generated@@48 ($generated@@61 $generated@@29 $generated@@202)))))))))
 :pattern ( ($generated@@94 $generated@@203 $generated@@204 $generated@@205))
)) (= ($generated@@64 ($generated@@61 $generated@@29 $generated@@202)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@29 $generated@@206 $generated@@91) ($generated@@28 $generated@@29 $generated@@207 $generated@@91)) ($generated@@28 $generated@@96 $generated@@208 ($generated@@97 $generated))) (=> ($generated@@45 ($generated@@40 ($generated@@61 $generated@@87 ($generated@@49 ($generated@@61 $generated@@29 $generated@@202)))) ($generated@@103 ($generated@@94 $generated@@206 $generated@@207 $generated@@208))) ($generated@@45 ($generated@@140 ($generated@@61 $generated@@87 ($generated@@48 ($generated@@61 $generated@@29 $generated@@202)))) ($generated@@70 $generated@@29 ($generated@@94 $generated@@206 $generated@@207 $generated@@208)))))
 :pattern ( ($generated@@94 $generated@@206 $generated@@207 $generated@@208))
)))))
 :weight 3
 :pattern ( ($generated@@64 ($generated@@61 $generated@@29 $generated@@202)))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> ($generated@@32 $generated@@209 ($generated@@77 $generated@@210)) (and (= ($generated@@70 $generated@@76 ($generated@@69 $generated@@76 $generated@@209)) $generated@@209) ($generated@@28 $generated@@76 ($generated@@69 $generated@@76 $generated@@209) ($generated@@77 $generated@@210))))
 :pattern ( ($generated@@32 $generated@@209 ($generated@@77 $generated@@210)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> ($generated@@32 $generated@@211 ($generated@@97 $generated@@212)) (and (= ($generated@@70 $generated@@96 ($generated@@69 $generated@@96 $generated@@211)) $generated@@211) ($generated@@28 $generated@@96 ($generated@@69 $generated@@96 $generated@@211) ($generated@@97 $generated@@212))))
 :pattern ( ($generated@@32 $generated@@211 ($generated@@97 $generated@@212)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and ($generated@@213 $generated@@215) ($generated@@28 $generated@@29 $generated@@214 $generated@@31)) ($generated@@82 $generated@@29 $generated@@214 $generated@@31 $generated@@215))
 :pattern ( ($generated@@82 $generated@@29 $generated@@214 $generated@@31 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and ($generated@@213 $generated@@217) ($generated@@28 $generated@@29 $generated@@216 $generated@@91)) ($generated@@82 $generated@@29 $generated@@216 $generated@@91 $generated@@217))
 :pattern ( ($generated@@82 $generated@@29 $generated@@216 $generated@@91 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and ($generated@@213 $generated@@219) ($generated@@28 $generated@@29 $generated@@218 $generated@@89)) ($generated@@82 $generated@@29 $generated@@218 $generated@@89 $generated@@219))
 :pattern ( ($generated@@82 $generated@@29 $generated@@218 $generated@@89 $generated@@219))
)))
(assert (= ($generated@@27 $generated@@89) $generated@@4))
(assert (= ($generated@@220 $generated@@89) $generated@@8))
(assert (= ($generated@@27 $generated@@91) $generated@@5))
(assert (= ($generated@@220 $generated@@91) $generated@@9))
(assert (= ($generated@@27 $generated@@31) $generated@@6))
(assert (= ($generated@@220 $generated@@31) $generated@@10))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@39 $generated@@221 $generated@@222) (forall (($generated@@223 T@U) ) (! (= ($generated@@45 $generated@@221 $generated@@223) ($generated@@45 $generated@@222 $generated@@223))
 :pattern ( ($generated@@45 $generated@@221 $generated@@223))
 :pattern ( ($generated@@45 $generated@@222 $generated@@223))
)))
 :pattern ( ($generated@@39 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and ($generated@@213 $generated@@225) (and ($generated@@56 $generated@@224) ($generated@@82 $generated@@29 $generated@@224 $generated@@31 $generated@@225))) ($generated@@81 ($generated@@48 $generated@@224) $generated@@33 $generated@@225))
 :pattern ( ($generated@@81 ($generated@@48 $generated@@224) $generated@@33 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and ($generated@@213 $generated@@227) (and ($generated@@56 $generated@@226) ($generated@@82 $generated@@29 $generated@@226 $generated@@31 $generated@@227))) ($generated@@81 ($generated@@49 $generated@@226) $generated@@34 $generated@@227))
 :pattern ( ($generated@@81 ($generated@@49 $generated@@226) $generated@@34 $generated@@227))
)))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@228 T@U) ) (!  (=> (or ($generated@@201 $generated@@228) (and (< 3 $generated@@37) ($generated@@28 $generated@@29 $generated@@228 $generated@@31))) (and (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@29 $generated@@229 $generated@@91) ($generated@@28 $generated@@29 $generated@@230 $generated@@91)) ($generated@@28 $generated@@96 $generated@@231 ($generated@@97 $generated))) (and (and (and ($generated@@95 $generated@@229 $generated@@230 $generated@@231) ($generated@@104 ($generated@@94 $generated@@229 $generated@@230 $generated@@231))) (and ($generated@@56 $generated@@228) ($generated@@138 ($generated@@49 $generated@@228)))) (=> ($generated@@45 ($generated@@40 ($generated@@49 $generated@@228)) ($generated@@103 ($generated@@94 $generated@@229 $generated@@230 $generated@@231))) (and ($generated@@95 $generated@@229 $generated@@230 $generated@@231) (and ($generated@@56 $generated@@228) ($generated@@141 ($generated@@48 $generated@@228)))))))
 :pattern ( ($generated@@94 $generated@@229 $generated@@230 $generated@@231))
)) (= ($generated@@64 $generated@@228) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@29 $generated@@232 $generated@@91) ($generated@@28 $generated@@29 $generated@@233 $generated@@91)) ($generated@@28 $generated@@96 $generated@@234 ($generated@@97 $generated))) (=> ($generated@@45 ($generated@@40 ($generated@@49 $generated@@228)) ($generated@@103 ($generated@@94 $generated@@232 $generated@@233 $generated@@234))) ($generated@@45 ($generated@@140 ($generated@@48 $generated@@228)) ($generated@@70 $generated@@29 ($generated@@94 $generated@@232 $generated@@233 $generated@@234)))))
 :pattern ( ($generated@@94 $generated@@232 $generated@@233 $generated@@234))
)))))
 :pattern ( ($generated@@64 $generated@@228))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= ($generated@@30 ($generated@@61 $generated@@87 $generated@@235) ($generated@@61 $generated@@87 $generated@@236)) ($generated@@61 $generated@@29 ($generated@@30 $generated@@235 $generated@@236)))
 :pattern ( ($generated@@30 ($generated@@61 $generated@@87 $generated@@235) ($generated@@61 $generated@@87 $generated@@236)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@T) ) (! (= ($generated@@70 $generated@@238 ($generated@@61 $generated@@238 $generated@@237)) ($generated@@61 $generated@@87 ($generated@@70 $generated@@238 $generated@@237)))
 :pattern ( ($generated@@70 $generated@@238 ($generated@@61 $generated@@238 $generated@@237)))
)))
(assert (forall (($generated@@239 T@U) ) (!  (=> (= ($generated@@52 $generated@@239) 0) (= $generated@@239 $generated@@53))
 :pattern ( ($generated@@52 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! ($generated@@82 $generated@@106 $generated@@241 $generated $generated@@240)
 :pattern ( ($generated@@82 $generated@@106 $generated@@241 $generated $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= ($generated@@28 $generated@@96 $generated@@242 ($generated@@97 $generated@@243)) (forall (($generated@@244 Int) ) (!  (=> (and (<= 0 $generated@@244) (< $generated@@244 ($generated@@52 $generated@@242))) ($generated@@32 ($generated@@125 $generated@@242 $generated@@244) $generated@@243))
 :pattern ( ($generated@@125 $generated@@242 $generated@@244))
)))
 :pattern ( ($generated@@28 $generated@@96 $generated@@242 ($generated@@97 $generated@@243)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 Int) ) (!  (=> (and (<= 0 $generated@@248) (< $generated@@248 ($generated@@52 $generated@@247))) (< ($generated@@245 ($generated@@69 $generated@@29 ($generated@@125 $generated@@247 $generated@@248))) ($generated@@246 $generated@@247)))
 :pattern ( ($generated@@245 ($generated@@69 $generated@@29 ($generated@@125 $generated@@247 $generated@@248))))
)))
(assert (forall (($generated@@249 T@U) ) (! ($generated@@28 $generated@@106 $generated@@249 $generated)
 :pattern ( ($generated@@28 $generated@@106 $generated@@249 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@258 true))
(let (($generated@@259  (=> (and (not (and (= ($generated@@48 $generated@@250) ($generated@@48 $generated@@251)) ($generated@@39 ($generated@@40 ($generated@@49 $generated@@251)) $generated@@42))) (= (ControlFlow 0 8) 6)) $generated@@258)))
(let (($generated@@260  (=> (and (and (and (= ($generated@@48 $generated@@250) ($generated@@48 $generated@@251)) ($generated@@39 ($generated@@40 ($generated@@49 $generated@@251)) $generated@@42)) ($generated@@82 $generated@@29 $generated@@251 $generated@@31 $generated@@252)) (and ($generated@@201 $generated@@251) (= (ControlFlow 0 7) 6))) $generated@@258)))
(let (($generated@@261  (=> (or (not (= ($generated@@48 $generated@@250) ($generated@@48 $generated@@251))) (not true)) (and (=> (= (ControlFlow 0 10) 7) $generated@@260) (=> (= (ControlFlow 0 10) 8) $generated@@259)))))
(let (($generated@@262  (=> (= ($generated@@48 $generated@@250) ($generated@@48 $generated@@251)) (=> (and (and ($generated@@56 $generated@@251) (= $generated@@253 ($generated@@49 $generated@@251))) (and ($generated@@81 $generated@@253 $generated@@34 $generated@@252) ($generated@@138 ($generated@@49 $generated@@251)))) (and (=> (= (ControlFlow 0 9) 7) $generated@@260) (=> (= (ControlFlow 0 9) 8) $generated@@259))))))
(let (($generated@@263  (=> (and ($generated@@28 $generated@@29 ($generated@@54 $generated@@250) $generated@@31) ($generated@@82 $generated@@29 $generated@@250 $generated@@31 $generated@@252)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or ($generated@@47 $generated@@250 $generated@@250) (< ($generated@@245 $generated@@250) ($generated@@245 $generated@@250)))) (=> (or ($generated@@47 $generated@@250 $generated@@250) (< ($generated@@245 $generated@@250) ($generated@@245 $generated@@250))) (=> (and (and (and (or ($generated@@47 $generated@@250 $generated@@250) ($generated@@55 $generated@@250)) ($generated@@56 ($generated@@54 $generated@@250))) (and (= $generated@@254 ($generated@@54 $generated@@250)) ($generated@@55 $generated@@250))) (and (and ($generated@@28 $generated@@29 $generated@@254 $generated@@31) (= $generated@@251 $generated@@254)) (and ($generated@@56 $generated@@250) ($generated@@56 $generated@@251)))) (and (=> (= (ControlFlow 0 11) 9) $generated@@262) (=> (= (ControlFlow 0 11) 10) $generated@@261))))))))
(let (($generated@@264  (and (=> (= (ControlFlow 0 2) (- 0 4)) (let (($generated@@265 ($generated@@54 $generated@@250)))
(= ($generated@@48 $generated@@250) ($generated@@48 $generated@@265)))) (=> (let (($generated@@266 ($generated@@54 $generated@@250)))
(= ($generated@@48 $generated@@250) ($generated@@48 $generated@@266))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@267 ($generated@@54 $generated@@250)))
($generated@@39 ($generated@@40 ($generated@@49 $generated@@267)) $generated@@42))) (=> (let (($generated@@268 ($generated@@54 $generated@@250)))
($generated@@39 ($generated@@40 ($generated@@49 $generated@@268)) $generated@@42)) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@269 ($generated@@54 $generated@@250)))
 (=> ($generated@@201 $generated@@269) (or ($generated@@64 $generated@@269) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@29 $generated@@270 $generated@@91) ($generated@@28 $generated@@29 $generated@@271 $generated@@91)) ($generated@@28 $generated@@96 $generated@@272 ($generated@@97 $generated))) (=> ($generated@@45 ($generated@@40 ($generated@@49 $generated@@269)) ($generated@@103 ($generated@@94 $generated@@270 $generated@@271 $generated@@272))) ($generated@@45 ($generated@@140 ($generated@@48 $generated@@269)) ($generated@@70 $generated@@29 ($generated@@94 $generated@@270 $generated@@271 $generated@@272)))))
 :pattern ( ($generated@@94 $generated@@270 $generated@@271 $generated@@272))
))))))))))))
(let (($generated@@273  (=> ($generated@@56 $generated@@250) (=> (and $generated@@38 (= ($generated@@54 $generated@@250) ($generated@@30 ($generated@@48 $generated@@250) $generated@@41))) (=> (and (and ($generated@@56 $generated@@250) $generated@@38) (and ($generated@@28 $generated@@29 ($generated@@54 $generated@@250) $generated@@31) (= (ControlFlow 0 5) 2))) $generated@@264)))))
(let (($generated@@274  (=> (= $generated@@255 ($generated@@146 $generated@@256 $generated@@252 $generated@@3 false)) (and (=> (= (ControlFlow 0 13) 11) $generated@@263) (=> (= (ControlFlow 0 13) 5) $generated@@273)))))
(let (($generated@@275  (=> (and (and (and ($generated@@213 $generated@@252) ($generated@@257 $generated@@252)) ($generated@@28 $generated@@29 $generated@@250 $generated@@31)) (and (= 4 $generated@@37) (= (ControlFlow 0 14) 13))) $generated@@274)))
$generated@@275)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
