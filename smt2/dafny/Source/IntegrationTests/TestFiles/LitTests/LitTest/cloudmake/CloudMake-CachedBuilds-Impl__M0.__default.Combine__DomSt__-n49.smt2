(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 () Int)
(declare-fun $generated@@18 (T@U T@U) T@U)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (T@T T@U T@U) Bool)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@63 (T@U T@U) Bool)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@69 (T@U Bool T@U Bool) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@U Bool) Bool)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@U T@U Bool) Bool)
(declare-fun $generated@@74 () Bool)
(declare-fun $generated@@75 (T@U T@U Bool) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@89 () T@U)
(declare-fun $generated@@97 (T@U T@U) Bool)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@107 (T@T T@U) T@U)
(declare-fun $generated@@108 (T@T T@U) T@U)
(declare-fun $generated@@111 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@178 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (= ($generated@@1 $generated@@22) 3))
(assert  (=> (<= 1 $generated@@17) (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (or ($generated@@20 $generated@@35) (and (< 1 $generated@@17) ($generated@@21 $generated@@22 $generated@@35 ($generated@@23 $generated@@24)))) (and (=> (not ($generated@@25 $generated@@35 $generated@@26)) (and ($generated@@27 $generated@@24 $generated@@35) (let (($generated@@36 ($generated@@28 $generated@@24 $generated@@35)))
 (and ($generated@@29 $generated@@36) ($generated@@20 ($generated@@30 $generated@@35 ($generated@@31 $generated@@26 $generated@@36))))))) (= ($generated@@18 ($generated@@19 $generated@@34) $generated@@35) (ite ($generated@@25 $generated@@35 $generated@@26) $generated@@26 (let (($generated@@37 ($generated@@28 $generated@@24 $generated@@35)))
($generated@@32 ($generated@@33 $generated@@37) ($generated@@18 $generated@@34 ($generated@@30 $generated@@35 ($generated@@31 $generated@@26 $generated@@37)))))))))
 :pattern ( ($generated@@18 ($generated@@19 $generated@@34) $generated@@35))
))))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! ($generated@@38 ($generated@@31 $generated@@39 $generated@@40) $generated@@40)
 :pattern ( ($generated@@31 $generated@@39 $generated@@40))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> (and (or ($generated@@27 $generated@@45 $generated@@46) (and (< 0 $generated@@17) (and (and ($generated@@21 $generated@@22 $generated@@46 ($generated@@23 $generated@@45)) ($generated@@42 $generated@@22 $generated@@46 ($generated@@23 $generated@@45) $generated@@44)) (not ($generated@@25 $generated@@46 $generated@@26))))) ($generated@@43 $generated@@44)) ($generated@@41 ($generated@@28 $generated@@45 $generated@@46) $generated@@45 $generated@@44))
 :pattern ( ($generated@@41 ($generated@@28 $generated@@45 $generated@@46) $generated@@45 $generated@@44))
))))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> ($generated@@38 $generated@@47 $generated@@49) ($generated@@38 ($generated@@31 $generated@@47 $generated@@48) $generated@@49))
 :pattern ( ($generated@@31 $generated@@47 $generated@@48) ($generated@@38 $generated@@47 $generated@@49))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> ($generated@@38 $generated@@50 $generated@@52) ($generated@@38 ($generated@@32 $generated@@50 $generated@@51) $generated@@52))
 :pattern ( ($generated@@32 $generated@@50 $generated@@51) ($generated@@38 $generated@@50 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> ($generated@@38 $generated@@54 $generated@@55) ($generated@@38 ($generated@@32 $generated@@53 $generated@@54) $generated@@55))
 :pattern ( ($generated@@32 $generated@@53 $generated@@54) ($generated@@38 $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@38 ($generated@@31 $generated@@56 $generated@@57) $generated@@58)  (or (= $generated@@58 $generated@@57) ($generated@@38 $generated@@56 $generated@@58)))
 :pattern ( ($generated@@38 ($generated@@31 $generated@@56 $generated@@57) $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@38 $generated@@60 $generated@@61) (not ($generated@@38 ($generated@@30 $generated@@59 $generated@@60) $generated@@61)))
 :pattern ( ($generated@@30 $generated@@59 $generated@@60) ($generated@@38 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@63 $generated@@64 $generated@@65) ($generated@@38 $generated@@65 ($generated@@62 $generated@@64 $generated@@65)))
 :pattern ( ($generated@@62 $generated@@64 $generated@@65))
)))
(assert ($generated@@66 $generated@@24))
(assert ($generated@@66 $generated@@67))
(assert (forall (($generated@@68 T@U) ) (!  (not ($generated@@38 $generated@@26 $generated@@68))
 :pattern ( ($generated@@38 $generated@@26 $generated@@68))
)))
(assert (= ($generated@@1 $generated@@72) 4))
(assert  (=> (<= 3 $generated@@17) (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (or ($generated@@71 ($generated@@70 $generated@@22 $generated@@77) ($generated@@6 ($generated@@70 $generated@@2 $generated@@78))) (and (< 3 $generated@@17) (and ($generated@@21 $generated@@22 $generated@@77 ($generated@@23 $generated@@24)) (not ($generated@@25 $generated@@77 $generated@@26))))) (and (and ($generated@@27 $generated@@24 ($generated@@70 $generated@@22 $generated@@77)) (let (($generated@@79 ($generated@@70 $generated@@72 ($generated@@28 $generated@@24 ($generated@@70 $generated@@22 $generated@@77)))))
 (=> (not ($generated@@25 $generated@@77 ($generated@@31 $generated@@26 $generated@@79))) (and ($generated@@71 ($generated@@30 $generated@@77 ($generated@@31 $generated@@26 $generated@@79)) ($generated@@6 ($generated@@70 $generated@@2 $generated@@78))) ($generated@@73 ($generated@@69 ($generated@@19 $generated@@76) $generated@@74 ($generated@@30 $generated@@77 ($generated@@31 $generated@@26 $generated@@79)) ($generated@@6 ($generated@@70 $generated@@2 $generated@@78))) $generated@@79 ($generated@@6 ($generated@@70 $generated@@2 $generated@@78))))))) (= ($generated@@69 ($generated@@19 $generated@@76) true ($generated@@70 $generated@@22 $generated@@77) ($generated@@6 ($generated@@70 $generated@@2 $generated@@78))) (let (($generated@@80 ($generated@@70 $generated@@72 ($generated@@28 $generated@@24 ($generated@@70 $generated@@22 $generated@@77)))))
(ite ($generated@@25 $generated@@77 ($generated@@31 $generated@@26 $generated@@80)) $generated@@80 ($generated@@75 ($generated@@69 ($generated@@19 $generated@@76) $generated@@74 ($generated@@30 $generated@@77 ($generated@@31 $generated@@26 $generated@@80)) ($generated@@6 ($generated@@70 $generated@@2 $generated@@78))) $generated@@80 ($generated@@6 ($generated@@70 $generated@@2 $generated@@78))))))))
 :weight 3
 :pattern ( ($generated@@69 ($generated@@19 $generated@@76) true ($generated@@70 $generated@@22 $generated@@77) ($generated@@6 ($generated@@70 $generated@@2 $generated@@78))))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@32 ($generated@@32 $generated@@81 $generated@@82) $generated@@82) ($generated@@32 $generated@@81 $generated@@82))
 :pattern ( ($generated@@32 ($generated@@32 $generated@@81 $generated@@82) $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@38 ($generated@@30 $generated@@83 $generated@@84) $generated@@85)  (and ($generated@@38 $generated@@83 $generated@@85) (not ($generated@@38 $generated@@84 $generated@@85))))
 :pattern ( ($generated@@38 ($generated@@30 $generated@@83 $generated@@84) $generated@@85))
)))
(assert  (=> (<= 1 $generated@@17) (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or ($generated@@87 $generated@@90 $generated@@91) (and (< 1 $generated@@17) (and (and ($generated@@88 $generated@@90 $generated@@67) ($generated@@88 $generated@@91 $generated@@24)) ($generated@@38 ($generated@@33 $generated@@91) $generated@@90)))) ($generated@@88 ($generated@@86 $generated@@90 $generated@@91) $generated@@89))
 :pattern ( ($generated@@86 $generated@@90 $generated@@91))
))))
(assert  (=> (<= 1 $generated@@17) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (and (or ($generated@@87 $generated@@93 $generated@@94) (and (< 1 $generated@@17) (and (and (and ($generated@@88 $generated@@93 $generated@@67) ($generated@@41 $generated@@93 $generated@@67 $generated@@92)) (and ($generated@@88 $generated@@94 $generated@@24) ($generated@@41 $generated@@94 $generated@@24 $generated@@92))) ($generated@@38 ($generated@@33 $generated@@94) $generated@@93)))) ($generated@@43 $generated@@92)) ($generated@@41 ($generated@@86 $generated@@93 $generated@@94) $generated@@89 $generated@@92))
 :pattern ( ($generated@@41 ($generated@@86 $generated@@93 $generated@@94) $generated@@89 $generated@@92))
))))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@70 $generated@@96 $generated@@95) $generated@@95)
 :pattern ( ($generated@@70 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@97 $generated@@98 $generated@@99) (forall (($generated@@100 T@U) ) (!  (=> ($generated@@38 $generated@@98 $generated@@100) ($generated@@38 $generated@@99 $generated@@100))
 :pattern ( ($generated@@38 $generated@@98 $generated@@100))
 :pattern ( ($generated@@38 $generated@@99 $generated@@100))
)))
 :pattern ( ($generated@@97 $generated@@98 $generated@@99))
)))
(assert  (=> (<= 2 $generated@@17) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 Bool) ) (!  (=> (or ($generated@@73 $generated@@102 $generated@@103 $generated@@104) (and (< 2 $generated@@17) (and ($generated@@88 $generated@@102 $generated@@24) ($generated@@88 $generated@@103 $generated@@24)))) (and (let (($generated@@105 ($generated@@75 $generated@@102 $generated@@103 $generated@@104)))
 (and (and ($generated@@25 ($generated@@33 $generated@@105) ($generated@@32 ($generated@@33 $generated@@102) ($generated@@33 $generated@@103))) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@88 $generated@@106 $generated@@67) (=> ($generated@@38 ($generated@@33 $generated@@105) $generated@@106) (= ($generated@@86 $generated@@106 $generated@@105) ($generated@@86 $generated@@106 (ite ($generated@@38 ($generated@@33 $generated@@103) $generated@@106) $generated@@103 $generated@@102)))))
 :pattern ( ($generated@@38 ($generated@@33 $generated@@103) $generated@@106))
 :pattern ( ($generated@@86 $generated@@106 $generated@@105))
 :pattern ( ($generated@@38 ($generated@@33 $generated@@105) $generated@@106))
))) (=> $generated@@104 ($generated@@25 ($generated@@101 $generated@@105) ($generated@@32 ($generated@@101 $generated@@102) ($generated@@101 $generated@@103)))))) ($generated@@88 ($generated@@75 $generated@@102 $generated@@103 $generated@@104) $generated@@24)))
 :pattern ( ($generated@@75 $generated@@102 $generated@@103 $generated@@104))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@108 $generated@@110 ($generated@@107 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@107 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@111 $generated@@112 $generated@@113) (forall (($generated@@114 T@U) ) (!  (or (not ($generated@@38 $generated@@112 $generated@@114)) (not ($generated@@38 $generated@@113 $generated@@114)))
 :pattern ( ($generated@@38 $generated@@112 $generated@@114))
 :pattern ( ($generated@@38 $generated@@113 $generated@@114))
)))
 :pattern ( ($generated@@111 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@21 $generated@@22 $generated@@115 ($generated@@23 $generated@@116)) (forall (($generated@@117 T@U) ) (!  (=> ($generated@@38 $generated@@115 $generated@@117) ($generated@@88 $generated@@117 $generated@@116))
 :pattern ( ($generated@@38 $generated@@115 $generated@@117))
)))
 :pattern ( ($generated@@21 $generated@@22 $generated@@115 ($generated@@23 $generated@@116)))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@41 ($generated@@108 $generated@@121 $generated@@118) $generated@@119 $generated@@120) ($generated@@42 $generated@@121 $generated@@118 $generated@@119 $generated@@120))
 :pattern ( ($generated@@41 ($generated@@108 $generated@@121 $generated@@118) $generated@@119 $generated@@120))
)))
(assert  (=> (<= 3 $generated@@17) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 Bool) ) (!  (=> (or ($generated@@71 $generated@@123 $generated@@124) (and (< 3 $generated@@17) (and ($generated@@21 $generated@@22 $generated@@123 ($generated@@23 $generated@@24)) (not ($generated@@25 $generated@@123 $generated@@26))))) (and (and ($generated@@27 $generated@@24 $generated@@123) (let (($generated@@125 ($generated@@28 $generated@@24 $generated@@123)))
 (=> (not ($generated@@25 $generated@@123 ($generated@@31 $generated@@26 $generated@@125))) (and ($generated@@71 ($generated@@30 $generated@@123 ($generated@@31 $generated@@26 $generated@@125)) $generated@@124) ($generated@@73 ($generated@@69 $generated@@122 $generated@@74 ($generated@@30 $generated@@123 ($generated@@31 $generated@@26 $generated@@125)) $generated@@124) $generated@@125 $generated@@124))))) (= ($generated@@69 ($generated@@19 $generated@@122) true $generated@@123 $generated@@124) (let (($generated@@126 ($generated@@28 $generated@@24 $generated@@123)))
(ite ($generated@@25 $generated@@123 ($generated@@31 $generated@@26 $generated@@126)) $generated@@126 ($generated@@75 ($generated@@69 $generated@@122 $generated@@74 ($generated@@30 $generated@@123 ($generated@@31 $generated@@26 $generated@@126)) $generated@@124) $generated@@126 $generated@@124))))))
 :pattern ( ($generated@@69 ($generated@@19 $generated@@122) true $generated@@123 $generated@@124))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@38 ($generated@@32 $generated@@127 $generated@@128) $generated@@129)  (or ($generated@@38 $generated@@127 $generated@@129) ($generated@@38 $generated@@128 $generated@@129)))
 :pattern ( ($generated@@38 ($generated@@32 $generated@@127 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> ($generated@@111 $generated@@130 $generated@@131) (and (= ($generated@@30 ($generated@@32 $generated@@130 $generated@@131) $generated@@130) $generated@@131) (= ($generated@@30 ($generated@@32 $generated@@130 $generated@@131) $generated@@131) $generated@@130)))
 :pattern ( ($generated@@32 $generated@@130 $generated@@131))
)))
(assert  (=> (<= 1 $generated@@17) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (or ($generated@@20 ($generated@@70 $generated@@22 $generated@@133)) (and (< 1 $generated@@17) ($generated@@21 $generated@@22 $generated@@133 ($generated@@23 $generated@@24)))) (and (=> (not ($generated@@25 $generated@@133 $generated@@26)) (and ($generated@@27 $generated@@24 ($generated@@70 $generated@@22 $generated@@133)) (let (($generated@@134 ($generated@@70 $generated@@72 ($generated@@28 $generated@@24 ($generated@@70 $generated@@22 $generated@@133)))))
 (and ($generated@@29 $generated@@134) ($generated@@20 ($generated@@30 $generated@@133 ($generated@@31 $generated@@26 $generated@@134))))))) (= ($generated@@18 ($generated@@19 $generated@@132) ($generated@@70 $generated@@22 $generated@@133)) (ite ($generated@@25 $generated@@133 $generated@@26) $generated@@26 (let (($generated@@135 ($generated@@70 $generated@@72 ($generated@@28 $generated@@24 ($generated@@70 $generated@@22 $generated@@133)))))
($generated@@32 ($generated@@33 $generated@@135) ($generated@@18 ($generated@@19 $generated@@132) ($generated@@30 $generated@@133 ($generated@@31 $generated@@26 $generated@@135)))))))))
 :weight 3
 :pattern ( ($generated@@18 ($generated@@19 $generated@@132) ($generated@@70 $generated@@22 $generated@@133)))
))))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (or ($generated@@27 $generated@@136 $generated@@137) (and (< 0 $generated@@17) (and ($generated@@21 $generated@@22 $generated@@137 ($generated@@23 $generated@@136)) (not ($generated@@25 $generated@@137 $generated@@26))))) ($generated@@88 ($generated@@28 $generated@@136 $generated@@137) $generated@@136))
 :pattern ( ($generated@@28 $generated@@136 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> ($generated@@25 $generated@@138 $generated@@139) (= $generated@@138 $generated@@139))
 :pattern ( ($generated@@25 $generated@@138 $generated@@139))
)))
(assert  (=> (<= 3 $generated@@17) (forall (($generated@@140 T@U) ($generated@@141 Bool) ($generated@@142 T@U) ($generated@@143 Bool) ) (!  (=> (or ($generated@@71 $generated@@142 $generated@@143) (and (< 3 $generated@@17) (and ($generated@@21 $generated@@22 $generated@@142 ($generated@@23 $generated@@24)) (not ($generated@@25 $generated@@142 $generated@@26))))) ($generated@@88 ($generated@@69 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@24))
 :pattern ( ($generated@@69 $generated@@140 $generated@@141 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@88 ($generated@@108 $generated@@146 $generated@@144) $generated@@145) ($generated@@21 $generated@@146 $generated@@144 $generated@@145))
 :pattern ( ($generated@@88 ($generated@@108 $generated@@146 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> ($generated@@66 $generated@@147) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> ($generated@@88 $generated@@149 $generated@@147) ($generated@@41 $generated@@149 $generated@@147 $generated@@148))
 :pattern ( ($generated@@41 $generated@@149 $generated@@147 $generated@@148))
)))
 :pattern ( ($generated@@66 $generated@@147))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (or ($generated@@27 $generated@@150 $generated@@152) (and (< 0 $generated@@17) (and (and ($generated@@43 $generated@@151) ($generated@@21 $generated@@22 $generated@@152 ($generated@@23 $generated@@150))) (not ($generated@@25 $generated@@152 $generated@@26))))) (and ($generated@@63 $generated@@150 $generated@@152) (= ($generated@@28 $generated@@150 $generated@@152) (let (($generated@@153 ($generated@@62 $generated@@150 $generated@@152)))
$generated@@153))))
 :pattern ( ($generated@@28 $generated@@150 $generated@@152) ($generated@@43 $generated@@151))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@42 $generated@@22 $generated@@154 ($generated@@23 $generated@@155) $generated@@156) (forall (($generated@@157 T@U) ) (!  (=> ($generated@@38 $generated@@154 $generated@@157) ($generated@@41 $generated@@157 $generated@@155 $generated@@156))
 :pattern ( ($generated@@38 $generated@@154 $generated@@157))
)))
 :pattern ( ($generated@@42 $generated@@22 $generated@@154 ($generated@@23 $generated@@155) $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@23 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@23 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@160 ($generated@@23 $generated@@161)) $generated)
 :pattern ( ($generated@@23 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@107 $generated@@163 ($generated@@108 $generated@@163 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@108 $generated@@163 $generated@@162))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@164 T@U) ) (!  (=> (or ($generated@@29 $generated@@164) (and (< 0 $generated@@17) ($generated@@88 $generated@@164 $generated@@24))) ($generated@@21 $generated@@22 ($generated@@33 $generated@@164) ($generated@@23 $generated@@67)))
 :pattern ( ($generated@@33 $generated@@164))
))))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@167 T@U) ) (!  (=> (or ($generated@@165 $generated@@167) (and (< 0 $generated@@17) ($generated@@88 $generated@@167 $generated@@24))) ($generated@@21 $generated@@22 ($generated@@101 $generated@@167) ($generated@@23 $generated@@166)))
 :pattern ( ($generated@@101 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@168) $generated@@169) ($generated@@18 $generated@@168 $generated@@169))
 :pattern ( ($generated@@18 ($generated@@19 $generated@@168) $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@32 $generated@@170 ($generated@@32 $generated@@170 $generated@@171)) ($generated@@32 $generated@@170 $generated@@171))
 :pattern ( ($generated@@32 $generated@@170 ($generated@@32 $generated@@170 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 Bool) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= ($generated@@69 ($generated@@19 $generated@@172) $generated@@173 $generated@@174 $generated@@175) ($generated@@69 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
 :pattern ( ($generated@@69 ($generated@@19 $generated@@172) $generated@@173 $generated@@174 $generated@@175))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (or ($generated@@165 $generated@@177) (and (< 0 $generated@@17) (and ($generated@@88 $generated@@177 $generated@@24) ($generated@@41 $generated@@177 $generated@@24 $generated@@176)))) ($generated@@43 $generated@@176)) ($generated@@42 $generated@@22 ($generated@@101 $generated@@177) ($generated@@23 $generated@@166) $generated@@176))
 :pattern ( ($generated@@42 $generated@@22 ($generated@@101 $generated@@177) ($generated@@23 $generated@@166) $generated@@176))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@178 $generated@@188 $generated@@189 $generated@@190 ($generated@@184 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@193 $generated@@194) $generated@@191)
 :weight 0
)) (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@178 $generated@@195 $generated@@196 $generated@@197 ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@178 $generated@@204 $generated@@205 $generated@@206 ($generated@@184 $generated@@204 $generated@@205 $generated@@206 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@178 $generated@@204 $generated@@205 $generated@@206 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (= ($generated@@1 $generated@@179) 5)) (= ($generated@@1 $generated@@180) 6)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@182 $generated@@213 $generated@@214 ($generated@@185 $generated@@213 $generated@@214 $generated@@216 $generated@@217 $generated@@215) $generated@@217) $generated@@215)
 :weight 0
))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@222 $generated@@223) (= ($generated@@182 $generated@@218 $generated@@219 ($generated@@185 $generated@@218 $generated@@219 $generated@@221 $generated@@222 $generated@@220) $generated@@223) ($generated@@182 $generated@@218 $generated@@219 $generated@@221 $generated@@223)))
 :weight 0
))) (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@224 $generated@@225)) 7))) (forall (($generated@@226 T@T) ($generated@@227 T@T) ) (! (= ($generated@@186 ($generated@@183 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@183 $generated@@226 $generated@@227))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= ($generated@@187 ($generated@@183 $generated@@228 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@183 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (= ($generated@@6 ($generated@@178 $generated@@179 $generated@@180 $generated@@2 ($generated@@181 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (or (not (= $generated@@234 $generated@@230)) (not true)) ($generated@@6 ($generated@@107 $generated@@2 ($generated@@182 $generated@@180 $generated@@72 ($generated@@182 $generated@@179 ($generated@@183 $generated@@180 $generated@@72) $generated@@231 $generated@@234) $generated@@232)))) $generated@@233))
 :pattern ( ($generated@@178 $generated@@179 $generated@@180 $generated@@2 ($generated@@181 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert  (=> (<= 1 $generated@@17) (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (or ($generated@@20 $generated@@237) (and (< 1 $generated@@17) ($generated@@21 $generated@@22 $generated@@237 ($generated@@23 $generated@@24)))) ($generated@@21 $generated@@22 ($generated@@18 $generated@@236 $generated@@237) ($generated@@23 $generated@@67)))
 :pattern ( ($generated@@18 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> ($generated@@88 $generated@@238 ($generated@@23 $generated@@239)) (and (= ($generated@@108 $generated@@22 ($generated@@107 $generated@@22 $generated@@238)) $generated@@238) ($generated@@21 $generated@@22 ($generated@@107 $generated@@22 $generated@@238) ($generated@@23 $generated@@239))))
 :pattern ( ($generated@@88 $generated@@238 ($generated@@23 $generated@@239)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= ($generated@@25 $generated@@240 $generated@@241) (forall (($generated@@242 T@U) ) (! (= ($generated@@38 $generated@@240 $generated@@242) ($generated@@38 $generated@@241 $generated@@242))
 :pattern ( ($generated@@38 $generated@@240 $generated@@242))
 :pattern ( ($generated@@38 $generated@@241 $generated@@242))
)))
 :pattern ( ($generated@@25 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@T) ) (! (= ($generated@@108 $generated@@244 ($generated@@70 $generated@@244 $generated@@243)) ($generated@@70 $generated@@72 ($generated@@108 $generated@@244 $generated@@243)))
 :pattern ( ($generated@@108 $generated@@244 ($generated@@70 $generated@@244 $generated@@243)))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (or ($generated@@27 $generated@@245 ($generated@@70 $generated@@22 $generated@@247)) (and (< 0 $generated@@17) (and (and ($generated@@43 $generated@@246) ($generated@@21 $generated@@22 $generated@@247 ($generated@@23 $generated@@245))) (not ($generated@@25 $generated@@247 $generated@@26))))) (and ($generated@@63 $generated@@245 ($generated@@70 $generated@@22 $generated@@247)) (= ($generated@@28 $generated@@245 ($generated@@70 $generated@@22 $generated@@247)) (let (($generated@@248 ($generated@@62 $generated@@245 ($generated@@70 $generated@@22 $generated@@247))))
$generated@@248))))
 :weight 3
 :pattern ( ($generated@@28 $generated@@245 ($generated@@70 $generated@@22 $generated@@247)) ($generated@@43 $generated@@246))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () Bool)
(declare-fun $generated@@257 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@258  (=> (= $generated@@249 ($generated@@181 $generated@@250 $generated@@251 $generated@@0 false)) (=> (and (and ($generated@@43 $generated@@252) ($generated@@253 $generated@@252)) (and (= $generated@@251 $generated@@252) (forall (($generated@@259 T@U) ($generated@@260 Bool) ) (!  (=> (and (and ($generated@@21 $generated@@22 $generated@@259 ($generated@@23 $generated@@24)) (not ($generated@@25 $generated@@259 $generated@@26))) (or (and ($generated@@97 $generated@@259 $generated@@255) (not ($generated@@97 $generated@@255 $generated@@259))) (and ($generated@@25 $generated@@259 $generated@@255) (and (not $generated@@260) $generated@@256)))) ($generated@@25 ($generated@@33 ($generated@@69 ($generated@@19 $generated@@254) $generated@@74 $generated@@259 $generated@@260)) ($generated@@18 ($generated@@19 $generated@@254) $generated@@259)))
 :pattern ( ($generated@@69 ($generated@@19 $generated@@254) $generated@@74 $generated@@259 $generated@@260))
)))) (=> (and (and (and ($generated@@43 $generated@@257) ($generated@@253 $generated@@257)) (= $generated@@252 $generated@@257)) (and $generated@@74 (= (ControlFlow 0 2) (- 0 1)))) ($generated@@25 ($generated@@33 ($generated@@69 ($generated@@19 ($generated@@19 $generated@@254)) $generated@@74 $generated@@255 $generated@@256)) ($generated@@18 ($generated@@19 ($generated@@19 $generated@@254)) $generated@@255)))))))
(let (($generated@@261  (=> (and ($generated@@43 $generated@@251) ($generated@@253 $generated@@251)) (=> (and (and (and ($generated@@21 $generated@@22 $generated@@255 ($generated@@23 $generated@@24)) ($generated@@42 $generated@@22 $generated@@255 ($generated@@23 $generated@@24) $generated@@251)) (= 4 $generated@@17)) (and (not ($generated@@25 $generated@@255 $generated@@26)) (= (ControlFlow 0 3) 2))) $generated@@258))))
$generated@@261)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
