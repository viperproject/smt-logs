(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U) T@U)
(declare-fun $generated@@18 (T@U T@U) Bool)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U T@U T@U) Bool)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@60 (T@U Bool T@U Bool) T@U)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@U Bool) Bool)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@U T@U Bool) Bool)
(declare-fun $generated@@66 () Bool)
(declare-fun $generated@@67 (T@U T@U Bool) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@100 (T@T T@U) T@U)
(declare-fun $generated@@101 (T@T T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@111 (T@U) Bool)
(declare-fun $generated@@112 (T@U) Bool)
(declare-fun $generated@@113 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@175 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@19 T@U) ($generated@@20 T@U) ) (! ($generated@@18 ($generated@@17 $generated@@19 $generated@@20) $generated@@20)
 :pattern ( ($generated@@17 $generated@@19 $generated@@20))
)))
(assert (= ($generated@@1 $generated@@26) 3))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and (or ($generated@@24 $generated@@33 $generated@@34) (and (< 0 $generated@@21) (and (and ($generated@@25 $generated@@26 $generated@@34 ($generated@@27 $generated@@33)) ($generated@@28 $generated@@26 $generated@@34 ($generated@@27 $generated@@33) $generated@@32)) (not ($generated@@29 $generated@@34 $generated@@30))))) ($generated@@31 $generated@@32)) ($generated@@22 ($generated@@23 $generated@@33 $generated@@34) $generated@@33 $generated@@32))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@33 $generated@@34) $generated@@33 $generated@@32))
))))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@18 $generated@@35 $generated@@37) ($generated@@18 ($generated@@17 $generated@@35 $generated@@36) $generated@@37))
 :pattern ( ($generated@@17 $generated@@35 $generated@@36) ($generated@@18 $generated@@35 $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@18 $generated@@39 $generated@@41) ($generated@@18 ($generated@@38 $generated@@39 $generated@@40) $generated@@41))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40) ($generated@@18 $generated@@39 $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated@@18 $generated@@43 $generated@@44) ($generated@@18 ($generated@@38 $generated@@42 $generated@@43) $generated@@44))
 :pattern ( ($generated@@38 $generated@@42 $generated@@43) ($generated@@18 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@18 ($generated@@17 $generated@@45 $generated@@46) $generated@@47)  (or (= $generated@@47 $generated@@46) ($generated@@18 $generated@@45 $generated@@47)))
 :pattern ( ($generated@@18 ($generated@@17 $generated@@45 $generated@@46) $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> ($generated@@18 $generated@@50 $generated@@51) (not ($generated@@18 ($generated@@48 $generated@@49 $generated@@50) $generated@@51)))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50) ($generated@@18 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> ($generated@@53 $generated@@54 $generated@@55) ($generated@@18 $generated@@55 ($generated@@52 $generated@@54 $generated@@55)))
 :pattern ( ($generated@@52 $generated@@54 $generated@@55))
)))
(assert ($generated@@56 $generated@@57))
(assert ($generated@@56 $generated@@58))
(assert (forall (($generated@@59 T@U) ) (!  (not ($generated@@18 $generated@@30 $generated@@59))
 :pattern ( ($generated@@18 $generated@@30 $generated@@59))
)))
(assert (= ($generated@@1 $generated@@64) 4))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (or ($generated@@63 ($generated@@62 $generated@@26 $generated@@69) ($generated@@6 ($generated@@62 $generated@@2 $generated@@70))) (and (< 3 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@69 ($generated@@27 $generated@@57)) (not ($generated@@29 $generated@@69 $generated@@30))))) (and (and ($generated@@24 $generated@@57 ($generated@@62 $generated@@26 $generated@@69)) (let (($generated@@71 ($generated@@62 $generated@@64 ($generated@@23 $generated@@57 ($generated@@62 $generated@@26 $generated@@69)))))
 (=> (not ($generated@@29 $generated@@69 ($generated@@17 $generated@@30 $generated@@71))) (and ($generated@@63 ($generated@@48 $generated@@69 ($generated@@17 $generated@@30 $generated@@71)) ($generated@@6 ($generated@@62 $generated@@2 $generated@@70))) ($generated@@65 ($generated@@60 ($generated@@61 $generated@@68) $generated@@66 ($generated@@48 $generated@@69 ($generated@@17 $generated@@30 $generated@@71)) ($generated@@6 ($generated@@62 $generated@@2 $generated@@70))) $generated@@71 ($generated@@6 ($generated@@62 $generated@@2 $generated@@70))))))) (= ($generated@@60 ($generated@@61 $generated@@68) true ($generated@@62 $generated@@26 $generated@@69) ($generated@@6 ($generated@@62 $generated@@2 $generated@@70))) (let (($generated@@72 ($generated@@62 $generated@@64 ($generated@@23 $generated@@57 ($generated@@62 $generated@@26 $generated@@69)))))
(ite ($generated@@29 $generated@@69 ($generated@@17 $generated@@30 $generated@@72)) $generated@@72 ($generated@@67 ($generated@@60 ($generated@@61 $generated@@68) $generated@@66 ($generated@@48 $generated@@69 ($generated@@17 $generated@@30 $generated@@72)) ($generated@@6 ($generated@@62 $generated@@2 $generated@@70))) $generated@@72 ($generated@@6 ($generated@@62 $generated@@2 $generated@@70))))))))
 :weight 3
 :pattern ( ($generated@@60 ($generated@@61 $generated@@68) true ($generated@@62 $generated@@26 $generated@@69) ($generated@@6 ($generated@@62 $generated@@2 $generated@@70))))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@38 ($generated@@38 $generated@@73 $generated@@74) $generated@@74) ($generated@@38 $generated@@73 $generated@@74))
 :pattern ( ($generated@@38 ($generated@@38 $generated@@73 $generated@@74) $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@18 ($generated@@48 $generated@@75 $generated@@76) $generated@@77)  (and ($generated@@18 $generated@@75 $generated@@77) (not ($generated@@18 $generated@@76 $generated@@77))))
 :pattern ( ($generated@@18 ($generated@@48 $generated@@75 $generated@@76) $generated@@77))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (or ($generated@@79 $generated@@83 $generated@@84) (and (< 1 $generated@@21) (and (and ($generated@@80 $generated@@83 $generated@@58) ($generated@@80 $generated@@84 $generated@@57)) ($generated@@18 ($generated@@81 $generated@@84) $generated@@83)))) ($generated@@80 ($generated@@78 $generated@@83 $generated@@84) $generated@@82))
 :pattern ( ($generated@@78 $generated@@83 $generated@@84))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and (or ($generated@@79 $generated@@86 $generated@@87) (and (< 1 $generated@@21) (and (and (and ($generated@@80 $generated@@86 $generated@@58) ($generated@@22 $generated@@86 $generated@@58 $generated@@85)) (and ($generated@@80 $generated@@87 $generated@@57) ($generated@@22 $generated@@87 $generated@@57 $generated@@85))) ($generated@@18 ($generated@@81 $generated@@87) $generated@@86)))) ($generated@@31 $generated@@85)) ($generated@@22 ($generated@@78 $generated@@86 $generated@@87) $generated@@82 $generated@@85))
 :pattern ( ($generated@@22 ($generated@@78 $generated@@86 $generated@@87) $generated@@82 $generated@@85))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@62 $generated@@89 $generated@@88) $generated@@88)
 :pattern ( ($generated@@62 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@90 $generated@@91 $generated@@92) (forall (($generated@@93 T@U) ) (!  (=> ($generated@@18 $generated@@91 $generated@@93) ($generated@@18 $generated@@92 $generated@@93))
 :pattern ( ($generated@@18 $generated@@91 $generated@@93))
 :pattern ( ($generated@@18 $generated@@92 $generated@@93))
)))
 :pattern ( ($generated@@90 $generated@@91 $generated@@92))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 Bool) ) (!  (=> (or ($generated@@65 $generated@@95 $generated@@96 $generated@@97) (and (< 2 $generated@@21) (and ($generated@@80 $generated@@95 $generated@@57) ($generated@@80 $generated@@96 $generated@@57)))) (and (let (($generated@@98 ($generated@@67 $generated@@95 $generated@@96 $generated@@97)))
 (and (and ($generated@@29 ($generated@@81 $generated@@98) ($generated@@38 ($generated@@81 $generated@@95) ($generated@@81 $generated@@96))) (forall (($generated@@99 T@U) ) (!  (=> ($generated@@80 $generated@@99 $generated@@58) (=> ($generated@@18 ($generated@@81 $generated@@98) $generated@@99) (= ($generated@@78 $generated@@99 $generated@@98) ($generated@@78 $generated@@99 (ite ($generated@@18 ($generated@@81 $generated@@96) $generated@@99) $generated@@96 $generated@@95)))))
 :pattern ( ($generated@@18 ($generated@@81 $generated@@96) $generated@@99))
 :pattern ( ($generated@@78 $generated@@99 $generated@@98))
 :pattern ( ($generated@@18 ($generated@@81 $generated@@98) $generated@@99))
))) (=> $generated@@97 ($generated@@29 ($generated@@94 $generated@@98) ($generated@@38 ($generated@@94 $generated@@95) ($generated@@94 $generated@@96)))))) ($generated@@80 ($generated@@67 $generated@@95 $generated@@96 $generated@@97) $generated@@57)))
 :pattern ( ($generated@@67 $generated@@95 $generated@@96 $generated@@97))
))))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@101 $generated@@103 ($generated@@100 $generated@@103 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@100 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@104 $generated@@105 $generated@@106) (forall (($generated@@107 T@U) ) (!  (or (not ($generated@@18 $generated@@105 $generated@@107)) (not ($generated@@18 $generated@@106 $generated@@107)))
 :pattern ( ($generated@@18 $generated@@105 $generated@@107))
 :pattern ( ($generated@@18 $generated@@106 $generated@@107))
)))
 :pattern ( ($generated@@104 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@108 ($generated@@27 $generated@@109)) (forall (($generated@@110 T@U) ) (!  (=> ($generated@@18 $generated@@108 $generated@@110) ($generated@@80 $generated@@110 $generated@@109))
 :pattern ( ($generated@@18 $generated@@108 $generated@@110))
)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@108 ($generated@@27 $generated@@109)))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@114 T@U) ) (!  (=> (or ($generated@@112 $generated@@114) (and (< 2 $generated@@21) ($generated@@25 $generated@@26 $generated@@114 ($generated@@27 $generated@@57)))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (and ($generated@@80 $generated@@115 $generated@@57) ($generated@@80 $generated@@116 $generated@@57)) (=> ($generated@@18 $generated@@114 $generated@@115) (=> ($generated@@18 $generated@@114 $generated@@116) (forall (($generated@@117 T@U) ) (!  (=> ($generated@@80 $generated@@117 $generated@@58) (and ($generated@@113 $generated@@115) (=> ($generated@@18 ($generated@@81 $generated@@115) $generated@@117) (and ($generated@@113 $generated@@116) (=> ($generated@@18 ($generated@@81 $generated@@116) $generated@@117) (and ($generated@@79 $generated@@117 $generated@@115) ($generated@@79 $generated@@117 $generated@@116)))))))
 :pattern ( ($generated@@78 $generated@@117 $generated@@116))
 :pattern ( ($generated@@78 $generated@@117 $generated@@115))
 :pattern ( ($generated@@18 ($generated@@81 $generated@@116) $generated@@117))
 :pattern ( ($generated@@18 ($generated@@81 $generated@@115) $generated@@117))
)))))
 :pattern ( ($generated@@81 $generated@@116) ($generated@@81 $generated@@115))
 :pattern ( ($generated@@81 $generated@@116) ($generated@@18 $generated@@114 $generated@@115))
 :pattern ( ($generated@@81 $generated@@115) ($generated@@18 $generated@@114 $generated@@116))
 :pattern ( ($generated@@18 $generated@@114 $generated@@116) ($generated@@18 $generated@@114 $generated@@115))
)) (= ($generated@@111 $generated@@114) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (and ($generated@@80 $generated@@118 $generated@@57) ($generated@@80 $generated@@119 $generated@@57)) (=> (and ($generated@@18 $generated@@114 $generated@@118) ($generated@@18 $generated@@114 $generated@@119)) (forall (($generated@@120 T@U) ) (!  (=> ($generated@@80 $generated@@120 $generated@@58) (=> (and ($generated@@18 ($generated@@81 $generated@@118) $generated@@120) ($generated@@18 ($generated@@81 $generated@@119) $generated@@120)) (= ($generated@@78 $generated@@120 $generated@@118) ($generated@@78 $generated@@120 $generated@@119))))
 :pattern ( ($generated@@78 $generated@@120 $generated@@119))
 :pattern ( ($generated@@78 $generated@@120 $generated@@118))
 :pattern ( ($generated@@18 ($generated@@81 $generated@@119) $generated@@120))
 :pattern ( ($generated@@18 ($generated@@81 $generated@@118) $generated@@120))
))))
 :pattern ( ($generated@@81 $generated@@119) ($generated@@81 $generated@@118))
 :pattern ( ($generated@@81 $generated@@119) ($generated@@18 $generated@@114 $generated@@118))
 :pattern ( ($generated@@81 $generated@@118) ($generated@@18 $generated@@114 $generated@@119))
 :pattern ( ($generated@@18 $generated@@114 $generated@@119) ($generated@@18 $generated@@114 $generated@@118))
)))))
 :pattern ( ($generated@@111 $generated@@114))
))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@22 ($generated@@101 $generated@@124 $generated@@121) $generated@@122 $generated@@123) ($generated@@28 $generated@@124 $generated@@121 $generated@@122 $generated@@123))
 :pattern ( ($generated@@22 ($generated@@101 $generated@@124 $generated@@121) $generated@@122 $generated@@123))
)))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 Bool) ) (!  (=> (or ($generated@@63 $generated@@126 $generated@@127) (and (< 3 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@126 ($generated@@27 $generated@@57)) (not ($generated@@29 $generated@@126 $generated@@30))))) (and (and ($generated@@24 $generated@@57 $generated@@126) (let (($generated@@128 ($generated@@23 $generated@@57 $generated@@126)))
 (=> (not ($generated@@29 $generated@@126 ($generated@@17 $generated@@30 $generated@@128))) (and ($generated@@63 ($generated@@48 $generated@@126 ($generated@@17 $generated@@30 $generated@@128)) $generated@@127) ($generated@@65 ($generated@@60 $generated@@125 $generated@@66 ($generated@@48 $generated@@126 ($generated@@17 $generated@@30 $generated@@128)) $generated@@127) $generated@@128 $generated@@127))))) (= ($generated@@60 ($generated@@61 $generated@@125) true $generated@@126 $generated@@127) (let (($generated@@129 ($generated@@23 $generated@@57 $generated@@126)))
(ite ($generated@@29 $generated@@126 ($generated@@17 $generated@@30 $generated@@129)) $generated@@129 ($generated@@67 ($generated@@60 $generated@@125 $generated@@66 ($generated@@48 $generated@@126 ($generated@@17 $generated@@30 $generated@@129)) $generated@@127) $generated@@129 $generated@@127))))))
 :pattern ( ($generated@@60 ($generated@@61 $generated@@125) true $generated@@126 $generated@@127))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@18 ($generated@@38 $generated@@130 $generated@@131) $generated@@132)  (or ($generated@@18 $generated@@130 $generated@@132) ($generated@@18 $generated@@131 $generated@@132)))
 :pattern ( ($generated@@18 ($generated@@38 $generated@@130 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> ($generated@@104 $generated@@133 $generated@@134) (and (= ($generated@@48 ($generated@@38 $generated@@133 $generated@@134) $generated@@133) $generated@@134) (= ($generated@@48 ($generated@@38 $generated@@133 $generated@@134) $generated@@134) $generated@@133)))
 :pattern ( ($generated@@38 $generated@@133 $generated@@134))
)))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (or ($generated@@24 $generated@@135 $generated@@136) (and (< 0 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@136 ($generated@@27 $generated@@135)) (not ($generated@@29 $generated@@136 $generated@@30))))) ($generated@@80 ($generated@@23 $generated@@135 $generated@@136) $generated@@135))
 :pattern ( ($generated@@23 $generated@@135 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> ($generated@@29 $generated@@137 $generated@@138) (= $generated@@137 $generated@@138))
 :pattern ( ($generated@@29 $generated@@137 $generated@@138))
)))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@139 T@U) ($generated@@140 Bool) ($generated@@141 T@U) ($generated@@142 Bool) ) (!  (=> (or ($generated@@63 $generated@@141 $generated@@142) (and (< 3 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@141 ($generated@@27 $generated@@57)) (not ($generated@@29 $generated@@141 $generated@@30))))) ($generated@@80 ($generated@@60 $generated@@139 $generated@@140 $generated@@141 $generated@@142) $generated@@57))
 :pattern ( ($generated@@60 $generated@@139 $generated@@140 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@80 ($generated@@101 $generated@@145 $generated@@143) $generated@@144) ($generated@@25 $generated@@145 $generated@@143 $generated@@144))
 :pattern ( ($generated@@80 ($generated@@101 $generated@@145 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> ($generated@@56 $generated@@146) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> ($generated@@80 $generated@@148 $generated@@146) ($generated@@22 $generated@@148 $generated@@146 $generated@@147))
 :pattern ( ($generated@@22 $generated@@148 $generated@@146 $generated@@147))
)))
 :pattern ( ($generated@@56 $generated@@146))
)))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (or ($generated@@24 $generated@@149 $generated@@151) (and (< 0 $generated@@21) (and (and ($generated@@31 $generated@@150) ($generated@@25 $generated@@26 $generated@@151 ($generated@@27 $generated@@149))) (not ($generated@@29 $generated@@151 $generated@@30))))) (and ($generated@@53 $generated@@149 $generated@@151) (= ($generated@@23 $generated@@149 $generated@@151) (let (($generated@@152 ($generated@@52 $generated@@149 $generated@@151)))
$generated@@152))))
 :pattern ( ($generated@@23 $generated@@149 $generated@@151) ($generated@@31 $generated@@150))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@28 $generated@@26 $generated@@153 ($generated@@27 $generated@@154) $generated@@155) (forall (($generated@@156 T@U) ) (!  (=> ($generated@@18 $generated@@153 $generated@@156) ($generated@@22 $generated@@156 $generated@@154 $generated@@155))
 :pattern ( ($generated@@18 $generated@@153 $generated@@156))
)))
 :pattern ( ($generated@@28 $generated@@26 $generated@@153 ($generated@@27 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@27 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@27 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@159 ($generated@@27 $generated@@160)) $generated)
 :pattern ( ($generated@@27 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@100 $generated@@162 ($generated@@101 $generated@@162 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@101 $generated@@162 $generated@@161))
)))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@163 T@U) ) (!  (=> (or ($generated@@113 $generated@@163) (and (< 0 $generated@@21) ($generated@@80 $generated@@163 $generated@@57))) ($generated@@25 $generated@@26 ($generated@@81 $generated@@163) ($generated@@27 $generated@@58)))
 :pattern ( ($generated@@81 $generated@@163))
))))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@166 T@U) ) (!  (=> (or ($generated@@164 $generated@@166) (and (< 0 $generated@@21) ($generated@@80 $generated@@166 $generated@@57))) ($generated@@25 $generated@@26 ($generated@@94 $generated@@166) ($generated@@27 $generated@@165)))
 :pattern ( ($generated@@94 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@38 $generated@@167 ($generated@@38 $generated@@167 $generated@@168)) ($generated@@38 $generated@@167 $generated@@168))
 :pattern ( ($generated@@38 $generated@@167 ($generated@@38 $generated@@167 $generated@@168)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 Bool) ($generated@@171 T@U) ($generated@@172 Bool) ) (! (= ($generated@@60 ($generated@@61 $generated@@169) $generated@@170 $generated@@171 $generated@@172) ($generated@@60 $generated@@169 $generated@@170 $generated@@171 $generated@@172))
 :pattern ( ($generated@@60 ($generated@@61 $generated@@169) $generated@@170 $generated@@171 $generated@@172))
)))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (or ($generated@@164 $generated@@174) (and (< 0 $generated@@21) (and ($generated@@80 $generated@@174 $generated@@57) ($generated@@22 $generated@@174 $generated@@57 $generated@@173)))) ($generated@@31 $generated@@173)) ($generated@@28 $generated@@26 ($generated@@94 $generated@@174) ($generated@@27 $generated@@165) $generated@@173))
 :pattern ( ($generated@@28 $generated@@26 ($generated@@94 $generated@@174) ($generated@@27 $generated@@165) $generated@@173))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@175 $generated@@185 $generated@@186 $generated@@187 ($generated@@181 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@190 $generated@@191) $generated@@188)
 :weight 0
)) (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@175 $generated@@192 $generated@@193 $generated@@194 ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@175 $generated@@201 $generated@@202 $generated@@203 ($generated@@181 $generated@@201 $generated@@202 $generated@@203 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@175 $generated@@201 $generated@@202 $generated@@203 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (= ($generated@@1 $generated@@176) 5)) (= ($generated@@1 $generated@@177) 6)) (forall (($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@179 $generated@@210 $generated@@211 ($generated@@182 $generated@@210 $generated@@211 $generated@@213 $generated@@214 $generated@@212) $generated@@214) $generated@@212)
 :weight 0
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@219 $generated@@220) (= ($generated@@179 $generated@@215 $generated@@216 ($generated@@182 $generated@@215 $generated@@216 $generated@@218 $generated@@219 $generated@@217) $generated@@220) ($generated@@179 $generated@@215 $generated@@216 $generated@@218 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@221 $generated@@222)) 7))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@183 ($generated@@180 $generated@@223 $generated@@224)) $generated@@223)
 :pattern ( ($generated@@180 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (! (= ($generated@@184 ($generated@@180 $generated@@225 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@180 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (= ($generated@@6 ($generated@@175 $generated@@176 $generated@@177 $generated@@2 ($generated@@178 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (or (not (= $generated@@231 $generated@@227)) (not true)) ($generated@@6 ($generated@@100 $generated@@2 ($generated@@179 $generated@@177 $generated@@64 ($generated@@179 $generated@@176 ($generated@@180 $generated@@177 $generated@@64) $generated@@228 $generated@@231) $generated@@229)))) $generated@@230))
 :pattern ( ($generated@@175 $generated@@176 $generated@@177 $generated@@2 ($generated@@178 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> ($generated@@80 $generated@@233 ($generated@@27 $generated@@234)) (and (= ($generated@@101 $generated@@26 ($generated@@100 $generated@@26 $generated@@233)) $generated@@233) ($generated@@25 $generated@@26 ($generated@@100 $generated@@26 $generated@@233) ($generated@@27 $generated@@234))))
 :pattern ( ($generated@@80 $generated@@233 ($generated@@27 $generated@@234)))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@235 T@U) ) (!  (=> (or ($generated@@112 ($generated@@62 $generated@@26 $generated@@235)) (and (< 2 $generated@@21) ($generated@@25 $generated@@26 $generated@@235 ($generated@@27 $generated@@57)))) (and (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and ($generated@@80 $generated@@236 $generated@@57) ($generated@@80 $generated@@237 $generated@@57)) (=> ($generated@@18 ($generated@@62 $generated@@26 $generated@@235) $generated@@236) (=> ($generated@@18 ($generated@@62 $generated@@26 $generated@@235) $generated@@237) (forall (($generated@@238 T@U) ) (!  (=> ($generated@@80 $generated@@238 $generated@@58) (and ($generated@@113 $generated@@236) (=> ($generated@@18 ($generated@@81 $generated@@236) $generated@@238) (and ($generated@@113 $generated@@237) (=> ($generated@@18 ($generated@@81 $generated@@237) $generated@@238) (and ($generated@@79 $generated@@238 $generated@@236) ($generated@@79 $generated@@238 $generated@@237)))))))
 :pattern ( ($generated@@78 $generated@@238 $generated@@237))
 :pattern ( ($generated@@78 $generated@@238 $generated@@236))
 :pattern ( ($generated@@18 ($generated@@81 $generated@@237) $generated@@238))
 :pattern ( ($generated@@18 ($generated@@81 $generated@@236) $generated@@238))
)))))
 :pattern ( ($generated@@81 $generated@@237) ($generated@@81 $generated@@236))
 :pattern ( ($generated@@81 $generated@@237) ($generated@@18 $generated@@235 $generated@@236))
 :pattern ( ($generated@@81 $generated@@236) ($generated@@18 $generated@@235 $generated@@237))
 :pattern ( ($generated@@18 $generated@@235 $generated@@237) ($generated@@18 $generated@@235 $generated@@236))
)) (= ($generated@@111 ($generated@@62 $generated@@26 $generated@@235)) (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and ($generated@@80 $generated@@239 $generated@@57) ($generated@@80 $generated@@240 $generated@@57)) (=> (and ($generated@@18 ($generated@@62 $generated@@26 $generated@@235) $generated@@239) ($generated@@18 ($generated@@62 $generated@@26 $generated@@235) $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> ($generated@@80 $generated@@241 $generated@@58) (=> (and ($generated@@18 ($generated@@81 $generated@@239) $generated@@241) ($generated@@18 ($generated@@81 $generated@@240) $generated@@241)) (= ($generated@@78 $generated@@241 $generated@@239) ($generated@@78 $generated@@241 $generated@@240))))
 :pattern ( ($generated@@78 $generated@@241 $generated@@240))
 :pattern ( ($generated@@78 $generated@@241 $generated@@239))
 :pattern ( ($generated@@18 ($generated@@81 $generated@@240) $generated@@241))
 :pattern ( ($generated@@18 ($generated@@81 $generated@@239) $generated@@241))
))))
 :pattern ( ($generated@@81 $generated@@240) ($generated@@81 $generated@@239))
 :pattern ( ($generated@@81 $generated@@240) ($generated@@18 $generated@@235 $generated@@239))
 :pattern ( ($generated@@81 $generated@@239) ($generated@@18 $generated@@235 $generated@@240))
 :pattern ( ($generated@@18 $generated@@235 $generated@@240) ($generated@@18 $generated@@235 $generated@@239))
)))))
 :weight 3
 :pattern ( ($generated@@111 ($generated@@62 $generated@@26 $generated@@235)))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= ($generated@@29 $generated@@242 $generated@@243) (forall (($generated@@244 T@U) ) (! (= ($generated@@18 $generated@@242 $generated@@244) ($generated@@18 $generated@@243 $generated@@244))
 :pattern ( ($generated@@18 $generated@@242 $generated@@244))
 :pattern ( ($generated@@18 $generated@@243 $generated@@244))
)))
 :pattern ( ($generated@@29 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@T) ) (! (= ($generated@@101 $generated@@246 ($generated@@62 $generated@@246 $generated@@245)) ($generated@@62 $generated@@64 ($generated@@101 $generated@@246 $generated@@245)))
 :pattern ( ($generated@@101 $generated@@246 ($generated@@62 $generated@@246 $generated@@245)))
)))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (or ($generated@@24 $generated@@247 ($generated@@62 $generated@@26 $generated@@249)) (and (< 0 $generated@@21) (and (and ($generated@@31 $generated@@248) ($generated@@25 $generated@@26 $generated@@249 ($generated@@27 $generated@@247))) (not ($generated@@29 $generated@@249 $generated@@30))))) (and ($generated@@53 $generated@@247 ($generated@@62 $generated@@26 $generated@@249)) (= ($generated@@23 $generated@@247 ($generated@@62 $generated@@26 $generated@@249)) (let (($generated@@250 ($generated@@52 $generated@@247 ($generated@@62 $generated@@26 $generated@@249))))
$generated@@250))))
 :weight 3
 :pattern ( ($generated@@23 $generated@@247 ($generated@@62 $generated@@26 $generated@@249)) ($generated@@31 $generated@@248))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () Bool)
(declare-fun $generated@@261 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@262  (=> (= $generated@@251 ($generated@@178 $generated@@252 $generated@@253 $generated@@0 false)) (=> (and (and ($generated@@31 $generated@@254) ($generated@@255 $generated@@254)) (and (= $generated@@253 $generated@@254) (forall (($generated@@263 T@U) ($generated@@264 Bool) ) (!  (=> (and (and ($generated@@25 $generated@@26 $generated@@263 ($generated@@27 $generated@@57)) (and (and ($generated@@18 $generated@@263 $generated@@257) ($generated@@111 $generated@@263)) (and ($generated@@18 ($generated@@81 $generated@@257) $generated@@258) ($generated@@18 ($generated@@81 ($generated@@60 ($generated@@61 $generated@@256) $generated@@66 $generated@@263 $generated@@264)) $generated@@258)))) (or (and ($generated@@90 $generated@@263 $generated@@259) (not ($generated@@90 $generated@@259 $generated@@263))) (and ($generated@@29 $generated@@263 $generated@@259) (and (not $generated@@264) $generated@@260)))) (= ($generated@@78 $generated@@258 ($generated@@60 ($generated@@61 $generated@@256) $generated@@66 $generated@@263 $generated@@264)) ($generated@@78 $generated@@258 $generated@@257)))
 :pattern ( ($generated@@60 ($generated@@61 $generated@@256) $generated@@66 $generated@@263 $generated@@264))
)))) (=> (and (and (and ($generated@@31 $generated@@261) ($generated@@255 $generated@@261)) (= $generated@@254 $generated@@261)) (and $generated@@66 (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@78 $generated@@258 ($generated@@60 ($generated@@61 ($generated@@61 $generated@@256)) $generated@@66 $generated@@259 $generated@@260)) ($generated@@78 $generated@@258 $generated@@257)))))))
(let (($generated@@265  (=> (and ($generated@@31 $generated@@253) ($generated@@255 $generated@@253)) (=> (and (and (and (and ($generated@@80 $generated@@258 $generated@@58) ($generated@@22 $generated@@258 $generated@@58 $generated@@253)) (and ($generated@@80 $generated@@257 $generated@@57) ($generated@@22 $generated@@257 $generated@@57 $generated@@253))) (and (and ($generated@@25 $generated@@26 $generated@@259 ($generated@@27 $generated@@57)) ($generated@@28 $generated@@26 $generated@@259 ($generated@@27 $generated@@57) $generated@@253)) (and (= 4 $generated@@21) ($generated@@18 $generated@@259 $generated@@257)))) (and (and (and ($generated@@112 $generated@@259) (and ($generated@@111 $generated@@259) (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and ($generated@@80 $generated@@266 $generated@@57) ($generated@@80 $generated@@267 $generated@@57)) (=> (and ($generated@@18 $generated@@259 $generated@@266) ($generated@@18 $generated@@259 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> ($generated@@80 $generated@@268 $generated@@58) (=> (and ($generated@@18 ($generated@@81 $generated@@266) $generated@@268) ($generated@@18 ($generated@@81 $generated@@267) $generated@@268)) (= ($generated@@78 $generated@@268 $generated@@266) ($generated@@78 $generated@@268 $generated@@267))))
 :pattern ( ($generated@@78 $generated@@268 $generated@@267))
 :pattern ( ($generated@@78 $generated@@268 $generated@@266))
 :pattern ( ($generated@@18 ($generated@@81 $generated@@267) $generated@@268))
 :pattern ( ($generated@@18 ($generated@@81 $generated@@266) $generated@@268))
))))
 :pattern ( ($generated@@81 $generated@@267) ($generated@@81 $generated@@266))
 :pattern ( ($generated@@81 $generated@@267) ($generated@@18 $generated@@259 $generated@@266))
 :pattern ( ($generated@@81 $generated@@266) ($generated@@18 $generated@@259 $generated@@267))
 :pattern ( ($generated@@18 $generated@@259 $generated@@267) ($generated@@18 $generated@@259 $generated@@266))
)))) ($generated@@18 ($generated@@81 $generated@@257) $generated@@258)) (and ($generated@@18 ($generated@@81 ($generated@@60 ($generated@@61 ($generated@@61 $generated@@256)) $generated@@66 $generated@@259 $generated@@260)) $generated@@258) (= (ControlFlow 0 3) 2)))) $generated@@262))))
$generated@@265)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
