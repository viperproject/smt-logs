(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 () T@U)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@27 (Bool T@U T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@U T@U) Bool)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@65 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@99 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@100 (T@T T@T) T@T)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@T) T@T)
(declare-fun $generated@@104 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert ($generated@@17 $generated@@18))
(assert ($generated@@17 $generated@@19))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> (or ($generated@@22 $generated@@25 $generated@@26) (and (< 0 $generated@@20) (and ($generated@@23 $generated@@25 $generated@@19) ($generated@@23 $generated@@26 $generated@@18)))) ($generated@@23 ($generated@@21 $generated@@25 $generated@@26) $generated@@24))
 :pattern ( ($generated@@21 $generated@@25 $generated@@26))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@28 $generated@@35 $generated@@36) (and (< 2 $generated@@20) (and ($generated@@23 $generated@@35 $generated@@18) ($generated@@23 $generated@@36 $generated@@18)))) (and (and (and ($generated@@29 $generated@@35) ($generated@@29 $generated@@36)) (=> ($generated@@30 ($generated@@31 $generated@@35) ($generated@@31 $generated@@36)) (and (forall (($generated@@37 T@U) ) (!  (=> ($generated@@23 $generated@@37 $generated@@19) (and ($generated@@29 $generated@@35) (=> ($generated@@33 ($generated@@31 $generated@@35) $generated@@37) (and ($generated@@34 $generated@@37 $generated@@36) ($generated@@34 $generated@@37 $generated@@35)))))
 :pattern ( ($generated@@32 $generated@@37 $generated@@35))
 :pattern ( ($generated@@32 $generated@@37 $generated@@36))
 :pattern ( ($generated@@33 ($generated@@31 $generated@@35) $generated@@37))
)) (=> (forall (($generated@@38 T@U) ) (!  (=> ($generated@@23 $generated@@38 $generated@@19) (=> ($generated@@33 ($generated@@31 $generated@@35) $generated@@38) (= ($generated@@32 $generated@@38 $generated@@36) ($generated@@32 $generated@@38 $generated@@35))))
 :pattern ( ($generated@@32 $generated@@38 $generated@@35))
 :pattern ( ($generated@@32 $generated@@38 $generated@@36))
 :pattern ( ($generated@@33 ($generated@@31 $generated@@35) $generated@@38))
)) (forall (($generated@@39 T@U) ) (!  (=> ($generated@@23 $generated@@39 $generated@@19) (and ($generated@@29 $generated@@35) (=> (not ($generated@@33 ($generated@@31 $generated@@35) $generated@@39)) (and ($generated@@29 $generated@@36) (=> ($generated@@33 ($generated@@31 $generated@@36) $generated@@39) (and ($generated@@34 $generated@@39 $generated@@36) ($generated@@22 $generated@@39 $generated@@35)))))))
 :pattern ( ($generated@@21 $generated@@39 $generated@@35))
 :pattern ( ($generated@@32 $generated@@39 $generated@@36))
 :pattern ( ($generated@@33 ($generated@@31 $generated@@36) $generated@@39))
 :pattern ( ($generated@@33 ($generated@@31 $generated@@35) $generated@@39))
)))))) (= ($generated@@27 true $generated@@35 $generated@@36)  (and (and ($generated@@30 ($generated@@31 $generated@@35) ($generated@@31 $generated@@36)) (forall (($generated@@40 T@U) ) (!  (=> ($generated@@23 $generated@@40 $generated@@19) (=> ($generated@@33 ($generated@@31 $generated@@35) $generated@@40) (= ($generated@@32 $generated@@40 $generated@@36) ($generated@@32 $generated@@40 $generated@@35))))
 :pattern ( ($generated@@32 $generated@@40 $generated@@35))
 :pattern ( ($generated@@32 $generated@@40 $generated@@36))
 :pattern ( ($generated@@33 ($generated@@31 $generated@@35) $generated@@40))
))) (forall (($generated@@41 T@U) ) (!  (=> ($generated@@23 $generated@@41 $generated@@19) (=> (and (not ($generated@@33 ($generated@@31 $generated@@35) $generated@@41)) ($generated@@33 ($generated@@31 $generated@@36) $generated@@41)) (= ($generated@@32 $generated@@41 $generated@@36) ($generated@@21 $generated@@41 $generated@@35))))
 :pattern ( ($generated@@21 $generated@@41 $generated@@35))
 :pattern ( ($generated@@32 $generated@@41 $generated@@36))
 :pattern ( ($generated@@33 ($generated@@31 $generated@@36) $generated@@41))
 :pattern ( ($generated@@33 ($generated@@31 $generated@@35) $generated@@41))
))))))
 :pattern ( ($generated@@27 true $generated@@35 $generated@@36))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@34 $generated@@42 $generated@@43) (and (< 1 $generated@@20) (and (and ($generated@@23 $generated@@42 $generated@@19) ($generated@@23 $generated@@43 $generated@@18)) ($generated@@33 ($generated@@31 $generated@@43) $generated@@42)))) ($generated@@23 ($generated@@32 $generated@@42 $generated@@43) $generated@@24))
 :pattern ( ($generated@@32 $generated@@42 $generated@@43))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (or ($generated@@34 $generated@@47 $generated@@48) (and (< 1 $generated@@20) (and (and (and ($generated@@23 $generated@@47 $generated@@19) ($generated@@44 $generated@@47 $generated@@19 $generated@@46)) (and ($generated@@23 $generated@@48 $generated@@18) ($generated@@44 $generated@@48 $generated@@18 $generated@@46))) ($generated@@33 ($generated@@31 $generated@@48) $generated@@47)))) ($generated@@45 $generated@@46)) ($generated@@44 ($generated@@32 $generated@@47 $generated@@48) $generated@@24 $generated@@46))
 :pattern ( ($generated@@44 ($generated@@32 $generated@@47 $generated@@48) $generated@@24 $generated@@46))
))))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@30 $generated@@52 $generated@@53) (forall (($generated@@54 T@U) ) (!  (=> ($generated@@33 $generated@@52 $generated@@54) ($generated@@33 $generated@@53 $generated@@54))
 :pattern ( ($generated@@33 $generated@@52 $generated@@54))
 :pattern ( ($generated@@33 $generated@@53 $generated@@54))
)))
 :pattern ( ($generated@@30 $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 ($generated@@55 $generated@@58 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@55 $generated@@58 $generated@@57))
)))
(assert (= ($generated@@1 $generated@@60) 3))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@59 $generated@@60 $generated@@62 ($generated@@61 $generated@@63)) (forall (($generated@@64 T@U) ) (!  (=> ($generated@@33 $generated@@62 $generated@@64) ($generated@@23 $generated@@64 $generated@@63))
 :pattern ( ($generated@@33 $generated@@62 $generated@@64))
)))
 :pattern ( ($generated@@59 $generated@@60 $generated@@62 ($generated@@61 $generated@@63)))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@44 ($generated@@56 $generated@@69 $generated@@66) $generated@@67 $generated@@68) ($generated@@65 $generated@@69 $generated@@66 $generated@@67 $generated@@68))
 :pattern ( ($generated@@44 ($generated@@56 $generated@@69 $generated@@66) $generated@@67 $generated@@68))
)))
(assert (= ($generated@@1 $generated@@70) 4))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or ($generated@@28 ($generated@@49 $generated@@70 $generated@@71) ($generated@@49 $generated@@70 $generated@@72)) (and (< 2 $generated@@20) (and ($generated@@23 $generated@@71 $generated@@18) ($generated@@23 $generated@@72 $generated@@18)))) (and (and (and ($generated@@29 ($generated@@49 $generated@@70 $generated@@71)) ($generated@@29 ($generated@@49 $generated@@70 $generated@@72))) (=> ($generated@@30 ($generated@@31 ($generated@@49 $generated@@70 $generated@@71)) ($generated@@31 ($generated@@49 $generated@@70 $generated@@72))) (and (forall (($generated@@73 T@U) ) (!  (=> ($generated@@23 $generated@@73 $generated@@19) (and ($generated@@29 ($generated@@49 $generated@@70 $generated@@71)) (=> ($generated@@33 ($generated@@31 ($generated@@49 $generated@@70 $generated@@71)) $generated@@73) (and ($generated@@34 $generated@@73 ($generated@@49 $generated@@70 $generated@@72)) ($generated@@34 $generated@@73 ($generated@@49 $generated@@70 $generated@@71))))))
 :pattern ( ($generated@@32 $generated@@73 $generated@@71))
 :pattern ( ($generated@@32 $generated@@73 $generated@@72))
 :pattern ( ($generated@@33 ($generated@@31 $generated@@71) $generated@@73))
)) (=> (forall (($generated@@74 T@U) ) (!  (=> ($generated@@23 $generated@@74 $generated@@19) (=> ($generated@@33 ($generated@@31 ($generated@@49 $generated@@70 $generated@@71)) $generated@@74) (= ($generated@@32 $generated@@74 ($generated@@49 $generated@@70 $generated@@72)) ($generated@@32 $generated@@74 ($generated@@49 $generated@@70 $generated@@71)))))
 :pattern ( ($generated@@32 $generated@@74 $generated@@71))
 :pattern ( ($generated@@32 $generated@@74 $generated@@72))
 :pattern ( ($generated@@33 ($generated@@31 $generated@@71) $generated@@74))
)) (forall (($generated@@75 T@U) ) (!  (=> ($generated@@23 $generated@@75 $generated@@19) (and ($generated@@29 ($generated@@49 $generated@@70 $generated@@71)) (=> (not ($generated@@33 ($generated@@31 ($generated@@49 $generated@@70 $generated@@71)) $generated@@75)) (and ($generated@@29 ($generated@@49 $generated@@70 $generated@@72)) (=> ($generated@@33 ($generated@@31 ($generated@@49 $generated@@70 $generated@@72)) $generated@@75) (and ($generated@@34 $generated@@75 ($generated@@49 $generated@@70 $generated@@72)) ($generated@@22 $generated@@75 ($generated@@49 $generated@@70 $generated@@71))))))))
 :pattern ( ($generated@@21 $generated@@75 $generated@@71))
 :pattern ( ($generated@@32 $generated@@75 $generated@@72))
 :pattern ( ($generated@@33 ($generated@@31 $generated@@72) $generated@@75))
 :pattern ( ($generated@@33 ($generated@@31 $generated@@71) $generated@@75))
)))))) (= ($generated@@27 true ($generated@@49 $generated@@70 $generated@@71) ($generated@@49 $generated@@70 $generated@@72))  (and (and ($generated@@30 ($generated@@31 ($generated@@49 $generated@@70 $generated@@71)) ($generated@@31 ($generated@@49 $generated@@70 $generated@@72))) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@23 $generated@@76 $generated@@19) (=> ($generated@@33 ($generated@@31 ($generated@@49 $generated@@70 $generated@@71)) $generated@@76) (= ($generated@@32 $generated@@76 ($generated@@49 $generated@@70 $generated@@72)) ($generated@@32 $generated@@76 ($generated@@49 $generated@@70 $generated@@71)))))
 :pattern ( ($generated@@32 $generated@@76 $generated@@71))
 :pattern ( ($generated@@32 $generated@@76 $generated@@72))
 :pattern ( ($generated@@33 ($generated@@31 $generated@@71) $generated@@76))
))) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@23 $generated@@77 $generated@@19) (=> (and (not ($generated@@33 ($generated@@31 ($generated@@49 $generated@@70 $generated@@71)) $generated@@77)) ($generated@@33 ($generated@@31 ($generated@@49 $generated@@70 $generated@@72)) $generated@@77)) (= ($generated@@32 $generated@@77 ($generated@@49 $generated@@70 $generated@@72)) ($generated@@21 $generated@@77 ($generated@@49 $generated@@70 $generated@@71)))))
 :pattern ( ($generated@@21 $generated@@77 $generated@@71))
 :pattern ( ($generated@@32 $generated@@77 $generated@@72))
 :pattern ( ($generated@@33 ($generated@@31 $generated@@72) $generated@@77))
 :pattern ( ($generated@@33 ($generated@@31 $generated@@71) $generated@@77))
))))))
 :weight 3
 :pattern ( ($generated@@27 true ($generated@@49 $generated@@70 $generated@@71) ($generated@@49 $generated@@70 $generated@@72)))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@23 ($generated@@56 $generated@@80 $generated@@78) $generated@@79) ($generated@@59 $generated@@80 $generated@@78 $generated@@79))
 :pattern ( ($generated@@23 ($generated@@56 $generated@@80 $generated@@78) $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@17 $generated@@81) (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> ($generated@@23 $generated@@83 $generated@@81) ($generated@@44 $generated@@83 $generated@@81 $generated@@82))
 :pattern ( ($generated@@44 $generated@@83 $generated@@81 $generated@@82))
)))
 :pattern ( ($generated@@17 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@65 $generated@@60 $generated@@84 ($generated@@61 $generated@@85) $generated@@86) (forall (($generated@@87 T@U) ) (!  (=> ($generated@@33 $generated@@84 $generated@@87) ($generated@@44 $generated@@87 $generated@@85 $generated@@86))
 :pattern ( ($generated@@33 $generated@@84 $generated@@87))
)))
 :pattern ( ($generated@@65 $generated@@60 $generated@@84 ($generated@@61 $generated@@85) $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@88 ($generated@@61 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@61 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@90 ($generated@@61 $generated@@91)) $generated)
 :pattern ( ($generated@@61 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@55 $generated@@93 ($generated@@56 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@56 $generated@@93 $generated@@92))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@94 T@U) ) (!  (=> (or ($generated@@29 $generated@@94) (and (< 0 $generated@@20) ($generated@@23 $generated@@94 $generated@@18))) ($generated@@59 $generated@@60 ($generated@@31 $generated@@94) ($generated@@61 $generated@@19)))
 :pattern ( ($generated@@31 $generated@@94))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@95 $generated@@105 $generated@@106 $generated@@107 ($generated@@101 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@110 $generated@@111) $generated@@108)
 :weight 0
)) (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@95 $generated@@112 $generated@@113 $generated@@114 ($generated@@101 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@95 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@95 $generated@@121 $generated@@122 $generated@@123 ($generated@@101 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@95 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)))) (= ($generated@@1 $generated@@96) 5)) (= ($generated@@1 $generated@@97) 6)) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@99 $generated@@130 $generated@@131 ($generated@@102 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@132) $generated@@134) $generated@@132)
 :weight 0
))) (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@99 $generated@@135 $generated@@136 ($generated@@102 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@99 $generated@@135 $generated@@136 $generated@@138 $generated@@140)))
 :weight 0
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (= ($generated@@1 ($generated@@100 $generated@@141 $generated@@142)) 7))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (! (= ($generated@@103 ($generated@@100 $generated@@143 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@100 $generated@@143 $generated@@144))
))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@104 ($generated@@100 $generated@@145 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@100 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 Bool) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@6 ($generated@@95 $generated@@96 $generated@@97 $generated@@2 ($generated@@98 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))  (=> (and (or (not (= $generated@@151 $generated@@147)) (not true)) ($generated@@6 ($generated@@55 $generated@@2 ($generated@@99 $generated@@97 $generated@@70 ($generated@@99 $generated@@96 ($generated@@100 $generated@@97 $generated@@70) $generated@@148 $generated@@151) $generated@@149)))) $generated@@150))
 :pattern ( ($generated@@95 $generated@@96 $generated@@97 $generated@@2 ($generated@@98 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))
)))
(assert  (=> (<= 0 $generated@@20) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (or ($generated@@22 $generated@@154 $generated@@155) (and (< 0 $generated@@20) (and (and ($generated@@23 $generated@@154 $generated@@19) ($generated@@44 $generated@@154 $generated@@19 $generated@@153)) (and ($generated@@23 $generated@@155 $generated@@18) ($generated@@44 $generated@@155 $generated@@18 $generated@@153))))) ($generated@@45 $generated@@153)) ($generated@@44 ($generated@@21 $generated@@154 $generated@@155) $generated@@24 $generated@@153))
 :pattern ( ($generated@@44 ($generated@@21 $generated@@154 $generated@@155) $generated@@24 $generated@@153))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> ($generated@@23 $generated@@156 ($generated@@61 $generated@@157)) (and (= ($generated@@56 $generated@@60 ($generated@@55 $generated@@60 $generated@@156)) $generated@@156) ($generated@@59 $generated@@60 ($generated@@55 $generated@@60 $generated@@156) ($generated@@61 $generated@@157))))
 :pattern ( ($generated@@23 $generated@@156 ($generated@@61 $generated@@157)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@T) ) (! (= ($generated@@56 $generated@@159 ($generated@@49 $generated@@159 $generated@@158)) ($generated@@49 $generated@@70 ($generated@@56 $generated@@159 $generated@@158)))
 :pattern ( ($generated@@56 $generated@@159 ($generated@@49 $generated@@159 $generated@@158)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@160 () Bool)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@171  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@27 $generated@@160 $generated@@161 $generated@@162))))
(let (($generated@@172  (=> (and (and (and ($generated@@45 $generated@@163) ($generated@@164 $generated@@163)) (= $generated@@165 $generated@@163)) (and (forall (($generated@@173 T@U) ) (!  (=> (and ($generated@@23 $generated@@173 $generated@@19) ($generated@@6 ($generated@@49 $generated@@2 ($generated@@5 true)))) (= ($generated@@21 $generated@@173 $generated@@161) ($generated@@21 $generated@@173 $generated@@166)))
 :pattern ( ($generated@@21 $generated@@173 $generated@@166))
 :pattern ( ($generated@@21 $generated@@173 $generated@@161))
)) (= (ControlFlow 0 5) 4))) $generated@@171)))
(let (($generated@@174  (=> (and ($generated@@23 $generated@@167 $generated@@19) (= (ControlFlow 0 2) (- 0 1))) ($generated@@27 $generated@@160 $generated@@161 $generated@@166))))
(let (($generated@@175  (=> (= $generated@@168 ($generated@@98 $generated@@169 $generated@@170 $generated@@0 false)) (=> (and (and ($generated@@45 $generated@@165) ($generated@@164 $generated@@165)) (and (= $generated@@170 $generated@@165) $generated@@160)) (and (=> (= (ControlFlow 0 6) 2) $generated@@174) (=> (= (ControlFlow 0 6) 5) $generated@@172))))))
(let (($generated@@176  (=> (and (and ($generated@@45 $generated@@170) ($generated@@164 $generated@@170)) (and ($generated@@23 $generated@@161 $generated@@18) ($generated@@44 $generated@@161 $generated@@18 $generated@@170))) (=> (and (and (and ($generated@@23 $generated@@166 $generated@@18) ($generated@@44 $generated@@166 $generated@@18 $generated@@170)) (and ($generated@@23 $generated@@162 $generated@@18) ($generated@@44 $generated@@162 $generated@@18 $generated@@170))) (and (and (= 4 $generated@@20) ($generated@@27 $generated@@160 $generated@@161 $generated@@166)) (and ($generated@@27 $generated@@160 $generated@@166 $generated@@162) (= (ControlFlow 0 7) 6)))) $generated@@175))))
$generated@@176))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
