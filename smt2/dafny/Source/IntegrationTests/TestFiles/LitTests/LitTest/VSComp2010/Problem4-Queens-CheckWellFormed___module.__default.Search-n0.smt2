(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@44 (T@T T@U T@U) Bool)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@78 (Int) Int)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@86 () Int)
(declare-fun $generated@@87 (T@U Int) Bool)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U Int) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@U Int) T@U)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@122 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Int)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@160 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@209 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29)
 :pattern ( ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and ($generated@@31 $generated@@33) ($generated@@31 $generated@@34)) (= ($generated@@30 $generated@@33 $generated@@34) (= ($generated@@32 $generated@@33) ($generated@@32 $generated@@34))))
 :pattern ( ($generated@@30 $generated@@33 $generated@@34) ($generated@@31 $generated@@33))
 :pattern ( ($generated@@30 $generated@@33 $generated@@34) ($generated@@31 $generated@@34))
)))
(assert (= ($generated@@35 $generated@@36) 0))
(assert (= ($generated@@37 $generated@@38) $generated@@5))
(assert (= ($generated@@9 $generated@@39) 3))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> ($generated@@41 $generated@@43) ($generated@@26 $generated@@39 $generated@@38 ($generated@@40 $generated@@42) $generated@@43))
 :pattern ( ($generated@@26 $generated@@39 $generated@@38 ($generated@@40 $generated@@42) $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ) (! ($generated@@44 $generated@@39 $generated@@38 ($generated@@40 $generated@@45))
 :pattern ( ($generated@@44 $generated@@39 $generated@@38 ($generated@@40 $generated@@45)))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@30 $generated@@46 $generated@@47) (= $generated@@46 $generated@@47))
 :pattern ( ($generated@@30 $generated@@46 $generated@@47))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@49 $generated@@58 $generated@@59 ($generated@@55 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@62) $generated@@60)
 :weight 0
)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (or (= $generated@@67 $generated@@68) (= ($generated@@49 $generated@@63 $generated@@64 ($generated@@55 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@68) ($generated@@49 $generated@@63 $generated@@64 $generated@@66 $generated@@68)))
 :weight 0
))) (= ($generated@@9 $generated@@50) 4)) (= ($generated@@9 $generated@@51) 5)) (= ($generated@@9 $generated@@52) 6)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (= ($generated@@9 ($generated@@53 $generated@@69 $generated@@70)) 7))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@56 ($generated@@53 $generated@@71 $generated@@72)) $generated@@71)
 :pattern ( ($generated@@53 $generated@@71 $generated@@72))
))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@57 ($generated@@53 $generated@@73 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@53 $generated@@73 $generated@@74))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> ($generated@@48 $generated@@75 $generated@@76) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@14 ($generated@@54 $generated@@10 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@75 $generated@@77) $generated@@2))) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@76 $generated@@77) $generated@@2))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@76 $generated@@77) $generated@@2))
)))
 :pattern ( ($generated@@48 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@79 Int) ) (! (= ($generated@@78 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@83 $generated@@84) (= ($generated@@37 $generated@@84) $generated@@5))
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@31 $generated@@85) (= ($generated@@37 $generated@@85) $generated@@6))
 :pattern ( ($generated@@31 $generated@@85))
)))
(assert (= ($generated@@9 $generated@@88) 8))
(assert  (=> (<= 0 $generated@@86) (forall (($generated@@92 T@U) ($generated@@93 Int) ) (!  (=> (or ($generated@@89 ($generated@@80 $generated@@88 $generated@@92) ($generated@@78 $generated@@93)) (and (< 0 $generated@@86) (and ($generated@@44 $generated@@88 $generated@@92 ($generated@@90 $generated)) (<= ($generated@@78 0) $generated@@93)))) (= ($generated@@87 ($generated@@80 $generated@@88 $generated@@92) ($generated@@78 $generated@@93))  (and (< $generated@@93 ($generated@@35 ($generated@@80 $generated@@88 $generated@@92))) (forall (($generated@@94 Int) ) (!  (and (and (=> (and (<= ($generated@@78 0) $generated@@94) (< $generated@@94 $generated@@93)) (or (not (= ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 ($generated@@80 $generated@@88 $generated@@92) $generated@@94))) ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 ($generated@@80 $generated@@88 $generated@@92) ($generated@@78 $generated@@93)))))) (not true))) (=> (and (<= ($generated@@78 0) $generated@@94) (< $generated@@94 $generated@@93)) (or (not (= (- ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 ($generated@@80 $generated@@88 $generated@@92) $generated@@94))) ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 ($generated@@80 $generated@@88 $generated@@92) ($generated@@78 $generated@@93))))) (- $generated@@93 $generated@@94))) (not true)))) (=> (and (<= ($generated@@78 0) $generated@@94) (< $generated@@94 $generated@@93)) (or (not (= (- ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 ($generated@@80 $generated@@88 $generated@@92) ($generated@@78 $generated@@93)))) ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 ($generated@@80 $generated@@88 $generated@@92) $generated@@94)))) (- $generated@@93 $generated@@94))) (not true))))
 :pattern ( ($generated@@54 $generated@@11 ($generated@@91 $generated@@92 $generated@@94)))
)))))
 :weight 3
 :pattern ( ($generated@@87 ($generated@@80 $generated@@88 $generated@@92) ($generated@@78 $generated@@93)))
))))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 ($generated@@54 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@54 $generated@@97 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@83 $generated@@98) (= $generated@@98 $generated@@38))
 :pattern ( ($generated@@83 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@31 $generated@@100) (exists (($generated@@101 T@U) ) (= $generated@@100 ($generated@@99 $generated@@101))))
 :pattern ( ($generated@@31 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@44 $generated@@11 $generated@@102 $generated@@27) (<= ($generated@@78 0) ($generated@@16 $generated@@102)))
 :pattern ( ($generated@@44 $generated@@11 $generated@@102 $generated@@27))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@103 ($generated@@95 $generated@@107 $generated@@104) $generated@@105 $generated@@106) ($generated@@26 $generated@@107 $generated@@104 $generated@@105 $generated@@106))
 :pattern ( ($generated@@103 ($generated@@95 $generated@@107 $generated@@104) $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> ($generated@@48 $generated@@108 $generated@@109) (=> ($generated@@103 $generated@@110 $generated@@111 $generated@@108) ($generated@@103 $generated@@110 $generated@@111 $generated@@109)))
 :pattern ( ($generated@@48 $generated@@108 $generated@@109) ($generated@@103 $generated@@110 $generated@@111 $generated@@108))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (!  (=> ($generated@@48 $generated@@112 $generated@@113) (=> ($generated@@26 $generated@@116 $generated@@114 $generated@@115 $generated@@112) ($generated@@26 $generated@@116 $generated@@114 $generated@@115 $generated@@113)))
 :pattern ( ($generated@@48 $generated@@112 $generated@@113) ($generated@@26 $generated@@116 $generated@@114 $generated@@115 $generated@@112))
)))
(assert  (=> (<= 0 $generated@@86) (forall (($generated@@117 T@U) ($generated@@118 Int) ) (!  (=> (or ($generated@@89 $generated@@117 $generated@@118) (and (< 0 $generated@@86) (and ($generated@@44 $generated@@88 $generated@@117 ($generated@@90 $generated)) (<= ($generated@@78 0) $generated@@118)))) (= ($generated@@87 $generated@@117 $generated@@118)  (and (< $generated@@118 ($generated@@35 $generated@@117)) (forall (($generated@@119 Int) ) (!  (and (and (=> (and (<= ($generated@@78 0) $generated@@119) (< $generated@@119 $generated@@118)) (or (not (= ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 $generated@@117 $generated@@119))) ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 $generated@@117 $generated@@118))))) (not true))) (=> (and (<= ($generated@@78 0) $generated@@119) (< $generated@@119 $generated@@118)) (or (not (= (- ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 $generated@@117 $generated@@119))) ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 $generated@@117 $generated@@118)))) (- $generated@@118 $generated@@119))) (not true)))) (=> (and (<= ($generated@@78 0) $generated@@119) (< $generated@@119 $generated@@118)) (or (not (= (- ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 $generated@@117 $generated@@118))) ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 $generated@@117 $generated@@119)))) (- $generated@@118 $generated@@119))) (not true))))
 :pattern ( ($generated@@54 $generated@@11 ($generated@@91 $generated@@117 $generated@@119)))
)))))
 :pattern ( ($generated@@87 $generated@@117 $generated@@118))
))))
(assert (forall (($generated@@121 T@U) ) (!  (and (= ($generated@@25 ($generated@@40 $generated@@121)) $generated@@4) (= ($generated@@120 ($generated@@40 $generated@@121)) $generated@@8))
 :pattern ( ($generated@@40 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@122 $generated@@123 $generated@@27) (and (= ($generated@@95 $generated@@11 ($generated@@54 $generated@@11 $generated@@123)) $generated@@123) ($generated@@44 $generated@@11 ($generated@@54 $generated@@11 $generated@@123) $generated@@27)))
 :pattern ( ($generated@@122 $generated@@123 $generated@@27))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> ($generated@@41 $generated@@126) (= ($generated@@26 $generated@@39 ($generated@@99 $generated@@125) ($generated@@40 $generated@@124) $generated@@126) ($generated@@103 $generated@@125 $generated@@124 $generated@@126)))
 :pattern ( ($generated@@26 $generated@@39 ($generated@@99 $generated@@125) ($generated@@40 $generated@@124) $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> ($generated@@44 $generated@@39 $generated@@128 ($generated@@40 $generated@@127)) (or ($generated@@83 $generated@@128) ($generated@@31 $generated@@128)))
 :pattern ( ($generated@@31 $generated@@128) ($generated@@44 $generated@@39 $generated@@128 ($generated@@40 $generated@@127)))
 :pattern ( ($generated@@83 $generated@@128) ($generated@@44 $generated@@39 $generated@@128 ($generated@@40 $generated@@127)))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (or (not (= $generated@@129 $generated@@131)) (not true)) (=> (and ($generated@@48 $generated@@129 $generated@@130) ($generated@@48 $generated@@130 $generated@@131)) ($generated@@48 $generated@@129 $generated@@131)))
 :pattern ( ($generated@@48 $generated@@129 $generated@@130) ($generated@@48 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@122 $generated@@132 $generated) (and (= ($generated@@95 $generated@@11 ($generated@@54 $generated@@11 $generated@@132)) $generated@@132) ($generated@@44 $generated@@11 ($generated@@54 $generated@@11 $generated@@132) $generated)))
 :pattern ( ($generated@@122 $generated@@132 $generated))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@122 ($generated@@95 $generated@@135 $generated@@133) $generated@@134) ($generated@@44 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@122 ($generated@@95 $generated@@135 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (<= 0 ($generated@@35 $generated@@136))
 :pattern ( ($generated@@35 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and ($generated@@83 $generated@@137) ($generated@@83 $generated@@138)) ($generated@@30 $generated@@137 $generated@@138))
 :pattern ( ($generated@@30 $generated@@137 $generated@@138) ($generated@@83 $generated@@137))
 :pattern ( ($generated@@30 $generated@@137 $generated@@138) ($generated@@83 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@26 $generated@@88 $generated@@139 ($generated@@90 $generated@@140) $generated@@141) (forall (($generated@@142 Int) ) (!  (=> (and (<= 0 $generated@@142) (< $generated@@142 ($generated@@35 $generated@@139))) ($generated@@103 ($generated@@91 $generated@@139 $generated@@142) $generated@@140 $generated@@141))
 :pattern ( ($generated@@91 $generated@@139 $generated@@142))
)))
 :pattern ( ($generated@@26 $generated@@88 $generated@@139 ($generated@@90 $generated@@140) $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@143 ($generated@@90 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@90 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@25 ($generated@@90 $generated@@145)) $generated@@1)
 :pattern ( ($generated@@90 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@40 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@40 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@37 ($generated@@99 $generated@@148)) $generated@@6)
 :pattern ( ($generated@@99 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@32 ($generated@@99 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@99 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@54 $generated@@151 ($generated@@95 $generated@@151 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@95 $generated@@151 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@44 $generated@@39 ($generated@@99 $generated@@153) ($generated@@40 $generated@@152)) ($generated@@122 $generated@@153 $generated@@152))
 :pattern ( ($generated@@44 $generated@@39 ($generated@@99 $generated@@153) ($generated@@40 $generated@@152)))
)))
(assert (forall (($generated@@156 T@U) ) (! (< ($generated@@154 $generated@@156) ($generated@@155 ($generated@@99 $generated@@156)))
 :pattern ( ($generated@@99 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and ($generated@@41 $generated@@159) (and ($generated@@31 $generated@@157) ($generated@@26 $generated@@39 $generated@@157 ($generated@@40 $generated@@158) $generated@@159))) ($generated@@103 ($generated@@32 $generated@@157) $generated@@158 $generated@@159))
 :pattern ( ($generated@@103 ($generated@@32 $generated@@157) $generated@@158 $generated@@159))
)))
(assert  (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@160 $generated@@163 $generated@@164 $generated@@165 ($generated@@162 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@168 $generated@@169) $generated@@166)
 :weight 0
)) (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@160 $generated@@170 $generated@@171 $generated@@172 ($generated@@162 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@176 $generated@@173) $generated@@177 $generated@@178) ($generated@@160 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@177 $generated@@178)))
 :weight 0
)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@160 $generated@@179 $generated@@180 $generated@@181 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@160 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@14 ($generated@@160 $generated@@52 $generated@@50 $generated@@10 ($generated@@161 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (or (not (= $generated@@192 $generated@@188)) (not true)) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@189 $generated@@192) $generated@@190)))) $generated@@191))
 :pattern ( ($generated@@160 $generated@@52 $generated@@50 $generated@@10 ($generated@@161 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@154 ($generated@@95 $generated@@39 $generated@@194)) ($generated@@155 $generated@@194))
 :pattern ( ($generated@@154 ($generated@@95 $generated@@39 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> ($generated@@122 $generated@@195 ($generated@@90 $generated@@196)) (and (= ($generated@@95 $generated@@88 ($generated@@54 $generated@@88 $generated@@195)) $generated@@195) ($generated@@44 $generated@@88 ($generated@@54 $generated@@88 $generated@@195) ($generated@@90 $generated@@196))))
 :pattern ( ($generated@@122 $generated@@195 ($generated@@90 $generated@@196)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@122 $generated@@198 ($generated@@40 $generated@@197)) (and (= ($generated@@95 $generated@@39 ($generated@@54 $generated@@39 $generated@@198)) $generated@@198) ($generated@@44 $generated@@39 ($generated@@54 $generated@@39 $generated@@198) ($generated@@40 $generated@@197))))
 :pattern ( ($generated@@122 $generated@@198 ($generated@@40 $generated@@197)))
)))
(assert (= ($generated@@25 $generated@@27) $generated@@3))
(assert (= ($generated@@120 $generated@@27) $generated@@7))
(assert (= $generated@@38 ($generated@@80 $generated@@39 $generated@@38)))
(assert (forall (($generated@@199 Int) ) (! (= ($generated@@95 $generated@@11 ($generated@@15 ($generated@@78 $generated@@199))) ($generated@@80 $generated@@51 ($generated@@95 $generated@@11 ($generated@@15 $generated@@199))))
 :pattern ( ($generated@@95 $generated@@11 ($generated@@15 ($generated@@78 $generated@@199))))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@99 ($generated@@80 $generated@@51 $generated@@200)) ($generated@@80 $generated@@39 ($generated@@99 $generated@@200)))
 :pattern ( ($generated@@99 ($generated@@80 $generated@@51 $generated@@200)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@T) ) (! (= ($generated@@95 $generated@@202 ($generated@@80 $generated@@202 $generated@@201)) ($generated@@80 $generated@@51 ($generated@@95 $generated@@202 $generated@@201)))
 :pattern ( ($generated@@95 $generated@@202 ($generated@@80 $generated@@202 $generated@@201)))
)))
(assert (forall (($generated@@203 T@U) ) (!  (=> (= ($generated@@35 $generated@@203) 0) (= $generated@@203 $generated@@36))
 :pattern ( ($generated@@35 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! ($generated@@26 $generated@@11 $generated@@205 $generated $generated@@204)
 :pattern ( ($generated@@26 $generated@@11 $generated@@205 $generated $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@44 $generated@@88 $generated@@206 ($generated@@90 $generated@@207)) (forall (($generated@@208 Int) ) (!  (=> (and (<= 0 $generated@@208) (< $generated@@208 ($generated@@35 $generated@@206))) ($generated@@122 ($generated@@91 $generated@@206 $generated@@208) $generated@@207))
 :pattern ( ($generated@@91 $generated@@206 $generated@@208))
)))
 :pattern ( ($generated@@44 $generated@@88 $generated@@206 ($generated@@90 $generated@@207)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 Int) ) (!  (=> (and (<= 0 $generated@@211) (< $generated@@211 ($generated@@35 $generated@@210))) (< ($generated@@155 ($generated@@54 $generated@@39 ($generated@@91 $generated@@210 $generated@@211))) ($generated@@209 $generated@@210)))
 :pattern ( ($generated@@155 ($generated@@54 $generated@@39 ($generated@@91 $generated@@210 $generated@@211))))
)))
(assert (forall (($generated@@212 T@U) ) (! ($generated@@44 $generated@@11 $generated@@212 $generated)
 :pattern ( ($generated@@44 $generated@@11 $generated@@212 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () Int)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@226 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 39) (let (($generated@@227 true))
(let (($generated@@228 true))
(let (($generated@@229 true))
(let (($generated@@230  (=> (and (and (<= ($generated@@78 0) $generated@@213) (< $generated@@213 $generated@@214)) ($generated@@26 $generated@@88 $generated@@215 ($generated@@90 $generated) $generated@@216)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@44 $generated@@11 ($generated@@15 $generated@@213) $generated@@27)) (=> ($generated@@44 $generated@@11 ($generated@@15 $generated@@213) $generated@@27) (=> (and (and ($generated@@26 $generated@@11 ($generated@@15 $generated@@213) $generated@@27 $generated@@216) ($generated@@89 $generated@@215 $generated@@213)) (and (not ($generated@@87 $generated@@215 $generated@@213)) (= (ControlFlow 0 5) 2))) $generated@@229))))))
(let (($generated@@231  (=> (and (< $generated@@213 ($generated@@78 0)) (= (ControlFlow 0 8) 5)) $generated@@230)))
(let (($generated@@232  (=> (and (<= ($generated@@78 0) $generated@@213) (= (ControlFlow 0 7) 5)) $generated@@230)))
(let (($generated@@233  (=> (forall (($generated@@234 Int) ) (!  (and (=> (and (<= ($generated@@78 0) $generated@@234) (< $generated@@234 $generated@@214)) (<= ($generated@@78 0) ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 $generated@@215 $generated@@234))))) (=> (and (<= ($generated@@78 0) $generated@@234) (< $generated@@234 $generated@@214)) (< ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 $generated@@215 $generated@@234))) $generated@@214)))
 :pattern ( ($generated@@54 $generated@@11 ($generated@@91 $generated@@215 $generated@@234)))
)) (and (=> (= (ControlFlow 0 9) 7) $generated@@232) (=> (= (ControlFlow 0 9) 8) $generated@@231)))))
(let (($generated@@235  (=> (and (not (and (<= ($generated@@78 0) $generated@@217) (< $generated@@217 $generated@@214))) (= (ControlFlow 0 13) 9)) $generated@@233)))
(let (($generated@@236  (=> (and (<= ($generated@@78 0) $generated@@217) (< $generated@@217 $generated@@214)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (and (<= 0 $generated@@217) (< $generated@@217 ($generated@@35 $generated@@215)))) (=> (and (<= 0 $generated@@217) (< $generated@@217 ($generated@@35 $generated@@215))) (=> (= (ControlFlow 0 11) 9) $generated@@233))))))
(let (($generated@@237  (=> (< $generated@@217 ($generated@@78 0)) (and (=> (= (ControlFlow 0 15) 11) $generated@@236) (=> (= (ControlFlow 0 15) 13) $generated@@235)))))
(let (($generated@@238  (=> (<= ($generated@@78 0) $generated@@217) (and (=> (= (ControlFlow 0 14) 11) $generated@@236) (=> (= (ControlFlow 0 14) 13) $generated@@235)))))
(let (($generated@@239  (=> (=> (and (<= ($generated@@78 0) $generated@@217) (< $generated@@217 $generated@@214)) (<= ($generated@@78 0) ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 $generated@@215 $generated@@217))))) (and (=> (= (ControlFlow 0 16) 14) $generated@@238) (=> (= (ControlFlow 0 16) 15) $generated@@237)))))
(let (($generated@@240  (=> (and (not (=> (and (<= ($generated@@78 0) $generated@@217) (< $generated@@217 $generated@@214)) (<= ($generated@@78 0) ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 $generated@@215 $generated@@217)))))) (= (ControlFlow 0 10) 9)) $generated@@233)))
(let (($generated@@241  (=> (not (and (<= ($generated@@78 0) $generated@@217) (< $generated@@217 $generated@@214))) (and (=> (= (ControlFlow 0 19) 16) $generated@@239) (=> (= (ControlFlow 0 19) 10) $generated@@240)))))
(let (($generated@@242  (=> (and (<= ($generated@@78 0) $generated@@217) (< $generated@@217 $generated@@214)) (and (=> (= (ControlFlow 0 17) (- 0 18)) (and (<= 0 $generated@@217) (< $generated@@217 ($generated@@35 $generated@@215)))) (=> (and (<= 0 $generated@@217) (< $generated@@217 ($generated@@35 $generated@@215))) (and (=> (= (ControlFlow 0 17) 16) $generated@@239) (=> (= (ControlFlow 0 17) 10) $generated@@240)))))))
(let (($generated@@243  (=> (< $generated@@217 ($generated@@78 0)) (and (=> (= (ControlFlow 0 21) 17) $generated@@242) (=> (= (ControlFlow 0 21) 19) $generated@@241)))))
(let (($generated@@244  (=> (<= ($generated@@78 0) $generated@@217) (and (=> (= (ControlFlow 0 20) 17) $generated@@242) (=> (= (ControlFlow 0 20) 19) $generated@@241)))))
(let (($generated@@245  (and (=> (= (ControlFlow 0 22) 20) $generated@@244) (=> (= (ControlFlow 0 22) 21) $generated@@243))))
(let (($generated@@246  (=> (= ($generated@@35 $generated@@215) $generated@@214) (and (=> (= (ControlFlow 0 23) 22) $generated@@245) (=> (= (ControlFlow 0 23) 4) $generated@@228)))))
(let (($generated@@247  (=> (and (=> (and (= ($generated@@35 $generated@@215) $generated@@214) (forall (($generated@@248 Int) ) (!  (and (=> (and (<= ($generated@@78 0) $generated@@248) (< $generated@@248 $generated@@214)) (<= ($generated@@78 0) ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 $generated@@215 $generated@@248))))) (=> (and (<= ($generated@@78 0) $generated@@248) (< $generated@@248 $generated@@214)) (< ($generated@@16 ($generated@@54 $generated@@11 ($generated@@91 $generated@@215 $generated@@248))) $generated@@214)))
 :pattern ( ($generated@@54 $generated@@11 ($generated@@91 $generated@@215 $generated@@248)))
))) (exists (($generated@@249 Int) ) (!  (and (and (<= ($generated@@78 0) $generated@@249) (< $generated@@249 $generated@@214)) (not ($generated@@87 $generated@@215 $generated@@249)))
 :pattern ( ($generated@@87 $generated@@215 $generated@@249))
))) (= (ControlFlow 0 3) 2)) $generated@@229)))
(let (($generated@@250  (=> ($generated@@30 $generated@@218 $generated@@38) (=> (and ($generated@@44 $generated@@88 $generated@@215 ($generated@@90 $generated)) ($generated@@26 $generated@@88 $generated@@215 ($generated@@90 $generated) $generated@@216)) (and (=> (= (ControlFlow 0 24) 23) $generated@@246) (=> (= (ControlFlow 0 24) 3) $generated@@247))))))
(let (($generated@@251 true))
(let (($generated@@252  (=> (let (($generated@@253 ($generated@@54 $generated@@88 ($generated@@32 $generated@@218))))
 (and (= ($generated@@35 $generated@@253) $generated@@214) (forall (($generated@@254 Int) ) (!  (=> (and (<= ($generated@@78 0) $generated@@254) (< $generated@@254 $generated@@214)) ($generated@@87 $generated@@253 $generated@@254))
 :pattern ( ($generated@@87 $generated@@253 $generated@@254))
)))) (and (=> (= (ControlFlow 0 26) 24) $generated@@250) (=> (= (ControlFlow 0 26) 1) $generated@@251)))))
(let (($generated@@255  (=> (and (not (and (<= ($generated@@78 0) $generated@@219) (< $generated@@219 $generated@@214))) (= (ControlFlow 0 31) 26)) $generated@@252)))
(let (($generated@@256  (=> (and (and (<= ($generated@@78 0) $generated@@219) (< $generated@@219 $generated@@214)) ($generated@@26 $generated@@88 $generated@@220 ($generated@@90 $generated) $generated@@216)) (and (=> (= (ControlFlow 0 29) (- 0 30)) ($generated@@44 $generated@@11 ($generated@@15 $generated@@219) $generated@@27)) (=> ($generated@@44 $generated@@11 ($generated@@15 $generated@@219) $generated@@27) (=> ($generated@@26 $generated@@11 ($generated@@15 $generated@@219) $generated@@27 $generated@@216) (=> (and ($generated@@89 $generated@@220 $generated@@219) (= (ControlFlow 0 29) 26)) $generated@@252)))))))
(let (($generated@@257  (=> (< $generated@@219 ($generated@@78 0)) (and (=> (= (ControlFlow 0 33) 29) $generated@@256) (=> (= (ControlFlow 0 33) 31) $generated@@255)))))
(let (($generated@@258  (=> (<= ($generated@@78 0) $generated@@219) (and (=> (= (ControlFlow 0 32) 29) $generated@@256) (=> (= (ControlFlow 0 32) 31) $generated@@255)))))
(let (($generated@@259  (and (=> (= (ControlFlow 0 34) 32) $generated@@258) (=> (= (ControlFlow 0 34) 33) $generated@@257))))
(let (($generated@@260  (=> (= ($generated@@35 $generated@@220) $generated@@214) (and (=> (= (ControlFlow 0 35) 34) $generated@@259) (=> (= (ControlFlow 0 35) 28) $generated@@227)))))
(let (($generated@@261  (=> (and (or (not (= ($generated@@35 $generated@@220) $generated@@214)) (not true)) (= (ControlFlow 0 27) 26)) $generated@@252)))
(let (($generated@@262  (=> ($generated@@31 $generated@@218) (and (=> (= (ControlFlow 0 36) (- 0 37)) ($generated@@31 $generated@@218)) (=> ($generated@@31 $generated@@218) (=> (= $generated@@221 ($generated@@54 $generated@@88 ($generated@@32 $generated@@218))) (=> (and ($generated@@44 $generated@@88 $generated@@221 ($generated@@90 $generated)) (= $generated@@220 $generated@@221)) (and (=> (= (ControlFlow 0 36) 35) $generated@@260) (=> (= (ControlFlow 0 36) 27) $generated@@261)))))))))
(let (($generated@@263  (=> (=> ($generated@@31 $generated@@218) (let (($generated@@264 ($generated@@54 $generated@@88 ($generated@@32 $generated@@218))))
 (and (= ($generated@@35 $generated@@264) $generated@@214) (forall (($generated@@265 Int) ) (!  (=> (and (<= ($generated@@78 0) $generated@@265) (< $generated@@265 $generated@@214)) ($generated@@87 $generated@@264 $generated@@265))
 :pattern ( ($generated@@87 $generated@@264 $generated@@265))
))))) (and (=> (= (ControlFlow 0 25) 24) $generated@@250) (=> (= (ControlFlow 0 25) 1) $generated@@251)))))
(let (($generated@@266  (=> (= $generated@@222 ($generated@@161 $generated@@223 $generated@@224 $generated@@2 false)) (=> (and ($generated@@41 $generated@@216) ($generated@@225 $generated@@216)) (=> (and (and (forall (($generated@@267 T@U) ) (!  (=> (and (or (not (= $generated@@267 $generated@@223)) (not true)) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@224 $generated@@267) $generated@@2)))) (= ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@216 $generated@@267) ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@224 $generated@@267)))
 :pattern ( ($generated@@49 $generated@@52 ($generated@@53 $generated@@50 $generated@@51) $generated@@216 $generated@@267))
)) ($generated@@48 $generated@@224 $generated@@216)) (and ($generated@@44 $generated@@39 $generated@@218 ($generated@@40 ($generated@@90 $generated))) ($generated@@26 $generated@@39 $generated@@218 ($generated@@40 ($generated@@90 $generated)) $generated@@216))) (and (=> (= (ControlFlow 0 38) 36) $generated@@262) (=> (= (ControlFlow 0 38) 25) $generated@@263)))))))
(let (($generated@@268  (=> (and (and (and ($generated@@41 $generated@@224) ($generated@@225 $generated@@224)) (<= ($generated@@78 0) $generated@@214)) (and (and ($generated@@44 $generated@@39 $generated@@226 ($generated@@40 ($generated@@90 $generated))) ($generated@@26 $generated@@39 $generated@@226 ($generated@@40 ($generated@@90 $generated)) $generated@@224)) (and (= 2 $generated@@86) (= (ControlFlow 0 39) 38)))) $generated@@266)))
$generated@@268)))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
