(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U T@U) T@U)
(declare-fun $generated@@18 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 (T@U Int) T@U)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U Int) T@U)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@36 (Int) Int)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U Int) T@U)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@U) Int)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@83 () Int)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@103 (T@U) Bool)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@117 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@121 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 (T@T T@T) T@T)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@127 (T@T) T@T)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@19 T@U) ($generated@@20 T@U) ($generated@@21 T@U) ) (! (= ($generated@@17 $generated@@19 ($generated@@18 $generated@@20) $generated@@21) ($generated@@17 $generated@@19 $generated@@20 $generated@@21))
 :pattern ( ($generated@@17 $generated@@19 ($generated@@18 $generated@@20) $generated@@21))
)))
(assert (= ($generated@@22 $generated@@23) 0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 Int) ) (!  (=> (and (<= 0 $generated@@28) (<= $generated@@28 ($generated@@22 $generated@@26))) (= ($generated@@24 ($generated@@25 $generated@@26 $generated@@27) $generated@@28) ($generated@@25 ($generated@@24 $generated@@26 $generated@@28) $generated@@27)))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@26 $generated@@27) $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 Int) ) (!  (=> (= $generated@@33 ($generated@@22 $generated@@31)) (and (= ($generated@@29 ($generated@@30 $generated@@31 $generated@@32) $generated@@33) $generated@@31) (= ($generated@@24 ($generated@@30 $generated@@31 $generated@@32) $generated@@33) $generated@@32)))
 :pattern ( ($generated@@29 ($generated@@30 $generated@@31 $generated@@32) $generated@@33))
 :pattern ( ($generated@@24 ($generated@@30 $generated@@31 $generated@@32) $generated@@33))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 Int) ) (!  (=> (= $generated@@35 0) (= ($generated@@24 $generated@@34 $generated@@35) $generated@@34))
 :pattern ( ($generated@@24 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@37 Int) ) (! (= ($generated@@36 $generated@@37) $generated@@37)
 :pattern ( ($generated@@36 $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@38 $generated@@40 $generated@@39) $generated@@39)
 :pattern ( ($generated@@38 $generated@@40 $generated@@39))
)))
(assert (= ($generated@@1 $generated@@42) 3))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (and ($generated@@41 $generated@@42 $generated@@45 ($generated@@43 $generated@@47)) ($generated@@44 $generated@@46 $generated@@47)) ($generated@@41 $generated@@42 ($generated@@25 $generated@@45 $generated@@46) ($generated@@43 $generated@@47)))
 :pattern ( ($generated@@41 $generated@@42 ($generated@@25 $generated@@45 $generated@@46) ($generated@@43 $generated@@47)))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 Int) ($generated@@51 Int) ) (!  (=> (and (and (<= 0 $generated@@51) (< $generated@@51 $generated@@50)) (< $generated@@51 ($generated@@22 $generated@@49))) (= ($generated@@48 ($generated@@29 $generated@@49 $generated@@50) $generated@@51) ($generated@@48 $generated@@49 $generated@@51)))
 :weight 25
 :pattern ( ($generated@@48 ($generated@@29 $generated@@49 $generated@@50) $generated@@51))
 :pattern ( ($generated@@48 $generated@@49 $generated@@51) ($generated@@29 $generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 Int) ) (!  (=> (and (<= 0 $generated@@53) (<= $generated@@53 ($generated@@22 $generated@@52))) (= ($generated@@22 ($generated@@24 $generated@@52 $generated@@53)) (- ($generated@@22 $generated@@52) $generated@@53)))
 :pattern ( ($generated@@22 ($generated@@24 $generated@@52 $generated@@53)))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@54 $generated@@55 $generated@@56)  (and (= ($generated@@22 $generated@@55) ($generated@@22 $generated@@56)) (forall (($generated@@57 Int) ) (!  (=> (and (<= 0 $generated@@57) (< $generated@@57 ($generated@@22 $generated@@55))) (= ($generated@@48 $generated@@55 $generated@@57) ($generated@@48 $generated@@56 $generated@@57)))
 :pattern ( ($generated@@48 $generated@@55 $generated@@57))
 :pattern ( ($generated@@48 $generated@@56 $generated@@57))
))))
 :pattern ( ($generated@@54 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 ($generated@@58 $generated@@61 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@58 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 Int) ) (!  (=> (and (<= 0 $generated@@64) (< $generated@@64 ($generated@@22 $generated@@63))) (< ($generated@@62 ($generated@@29 $generated@@63 $generated@@64)) ($generated@@62 $generated@@63)))
 :pattern ( ($generated@@62 ($generated@@29 $generated@@63 $generated@@64)))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 Int) ) (!  (=> (and (< 0 $generated@@66) (<= $generated@@66 ($generated@@22 $generated@@65))) (< ($generated@@62 ($generated@@24 $generated@@65 $generated@@66)) ($generated@@62 $generated@@65)))
 :pattern ( ($generated@@62 ($generated@@24 $generated@@65 $generated@@66)))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@22 ($generated@@25 $generated@@67 $generated@@68)) (+ 1 ($generated@@22 $generated@@67)))
 :pattern ( ($generated@@25 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@69 ($generated@@59 $generated@@74 $generated@@71) $generated@@72 $generated@@73) ($generated@@70 $generated@@74 $generated@@71 $generated@@72 $generated@@73))
 :pattern ( ($generated@@69 ($generated@@59 $generated@@74 $generated@@71) $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 Int) ($generated@@77 Int) ) (!  (=> (and (and (<= 0 $generated@@76) (<= 0 $generated@@77)) (< $generated@@77 (- ($generated@@22 $generated@@75) $generated@@76))) (= ($generated@@48 ($generated@@24 $generated@@75 $generated@@76) $generated@@77) ($generated@@48 $generated@@75 (+ $generated@@77 $generated@@76))))
 :weight 25
 :pattern ( ($generated@@48 ($generated@@24 $generated@@75 $generated@@76) $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@22 ($generated@@30 $generated@@78 $generated@@79)) (+ ($generated@@22 $generated@@78) ($generated@@22 $generated@@79)))
 :pattern ( ($generated@@22 ($generated@@30 $generated@@78 $generated@@79)))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 Int) ($generated@@82 T@U) ) (!  (and (=> (= $generated@@81 ($generated@@22 $generated@@80)) (= ($generated@@48 ($generated@@25 $generated@@80 $generated@@82) $generated@@81) $generated@@82)) (=> (or (not (= $generated@@81 ($generated@@22 $generated@@80))) (not true)) (= ($generated@@48 ($generated@@25 $generated@@80 $generated@@82) $generated@@81) ($generated@@48 $generated@@80 $generated@@81))))
 :pattern ( ($generated@@48 ($generated@@25 $generated@@80 $generated@@82) $generated@@81))
)))
(assert  (=> (<= 0 $generated@@83) (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (or ($generated@@84 $generated@@85 $generated@@87) (and (< 0 $generated@@83) ($generated@@41 $generated@@42 $generated@@87 ($generated@@43 $generated@@85)))) (and (=> (not ($generated@@54 $generated@@87 $generated@@23)) ($generated@@84 $generated@@85 ($generated@@24 $generated@@87 ($generated@@36 1)))) (= ($generated@@17 $generated@@85 ($generated@@18 $generated@@86) $generated@@87) (ite ($generated@@54 $generated@@87 $generated@@23) $generated@@23 ($generated@@30 ($generated@@17 $generated@@85 $generated@@86 ($generated@@24 $generated@@87 ($generated@@36 1))) ($generated@@25 $generated@@23 ($generated@@48 $generated@@87 ($generated@@36 0))))))))
 :pattern ( ($generated@@17 $generated@@85 ($generated@@18 $generated@@86) $generated@@87))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@54 $generated@@88 $generated@@89) (= $generated@@88 $generated@@89))
 :pattern ( ($generated@@54 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 Int) ) (!  (=> (and (<= 0 $generated@@91) (<= $generated@@91 ($generated@@22 $generated@@90))) (= ($generated@@22 ($generated@@29 $generated@@90 $generated@@91)) $generated@@91))
 :pattern ( ($generated@@22 ($generated@@29 $generated@@90 $generated@@91)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@44 ($generated@@59 $generated@@94 $generated@@92) $generated@@93) ($generated@@41 $generated@@94 $generated@@92 $generated@@93))
 :pattern ( ($generated@@44 ($generated@@59 $generated@@94 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! (<= 0 ($generated@@22 $generated@@95))
 :pattern ( ($generated@@22 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 Int) ($generated@@98 Int) ) (!  (=> (and (and (<= 0 $generated@@97) (< $generated@@97 $generated@@98)) (<= $generated@@98 ($generated@@22 $generated@@96))) (< ($generated@@62 ($generated@@30 ($generated@@29 $generated@@96 $generated@@97) ($generated@@24 $generated@@96 $generated@@98))) ($generated@@62 $generated@@96)))
 :pattern ( ($generated@@62 ($generated@@30 ($generated@@29 $generated@@96 $generated@@97) ($generated@@24 $generated@@96 $generated@@98))))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@70 $generated@@42 $generated@@99 ($generated@@43 $generated@@100) $generated@@101) (forall (($generated@@102 Int) ) (!  (=> (and (<= 0 $generated@@102) (< $generated@@102 ($generated@@22 $generated@@99))) ($generated@@69 ($generated@@48 $generated@@99 $generated@@102) $generated@@100 $generated@@101))
 :pattern ( ($generated@@48 $generated@@99 $generated@@102))
)))
 :pattern ( ($generated@@70 $generated@@42 $generated@@99 ($generated@@43 $generated@@100) $generated@@101))
)))
(assert  (=> (<= 0 $generated@@83) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (and (or ($generated@@84 $generated@@105 $generated@@107) (and (< 0 $generated@@83) (and ($generated@@41 $generated@@42 $generated@@107 ($generated@@43 $generated@@105)) ($generated@@70 $generated@@42 $generated@@107 ($generated@@43 $generated@@105) $generated@@104)))) ($generated@@103 $generated@@104)) ($generated@@70 $generated@@42 ($generated@@17 $generated@@105 $generated@@106 $generated@@107) ($generated@@43 $generated@@105) $generated@@104))
 :pattern ( ($generated@@70 $generated@@42 ($generated@@17 $generated@@105 $generated@@106 $generated@@107) ($generated@@43 $generated@@105) $generated@@104))
))))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 ($generated@@43 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@43 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@110 ($generated@@43 $generated@@111)) $generated)
 :pattern ( ($generated@@43 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@58 $generated@@113 ($generated@@59 $generated@@113 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@59 $generated@@113 $generated@@112))
)))
(assert  (=> (<= 0 $generated@@83) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (or ($generated@@84 $generated@@114 $generated@@116) (and (< 0 $generated@@83) ($generated@@41 $generated@@42 $generated@@116 ($generated@@43 $generated@@114)))) ($generated@@41 $generated@@42 ($generated@@17 $generated@@114 $generated@@115 $generated@@116) ($generated@@43 $generated@@114)))
 :pattern ( ($generated@@17 $generated@@114 $generated@@115 $generated@@116))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@117 $generated@@128 $generated@@129 $generated@@130 ($generated@@124 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@133 $generated@@134) $generated@@131)
 :weight 0
)) (and (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@117 $generated@@135 $generated@@136 $generated@@137 ($generated@@124 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@117 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@117 $generated@@144 $generated@@145 $generated@@146 ($generated@@124 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)))) (= ($generated@@1 $generated@@118) 4)) (= ($generated@@1 $generated@@119) 5)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@121 $generated@@153 $generated@@154 ($generated@@125 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@155) $generated@@157) $generated@@155)
 :weight 0
))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@162 $generated@@163) (= ($generated@@121 $generated@@158 $generated@@159 ($generated@@125 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@160) $generated@@163) ($generated@@121 $generated@@158 $generated@@159 $generated@@161 $generated@@163)))
 :weight 0
))) (= ($generated@@1 $generated@@122) 6)) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (= ($generated@@1 ($generated@@123 $generated@@164 $generated@@165)) 7))) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@126 ($generated@@123 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@123 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@127 ($generated@@123 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@123 $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 Bool) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@6 ($generated@@117 $generated@@118 $generated@@119 $generated@@2 ($generated@@120 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))  (=> (and (or (not (= $generated@@174 $generated@@170)) (not true)) ($generated@@6 ($generated@@58 $generated@@2 ($generated@@121 $generated@@119 $generated@@122 ($generated@@121 $generated@@118 ($generated@@123 $generated@@119 $generated@@122) $generated@@171 $generated@@174) $generated@@172)))) $generated@@173))
 :pattern ( ($generated@@117 $generated@@118 $generated@@119 $generated@@2 ($generated@@120 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (and (= ($generated@@176 ($generated@@25 $generated@@178 $generated@@179)) $generated@@178) (= ($generated@@177 ($generated@@25 $generated@@178 $generated@@179)) $generated@@179))
 :pattern ( ($generated@@25 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@44 $generated@@180 ($generated@@43 $generated@@181)) (and (= ($generated@@59 $generated@@42 ($generated@@58 $generated@@42 $generated@@180)) $generated@@180) ($generated@@41 $generated@@42 ($generated@@58 $generated@@42 $generated@@180) ($generated@@43 $generated@@181))))
 :pattern ( ($generated@@44 $generated@@180 ($generated@@43 $generated@@181)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 Int) ($generated@@184 Int) ) (!  (=> (and (and (<= 0 $generated@@183) (<= $generated@@183 $generated@@184)) (< $generated@@184 ($generated@@22 $generated@@182))) (= ($generated@@48 ($generated@@24 $generated@@182 $generated@@183) (- $generated@@184 $generated@@183)) ($generated@@48 $generated@@182 $generated@@184)))
 :weight 25
 :pattern ( ($generated@@48 $generated@@182 $generated@@184) ($generated@@24 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 Int) ($generated@@187 Int) ) (!  (=> (and (and (<= 0 $generated@@186) (<= 0 $generated@@187)) (<= (+ $generated@@186 $generated@@187) ($generated@@22 $generated@@185))) (= ($generated@@24 ($generated@@24 $generated@@185 $generated@@186) $generated@@187) ($generated@@24 $generated@@185 (+ $generated@@186 $generated@@187))))
 :pattern ( ($generated@@24 ($generated@@24 $generated@@185 $generated@@186) $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Int) ) (!  (and (=> (< $generated@@190 ($generated@@22 $generated@@188)) (= ($generated@@48 ($generated@@30 $generated@@188 $generated@@189) $generated@@190) ($generated@@48 $generated@@188 $generated@@190))) (=> (<= ($generated@@22 $generated@@188) $generated@@190) (= ($generated@@48 ($generated@@30 $generated@@188 $generated@@189) $generated@@190) ($generated@@48 $generated@@189 (- $generated@@190 ($generated@@22 $generated@@188))))))
 :pattern ( ($generated@@48 ($generated@@30 $generated@@188 $generated@@189) $generated@@190))
)))
(assert (forall (($generated@@191 Int) ) (! (= ($generated@@59 $generated@@3 ($generated@@7 ($generated@@36 $generated@@191))) ($generated@@38 $generated@@122 ($generated@@59 $generated@@3 ($generated@@7 $generated@@191))))
 :pattern ( ($generated@@59 $generated@@3 ($generated@@7 ($generated@@36 $generated@@191))))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@59 $generated@@193 ($generated@@38 $generated@@193 $generated@@192)) ($generated@@38 $generated@@122 ($generated@@59 $generated@@193 $generated@@192)))
 :pattern ( ($generated@@59 $generated@@193 ($generated@@38 $generated@@193 $generated@@192)))
)))
(assert  (=> (<= 0 $generated@@83) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (or ($generated@@84 $generated@@194 ($generated@@38 $generated@@42 $generated@@196)) (and (< 0 $generated@@83) ($generated@@41 $generated@@42 $generated@@196 ($generated@@43 $generated@@194)))) (and (=> (not ($generated@@54 $generated@@196 $generated@@23)) ($generated@@84 $generated@@194 ($generated@@38 $generated@@42 ($generated@@24 ($generated@@38 $generated@@42 $generated@@196) ($generated@@36 1))))) (= ($generated@@17 $generated@@194 ($generated@@18 $generated@@195) ($generated@@38 $generated@@42 $generated@@196)) (ite ($generated@@54 $generated@@196 $generated@@23) $generated@@23 ($generated@@30 ($generated@@17 $generated@@194 ($generated@@18 $generated@@195) ($generated@@38 $generated@@42 ($generated@@24 ($generated@@38 $generated@@42 $generated@@196) ($generated@@36 1)))) ($generated@@25 $generated@@23 ($generated@@48 ($generated@@38 $generated@@42 $generated@@196) ($generated@@36 0))))))))
 :weight 3
 :pattern ( ($generated@@17 $generated@@194 ($generated@@18 $generated@@195) ($generated@@38 $generated@@42 $generated@@196)))
))))
(assert (forall (($generated@@197 T@U) ) (!  (=> (= ($generated@@22 $generated@@197) 0) (= $generated@@197 $generated@@23))
 :pattern ( ($generated@@22 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 Int) ) (!  (=> (= $generated@@199 0) (= ($generated@@29 $generated@@198 $generated@@199) $generated@@23))
 :pattern ( ($generated@@29 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@200 ($generated@@43 $generated@@201)) (forall (($generated@@202 Int) ) (!  (=> (and (<= 0 $generated@@202) (< $generated@@202 ($generated@@22 $generated@@200))) ($generated@@44 ($generated@@48 $generated@@200 $generated@@202) $generated@@201))
 :pattern ( ($generated@@48 $generated@@200 $generated@@202))
)))
 :pattern ( ($generated@@41 $generated@@42 $generated@@200 ($generated@@43 $generated@@201)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@210  (=> (not ($generated@@54 $generated@@203 $generated@@23)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and (<= 0 ($generated@@36 1)) (<= ($generated@@36 1) ($generated@@22 $generated@@203)))) (=> (and (<= 0 ($generated@@36 1)) (<= ($generated@@36 1) ($generated@@22 $generated@@203))) (=> (and (= $generated@@204 ($generated@@24 $generated@@203 ($generated@@36 1))) ($generated@@70 $generated@@42 $generated@@204 ($generated@@43 $generated@@205) $generated@@206)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< ($generated@@62 $generated@@204) ($generated@@62 $generated@@203))) (=> (< ($generated@@62 $generated@@204) ($generated@@62 $generated@@203)) (=> (and ($generated@@84 $generated@@205 ($generated@@24 $generated@@203 ($generated@@36 1))) (= (ControlFlow 0 4) (- 0 3))) (and (<= 0 ($generated@@36 0)) (< ($generated@@36 0) ($generated@@22 $generated@@203))))))))))))
(let (($generated@@211 true))
(let (($generated@@212 true))
(let (($generated@@213  (=> (= $generated@@207 ($generated@@120 $generated@@208 $generated@@206 $generated@@0 false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@212) (=> (= (ControlFlow 0 7) 2) $generated@@211)) (=> (= (ControlFlow 0 7) 4) $generated@@210)))))
(let (($generated@@214  (=> (and (and (and ($generated@@103 $generated@@206) ($generated@@209 $generated@@206)) ($generated@@41 $generated@@42 $generated@@203 ($generated@@43 $generated@@205))) (and (= 0 $generated@@83) (= (ControlFlow 0 8) 7))) $generated@@213)))
$generated@@214))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
