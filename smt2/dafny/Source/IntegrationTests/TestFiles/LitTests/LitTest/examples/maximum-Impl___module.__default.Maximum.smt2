(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@T T@T) T@T)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@32 (T@T) T@T)
(declare-fun $generated@@33 (T@T) T@T)
(declare-fun $generated@@54 (Int) Int)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@U Int) T@U)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@T T@U T@U) Bool)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ) (!  (not ($generated@@20 $generated@@21 $generated@@22))
 :pattern ( ($generated@@20 $generated@@21 $generated@@22))
)))
(assert (= ($generated@@23 $generated@@21) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@34 T@T) ($generated@@35 T@T) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@25 $generated@@34 $generated@@35 ($generated@@31 $generated@@34 $generated@@35 $generated@@37 $generated@@38 $generated@@36) $generated@@38) $generated@@36)
 :weight 0
)) (forall (($generated@@39 T@T) ($generated@@40 T@T) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (or (= $generated@@43 $generated@@44) (= ($generated@@25 $generated@@39 $generated@@40 ($generated@@31 $generated@@39 $generated@@40 $generated@@42 $generated@@43 $generated@@41) $generated@@44) ($generated@@25 $generated@@39 $generated@@40 $generated@@42 $generated@@44)))
 :weight 0
))) (= ($generated@@3 $generated@@26) 3)) (= ($generated@@3 $generated@@27) 4)) (= ($generated@@3 $generated@@28) 5)) (forall (($generated@@45 T@T) ($generated@@46 T@T) ) (= ($generated@@3 ($generated@@29 $generated@@45 $generated@@46)) 6))) (forall (($generated@@47 T@T) ($generated@@48 T@T) ) (! (= ($generated@@32 ($generated@@29 $generated@@47 $generated@@48)) $generated@@47)
 :pattern ( ($generated@@29 $generated@@47 $generated@@48))
))) (forall (($generated@@49 T@T) ($generated@@50 T@T) ) (! (= ($generated@@33 ($generated@@29 $generated@@49 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@29 $generated@@49 $generated@@50))
))))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> ($generated@@24 $generated@@51 $generated@@52) (forall (($generated@@53 T@U) ) (!  (=> ($generated@@8 ($generated@@30 $generated@@4 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@51 $generated@@53) $generated@@2))) ($generated@@8 ($generated@@30 $generated@@4 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@52 $generated@@53) $generated@@2))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@52 $generated@@53) $generated@@2))
)))
 :pattern ( ($generated@@24 $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@55 Int) ) (! (= ($generated@@54 $generated@@55) $generated@@55)
 :pattern ( ($generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 $generated@@57) $generated@@57)
 :pattern ( ($generated@@56 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@59 $generated@@61 $generated@@62)  (and (= ($generated@@23 $generated@@61) ($generated@@23 $generated@@62)) (forall (($generated@@63 Int) ) (!  (=> (and (<= 0 $generated@@63) (< $generated@@63 ($generated@@23 $generated@@61))) (= ($generated@@60 $generated@@61 $generated@@63) ($generated@@60 $generated@@62 $generated@@63)))
 :pattern ( ($generated@@60 $generated@@61 $generated@@63))
 :pattern ( ($generated@@60 $generated@@62 $generated@@63))
))))
 :pattern ( ($generated@@59 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 ($generated@@30 $generated@@66 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@30 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@67 ($generated@@64 $generated@@72 $generated@@69) $generated@@70 $generated@@71) ($generated@@68 $generated@@72 $generated@@69 $generated@@70 $generated@@71))
 :pattern ( ($generated@@67 ($generated@@64 $generated@@72 $generated@@69) $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> ($generated@@24 $generated@@73 $generated@@74) (=> ($generated@@67 $generated@@75 $generated@@76 $generated@@73) ($generated@@67 $generated@@75 $generated@@76 $generated@@74)))
 :pattern ( ($generated@@24 $generated@@73 $generated@@74) ($generated@@67 $generated@@75 $generated@@76 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (!  (=> ($generated@@24 $generated@@77 $generated@@78) (=> ($generated@@68 $generated@@81 $generated@@79 $generated@@80 $generated@@77) ($generated@@68 $generated@@81 $generated@@79 $generated@@80 $generated@@78)))
 :pattern ( ($generated@@24 $generated@@77 $generated@@78) ($generated@@68 $generated@@81 $generated@@79 $generated@@80 $generated@@77))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@20 $generated@@82 $generated@@83) (exists (($generated@@84 Int) ) (!  (and (and (<= 0 $generated@@84) (< $generated@@84 ($generated@@23 $generated@@82))) (= ($generated@@60 $generated@@82 $generated@@84) $generated@@83))
 :pattern ( ($generated@@60 $generated@@82 $generated@@84))
)))
 :pattern ( ($generated@@20 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> ($generated@@59 $generated@@85 $generated@@86) (= $generated@@85 $generated@@86))
 :pattern ( ($generated@@59 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (or (not (= $generated@@87 $generated@@89)) (not true)) (=> (and ($generated@@24 $generated@@87 $generated@@88) ($generated@@24 $generated@@88 $generated@@89)) ($generated@@24 $generated@@87 $generated@@89)))
 :pattern ( ($generated@@24 $generated@@87 $generated@@88) ($generated@@24 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@90 $generated@@92 $generated) (and (= ($generated@@64 $generated@@5 ($generated@@30 $generated@@5 $generated@@92)) $generated@@92) ($generated@@91 $generated@@5 ($generated@@30 $generated@@5 $generated@@92) $generated)))
 :pattern ( ($generated@@90 $generated@@92 $generated))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@90 ($generated@@64 $generated@@95 $generated@@93) $generated@@94) ($generated@@91 $generated@@95 $generated@@93 $generated@@94))
 :pattern ( ($generated@@90 ($generated@@64 $generated@@95 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (<= 0 ($generated@@23 $generated@@96))
 :pattern ( ($generated@@23 $generated@@96))
)))
(assert (= ($generated@@3 $generated@@97) 7))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@68 $generated@@97 $generated@@99 ($generated@@98 $generated@@100) $generated@@101) (forall (($generated@@102 Int) ) (!  (=> (and (<= 0 $generated@@102) (< $generated@@102 ($generated@@23 $generated@@99))) ($generated@@67 ($generated@@60 $generated@@99 $generated@@102) $generated@@100 $generated@@101))
 :pattern ( ($generated@@60 $generated@@99 $generated@@102))
)))
 :pattern ( ($generated@@68 $generated@@97 $generated@@99 ($generated@@98 $generated@@100) $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@103 ($generated@@98 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@98 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@19 ($generated@@98 $generated@@105)) $generated@@1)
 :pattern ( ($generated@@98 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@30 $generated@@107 ($generated@@64 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@64 $generated@@107 $generated@@106))
)))
(assert  (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@108 $generated@@111 $generated@@112 $generated@@113 ($generated@@110 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@108 $generated@@118 $generated@@119 $generated@@120 ($generated@@110 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@108 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@108 $generated@@127 $generated@@128 $generated@@129 ($generated@@110 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@108 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 Bool) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@8 ($generated@@108 $generated@@28 $generated@@26 $generated@@4 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))  (=> (and (or (not (= $generated@@140 $generated@@136)) (not true)) ($generated@@8 ($generated@@30 $generated@@4 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@137 $generated@@140) $generated@@138)))) $generated@@139))
 :pattern ( ($generated@@108 $generated@@28 $generated@@26 $generated@@4 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> ($generated@@90 $generated@@142 ($generated@@98 $generated@@143)) (and (= ($generated@@64 $generated@@97 ($generated@@30 $generated@@97 $generated@@142)) $generated@@142) ($generated@@91 $generated@@97 ($generated@@30 $generated@@97 $generated@@142) ($generated@@98 $generated@@143))))
 :pattern ( ($generated@@90 $generated@@142 ($generated@@98 $generated@@143)))
)))
(assert (forall (($generated@@144 Int) ) (! (= ($generated@@64 $generated@@5 ($generated@@9 ($generated@@54 $generated@@144))) ($generated@@56 $generated@@27 ($generated@@64 $generated@@5 ($generated@@9 $generated@@144))))
 :pattern ( ($generated@@64 $generated@@5 ($generated@@9 ($generated@@54 $generated@@144))))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@64 $generated@@146 ($generated@@56 $generated@@146 $generated@@145)) ($generated@@56 $generated@@27 ($generated@@64 $generated@@146 $generated@@145)))
 :pattern ( ($generated@@64 $generated@@146 ($generated@@56 $generated@@146 $generated@@145)))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= ($generated@@23 $generated@@147) 0) (= $generated@@147 $generated@@21))
 :pattern ( ($generated@@23 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! ($generated@@68 $generated@@5 $generated@@149 $generated $generated@@148)
 :pattern ( ($generated@@68 $generated@@5 $generated@@149 $generated $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@91 $generated@@97 $generated@@150 ($generated@@98 $generated@@151)) (forall (($generated@@152 Int) ) (!  (=> (and (<= 0 $generated@@152) (< $generated@@152 ($generated@@23 $generated@@150))) ($generated@@90 ($generated@@60 $generated@@150 $generated@@152) $generated@@151))
 :pattern ( ($generated@@60 $generated@@150 $generated@@152))
)))
 :pattern ( ($generated@@91 $generated@@97 $generated@@150 ($generated@@98 $generated@@151)))
)))
(assert (forall (($generated@@153 T@U) ) (! ($generated@@91 $generated@@5 $generated@@153 $generated)
 :pattern ( ($generated@@91 $generated@@5 $generated@@153 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () Bool)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () Int)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 31) (let (($generated@@172 true))
(let (($generated@@173  (=> (and (not (and (<= ($generated@@54 0) $generated@@154) (< $generated@@154 $generated@@155))) (= (ControlFlow 0 19) 16)) $generated@@172)))
(let (($generated@@174  (=> (and (<= ($generated@@54 0) $generated@@154) (< $generated@@154 $generated@@155)) (and (=> (= (ControlFlow 0 17) (- 0 18)) (and (<= 0 $generated@@154) (< $generated@@154 ($generated@@23 $generated@@156)))) (=> (= (ControlFlow 0 17) 16) $generated@@172)))))
(let (($generated@@175  (=> (< $generated@@154 ($generated@@54 0)) (and (=> (= (ControlFlow 0 21) 17) $generated@@174) (=> (= (ControlFlow 0 21) 19) $generated@@173)))))
(let (($generated@@176  (=> (<= ($generated@@54 0) $generated@@154) (and (=> (= (ControlFlow 0 20) 17) $generated@@174) (=> (= (ControlFlow 0 20) 19) $generated@@173)))))
(let (($generated@@177  (and (=> (= (ControlFlow 0 22) 20) $generated@@176) (=> (= (ControlFlow 0 22) 21) $generated@@175))))
(let (($generated@@178 true))
(let (($generated@@179  (=> (and (not $generated@@157) ($generated@@20 $generated@@156 ($generated@@64 $generated@@5 ($generated@@9 $generated@@158)))) (and (=> (= (ControlFlow 0 23) 22) $generated@@177) (=> (= (ControlFlow 0 23) 15) $generated@@178)))))
(let (($generated@@180  (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@20 $generated@@156 ($generated@@64 $generated@@5 ($generated@@9 $generated@@159)))) (=> ($generated@@20 $generated@@156 ($generated@@64 $generated@@5 ($generated@@9 $generated@@159))) (=> (= (ControlFlow 0 11) (- 0 10)) (forall (($generated@@181 Int) ) (!  (=> (and (<= ($generated@@54 0) $generated@@181) (< $generated@@181 ($generated@@23 $generated@@156))) (<= ($generated@@10 ($generated@@30 $generated@@5 ($generated@@60 $generated@@156 $generated@@181))) $generated@@159))
 :pattern ( ($generated@@30 $generated@@5 ($generated@@60 $generated@@156 $generated@@181)))
)))))))
(let (($generated@@182  (=> (= $generated@@155 $generated@@160) (=> (and (= $generated@@159 $generated@@158) (= (ControlFlow 0 13) 11)) $generated@@180))))
(let (($generated@@183  (=> (= $generated@@161 (+ $generated@@155 1)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@157 ($generated@@20 $generated@@156 ($generated@@64 $generated@@5 ($generated@@9 $generated@@162))))) (=> (=> $generated@@157 ($generated@@20 $generated@@156 ($generated@@64 $generated@@5 ($generated@@9 $generated@@162)))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@157 (forall (($generated@@184 Int) ) (!  (=> (and (<= ($generated@@54 0) $generated@@184) (< $generated@@184 $generated@@161)) (<= ($generated@@10 ($generated@@30 $generated@@5 ($generated@@60 $generated@@156 $generated@@184))) $generated@@162))
 :pattern ( ($generated@@30 $generated@@5 ($generated@@60 $generated@@156 $generated@@184)))
)))))))))
(let (($generated@@185  (=> (<= ($generated@@10 ($generated@@30 $generated@@5 ($generated@@60 $generated@@156 $generated@@155))) $generated@@158) (=> (and (= $generated@@162 $generated@@158) (= (ControlFlow 0 7) 3)) $generated@@183))))
(let (($generated@@186  (=> (< $generated@@158 ($generated@@10 ($generated@@30 $generated@@5 ($generated@@60 $generated@@156 $generated@@155)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@155) (< $generated@@155 ($generated@@23 $generated@@156)))) (=> (and (<= 0 $generated@@155) (< $generated@@155 ($generated@@23 $generated@@156))) (=> (= $generated@@163 ($generated@@10 ($generated@@30 $generated@@5 ($generated@@60 $generated@@156 $generated@@155)))) (=> (and (= $generated@@162 $generated@@163) (= (ControlFlow 0 5) 3)) $generated@@183)))))))
(let (($generated@@187  (=> (or (not (= $generated@@155 $generated@@160)) (not true)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= 0 $generated@@155) (< $generated@@155 ($generated@@23 $generated@@156)))) (=> (and (<= 0 $generated@@155) (< $generated@@155 ($generated@@23 $generated@@156))) (and (=> (= (ControlFlow 0 8) 5) $generated@@186) (=> (= (ControlFlow 0 8) 7) $generated@@185)))))))
(let (($generated@@188  (=> $generated@@157 (and (=> (= (ControlFlow 0 14) 13) $generated@@182) (=> (= (ControlFlow 0 14) 8) $generated@@187)))))
(let (($generated@@189  (and (=> (= (ControlFlow 0 24) 23) $generated@@179) (=> (= (ControlFlow 0 24) 14) $generated@@188))))
(let (($generated@@190 true))
(let (($generated@@191  (=> (and (and (and (and (not false) (<= 0 $generated@@155)) (= $generated@@164 0)) (<= 0 $generated@@160)) (and (and (and (<= $generated@@164 $generated@@155) (<= $generated@@155 $generated@@160)) (=> $generated@@157 ($generated@@20 $generated@@156 ($generated@@64 $generated@@5 ($generated@@9 $generated@@158))))) (and (and (=> $generated@@157 (forall (($generated@@192 Int) ) (!  (=> (and (<= ($generated@@54 0) $generated@@192) (< $generated@@192 $generated@@155)) (<= ($generated@@10 ($generated@@30 $generated@@5 ($generated@@60 $generated@@156 $generated@@192))) $generated@@158))
 :pattern ( ($generated@@30 $generated@@5 ($generated@@60 $generated@@156 $generated@@192)))
))) (forall (($generated@@193 T@U) ) (!  (=> (and (or (not (= $generated@@193 $generated@@166)) (not true)) ($generated@@8 ($generated@@30 $generated@@4 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@165 $generated@@193) $generated@@2)))) (= ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@165 $generated@@193) ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@165 $generated@@193)))
 :pattern ( ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@165 $generated@@193))
))) (and ($generated@@24 $generated@@165 $generated@@165) (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (or (not (= $generated@@194 $generated@@166)) (not true)) ($generated@@8 ($generated@@30 $generated@@4 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@165 $generated@@194) $generated@@2)))) (or (= ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@165 $generated@@194) $generated@@195) ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@165 $generated@@194) $generated@@195)) ($generated@@8 ($generated@@108 $generated@@28 $generated@@26 $generated@@4 $generated@@167 $generated@@194 $generated@@195))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@165 $generated@@194) $generated@@195))
)))))) (and (=> (= (ControlFlow 0 25) 1) $generated@@190) (=> (= (ControlFlow 0 25) 24) $generated@@189)))))
(let (($generated@@196  (=> (= $generated@@167 ($generated@@109 $generated@@166 $generated@@165 $generated@@2 false)) (and (=> (= (ControlFlow 0 26) (- 0 30)) (and (<= 0 ($generated@@54 0)) (< ($generated@@54 0) ($generated@@23 $generated@@156)))) (=> (and (<= 0 ($generated@@54 0)) (< ($generated@@54 0) ($generated@@23 $generated@@156))) (=> (= $generated@@168 ($generated@@10 ($generated@@30 $generated@@5 ($generated@@60 $generated@@156 ($generated@@54 0))))) (=> (and (= $generated@@164 ($generated@@54 0)) (= $generated@@160 ($generated@@23 $generated@@156))) (and (=> (= (ControlFlow 0 26) (- 0 29)) (<= $generated@@164 $generated@@160)) (=> (<= $generated@@164 $generated@@160) (and (=> (= (ControlFlow 0 26) (- 0 28)) (=> $generated@@157 ($generated@@20 $generated@@156 ($generated@@64 $generated@@5 ($generated@@9 $generated@@168))))) (=> (=> $generated@@157 ($generated@@20 $generated@@156 ($generated@@64 $generated@@5 ($generated@@9 $generated@@168)))) (and (=> (= (ControlFlow 0 26) (- 0 27)) (=> $generated@@157 (forall (($generated@@197 Int) ) (!  (=> (and (<= ($generated@@54 0) $generated@@197) (< $generated@@197 $generated@@164)) (<= ($generated@@10 ($generated@@30 $generated@@5 ($generated@@60 $generated@@156 $generated@@197))) $generated@@168))
 :pattern ( ($generated@@30 $generated@@5 ($generated@@60 $generated@@156 $generated@@197)))
)))) (=> (=> $generated@@157 (forall (($generated@@198 Int) ) (!  (=> (and (<= ($generated@@54 0) $generated@@198) (< $generated@@198 $generated@@164)) (<= ($generated@@10 ($generated@@30 $generated@@5 ($generated@@60 $generated@@156 $generated@@198))) $generated@@168))
 :pattern ( ($generated@@30 $generated@@5 ($generated@@60 $generated@@156 $generated@@198)))
))) (=> (= (ControlFlow 0 26) 25) $generated@@191))))))))))))))
(let (($generated@@199  (=> (and ($generated@@169 $generated@@165) ($generated@@170 $generated@@165)) (=> (and (and (and ($generated@@91 $generated@@97 $generated@@156 ($generated@@98 $generated)) ($generated@@68 $generated@@97 $generated@@156 ($generated@@98 $generated) $generated@@165)) (= 0 $generated@@171)) (and (not ($generated@@59 $generated@@156 $generated@@21)) (= (ControlFlow 0 31) 26))) $generated@@196))))
$generated@@199)))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
