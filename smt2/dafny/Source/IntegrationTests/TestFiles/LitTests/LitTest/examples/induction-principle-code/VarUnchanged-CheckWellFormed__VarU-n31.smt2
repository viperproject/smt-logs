(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 (T@T) Int)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 (Bool) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (Int) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (Real) T@U)
(declare-fun $generated@@26 (T@U) Real)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@U T@U) T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 (T@U T@U) T@U)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Int)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@176 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@237 () T@T)
(declare-fun $generated@@257 (T@U Int) T@U)
(declare-fun $generated@@264 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@17 $generated@@18) 0) (= ($generated@@17 $generated@@19) 1)) (= ($generated@@17 $generated@@20) 2)) (forall (($generated@@27 Bool) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Int) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 Real) ) (! (= ($generated@@26 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@25 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16)
)
(assert (= ($generated@@33 $generated) $generated@@1))
(assert (= ($generated@@33 $generated@@0) $generated@@2))
(assert (= ($generated@@34 $generated@@35) 0))
(assert (= ($generated@@36 $generated@@37) $generated@@13))
(assert (= ($generated@@17 $generated@@40) 3))
(assert (forall (($generated@@42 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@42 $generated@@41) ($generated@@38 $generated@@42))
 :pattern ( ($generated@@38 $generated@@42) ($generated@@39 $generated@@40 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@39 $generated@@40 ($generated@@43 $generated@@48 $generated@@49) ($generated@@44 $generated@@46 $generated@@47))  (and ($generated@@45 $generated@@48 $generated@@46) ($generated@@45 $generated@@49 $generated@@47)))
 :pattern ( ($generated@@39 $generated@@40 ($generated@@43 $generated@@48 $generated@@49) ($generated@@44 $generated@@46 $generated@@47)))
)))
(assert (forall (($generated@@51 T@U) ) (! ($generated@@39 $generated@@40 $generated@@37 ($generated@@50 $generated@@51))
 :pattern ( ($generated@@39 $generated@@40 $generated@@37 ($generated@@50 $generated@@51)))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@52 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (! (= ($generated@@38 $generated@@55) (= ($generated@@36 $generated@@55) $generated@@11))
 :pattern ( ($generated@@38 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@56 $generated@@57) (= ($generated@@36 $generated@@57) $generated@@12))
 :pattern ( ($generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@58 $generated@@59) (= ($generated@@36 $generated@@59) $generated@@13))
 :pattern ( ($generated@@58 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 ($generated@@60 $generated@@63 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@60 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@38 $generated@@65) (exists (($generated@@66 T@U) ($generated@@67 T@U) ) (= $generated@@65 ($generated@@64 $generated@@66 $generated@@67))))
 :pattern ( ($generated@@38 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@58 $generated@@68) (= $generated@@68 $generated@@37))
 :pattern ( ($generated@@58 $generated@@68))
)))
(assert (= ($generated@@17 $generated@@69) 4))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@39 $generated@@69 $generated@@72 ($generated@@70 $generated@@73)) (forall (($generated@@74 T@U) ) (!  (=> ($generated@@71 $generated@@72 $generated@@74) ($generated@@45 $generated@@74 $generated@@73))
 :pattern ( ($generated@@71 $generated@@72 $generated@@74))
)))
 :pattern ( ($generated@@39 $generated@@69 $generated@@72 ($generated@@70 $generated@@73)))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@56 $generated@@76) (exists (($generated@@77 T@U) ) (= $generated@@76 ($generated@@75 $generated@@77))))
 :pattern ( ($generated@@56 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ) (!  (and (= ($generated@@33 ($generated@@50 $generated@@79)) $generated@@9) (= ($generated@@78 ($generated@@50 $generated@@79)) $generated@@15))
 :pattern ( ($generated@@50 $generated@@79))
)))
(assert  (and (and (forall (($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@82 $generated@@86 $generated@@87 ($generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@90 $generated@@88) $generated@@90) $generated@@88)
 :weight 0
)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (or (= $generated@@95 $generated@@96) (= ($generated@@82 $generated@@91 $generated@@92 ($generated@@85 $generated@@91 $generated@@92 $generated@@94 $generated@@95 $generated@@93) $generated@@96) ($generated@@82 $generated@@91 $generated@@92 $generated@@94 $generated@@96)))
 :weight 0
))) (= ($generated@@17 $generated@@83) 5)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> ($generated@@71 ($generated@@80 $generated@@98) $generated@@99) (< ($generated@@81 ($generated@@60 $generated@@40 ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@98) $generated@@99))) ($generated@@81 ($generated@@64 $generated@@97 $generated@@98))))
 :pattern ( ($generated@@71 ($generated@@80 $generated@@98) $generated@@99) ($generated@@64 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@45 $generated@@100 $generated@@41) (and (= ($generated@@61 $generated@@40 ($generated@@60 $generated@@40 $generated@@100)) $generated@@100) ($generated@@39 $generated@@40 ($generated@@60 $generated@@40 $generated@@100) $generated@@41)))
 :pattern ( ($generated@@45 $generated@@100 $generated@@41))
)))
(assert (= ($generated@@17 $generated@@102) 6))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@39 $generated@@40 ($generated@@64 $generated@@104 $generated@@105) $generated@@41)  (and ($generated@@39 $generated@@40 $generated@@104 ($generated@@50 ($generated@@101 $generated))) ($generated@@39 $generated@@102 $generated@@105 ($generated@@103 ($generated@@101 $generated) $generated@@0))))
 :pattern ( ($generated@@39 $generated@@40 ($generated@@64 $generated@@104 $generated@@105) $generated@@41))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@107 ($generated@@50 $generated@@106)) (or ($generated@@56 $generated@@107) ($generated@@58 $generated@@107)))
 :pattern ( ($generated@@58 $generated@@107) ($generated@@39 $generated@@40 $generated@@107 ($generated@@50 $generated@@106)))
 :pattern ( ($generated@@56 $generated@@107) ($generated@@39 $generated@@40 $generated@@107 ($generated@@50 $generated@@106)))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@45 $generated@@108 $generated@@0) (and (= ($generated@@61 $generated@@19 ($generated@@60 $generated@@19 $generated@@108)) $generated@@108) ($generated@@39 $generated@@19 ($generated@@60 $generated@@19 $generated@@108) $generated@@0)))
 :pattern ( ($generated@@45 $generated@@108 $generated@@0))
)))
(assert (= ($generated@@17 $generated@@109) 7))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@45 $generated@@110 $generated) (and (= ($generated@@61 $generated@@109 ($generated@@60 $generated@@109 $generated@@110)) $generated@@110) ($generated@@39 $generated@@109 ($generated@@60 $generated@@109 $generated@@110) $generated)))
 :pattern ( ($generated@@45 $generated@@110 $generated))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@45 ($generated@@61 $generated@@113 $generated@@111) $generated@@112) ($generated@@39 $generated@@113 $generated@@111 $generated@@112))
 :pattern ( ($generated@@45 ($generated@@61 $generated@@113 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (! (<= 0 ($generated@@34 $generated@@114))
 :pattern ( ($generated@@34 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@115 ($generated@@103 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@103 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@118 ($generated@@103 $generated@@119 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@103 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@33 ($generated@@103 $generated@@121 $generated@@122)) $generated@@5)
 :pattern ( ($generated@@103 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@36 ($generated@@43 $generated@@123 $generated@@124)) $generated@@7)
 :pattern ( ($generated@@43 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@125 ($generated@@44 $generated@@126 $generated@@127)) $generated@@126)
 :pattern ( ($generated@@44 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@128 ($generated@@44 $generated@@129 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@44 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@131 ($generated@@43 $generated@@132 $generated@@133)) $generated@@132)
 :pattern ( ($generated@@43 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@134 ($generated@@43 $generated@@135 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@43 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@36 ($generated@@64 $generated@@137 $generated@@138)) $generated@@11)
 :pattern ( ($generated@@64 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@139 ($generated@@64 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@64 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@142 ($generated@@64 $generated@@143 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@64 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@70 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@70 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@33 ($generated@@70 $generated@@147)) $generated@@3)
 :pattern ( ($generated@@70 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@101 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@101 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@33 ($generated@@101 $generated@@150)) $generated@@4)
 :pattern ( ($generated@@101 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@151 ($generated@@50 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@50 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@36 ($generated@@75 $generated@@153)) $generated@@12)
 :pattern ( ($generated@@75 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@154 ($generated@@75 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@75 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@60 $generated@@157 ($generated@@61 $generated@@157 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@61 $generated@@157 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@39 $generated@@40 ($generated@@75 $generated@@159) ($generated@@50 $generated@@158)) ($generated@@45 $generated@@159 $generated@@158))
 :pattern ( ($generated@@39 $generated@@40 ($generated@@75 $generated@@159) ($generated@@50 $generated@@158)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (< ($generated@@160 $generated@@161) ($generated@@81 ($generated@@43 $generated@@161 $generated@@162)))
 :pattern ( ($generated@@43 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (< ($generated@@160 $generated@@164) ($generated@@81 ($generated@@43 $generated@@163 $generated@@164)))
 :pattern ( ($generated@@43 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (< ($generated@@81 $generated@@165) ($generated@@81 ($generated@@64 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@64 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (not ($generated@@71 ($generated@@80 $generated@@167) $generated@@168))
 :pattern ( ($generated@@71 ($generated@@80 $generated@@167) $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> ($generated@@45 $generated@@169 ($generated@@103 $generated@@170 $generated@@171)) (and (= ($generated@@61 $generated@@102 ($generated@@60 $generated@@102 $generated@@169)) $generated@@169) ($generated@@39 $generated@@102 ($generated@@60 $generated@@102 $generated@@169) ($generated@@103 $generated@@170 $generated@@171))))
 :pattern ( ($generated@@45 $generated@@169 ($generated@@103 $generated@@170 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> ($generated@@45 $generated@@174 ($generated@@44 $generated@@172 $generated@@173)) (and (= ($generated@@61 $generated@@40 ($generated@@60 $generated@@40 $generated@@174)) $generated@@174) ($generated@@39 $generated@@40 ($generated@@60 $generated@@40 $generated@@174) ($generated@@44 $generated@@172 $generated@@173))))
 :pattern ( ($generated@@45 $generated@@174 ($generated@@44 $generated@@172 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ) (! (< ($generated@@160 $generated@@175) ($generated@@81 ($generated@@75 $generated@@175)))
 :pattern ( ($generated@@75 $generated@@175))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@176 $generated@@184 $generated@@185 $generated@@186 ($generated@@181 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@189 $generated@@190) $generated@@187)
 :weight 0
)) (and (forall (($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@176 $generated@@191 $generated@@192 $generated@@193 ($generated@@181 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@176 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@176 $generated@@200 $generated@@201 $generated@@202 ($generated@@181 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (= ($generated@@17 $generated@@177) 8)) (= ($generated@@17 $generated@@178) 9)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@17 ($generated@@180 $generated@@209 $generated@@210)) 10))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@180 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@183 ($generated@@180 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@180 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (= ($generated@@22 ($generated@@176 $generated@@177 $generated@@178 $generated@@18 ($generated@@179 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (or (not (= $generated@@219 $generated@@215)) (not true)) ($generated@@22 ($generated@@60 $generated@@18 ($generated@@82 $generated@@178 $generated@@83 ($generated@@82 $generated@@177 ($generated@@180 $generated@@178 $generated@@83) $generated@@216 $generated@@219) $generated@@217)))) $generated@@218))
 :pattern ( ($generated@@176 $generated@@177 $generated@@178 $generated@@18 ($generated@@179 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (and (= ($generated@@33 ($generated@@44 $generated@@221 $generated@@222)) $generated@@8) (= ($generated@@78 ($generated@@44 $generated@@221 $generated@@222)) $generated@@14))
 :pattern ( ($generated@@44 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ) (!  (or (= $generated@@223 $generated@@167) (exists (($generated@@224 T@U) ) ($generated@@71 ($generated@@80 $generated@@223) $generated@@224)))
 :pattern ( ($generated@@80 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ) (!  (or (= $generated@@226 $generated@@167) (exists (($generated@@227 T@U) ) ($generated@@71 ($generated@@225 $generated@@226) $generated@@227)))
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= ($generated@@71 ($generated@@228 $generated@@229) $generated@@230)  (and ($generated@@71 ($generated@@80 $generated@@229) ($generated@@131 ($generated@@60 $generated@@40 $generated@@230))) (= ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@229) ($generated@@131 ($generated@@60 $generated@@40 $generated@@230))) ($generated@@134 ($generated@@60 $generated@@40 $generated@@230)))))
 :pattern ( ($generated@@71 ($generated@@228 $generated@@229) $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= ($generated@@71 ($generated@@225 $generated@@231) $generated@@232) (exists (($generated@@233 T@U) ) (!  (and ($generated@@71 ($generated@@80 $generated@@231) $generated@@233) (= $generated@@232 ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@231) $generated@@233)))
 :pattern ( ($generated@@71 ($generated@@80 $generated@@231) $generated@@233))
 :pattern ( ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@231) $generated@@233))
)))
 :pattern ( ($generated@@71 ($generated@@225 $generated@@231) $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@160 ($generated@@61 $generated@@40 $generated@@234)) ($generated@@81 $generated@@234))
 :pattern ( ($generated@@160 ($generated@@61 $generated@@40 $generated@@234)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> ($generated@@45 $generated@@235 ($generated@@70 $generated@@236)) (and (= ($generated@@61 $generated@@69 ($generated@@60 $generated@@69 $generated@@235)) $generated@@235) ($generated@@39 $generated@@69 ($generated@@60 $generated@@69 $generated@@235) ($generated@@70 $generated@@236))))
 :pattern ( ($generated@@45 $generated@@235 ($generated@@70 $generated@@236)))
)))
(assert (= ($generated@@17 $generated@@237) 11))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> ($generated@@45 $generated@@238 ($generated@@101 $generated@@239)) (and (= ($generated@@61 $generated@@237 ($generated@@60 $generated@@237 $generated@@238)) $generated@@238) ($generated@@39 $generated@@237 ($generated@@60 $generated@@237 $generated@@238) ($generated@@101 $generated@@239))))
 :pattern ( ($generated@@45 $generated@@238 ($generated@@101 $generated@@239)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> ($generated@@45 $generated@@241 ($generated@@50 $generated@@240)) (and (= ($generated@@61 $generated@@40 ($generated@@60 $generated@@40 $generated@@241)) $generated@@241) ($generated@@39 $generated@@40 ($generated@@60 $generated@@40 $generated@@241) ($generated@@50 $generated@@240))))
 :pattern ( ($generated@@45 $generated@@241 ($generated@@50 $generated@@240)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (= ($generated@@39 $generated@@102 $generated@@242 ($generated@@103 $generated@@243 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> ($generated@@71 ($generated@@80 $generated@@242) $generated@@245) (and ($generated@@45 ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@242) $generated@@245) $generated@@244) ($generated@@45 $generated@@245 $generated@@243)))
 :pattern ( ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@242) $generated@@245))
 :pattern ( ($generated@@71 ($generated@@80 $generated@@242) $generated@@245))
)))
 :pattern ( ($generated@@39 $generated@@102 $generated@@242 ($generated@@103 $generated@@243 $generated@@244)))
)))
(assert (= ($generated@@33 $generated@@41) $generated@@10))
(assert (= ($generated@@78 $generated@@41) $generated@@16))
(assert (= $generated@@37 ($generated@@52 $generated@@40 $generated@@37)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> ($generated@@71 ($generated@@80 $generated@@247) ($generated@@61 $generated@@40 $generated@@248)) (< ($generated@@81 $generated@@248) ($generated@@81 ($generated@@64 $generated@@246 $generated@@247))))
 :pattern ( ($generated@@71 ($generated@@80 $generated@@247) ($generated@@61 $generated@@40 $generated@@248)) ($generated@@64 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= ($generated@@43 ($generated@@52 $generated@@83 $generated@@249) ($generated@@52 $generated@@83 $generated@@250)) ($generated@@52 $generated@@40 ($generated@@43 $generated@@249 $generated@@250)))
 :pattern ( ($generated@@43 ($generated@@52 $generated@@83 $generated@@249) ($generated@@52 $generated@@83 $generated@@250)))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= ($generated@@64 ($generated@@52 $generated@@40 $generated@@251) ($generated@@52 $generated@@102 $generated@@252)) ($generated@@52 $generated@@40 ($generated@@64 $generated@@251 $generated@@252)))
 :pattern ( ($generated@@64 ($generated@@52 $generated@@40 $generated@@251) ($generated@@52 $generated@@102 $generated@@252)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@75 ($generated@@52 $generated@@83 $generated@@253)) ($generated@@52 $generated@@40 ($generated@@75 $generated@@253)))
 :pattern ( ($generated@@75 ($generated@@52 $generated@@83 $generated@@253)))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@T) ) (! (= ($generated@@61 $generated@@255 ($generated@@52 $generated@@255 $generated@@254)) ($generated@@52 $generated@@83 ($generated@@61 $generated@@255 $generated@@254)))
 :pattern ( ($generated@@61 $generated@@255 ($generated@@52 $generated@@255 $generated@@254)))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= ($generated@@34 $generated@@256) 0) (= $generated@@256 $generated@@35))
 :pattern ( ($generated@@34 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= ($generated@@39 $generated@@237 $generated@@258 ($generated@@101 $generated@@259)) (forall (($generated@@260 Int) ) (!  (=> (and (<= 0 $generated@@260) (< $generated@@260 ($generated@@34 $generated@@258))) ($generated@@45 ($generated@@257 $generated@@258 $generated@@260) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258 $generated@@260))
)))
 :pattern ( ($generated@@39 $generated@@237 $generated@@258 ($generated@@101 $generated@@259)))
)))
(assert (forall (($generated@@261 T@U) ) (!  (or (= $generated@@261 $generated@@167) (exists (($generated@@262 T@U) ($generated@@263 T@U) ) ($generated@@71 ($generated@@228 $generated@@261) ($generated@@61 $generated@@40 ($generated@@43 $generated@@262 $generated@@263)))))
 :pattern ( ($generated@@228 $generated@@261))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 Int) ) (!  (=> (and (<= 0 $generated@@266) (< $generated@@266 ($generated@@34 $generated@@265))) (< ($generated@@81 ($generated@@60 $generated@@40 ($generated@@257 $generated@@265 $generated@@266))) ($generated@@264 $generated@@265)))
 :pattern ( ($generated@@81 ($generated@@60 $generated@@40 ($generated@@257 $generated@@265 $generated@@266))))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> ($generated@@39 $generated@@102 $generated@@267 ($generated@@103 $generated@@268 $generated@@269)) (and (and ($generated@@39 $generated@@69 ($generated@@80 $generated@@267) ($generated@@70 $generated@@268)) ($generated@@39 $generated@@69 ($generated@@225 $generated@@267) ($generated@@70 $generated@@269))) ($generated@@39 $generated@@69 ($generated@@228 $generated@@267) ($generated@@70 ($generated@@44 $generated@@268 $generated@@269)))))
 :pattern ( ($generated@@39 $generated@@102 $generated@@267 ($generated@@103 $generated@@268 $generated@@269)))
)))
(assert (forall (($generated@@270 T@U) ) (! ($generated@@39 $generated@@19 $generated@@270 $generated@@0)
 :pattern ( ($generated@@39 $generated@@19 $generated@@270 $generated@@0))
)))
(assert (forall (($generated@@271 T@U) ) (! ($generated@@39 $generated@@109 $generated@@271 $generated)
 :pattern ( ($generated@@39 $generated@@109 $generated@@271 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@278 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@279 true))
(let (($generated@@280  (=> (and (=> ($generated@@56 ($generated@@139 $generated@@272)) ($generated@@71 ($generated@@80 ($generated@@142 $generated@@272)) ($generated@@154 ($generated@@139 $generated@@272)))) (= (ControlFlow 0 6) 3)) $generated@@279)))
(let (($generated@@281  (=> ($generated@@38 $generated@@272) (=> (and ($generated@@56 ($generated@@139 $generated@@272)) ($generated@@38 $generated@@272)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@56 ($generated@@139 $generated@@272))) (=> ($generated@@56 ($generated@@139 $generated@@272)) (=> ($generated@@38 $generated@@272) (=> (and ($generated@@71 ($generated@@80 ($generated@@142 $generated@@272)) ($generated@@154 ($generated@@139 $generated@@272))) (= (ControlFlow 0 4) 3)) $generated@@279))))))))
(let (($generated@@282  (=> ($generated@@39 $generated@@40 $generated@@272 $generated@@41) (and (=> (= (ControlFlow 0 7) 4) $generated@@281) (=> (= (ControlFlow 0 7) 6) $generated@@280)))))
(let (($generated@@283  (=> (and (and (and ($generated@@38 ($generated@@52 $generated@@40 ($generated@@64 ($generated@@52 $generated@@40 $generated@@37) ($generated@@52 $generated@@102 $generated@@167)))) (=> ($generated@@22 ($generated@@52 $generated@@18 ($generated@@21 ($generated@@56 ($generated@@52 $generated@@40 ($generated@@139 ($generated@@52 $generated@@40 ($generated@@64 ($generated@@52 $generated@@40 $generated@@37) ($generated@@52 $generated@@102 $generated@@167))))))))) (and ($generated@@38 ($generated@@52 $generated@@40 ($generated@@64 ($generated@@52 $generated@@40 $generated@@37) ($generated@@52 $generated@@102 $generated@@167)))) ($generated@@38 ($generated@@52 $generated@@40 ($generated@@64 ($generated@@52 $generated@@40 $generated@@37) ($generated@@52 $generated@@102 $generated@@167))))))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@22 ($generated@@52 $generated@@18 ($generated@@21 ($generated@@56 ($generated@@52 $generated@@40 ($generated@@139 ($generated@@52 $generated@@40 ($generated@@64 ($generated@@52 $generated@@40 $generated@@37) ($generated@@52 $generated@@102 $generated@@167)))))))))) ($generated@@71 ($generated@@52 $generated@@69 ($generated@@80 ($generated@@52 $generated@@102 ($generated@@142 ($generated@@52 $generated@@40 ($generated@@64 ($generated@@52 $generated@@40 $generated@@37) ($generated@@52 $generated@@102 $generated@@167))))))) ($generated@@61 $generated@@237 ($generated@@52 $generated@@237 ($generated@@60 $generated@@237 ($generated@@154 ($generated@@52 $generated@@40 ($generated@@139 ($generated@@52 $generated@@40 ($generated@@64 ($generated@@52 $generated@@40 $generated@@37) ($generated@@52 $generated@@102 $generated@@167)))))))))))))
(let (($generated@@284  (=> (= $generated@@273 ($generated@@179 $generated@@274 $generated@@275 $generated@@6 false)) (and (=> (= (ControlFlow 0 8) 7) $generated@@282) (=> (= (ControlFlow 0 8) 2) $generated@@283)))))
(let (($generated@@285  (=> (and (and ($generated@@276 $generated@@275) ($generated@@277 $generated@@275)) (and (= 1 $generated@@278) (= (ControlFlow 0 9) 8))) $generated@@284)))
$generated@@285))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
