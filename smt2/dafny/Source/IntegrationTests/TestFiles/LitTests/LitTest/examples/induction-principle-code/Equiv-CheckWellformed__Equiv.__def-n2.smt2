(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U Int) T@U)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@40 () Int)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@T T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@54 (Int Int) T@U)
(declare-fun $generated@@57 (Int) Int)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@U T@U) T@U)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@122 (T@U) Int)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 (T@T T@T) T@T)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@137 (T@T) T@T)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@11 $generated@@33) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 Int) ) (!  (=> (and (<= 0 $generated@@36) (< $generated@@36 ($generated@@30 $generated@@34))) (< ($generated@@31 ($generated@@32 $generated@@33 ($generated@@28 $generated@@34 $generated@@36))) ($generated@@31 ($generated@@29 $generated@@34 $generated@@35))))
 :pattern ( ($generated@@28 $generated@@34 $generated@@36) ($generated@@29 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 Int) ) (!  (=> (and (<= 0 $generated@@39) (< $generated@@39 ($generated@@30 $generated@@38))) (< ($generated@@31 ($generated@@32 $generated@@33 ($generated@@28 $generated@@38 $generated@@39))) ($generated@@31 ($generated@@29 $generated@@37 $generated@@38))))
 :pattern ( ($generated@@28 $generated@@38 $generated@@39) ($generated@@29 $generated@@37 $generated@@38))
)))
(assert  (=> (<= 2 $generated@@40) (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (or ($generated@@42 $generated@@46 $generated@@47) (and (< 2 $generated@@40) (and ($generated@@43 $generated@@33 $generated@@46 $generated@@44) ($generated@@43 $generated@@33 $generated@@47 $generated@@45)))) ($generated@@43 $generated@@33 ($generated@@41 $generated@@46 $generated@@47) $generated@@45))
 :pattern ( ($generated@@41 $generated@@46 $generated@@47))
))))
(assert (= ($generated@@30 $generated@@48) 0))
(assert (forall (($generated@@50 T@U) ) (!  (=> ($generated@@43 $generated@@33 $generated@@50 $generated@@44) ($generated@@49 $generated@@50))
 :pattern ( ($generated@@49 $generated@@50) ($generated@@43 $generated@@33 $generated@@50 $generated@@44))
)))
(assert (forall (($generated@@53 T@U) ) (!  (=> ($generated@@43 $generated@@33 $generated@@53 $generated@@52) ($generated@@51 $generated@@53))
 :pattern ( ($generated@@51 $generated@@53) ($generated@@43 $generated@@33 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@55 Int) ($generated@@56 Int) ) (! (= ($generated@@43 $generated@@33 ($generated@@54 $generated@@55 $generated@@56) $generated@@44)  (and ($generated@@43 $generated@@13 ($generated@@17 $generated@@55) $generated) ($generated@@43 $generated@@13 ($generated@@17 $generated@@56) $generated)))
 :pattern ( ($generated@@43 $generated@@33 ($generated@@54 $generated@@55 $generated@@56) $generated@@44))
)))
(assert (forall (($generated@@58 Int) ) (! (= ($generated@@57 $generated@@58) $generated@@58)
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 $generated@@60) $generated@@60)
 :pattern ( ($generated@@59 $generated@@61 $generated@@60))
)))
(assert (= ($generated@@11 $generated@@62) 4))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> (and ($generated@@43 $generated@@62 $generated@@66 ($generated@@64 $generated@@68)) ($generated@@65 $generated@@67 $generated@@68)) ($generated@@43 $generated@@62 ($generated@@63 $generated@@66 $generated@@67) ($generated@@64 $generated@@68)))
 :pattern ( ($generated@@43 $generated@@62 ($generated@@63 $generated@@66 $generated@@67) ($generated@@64 $generated@@68)))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@49 $generated@@70) (= ($generated@@69 $generated@@70) $generated@@5))
 :pattern ( ($generated@@49 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@51 $generated@@71) (= ($generated@@69 $generated@@71) $generated@@6))
 :pattern ( ($generated@@51 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@32 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@32 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@49 $generated@@75) (exists (($generated@@76 Int) ($generated@@77 Int) ) (= $generated@@75 ($generated@@54 $generated@@76 $generated@@77))))
 :pattern ( ($generated@@49 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@51 $generated@@78) (exists (($generated@@79 T@U) ($generated@@80 T@U) ) (= $generated@@78 ($generated@@29 $generated@@79 $generated@@80))))
 :pattern ( ($generated@@51 $generated@@78))
)))
(assert  (=> (<= 2 $generated@@40) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (or ($generated@@42 $generated@@86 $generated@@87) (and (< 2 $generated@@40) (and ($generated@@43 $generated@@33 $generated@@86 $generated@@44) ($generated@@43 $generated@@33 $generated@@87 $generated@@45)))) (and (and (and ($generated@@49 $generated@@86) ($generated@@51 $generated@@87)) (and ($generated@@49 $generated@@86) ($generated@@51 $generated@@87))) (= ($generated@@41 $generated@@86 $generated@@87) ($generated@@29 ($generated@@81 ($generated@@63 $generated@@48 ($generated@@72 $generated@@13 ($generated@@17 ($generated@@82 $generated@@86)))) ($generated@@83 $generated@@87)) ($generated@@81 ($generated@@63 $generated@@48 ($generated@@72 $generated@@13 ($generated@@17 ($generated@@84 $generated@@86)))) ($generated@@85 $generated@@87))))))
 :pattern ( ($generated@@41 $generated@@86 $generated@@87))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@43 $generated@@33 ($generated@@29 $generated@@88 $generated@@89) $generated@@52)  (and ($generated@@43 $generated@@62 $generated@@88 ($generated@@64 $generated)) ($generated@@43 $generated@@62 $generated@@89 ($generated@@64 $generated))))
 :pattern ( ($generated@@43 $generated@@33 ($generated@@29 $generated@@88 $generated@@89) $generated@@52))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@30 ($generated@@63 $generated@@90 $generated@@91)) (+ 1 ($generated@@30 $generated@@90)))
 :pattern ( ($generated@@63 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@30 ($generated@@81 $generated@@92 $generated@@93)) (+ ($generated@@30 $generated@@92) ($generated@@30 $generated@@93)))
 :pattern ( ($generated@@30 ($generated@@81 $generated@@92 $generated@@93)))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@65 $generated@@94 $generated@@44) (and (= ($generated@@72 $generated@@33 ($generated@@32 $generated@@33 $generated@@94)) $generated@@94) ($generated@@43 $generated@@33 ($generated@@32 $generated@@33 $generated@@94) $generated@@44)))
 :pattern ( ($generated@@65 $generated@@94 $generated@@44))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@65 $generated@@95 $generated@@45) (and (= ($generated@@72 $generated@@33 ($generated@@32 $generated@@33 $generated@@95)) $generated@@95) ($generated@@43 $generated@@33 ($generated@@32 $generated@@33 $generated@@95) $generated@@45)))
 :pattern ( ($generated@@65 $generated@@95 $generated@@45))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@65 $generated@@96 $generated@@52) (and (= ($generated@@72 $generated@@33 ($generated@@32 $generated@@33 $generated@@96)) $generated@@96) ($generated@@43 $generated@@33 ($generated@@32 $generated@@33 $generated@@96) $generated@@52)))
 :pattern ( ($generated@@65 $generated@@96 $generated@@52))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 T@U) ) (!  (and (=> (= $generated@@98 ($generated@@30 $generated@@97)) (= ($generated@@28 ($generated@@63 $generated@@97 $generated@@99) $generated@@98) $generated@@99)) (=> (or (not (= $generated@@98 ($generated@@30 $generated@@97))) (not true)) (= ($generated@@28 ($generated@@63 $generated@@97 $generated@@99) $generated@@98) ($generated@@28 $generated@@97 $generated@@98))))
 :pattern ( ($generated@@28 ($generated@@63 $generated@@97 $generated@@99) $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@65 $generated@@100 $generated) (and (= ($generated@@72 $generated@@13 ($generated@@32 $generated@@13 $generated@@100)) $generated@@100) ($generated@@43 $generated@@13 ($generated@@32 $generated@@13 $generated@@100) $generated)))
 :pattern ( ($generated@@65 $generated@@100 $generated))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@65 ($generated@@72 $generated@@103 $generated@@101) $generated@@102) ($generated@@43 $generated@@103 $generated@@101 $generated@@102))
 :pattern ( ($generated@@65 ($generated@@72 $generated@@103 $generated@@101) $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (<= 0 ($generated@@30 $generated@@104))
 :pattern ( ($generated@@30 $generated@@104))
)))
(assert (forall (($generated@@105 Int) ($generated@@106 Int) ) (! (= ($generated@@69 ($generated@@54 $generated@@105 $generated@@106)) $generated@@5)
 :pattern ( ($generated@@54 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@107 Int) ($generated@@108 Int) ) (! (= ($generated@@82 ($generated@@54 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@54 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 Int) ($generated@@110 Int) ) (! (= ($generated@@84 ($generated@@54 $generated@@109 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@54 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@69 ($generated@@29 $generated@@111 $generated@@112)) $generated@@6)
 :pattern ( ($generated@@29 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@83 ($generated@@29 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@29 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@85 ($generated@@29 $generated@@115 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@29 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 ($generated@@64 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@64 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@27 ($generated@@64 $generated@@119)) $generated@@1)
 :pattern ( ($generated@@64 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@32 $generated@@121 ($generated@@72 $generated@@121 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@72 $generated@@121 $generated@@120))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (< ($generated@@122 $generated@@123) ($generated@@31 ($generated@@29 $generated@@123 $generated@@124)))
 :pattern ( ($generated@@29 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (< ($generated@@122 $generated@@126) ($generated@@31 ($generated@@29 $generated@@125 $generated@@126)))
 :pattern ( ($generated@@29 $generated@@125 $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@127 $generated@@138 $generated@@139 $generated@@140 ($generated@@134 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@143 $generated@@144) $generated@@141)
 :weight 0
)) (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@127 $generated@@145 $generated@@146 $generated@@147 ($generated@@134 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@127 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@127 $generated@@154 $generated@@155 $generated@@156 ($generated@@134 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)))) (= ($generated@@11 $generated@@128) 5)) (= ($generated@@11 $generated@@129) 6)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@131 $generated@@163 $generated@@164 ($generated@@135 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@165) $generated@@167) $generated@@165)
 :weight 0
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@172 $generated@@173) (= ($generated@@131 $generated@@168 $generated@@169 ($generated@@135 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@170) $generated@@173) ($generated@@131 $generated@@168 $generated@@169 $generated@@171 $generated@@173)))
 :weight 0
))) (= ($generated@@11 $generated@@132) 7)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@11 ($generated@@133 $generated@@174 $generated@@175)) 8))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@136 ($generated@@133 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@133 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@137 ($generated@@133 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@133 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@16 ($generated@@127 $generated@@128 $generated@@129 $generated@@12 ($generated@@130 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (or (not (= $generated@@184 $generated@@180)) (not true)) ($generated@@16 ($generated@@32 $generated@@12 ($generated@@131 $generated@@129 $generated@@132 ($generated@@131 $generated@@128 ($generated@@133 $generated@@129 $generated@@132) $generated@@181 $generated@@184) $generated@@182)))) $generated@@183))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129 $generated@@12 ($generated@@130 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (and (= ($generated@@186 ($generated@@63 $generated@@188 $generated@@189)) $generated@@188) (= ($generated@@187 ($generated@@63 $generated@@188 $generated@@189)) $generated@@189))
 :pattern ( ($generated@@63 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@43 $generated@@33 $generated@@190 $generated@@45)  (and ($generated@@43 $generated@@33 $generated@@190 $generated@@52) (= ($generated@@30 ($generated@@83 $generated@@190)) ($generated@@30 ($generated@@85 $generated@@190)))))
 :pattern ( ($generated@@43 $generated@@33 $generated@@190 $generated@@45))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@65 $generated@@191 ($generated@@64 $generated@@192)) (and (= ($generated@@72 $generated@@62 ($generated@@32 $generated@@62 $generated@@191)) $generated@@191) ($generated@@43 $generated@@62 ($generated@@32 $generated@@62 $generated@@191) ($generated@@64 $generated@@192))))
 :pattern ( ($generated@@65 $generated@@191 ($generated@@64 $generated@@192)))
)))
(assert (= ($generated@@27 $generated@@44) $generated@@3))
(assert (= ($generated@@193 $generated@@44) $generated@@8))
(assert (= ($generated@@27 $generated@@45) $generated@@4))
(assert (= ($generated@@193 $generated@@45) $generated@@9))
(assert (= ($generated@@27 $generated@@52) $generated@@7))
(assert (= ($generated@@193 $generated@@52) $generated@@10))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 Int) ) (!  (and (=> (< $generated@@196 ($generated@@30 $generated@@194)) (= ($generated@@28 ($generated@@81 $generated@@194 $generated@@195) $generated@@196) ($generated@@28 $generated@@194 $generated@@196))) (=> (<= ($generated@@30 $generated@@194) $generated@@196) (= ($generated@@28 ($generated@@81 $generated@@194 $generated@@195) $generated@@196) ($generated@@28 $generated@@195 (- $generated@@196 ($generated@@30 $generated@@194))))))
 :pattern ( ($generated@@28 ($generated@@81 $generated@@194 $generated@@195) $generated@@196))
)))
(assert (forall (($generated@@197 Int) ($generated@@198 Int) ) (! (= ($generated@@54 ($generated@@57 $generated@@197) ($generated@@57 $generated@@198)) ($generated@@59 $generated@@33 ($generated@@54 $generated@@197 $generated@@198)))
 :pattern ( ($generated@@54 ($generated@@57 $generated@@197) ($generated@@57 $generated@@198)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@29 ($generated@@59 $generated@@62 $generated@@199) ($generated@@59 $generated@@62 $generated@@200)) ($generated@@59 $generated@@33 ($generated@@29 $generated@@199 $generated@@200)))
 :pattern ( ($generated@@29 ($generated@@59 $generated@@62 $generated@@199) ($generated@@59 $generated@@62 $generated@@200)))
)))
(assert (forall (($generated@@201 Int) ) (! (= ($generated@@72 $generated@@13 ($generated@@17 ($generated@@57 $generated@@201))) ($generated@@59 $generated@@132 ($generated@@72 $generated@@13 ($generated@@17 $generated@@201))))
 :pattern ( ($generated@@72 $generated@@13 ($generated@@17 ($generated@@57 $generated@@201))))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@T) ) (! (= ($generated@@72 $generated@@203 ($generated@@59 $generated@@203 $generated@@202)) ($generated@@59 $generated@@132 ($generated@@72 $generated@@203 $generated@@202)))
 :pattern ( ($generated@@72 $generated@@203 ($generated@@59 $generated@@203 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ) (!  (=> (= ($generated@@30 $generated@@204) 0) (= $generated@@204 $generated@@48))
 :pattern ( ($generated@@30 $generated@@204))
)))
(assert  (=> (<= 2 $generated@@40) (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (or ($generated@@42 ($generated@@59 $generated@@33 $generated@@205) ($generated@@59 $generated@@33 $generated@@206)) (and (< 2 $generated@@40) (and ($generated@@43 $generated@@33 $generated@@205 $generated@@44) ($generated@@43 $generated@@33 $generated@@206 $generated@@45)))) (and (and (and ($generated@@49 ($generated@@59 $generated@@33 $generated@@205)) ($generated@@51 ($generated@@59 $generated@@33 $generated@@206))) (and ($generated@@49 ($generated@@59 $generated@@33 $generated@@205)) ($generated@@51 ($generated@@59 $generated@@33 $generated@@206)))) (= ($generated@@41 ($generated@@59 $generated@@33 $generated@@205) ($generated@@59 $generated@@33 $generated@@206)) ($generated@@29 ($generated@@81 ($generated@@63 $generated@@48 ($generated@@72 $generated@@13 ($generated@@17 ($generated@@57 ($generated@@82 ($generated@@59 $generated@@33 $generated@@205)))))) ($generated@@83 ($generated@@59 $generated@@33 $generated@@206))) ($generated@@81 ($generated@@63 $generated@@48 ($generated@@72 $generated@@13 ($generated@@17 ($generated@@57 ($generated@@84 ($generated@@59 $generated@@33 $generated@@205)))))) ($generated@@85 ($generated@@59 $generated@@33 $generated@@206)))))))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@59 $generated@@33 $generated@@205) ($generated@@59 $generated@@33 $generated@@206)))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@43 $generated@@62 $generated@@207 ($generated@@64 $generated@@208)) (forall (($generated@@209 Int) ) (!  (=> (and (<= 0 $generated@@209) (< $generated@@209 ($generated@@30 $generated@@207))) ($generated@@65 ($generated@@28 $generated@@207 $generated@@209) $generated@@208))
 :pattern ( ($generated@@28 $generated@@207 $generated@@209))
)))
 :pattern ( ($generated@@43 $generated@@62 $generated@@207 ($generated@@64 $generated@@208)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 Int) ) (!  (=> (and (<= 0 $generated@@211) (< $generated@@211 ($generated@@30 $generated@@210))) (< ($generated@@31 ($generated@@32 $generated@@33 ($generated@@28 $generated@@210 $generated@@211))) ($generated@@122 $generated@@210)))
 :pattern ( ($generated@@31 ($generated@@32 $generated@@33 ($generated@@28 $generated@@210 $generated@@211))))
)))
(assert (forall (($generated@@212 T@U) ) (! ($generated@@43 $generated@@13 $generated@@212 $generated)
 :pattern ( ($generated@@43 $generated@@13 $generated@@212 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 (T@U) Bool)
(declare-fun $generated@@219 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@220  (=> ($generated@@49 $generated@@213) (=> (and (and ($generated@@51 $generated@@214) ($generated@@49 $generated@@213)) (and ($generated@@51 $generated@@214) (= (ControlFlow 0 3) (- 0 2)))) ($generated@@43 $generated@@33 ($generated@@29 ($generated@@81 ($generated@@63 $generated@@48 ($generated@@72 $generated@@13 ($generated@@17 ($generated@@82 $generated@@213)))) ($generated@@83 $generated@@214)) ($generated@@81 ($generated@@63 $generated@@48 ($generated@@72 $generated@@13 ($generated@@17 ($generated@@84 $generated@@213)))) ($generated@@85 $generated@@214))) $generated@@45)))))
(let (($generated@@221 true))
(let (($generated@@222  (=> (= $generated@@215 ($generated@@130 $generated@@216 $generated@@217 $generated@@2 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@221) (=> (= (ControlFlow 0 4) 3) $generated@@220)))))
(let (($generated@@223  (=> (and ($generated@@218 $generated@@217) ($generated@@219 $generated@@217)) (=> (and (and ($generated@@43 $generated@@33 $generated@@213 $generated@@44) ($generated@@43 $generated@@33 $generated@@214 $generated@@45)) (and (= 2 $generated@@40) (= (ControlFlow 0 5) 4))) $generated@@222))))
$generated@@223)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
