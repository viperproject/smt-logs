(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@88 (T@U) Int)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@101 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 (T@T T@T) T@T)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@T) T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 (T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U T@U T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert ($generated@@23 $generated@@24))
(assert ($generated@@23 $generated@@25))
(assert (= ($generated@@7 $generated@@28) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@30 $generated@@31)) ($generated@@26 $generated@@32))
 :pattern ( ($generated@@26 $generated@@32) ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@30 $generated@@31)))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@33 $generated@@28 $generated@@36 $generated@@34 $generated@@37) ($generated@@33 $generated@@28 $generated@@36 $generated@@35 $generated@@37))
 :pattern ( ($generated@@33 $generated@@28 $generated@@36 $generated@@34 $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@38 $generated@@42 $generated@@43) ($generated@@29 $generated@@40 $generated@@41))  (and ($generated@@39 $generated@@42 $generated@@40) ($generated@@39 $generated@@43 $generated@@41)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@38 $generated@@42 $generated@@43) ($generated@@29 $generated@@40 $generated@@41)))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> ($generated@@44 $generated@@50) (= ($generated@@33 $generated@@28 ($generated@@38 $generated@@48 $generated@@49) ($generated@@29 $generated@@46 $generated@@47) $generated@@50)  (and ($generated@@45 $generated@@48 $generated@@46 $generated@@50) ($generated@@45 $generated@@49 $generated@@47 $generated@@50))))
 :pattern ( ($generated@@33 $generated@@28 ($generated@@38 $generated@@48 $generated@@49) ($generated@@29 $generated@@46 $generated@@47) $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@26 $generated@@52) (= ($generated@@51 $generated@@52) $generated@@0))
 :pattern ( ($generated@@26 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 ($generated@@53 $generated@@56 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@53 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@26 $generated@@57) (exists (($generated@@58 T@U) ($generated@@59 T@U) ) (= $generated@@57 ($generated@@38 $generated@@58 $generated@@59))))
 :pattern ( ($generated@@26 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@45 ($generated@@54 $generated@@63 $generated@@60) $generated@@61 $generated@@62) ($generated@@33 $generated@@63 $generated@@60 $generated@@61 $generated@@62))
 :pattern ( ($generated@@45 ($generated@@54 $generated@@63 $generated@@60) $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@39 $generated@@64 $generated@@34) (and (= ($generated@@54 $generated@@28 ($generated@@53 $generated@@28 $generated@@64)) $generated@@64) ($generated@@27 $generated@@28 ($generated@@53 $generated@@28 $generated@@64) $generated@@34)))
 :pattern ( ($generated@@39 $generated@@64 $generated@@34))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@39 $generated@@65 $generated@@35) (and (= ($generated@@54 $generated@@28 ($generated@@53 $generated@@28 $generated@@65)) $generated@@65) ($generated@@27 $generated@@28 ($generated@@53 $generated@@28 $generated@@65) $generated@@35)))
 :pattern ( ($generated@@39 $generated@@65 $generated@@35))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@39 ($generated@@54 $generated@@68 $generated@@66) $generated@@67) ($generated@@27 $generated@@68 $generated@@66 $generated@@67))
 :pattern ( ($generated@@39 ($generated@@54 $generated@@68 $generated@@66) $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@23 $generated@@69) (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@39 $generated@@71 $generated@@69) ($generated@@45 $generated@@71 $generated@@69 $generated@@70))
 :pattern ( ($generated@@45 $generated@@71 $generated@@69 $generated@@70))
)))
 :pattern ( ($generated@@23 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@51 ($generated@@38 $generated@@72 $generated@@73)) $generated@@0)
 :pattern ( ($generated@@38 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@74 ($generated@@29 $generated@@75 $generated@@76)) $generated@@75)
 :pattern ( ($generated@@29 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@77 ($generated@@29 $generated@@78 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@29 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@80 ($generated@@38 $generated@@81 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@38 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@83 ($generated@@38 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@38 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@53 $generated@@87 ($generated@@54 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@54 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (< ($generated@@88 $generated@@90) ($generated@@89 ($generated@@38 $generated@@90 $generated@@91)))
 :pattern ( ($generated@@38 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (< ($generated@@88 $generated@@93) ($generated@@89 ($generated@@38 $generated@@92 $generated@@93)))
 :pattern ( ($generated@@38 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@39 $generated@@96 ($generated@@29 $generated@@94 $generated@@95)) (and (= ($generated@@54 $generated@@28 ($generated@@53 $generated@@28 $generated@@96)) $generated@@96) ($generated@@27 $generated@@28 ($generated@@53 $generated@@28 $generated@@96) ($generated@@29 $generated@@94 $generated@@95))))
 :pattern ( ($generated@@39 $generated@@96 ($generated@@29 $generated@@94 $generated@@95)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@97 $generated@@108 $generated@@109 $generated@@110 ($generated@@104 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@113 $generated@@114) $generated@@111)
 :weight 0
)) (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@120 $generated@@122) (= ($generated@@97 $generated@@115 $generated@@116 $generated@@117 ($generated@@104 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@122 $generated@@123) ($generated@@97 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@122 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@97 $generated@@124 $generated@@125 $generated@@126 ($generated@@104 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@131 $generated@@132) ($generated@@97 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@131 $generated@@132)))
 :weight 0
)))) (= ($generated@@7 $generated@@98) 4)) (= ($generated@@7 $generated@@99) 5)) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@101 $generated@@133 $generated@@134 ($generated@@105 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@135) $generated@@137) $generated@@135)
 :weight 0
))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@142 $generated@@143) (= ($generated@@101 $generated@@138 $generated@@139 ($generated@@105 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@101 $generated@@138 $generated@@139 $generated@@141 $generated@@143)))
 :weight 0
))) (= ($generated@@7 $generated@@102) 6)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (= ($generated@@7 ($generated@@103 $generated@@144 $generated@@145)) 7))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@106 ($generated@@103 $generated@@146 $generated@@147)) $generated@@146)
 :pattern ( ($generated@@103 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (! (= ($generated@@107 ($generated@@103 $generated@@148 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@103 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@12 ($generated@@97 $generated@@98 $generated@@99 $generated@@8 ($generated@@100 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (or (not (= $generated@@154 $generated@@150)) (not true)) ($generated@@12 ($generated@@53 $generated@@8 ($generated@@101 $generated@@99 $generated@@102 ($generated@@101 $generated@@98 ($generated@@103 $generated@@99 $generated@@102) $generated@@151 $generated@@154) $generated@@152)))) $generated@@153))
 :pattern ( ($generated@@97 $generated@@98 $generated@@99 $generated@@8 ($generated@@100 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (and (= ($generated@@156 ($generated@@29 $generated@@158 $generated@@159)) $generated@@1) (= ($generated@@157 ($generated@@29 $generated@@158 $generated@@159)) $generated@@4))
 :pattern ( ($generated@@29 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@88 ($generated@@54 $generated@@28 $generated@@160)) ($generated@@89 $generated@@160))
 :pattern ( ($generated@@88 ($generated@@54 $generated@@28 $generated@@160)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and ($generated@@44 $generated@@162) ($generated@@27 $generated@@28 $generated@@161 $generated@@35)) ($generated@@33 $generated@@28 $generated@@161 $generated@@35 $generated@@162))
 :pattern ( ($generated@@33 $generated@@28 $generated@@161 $generated@@35 $generated@@162))
)))
(assert (= ($generated@@156 $generated@@34) $generated@@2))
(assert (= ($generated@@157 $generated@@34) $generated@@5))
(assert (= ($generated@@156 $generated@@35) $generated@@3))
(assert (= ($generated@@157 $generated@@35) $generated@@6))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@44 $generated@@165) (and ($generated@@26 $generated@@163) (exists (($generated@@166 T@U) ) (! ($generated@@33 $generated@@28 $generated@@163 ($generated@@29 $generated@@164 $generated@@166) $generated@@165)
 :pattern ( ($generated@@33 $generated@@28 $generated@@163 ($generated@@29 $generated@@164 $generated@@166) $generated@@165))
)))) ($generated@@45 ($generated@@80 $generated@@163) $generated@@164 $generated@@165))
 :pattern ( ($generated@@45 ($generated@@80 $generated@@163) $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and ($generated@@44 $generated@@169) (and ($generated@@26 $generated@@167) (exists (($generated@@170 T@U) ) (! ($generated@@33 $generated@@28 $generated@@167 ($generated@@29 $generated@@170 $generated@@168) $generated@@169)
 :pattern ( ($generated@@33 $generated@@28 $generated@@167 ($generated@@29 $generated@@170 $generated@@168) $generated@@169))
)))) ($generated@@45 ($generated@@83 $generated@@167) $generated@@168 $generated@@169))
 :pattern ( ($generated@@45 ($generated@@83 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@172 $generated@@34)  (and ($generated@@27 $generated@@28 $generated@@172 $generated@@35) ($generated@@171 $generated@@172)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@172 $generated@@34))
)))
(assert  (=> (<= 1 $generated@@173) (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (or ($generated@@175 $generated@@179 $generated@@180) (and (< 1 $generated@@173) (and (and ($generated@@39 $generated@@179 $generated@@25) ($generated@@27 $generated@@28 $generated@@180 $generated@@34)) (and ($generated@@176 $generated@@179 $generated@@180) (not ($generated@@177 $generated@@179 $generated@@180)))))) (and ($generated@@178 $generated@@179 $generated@@180 ($generated@@80 ($generated@@174 $generated@@179 $generated@@180)) ($generated@@83 ($generated@@174 $generated@@179 $generated@@180))) ($generated@@27 $generated@@28 ($generated@@174 $generated@@179 $generated@@180) ($generated@@29 $generated@@25 $generated@@24))))
 :pattern ( ($generated@@174 $generated@@179 $generated@@180))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) true)
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
