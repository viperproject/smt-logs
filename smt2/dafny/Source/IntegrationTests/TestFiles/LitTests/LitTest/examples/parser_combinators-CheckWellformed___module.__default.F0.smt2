(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U T@U T@U) Bool)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@U T@U T@U) T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@T T@T) T@T)
(declare-fun $generated@@39 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@64 () Int)
(declare-fun $generated@@65 (T@U) Int)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@67 () Bool)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@87 () T@U)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@T T@U T@U) Bool)
(declare-fun $generated@@100 () T@U)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@105 (T@U T@U T@U) Bool)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@123 (T@U T@U) Bool)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@25) 3) (= ($generated@@8 $generated@@32) 4)) (forall (($generated@@42 T@T) ($generated@@43 T@T) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@35 $generated@@42 $generated@@43 ($generated@@39 $generated@@42 $generated@@43 $generated@@45 $generated@@46 $generated@@44) $generated@@46) $generated@@44)
 :weight 0
))) (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (or (= $generated@@51 $generated@@52) (= ($generated@@35 $generated@@47 $generated@@48 ($generated@@39 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@52) ($generated@@35 $generated@@47 $generated@@48 $generated@@50 $generated@@52)))
 :weight 0
))) (= ($generated@@8 $generated@@36) 5)) (= ($generated@@8 $generated@@37) 6)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (= ($generated@@8 ($generated@@38 $generated@@53 $generated@@54)) 7))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@40 ($generated@@38 $generated@@55 $generated@@56)) $generated@@55)
 :pattern ( ($generated@@38 $generated@@55 $generated@@56))
))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@41 ($generated@@38 $generated@@57 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@38 $generated@@57 $generated@@58))
))))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@27 $generated@@61) (= ($generated@@24 $generated@@25 $generated@@59 ($generated@@26 $generated@@60) $generated@@61)  (=> ($generated@@28 $generated@@60 $generated@@61 $generated@@59) (forall (($generated@@62 T@U) ) (!  (=> (and (or (not (= $generated@@62 $generated@@33)) (not true)) ($generated@@29 ($generated@@30 $generated@@60 $generated@@61 $generated@@59) ($generated@@31 $generated@@32 $generated@@62))) ($generated@@13 ($generated@@34 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@32 ($generated@@38 $generated@@36 $generated@@37) $generated@@61 $generated@@62) $generated@@1))))
 :pattern ( ($generated@@29 ($generated@@30 $generated@@60 $generated@@61 $generated@@59) ($generated@@31 $generated@@32 $generated@@62)))
)))))
 :pattern ( ($generated@@24 $generated@@25 $generated@@59 ($generated@@26 $generated@@60) $generated@@61))
)))
(assert (= ($generated@@63 $generated) $generated@@0))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (or $generated@@67 (and (< 1 $generated@@64) ($generated@@27 $generated@@73))) (and ($generated@@68 ($generated@@69 ($generated@@66 $generated@@70))) (= ($generated@@65 ($generated@@66 $generated@@72)) ($generated@@71 ($generated@@69 ($generated@@66 $generated@@70))))))
 :pattern ( ($generated@@65 ($generated@@66 $generated@@72)) ($generated@@27 $generated@@73))
))))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (or $generated@@67 (and (< 1 $generated@@64) ($generated@@27 $generated@@75))) (and ($generated@@68 ($generated@@69 ($generated@@66 $generated@@70))) (= ($generated@@65 ($generated@@66 $generated@@74)) ($generated@@71 ($generated@@69 ($generated@@66 $generated@@70))))))
 :weight 3
 :pattern ( ($generated@@65 ($generated@@66 $generated@@74)) ($generated@@27 $generated@@75))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@78 ($generated@@76 $generated@@77) $generated@@79) ($generated@@24 $generated@@25 $generated@@78 ($generated@@26 $generated@@77) $generated@@79))
 :pattern ( ($generated@@24 $generated@@25 $generated@@78 ($generated@@76 $generated@@77) $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@82 ($generated@@80 $generated@@81) $generated@@83) ($generated@@24 $generated@@25 $generated@@82 ($generated@@76 $generated@@81) $generated@@83))
 :pattern ( ($generated@@24 $generated@@25 $generated@@82 ($generated@@80 $generated@@81) $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@28 $generated $generated@@86 ($generated@@69 $generated@@85)) ($generated@@84 $generated@@85))
 :pattern ( ($generated@@28 $generated $generated@@86 ($generated@@69 $generated@@85)))
)))
(assert (forall (($generated@@88 T@U) ) (!  (not ($generated@@29 $generated@@87 $generated@@88))
 :pattern ( ($generated@@29 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 $generated@@90) $generated@@90)
 :pattern ( ($generated@@89 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@92 $generated $generated@@94 ($generated@@69 $generated@@93)) ($generated@@31 $generated@@10 ($generated@@14 ($generated@@65 $generated@@93))))
 :pattern ( ($generated@@92 $generated $generated@@94 ($generated@@69 $generated@@93)))
)))
(assert  (=> (<= 0 $generated@@64) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or ($generated@@68 $generated@@97) (and (< 0 $generated@@64) (and ($generated@@27 $generated@@96) ($generated@@95 $generated@@25 $generated@@97 ($generated@@80 $generated))))) (= ($generated@@71 $generated@@97) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@92 $generated $generated@@96 $generated@@97)))))
 :pattern ( ($generated@@71 $generated@@97) ($generated@@27 $generated@@96))
))))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@31 $generated@@99 ($generated@@34 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@34 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@103) ($generated@@95 $generated@@25 $generated@@104 ($generated@@26 $generated@@102))) ($generated@@101 ($generated@@30 $generated@@102 $generated@@100 $generated@@104) $generated@@87)) (= ($generated@@28 $generated@@102 $generated@@100 $generated@@104) ($generated@@28 $generated@@102 $generated@@103 $generated@@104)))
 :pattern ( ($generated@@28 $generated@@102 $generated@@100 $generated@@104) ($generated@@27 $generated@@103))
 :pattern ( ($generated@@28 $generated@@102 $generated@@103 $generated@@104))
)))
(assert ($generated@@27 $generated@@100))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@105 ($generated@@31 $generated@@109 $generated@@106) $generated@@107 $generated@@108) ($generated@@24 $generated@@109 $generated@@106 $generated@@107 $generated@@108))
 :pattern ( ($generated@@105 ($generated@@31 $generated@@109 $generated@@106) $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@111 T@U) ) (!  (and (= ($generated@@63 ($generated@@26 $generated@@111)) $generated@@2) (= ($generated@@110 ($generated@@26 $generated@@111)) $generated@@5))
 :pattern ( ($generated@@26 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (!  (and (= ($generated@@63 ($generated@@76 $generated@@112)) $generated@@3) (= ($generated@@110 ($generated@@76 $generated@@112)) $generated@@6))
 :pattern ( ($generated@@76 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (!  (and (= ($generated@@63 ($generated@@80 $generated@@113)) $generated@@4) (= ($generated@@110 ($generated@@80 $generated@@113)) $generated@@7))
 :pattern ( ($generated@@80 $generated@@113))
)))
(assert  (=> (<= 0 $generated@@64) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (or ($generated@@68 ($generated@@89 $generated@@25 $generated@@115)) (and (< 0 $generated@@64) (and ($generated@@27 $generated@@114) ($generated@@95 $generated@@25 $generated@@115 ($generated@@80 $generated))))) (= ($generated@@71 ($generated@@89 $generated@@25 $generated@@115)) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@92 $generated $generated@@114 ($generated@@89 $generated@@25 $generated@@115))))))
 :weight 3
 :pattern ( ($generated@@71 ($generated@@89 $generated@@25 $generated@@115)) ($generated@@27 $generated@@114))
))))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and ($generated@@27 $generated@@117) ($generated@@95 $generated@@25 $generated@@118 ($generated@@26 $generated@@116))) (= ($generated@@101 ($generated@@30 $generated@@116 $generated@@100 $generated@@118) $generated@@87) ($generated@@101 ($generated@@30 $generated@@116 $generated@@117 $generated@@118) $generated@@87)))
 :pattern ( ($generated@@30 $generated@@116 $generated@@100 $generated@@118) ($generated@@27 $generated@@117))
 :pattern ( ($generated@@30 $generated@@116 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@101 $generated@@119 $generated@@120) (= $generated@@119 $generated@@120))
 :pattern ( ($generated@@101 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@27 $generated@@122) (= ($generated@@84 $generated@@121) true))
 :pattern ( ($generated@@84 $generated@@121) ($generated@@27 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@123 $generated@@124 $generated) (and (= ($generated@@31 $generated@@10 ($generated@@34 $generated@@10 $generated@@124)) $generated@@124) ($generated@@95 $generated@@10 ($generated@@34 $generated@@10 $generated@@124) $generated)))
 :pattern ( ($generated@@123 $generated@@124 $generated))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@123 ($generated@@31 $generated@@127 $generated@@125) $generated@@126) ($generated@@95 $generated@@127 $generated@@125 $generated@@126))
 :pattern ( ($generated@@123 ($generated@@31 $generated@@127 $generated@@125) $generated@@126))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@26 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@26 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 ($generated@@76 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@76 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@132 ($generated@@80 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@80 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@34 $generated@@135 ($generated@@31 $generated@@135 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@31 $generated@@135 $generated@@134))
)))
(assert  (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@136 $generated@@139 $generated@@140 $generated@@141 ($generated@@138 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@144 $generated@@145) $generated@@142)
 :weight 0
)) (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@136 $generated@@146 $generated@@147 $generated@@148 ($generated@@138 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@136 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@136 $generated@@155 $generated@@156 $generated@@157 ($generated@@138 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@136 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@13 ($generated@@136 $generated@@32 $generated@@36 $generated@@9 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (or (not (= $generated@@168 $generated@@164)) (not true)) ($generated@@13 ($generated@@34 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@32 ($generated@@38 $generated@@36 $generated@@37) $generated@@165 $generated@@168) $generated@@166)))) $generated@@167))
 :pattern ( ($generated@@136 $generated@@32 $generated@@36 $generated@@9 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@95 $generated@@25 $generated@@171 ($generated@@80 $generated@@170))  (and ($generated@@95 $generated@@25 $generated@@171 ($generated@@76 $generated@@170)) ($generated@@28 $generated@@170 $generated@@100 $generated@@171)))
 :pattern ( ($generated@@95 $generated@@25 $generated@@171 ($generated@@80 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@65 ($generated@@66 $generated@@172)) ($generated@@65 $generated@@172))
 :pattern ( ($generated@@65 ($generated@@66 $generated@@172)))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@69 ($generated@@66 $generated@@173)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@69 ($generated@@66 $generated@@173)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@95 $generated@@25 $generated@@174 ($generated@@26 $generated@@175)) (forall (($generated@@176 T@U) ) (!  (=> (and ($generated@@27 $generated@@176) ($generated@@28 $generated@@175 $generated@@176 $generated@@174)) ($generated@@123 ($generated@@92 $generated@@175 $generated@@176 $generated@@174) $generated@@175))
 :pattern ( ($generated@@92 $generated@@175 $generated@@176 $generated@@174))
)))
 :pattern ( ($generated@@95 $generated@@25 $generated@@174 ($generated@@26 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@123 $generated@@178 ($generated@@26 $generated@@177)) (and (= ($generated@@31 $generated@@25 ($generated@@34 $generated@@25 $generated@@178)) $generated@@178) ($generated@@95 $generated@@25 ($generated@@34 $generated@@25 $generated@@178) ($generated@@26 $generated@@177))))
 :pattern ( ($generated@@123 $generated@@178 ($generated@@26 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@123 $generated@@180 ($generated@@76 $generated@@179)) (and (= ($generated@@31 $generated@@25 ($generated@@34 $generated@@25 $generated@@180)) $generated@@180) ($generated@@95 $generated@@25 ($generated@@34 $generated@@25 $generated@@180) ($generated@@76 $generated@@179))))
 :pattern ( ($generated@@123 $generated@@180 ($generated@@76 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@123 $generated@@182 ($generated@@80 $generated@@181)) (and (= ($generated@@31 $generated@@25 ($generated@@34 $generated@@25 $generated@@182)) $generated@@182) ($generated@@95 $generated@@25 ($generated@@34 $generated@@25 $generated@@182) ($generated@@80 $generated@@181))))
 :pattern ( ($generated@@123 $generated@@182 ($generated@@80 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and ($generated@@27 $generated@@185) ($generated@@24 $generated@@25 $generated@@183 ($generated@@26 $generated@@184) $generated@@185)) (=> ($generated@@28 $generated@@184 $generated@@185 $generated@@183) ($generated@@105 ($generated@@92 $generated@@184 $generated@@185 $generated@@183) $generated@@184 $generated@@185)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@183 ($generated@@26 $generated@@184) $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@101 $generated@@186 $generated@@187) (forall (($generated@@188 T@U) ) (! (= ($generated@@29 $generated@@186 $generated@@188) ($generated@@29 $generated@@187 $generated@@188))
 :pattern ( ($generated@@29 $generated@@186 $generated@@188))
 :pattern ( ($generated@@29 $generated@@187 $generated@@188))
)))
 :pattern ( ($generated@@101 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and ($generated@@95 $generated@@25 $generated@@189 ($generated@@26 $generated@@190)) (forall (($generated@@192 T@U) ) (!  (=> ($generated@@123 $generated@@192 $generated@@190) ($generated@@123 $generated@@192 $generated@@191))
 :pattern ( ($generated@@123 $generated@@192 $generated@@190))
 :pattern ( ($generated@@123 $generated@@192 $generated@@191))
))) ($generated@@95 $generated@@25 $generated@@189 ($generated@@26 $generated@@191)))
 :pattern ( ($generated@@95 $generated@@25 $generated@@189 ($generated@@26 $generated@@190)) ($generated@@95 $generated@@25 $generated@@189 ($generated@@26 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@65 $generated@@193) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@92 $generated $generated@@194 ($generated@@69 $generated@@193)))))
 :pattern ( ($generated@@65 $generated@@193) ($generated@@27 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@T) ) (! (= ($generated@@31 $generated@@196 ($generated@@89 $generated@@196 $generated@@195)) ($generated@@89 $generated@@37 ($generated@@31 $generated@@196 $generated@@195)))
 :pattern ( ($generated@@31 $generated@@196 ($generated@@89 $generated@@196 $generated@@195)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! ($generated@@24 $generated@@10 $generated@@198 $generated $generated@@197)
 :pattern ( ($generated@@24 $generated@@10 $generated@@198 $generated $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@29 ($generated@@30 $generated $generated@@201 ($generated@@69 $generated@@200)) $generated@@199) false)
 :pattern ( ($generated@@29 ($generated@@30 $generated $generated@@201 ($generated@@69 $generated@@200)) $generated@@199))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@95 $generated@@25 $generated@@203 ($generated@@76 $generated@@202))  (and ($generated@@95 $generated@@25 $generated@@203 ($generated@@26 $generated@@202)) ($generated@@101 ($generated@@30 $generated@@202 $generated@@100 $generated@@203) $generated@@87)))
 :pattern ( ($generated@@95 $generated@@25 $generated@@203 ($generated@@76 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ) (! ($generated@@95 $generated@@10 $generated@@204 $generated)
 :pattern ( ($generated@@95 $generated@@10 $generated@@204 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@208  (=> (= (ControlFlow 0 3) (- 0 2)) (or (not (= 1 $generated@@64)) (not true)))))
(let (($generated@@209 true))
(let (($generated@@210  (=> (= $generated@@205 ($generated@@137 $generated@@33 $generated@@206 $generated@@1 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@209) (=> (= (ControlFlow 0 4) 3) $generated@@208)))))
(let (($generated@@211  (=> (and (and ($generated@@27 $generated@@206) ($generated@@207 $generated@@206)) (and (= 1 $generated@@64) (= (ControlFlow 0 5) 4))) $generated@@210)))
$generated@@211)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
