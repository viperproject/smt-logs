(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U Int) T@U)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@73 (T@U) Int)
(declare-fun $generated@@78 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@82 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@140 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (= ($generated@@8 $generated@@30) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 Int) ) (!  (=> (and (<= 0 $generated@@33) (< $generated@@33 ($generated@@27 $generated@@31))) (< ($generated@@28 ($generated@@29 $generated@@30 ($generated@@25 $generated@@31 $generated@@33))) ($generated@@28 ($generated@@26 $generated@@31 $generated@@32))))
 :pattern ( ($generated@@25 $generated@@31 $generated@@33) ($generated@@26 $generated@@31 $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 Int) ) (!  (=> (and (<= 0 $generated@@36) (< $generated@@36 ($generated@@27 $generated@@35))) (< ($generated@@28 ($generated@@29 $generated@@30 ($generated@@25 $generated@@35 $generated@@36))) ($generated@@28 ($generated@@26 $generated@@34 $generated@@35))))
 :pattern ( ($generated@@25 $generated@@35 $generated@@36) ($generated@@26 $generated@@34 $generated@@35))
)))
(assert (= ($generated@@27 $generated@@37) 0))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@38 $generated@@40 $generated@@39) $generated@@39)
 :pattern ( ($generated@@38 $generated@@40 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 ($generated@@29 $generated@@43 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@29 $generated@@43 $generated@@42))
)))
(assert (= ($generated@@8 $generated@@46) 4))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@44 $generated@@30 ($generated@@26 $generated@@48 $generated@@49) $generated@@45)  (and ($generated@@44 $generated@@46 $generated@@48 ($generated@@47 $generated)) ($generated@@44 $generated@@46 $generated@@49 ($generated@@47 $generated))))
 :pattern ( ($generated@@44 $generated@@30 ($generated@@26 $generated@@48 $generated@@49) $generated@@45))
)))
(assert (forall (($generated@@52 T@U) ) (!  (=> ($generated@@50 $generated@@52 $generated@@51) (and (= ($generated@@41 $generated@@30 ($generated@@29 $generated@@30 $generated@@52)) $generated@@52) ($generated@@44 $generated@@30 ($generated@@29 $generated@@30 $generated@@52) $generated@@51)))
 :pattern ( ($generated@@50 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (!  (=> ($generated@@50 $generated@@53 $generated@@45) (and (= ($generated@@41 $generated@@30 ($generated@@29 $generated@@30 $generated@@53)) $generated@@53) ($generated@@44 $generated@@30 ($generated@@29 $generated@@30 $generated@@53) $generated@@45)))
 :pattern ( ($generated@@50 $generated@@53 $generated@@45))
)))
(assert (forall (($generated@@54 T@U) ) (!  (=> ($generated@@50 $generated@@54 $generated) (and (= ($generated@@41 $generated@@10 ($generated@@29 $generated@@10 $generated@@54)) $generated@@54) ($generated@@44 $generated@@10 ($generated@@29 $generated@@10 $generated@@54) $generated)))
 :pattern ( ($generated@@50 $generated@@54 $generated))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@50 ($generated@@41 $generated@@57 $generated@@55) $generated@@56) ($generated@@44 $generated@@57 $generated@@55 $generated@@56))
 :pattern ( ($generated@@50 ($generated@@41 $generated@@57 $generated@@55) $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (! (<= 0 ($generated@@27 $generated@@58))
 :pattern ( ($generated@@27 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@59 ($generated@@26 $generated@@60 $generated@@61)) $generated@@4)
 :pattern ( ($generated@@26 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@62 ($generated@@26 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@26 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@65 ($generated@@26 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@26 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@68 ($generated@@47 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@47 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@24 ($generated@@47 $generated@@70)) $generated@@1)
 :pattern ( ($generated@@47 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@29 $generated@@72 ($generated@@41 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@41 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (< ($generated@@73 $generated@@74) ($generated@@28 ($generated@@26 $generated@@74 $generated@@75)))
 :pattern ( ($generated@@26 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (< ($generated@@73 $generated@@77) ($generated@@28 ($generated@@26 $generated@@76 $generated@@77)))
 :pattern ( ($generated@@26 $generated@@76 $generated@@77))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@78 $generated@@89 $generated@@90 $generated@@91 ($generated@@85 $generated@@89 $generated@@90 $generated@@91 $generated@@93 $generated@@94 $generated@@95 $generated@@92) $generated@@94 $generated@@95) $generated@@92)
 :weight 0
)) (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (or (= $generated@@101 $generated@@103) (= ($generated@@78 $generated@@96 $generated@@97 $generated@@98 ($generated@@85 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@102 $generated@@99) $generated@@103 $generated@@104) ($generated@@78 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@103 $generated@@104)))
 :weight 0
)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@111 $generated@@113) (= ($generated@@78 $generated@@105 $generated@@106 $generated@@107 ($generated@@85 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@112 $generated@@113) ($generated@@78 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@112 $generated@@113)))
 :weight 0
)))) (= ($generated@@8 $generated@@79) 5)) (= ($generated@@8 $generated@@80) 6)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@82 $generated@@114 $generated@@115 ($generated@@86 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@116) $generated@@118) $generated@@116)
 :weight 0
))) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@82 $generated@@119 $generated@@120 ($generated@@86 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@82 $generated@@119 $generated@@120 $generated@@122 $generated@@124)))
 :weight 0
))) (= ($generated@@8 $generated@@83) 7)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (= ($generated@@8 ($generated@@84 $generated@@125 $generated@@126)) 8))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@127 $generated@@128)) $generated@@127)
 :pattern ( ($generated@@84 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@T) ($generated@@130 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@129 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@84 $generated@@129 $generated@@130))
))))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 Bool) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@13 ($generated@@78 $generated@@79 $generated@@80 $generated@@9 ($generated@@81 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))  (=> (and (or (not (= $generated@@135 $generated@@131)) (not true)) ($generated@@13 ($generated@@29 $generated@@9 ($generated@@82 $generated@@80 $generated@@83 ($generated@@82 $generated@@79 ($generated@@84 $generated@@80 $generated@@83) $generated@@132 $generated@@135) $generated@@133)))) $generated@@134))
 :pattern ( ($generated@@78 $generated@@79 $generated@@80 $generated@@9 ($generated@@81 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@44 $generated@@30 $generated@@137 $generated@@51)  (and ($generated@@44 $generated@@30 $generated@@137 $generated@@45) (= ($generated@@27 ($generated@@62 $generated@@137)) ($generated@@27 ($generated@@65 $generated@@137)))))
 :pattern ( ($generated@@44 $generated@@30 $generated@@137 $generated@@51))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> ($generated@@50 $generated@@138 ($generated@@47 $generated@@139)) (and (= ($generated@@41 $generated@@46 ($generated@@29 $generated@@46 $generated@@138)) $generated@@138) ($generated@@44 $generated@@46 ($generated@@29 $generated@@46 $generated@@138) ($generated@@47 $generated@@139))))
 :pattern ( ($generated@@50 $generated@@138 ($generated@@47 $generated@@139)))
)))
(assert (= ($generated@@24 $generated@@51) $generated@@3))
(assert (= ($generated@@140 $generated@@51) $generated@@6))
(assert (= ($generated@@24 $generated@@45) $generated@@5))
(assert (= ($generated@@140 $generated@@45) $generated@@7))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@26 ($generated@@38 $generated@@46 $generated@@141) ($generated@@38 $generated@@46 $generated@@142)) ($generated@@38 $generated@@30 ($generated@@26 $generated@@141 $generated@@142)))
 :pattern ( ($generated@@26 ($generated@@38 $generated@@46 $generated@@141) ($generated@@38 $generated@@46 $generated@@142)))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@41 $generated@@144 ($generated@@38 $generated@@144 $generated@@143)) ($generated@@38 $generated@@83 ($generated@@41 $generated@@144 $generated@@143)))
 :pattern ( ($generated@@41 $generated@@144 ($generated@@38 $generated@@144 $generated@@143)))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= ($generated@@27 $generated@@145) 0) (= $generated@@145 $generated@@37))
 :pattern ( ($generated@@27 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@44 $generated@@46 $generated@@146 ($generated@@47 $generated@@147)) (forall (($generated@@148 Int) ) (!  (=> (and (<= 0 $generated@@148) (< $generated@@148 ($generated@@27 $generated@@146))) ($generated@@50 ($generated@@25 $generated@@146 $generated@@148) $generated@@147))
 :pattern ( ($generated@@25 $generated@@146 $generated@@148))
)))
 :pattern ( ($generated@@44 $generated@@46 $generated@@146 ($generated@@47 $generated@@147)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 Int) ) (!  (=> (and (<= 0 $generated@@150) (< $generated@@150 ($generated@@27 $generated@@149))) (< ($generated@@28 ($generated@@29 $generated@@30 ($generated@@25 $generated@@149 $generated@@150))) ($generated@@73 $generated@@149)))
 :pattern ( ($generated@@28 ($generated@@29 $generated@@30 ($generated@@25 $generated@@149 $generated@@150))))
)))
(assert (forall (($generated@@151 T@U) ) (! ($generated@@44 $generated@@10 $generated@@151 $generated)
 :pattern ( ($generated@@44 $generated@@10 $generated@@151 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@158  (=> (and (= $generated@@152 ($generated@@81 $generated@@153 $generated@@154 $generated@@2 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@44 $generated@@30 ($generated@@38 $generated@@30 ($generated@@26 ($generated@@38 $generated@@46 $generated@@37) ($generated@@38 $generated@@46 $generated@@37))) $generated@@51))))
(let (($generated@@159  (=> (and (and ($generated@@155 $generated@@154) ($generated@@156 $generated@@154)) (and (= 2 $generated@@157) (= (ControlFlow 0 3) 2))) $generated@@158)))
$generated@@159)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
