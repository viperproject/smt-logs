(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 (T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (Bool T@U T@U) Bool)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@140 (T@U Int) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@159 (T@U) Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@172 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@174 () T@T)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated) $generated@@2))
(assert (= ($generated@@28 $generated@@0) $generated@@3))
(assert (= ($generated@@28 $generated@@1) $generated@@4))
(assert (= ($generated@@12 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@35 ($generated@@32 $generated@@33 $generated@@34)) ($generated@@29 $generated@@35))
 :pattern ( ($generated@@29 $generated@@35) ($generated@@30 $generated@@31 $generated@@35 ($generated@@32 $generated@@33 $generated@@34)))
)))
(assert (= ($generated@@36 $generated@@37) 0))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@38 $generated@@42 $generated@@43) ($generated@@32 $generated@@40 $generated@@41))  (and ($generated@@39 $generated@@42 $generated@@40) ($generated@@39 $generated@@43 $generated@@41)))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@38 $generated@@42 $generated@@43) ($generated@@32 $generated@@40 $generated@@41)))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> ($generated@@48 $generated@@54) (= ($generated@@47 $generated@@31 ($generated@@38 $generated@@52 $generated@@53) ($generated@@32 $generated@@50 $generated@@51) $generated@@54)  (and ($generated@@49 $generated@@52 $generated@@50 $generated@@54) ($generated@@49 $generated@@53 $generated@@51 $generated@@54))))
 :pattern ( ($generated@@47 $generated@@31 ($generated@@38 $generated@@52 $generated@@53) ($generated@@32 $generated@@50 $generated@@51) $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@29 $generated@@56) (= ($generated@@55 $generated@@56) $generated@@9))
 :pattern ( ($generated@@29 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@58 $generated@@60 ($generated@@57 $generated@@60 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@57 $generated@@60 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@29 $generated@@61) (exists (($generated@@62 T@U) ($generated@@63 T@U) ) (= $generated@@61 ($generated@@38 $generated@@62 $generated@@63))))
 :pattern ( ($generated@@29 $generated@@61))
)))
(assert (= ($generated@@12 $generated@@64) 4))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@30 $generated@@64 $generated@@67 ($generated@@65 $generated@@68)) (forall (($generated@@69 T@U) ) (!  (=> ($generated@@66 $generated@@67 $generated@@69) ($generated@@39 $generated@@69 $generated@@68))
 :pattern ( ($generated@@66 $generated@@67 $generated@@69))
)))
 :pattern ( ($generated@@30 $generated@@64 $generated@@67 ($generated@@65 $generated@@68)))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@49 ($generated@@58 $generated@@73 $generated@@70) $generated@@71 $generated@@72) ($generated@@47 $generated@@73 $generated@@70 $generated@@71 $generated@@72))
 :pattern ( ($generated@@49 ($generated@@58 $generated@@73 $generated@@70) $generated@@71 $generated@@72))
)))
(assert  (and (and (and (and (= ($generated@@12 $generated@@76) 5) (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@82 $generated@@87 $generated@@88 ($generated@@86 $generated@@87 $generated@@88 $generated@@90 $generated@@91 $generated@@89) $generated@@91) $generated@@89)
 :weight 0
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (or (= $generated@@96 $generated@@97) (= ($generated@@82 $generated@@92 $generated@@93 ($generated@@86 $generated@@92 $generated@@93 $generated@@95 $generated@@96 $generated@@94) $generated@@97) ($generated@@82 $generated@@92 $generated@@93 $generated@@95 $generated@@97)))
 :weight 0
))) (= ($generated@@12 $generated@@83) 6)) (= ($generated@@12 $generated@@85) 7)))
(assert  (=> (<= 0 $generated@@74) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (or ($generated@@77 ($generated@@44 $generated@@76 $generated@@98) ($generated@@44 $generated@@76 $generated@@99)) (and (< 0 $generated@@74) (and ($generated@@30 $generated@@76 $generated@@98 ($generated@@78 ($generated@@79 $generated@@0) $generated@@1)) ($generated@@30 $generated@@76 $generated@@99 ($generated@@78 ($generated@@79 $generated@@0) $generated@@1))))) (= ($generated@@75 true ($generated@@44 $generated@@76 $generated@@98) ($generated@@44 $generated@@76 $generated@@99))  (and ($generated@@80 ($generated@@81 ($generated@@44 $generated@@76 $generated@@98)) ($generated@@81 ($generated@@44 $generated@@76 $generated@@99))) (forall (($generated@@100 T@U) ) (!  (=> (and ($generated@@30 $generated@@85 $generated@@100 ($generated@@79 $generated@@0)) ($generated@@66 ($generated@@44 $generated@@64 ($generated@@81 ($generated@@44 $generated@@76 $generated@@98))) ($generated@@58 $generated@@85 $generated@@100))) (= ($generated@@19 ($generated@@57 $generated@@14 ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 ($generated@@44 $generated@@76 $generated@@98)) ($generated@@58 $generated@@85 $generated@@100)))) ($generated@@19 ($generated@@57 $generated@@14 ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 ($generated@@44 $generated@@76 $generated@@99)) ($generated@@58 $generated@@85 $generated@@100))))))
 :pattern ( ($generated@@57 $generated@@14 ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@99) ($generated@@58 $generated@@85 $generated@@100))))
 :pattern ( ($generated@@57 $generated@@14 ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@98) ($generated@@58 $generated@@85 $generated@@100))))
 :pattern ( ($generated@@66 ($generated@@81 $generated@@98) ($generated@@58 $generated@@85 $generated@@100)))
)))))
 :weight 3
 :pattern ( ($generated@@75 true ($generated@@44 $generated@@76 $generated@@98) ($generated@@44 $generated@@76 $generated@@99)))
))))
(assert  (=> (<= 0 $generated@@74) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@77 $generated@@101 $generated@@102) (and (< 0 $generated@@74) (and ($generated@@30 $generated@@76 $generated@@101 ($generated@@78 ($generated@@79 $generated@@0) $generated@@1)) ($generated@@30 $generated@@76 $generated@@102 ($generated@@78 ($generated@@79 $generated@@0) $generated@@1))))) (= ($generated@@75 true $generated@@101 $generated@@102)  (and ($generated@@80 ($generated@@81 $generated@@101) ($generated@@81 $generated@@102)) (forall (($generated@@103 T@U) ) (!  (=> (and ($generated@@30 $generated@@85 $generated@@103 ($generated@@79 $generated@@0)) ($generated@@66 ($generated@@81 $generated@@101) ($generated@@58 $generated@@85 $generated@@103))) (= ($generated@@19 ($generated@@57 $generated@@14 ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@101) ($generated@@58 $generated@@85 $generated@@103)))) ($generated@@19 ($generated@@57 $generated@@14 ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@102) ($generated@@58 $generated@@85 $generated@@103))))))
 :pattern ( ($generated@@57 $generated@@14 ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@102) ($generated@@58 $generated@@85 $generated@@103))))
 :pattern ( ($generated@@57 $generated@@14 ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@101) ($generated@@58 $generated@@85 $generated@@103))))
 :pattern ( ($generated@@66 ($generated@@81 $generated@@101) ($generated@@58 $generated@@85 $generated@@103)))
)))))
 :pattern ( ($generated@@75 true $generated@@101 $generated@@102))
))))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> ($generated@@80 $generated@@104 $generated@@105) (= $generated@@104 $generated@@105))
 :pattern ( ($generated@@80 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@39 $generated@@106 $generated@@1) (and (= ($generated@@58 $generated@@14 ($generated@@57 $generated@@14 $generated@@106)) $generated@@106) ($generated@@30 $generated@@14 ($generated@@57 $generated@@14 $generated@@106) $generated@@1)))
 :pattern ( ($generated@@39 $generated@@106 $generated@@1))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@39 $generated@@107 $generated) (and (= ($generated@@58 $generated@@13 ($generated@@57 $generated@@13 $generated@@107)) $generated@@107) ($generated@@30 $generated@@13 ($generated@@57 $generated@@13 $generated@@107) $generated)))
 :pattern ( ($generated@@39 $generated@@107 $generated))
)))
(assert (= ($generated@@12 $generated@@108) 8))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@39 $generated@@109 $generated@@0) (and (= ($generated@@58 $generated@@108 ($generated@@57 $generated@@108 $generated@@109)) $generated@@109) ($generated@@30 $generated@@108 ($generated@@57 $generated@@108 $generated@@109) $generated@@0)))
 :pattern ( ($generated@@39 $generated@@109 $generated@@0))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@39 ($generated@@58 $generated@@112 $generated@@110) $generated@@111) ($generated@@30 $generated@@112 $generated@@110 $generated@@111))
 :pattern ( ($generated@@39 ($generated@@58 $generated@@112 $generated@@110) $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ) (! (<= 0 ($generated@@36 $generated@@113))
 :pattern ( ($generated@@36 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@47 $generated@@64 $generated@@114 ($generated@@65 $generated@@115) $generated@@116) (forall (($generated@@117 T@U) ) (!  (=> ($generated@@66 $generated@@114 $generated@@117) ($generated@@49 $generated@@117 $generated@@115 $generated@@116))
 :pattern ( ($generated@@66 $generated@@114 $generated@@117))
)))
 :pattern ( ($generated@@47 $generated@@64 $generated@@114 ($generated@@65 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@118 ($generated@@78 $generated@@119 $generated@@120)) $generated@@119)
 :pattern ( ($generated@@78 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@121 ($generated@@78 $generated@@122 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@78 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@28 ($generated@@78 $generated@@124 $generated@@125)) $generated@@7)
 :pattern ( ($generated@@78 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@55 ($generated@@38 $generated@@126 $generated@@127)) $generated@@9)
 :pattern ( ($generated@@38 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@128 ($generated@@32 $generated@@129 $generated@@130)) $generated@@129)
 :pattern ( ($generated@@32 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@131 ($generated@@32 $generated@@132 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@32 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@134 ($generated@@38 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@38 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@137 ($generated@@38 $generated@@138 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@38 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@47 $generated@@85 $generated@@141 ($generated@@79 $generated@@142) $generated@@143) (forall (($generated@@144 Int) ) (!  (=> (and (<= 0 $generated@@144) (< $generated@@144 ($generated@@36 $generated@@141))) ($generated@@49 ($generated@@140 $generated@@141 $generated@@144) $generated@@142 $generated@@143))
 :pattern ( ($generated@@140 $generated@@141 $generated@@144))
)))
 :pattern ( ($generated@@47 $generated@@85 $generated@@141 ($generated@@79 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@65 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@65 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@28 ($generated@@65 $generated@@147)) $generated@@5)
 :pattern ( ($generated@@65 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@79 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@79 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@28 ($generated@@79 $generated@@150)) $generated@@6)
 :pattern ( ($generated@@79 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@57 $generated@@152 ($generated@@58 $generated@@152 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@58 $generated@@152 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@47 $generated@@76 $generated@@153 ($generated@@78 $generated@@154 $generated@@155) $generated@@156) (forall (($generated@@157 T@U) ) (!  (=> ($generated@@66 ($generated@@81 $generated@@153) $generated@@157) (and ($generated@@49 ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@153) $generated@@157) $generated@@155 $generated@@156) ($generated@@49 $generated@@157 $generated@@154 $generated@@156)))
 :pattern ( ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@153) $generated@@157))
 :pattern ( ($generated@@66 ($generated@@81 $generated@@153) $generated@@157))
)))
 :pattern ( ($generated@@47 $generated@@76 $generated@@153 ($generated@@78 $generated@@154 $generated@@155) $generated@@156))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (< ($generated@@158 $generated@@160) ($generated@@159 ($generated@@38 $generated@@160 $generated@@161)))
 :pattern ( ($generated@@38 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (< ($generated@@158 $generated@@163) ($generated@@159 ($generated@@38 $generated@@162 $generated@@163)))
 :pattern ( ($generated@@38 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (!  (not ($generated@@66 ($generated@@81 $generated@@164) $generated@@165))
 :pattern ( ($generated@@66 ($generated@@81 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> ($generated@@39 $generated@@166 ($generated@@78 $generated@@167 $generated@@168)) (and (= ($generated@@58 $generated@@76 ($generated@@57 $generated@@76 $generated@@166)) $generated@@166) ($generated@@30 $generated@@76 ($generated@@57 $generated@@76 $generated@@166) ($generated@@78 $generated@@167 $generated@@168))))
 :pattern ( ($generated@@39 $generated@@166 ($generated@@78 $generated@@167 $generated@@168)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> ($generated@@39 $generated@@171 ($generated@@32 $generated@@169 $generated@@170)) (and (= ($generated@@58 $generated@@31 ($generated@@57 $generated@@31 $generated@@171)) $generated@@171) ($generated@@30 $generated@@31 ($generated@@57 $generated@@31 $generated@@171) ($generated@@32 $generated@@169 $generated@@170))))
 :pattern ( ($generated@@39 $generated@@171 ($generated@@32 $generated@@169 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@172 $generated@@180 $generated@@181 $generated@@182 ($generated@@177 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@185 $generated@@186) $generated@@183)
 :weight 0
)) (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@172 $generated@@187 $generated@@188 $generated@@189 ($generated@@177 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@172 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@172 $generated@@196 $generated@@197 $generated@@198 ($generated@@177 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (= ($generated@@12 $generated@@173) 9)) (= ($generated@@12 $generated@@174) 10)) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (= ($generated@@12 ($generated@@176 $generated@@205 $generated@@206)) 11))) (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@207 $generated@@208)) $generated@@207)
 :pattern ( ($generated@@176 $generated@@207 $generated@@208))
))) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@179 ($generated@@176 $generated@@209 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@176 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (= ($generated@@17 ($generated@@172 $generated@@173 $generated@@174 $generated@@13 ($generated@@175 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (or (not (= $generated@@215 $generated@@211)) (not true)) ($generated@@17 ($generated@@57 $generated@@13 ($generated@@82 $generated@@174 $generated@@83 ($generated@@82 $generated@@173 ($generated@@176 $generated@@174 $generated@@83) $generated@@212 $generated@@215) $generated@@213)))) $generated@@214))
 :pattern ( ($generated@@172 $generated@@173 $generated@@174 $generated@@13 ($generated@@175 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (and (= ($generated@@28 ($generated@@32 $generated@@218 $generated@@219)) $generated@@10) (= ($generated@@217 ($generated@@32 $generated@@218 $generated@@219)) $generated@@11))
 :pattern ( ($generated@@32 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ) (!  (or (= $generated@@220 $generated@@164) (exists (($generated@@221 T@U) ) ($generated@@66 ($generated@@81 $generated@@220) $generated@@221)))
 :pattern ( ($generated@@81 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ) (!  (or (= $generated@@223 $generated@@164) (exists (($generated@@224 T@U) ) ($generated@@66 ($generated@@222 $generated@@223) $generated@@224)))
 :pattern ( ($generated@@222 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= ($generated@@66 ($generated@@225 $generated@@226) $generated@@227)  (and ($generated@@66 ($generated@@81 $generated@@226) ($generated@@134 ($generated@@57 $generated@@31 $generated@@227))) (= ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@226) ($generated@@134 ($generated@@57 $generated@@31 $generated@@227))) ($generated@@137 ($generated@@57 $generated@@31 $generated@@227)))))
 :pattern ( ($generated@@66 ($generated@@225 $generated@@226) $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! (= ($generated@@66 ($generated@@222 $generated@@228) $generated@@229) (exists (($generated@@230 T@U) ) (!  (and ($generated@@66 ($generated@@81 $generated@@228) $generated@@230) (= $generated@@229 ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@228) $generated@@230)))
 :pattern ( ($generated@@66 ($generated@@81 $generated@@228) $generated@@230))
 :pattern ( ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@228) $generated@@230))
)))
 :pattern ( ($generated@@66 ($generated@@222 $generated@@228) $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= ($generated@@158 ($generated@@58 $generated@@31 $generated@@231)) ($generated@@159 $generated@@231))
 :pattern ( ($generated@@158 ($generated@@58 $generated@@31 $generated@@231)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> ($generated@@39 $generated@@232 ($generated@@65 $generated@@233)) (and (= ($generated@@58 $generated@@64 ($generated@@57 $generated@@64 $generated@@232)) $generated@@232) ($generated@@30 $generated@@64 ($generated@@57 $generated@@64 $generated@@232) ($generated@@65 $generated@@233))))
 :pattern ( ($generated@@39 $generated@@232 ($generated@@65 $generated@@233)))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> ($generated@@39 $generated@@234 ($generated@@79 $generated@@235)) (and (= ($generated@@58 $generated@@85 ($generated@@57 $generated@@85 $generated@@234)) $generated@@234) ($generated@@30 $generated@@85 ($generated@@57 $generated@@85 $generated@@234) ($generated@@79 $generated@@235))))
 :pattern ( ($generated@@39 $generated@@234 ($generated@@79 $generated@@235)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (= ($generated@@30 $generated@@76 $generated@@236 ($generated@@78 $generated@@237 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> ($generated@@66 ($generated@@81 $generated@@236) $generated@@239) (and ($generated@@39 ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@236) $generated@@239) $generated@@238) ($generated@@39 $generated@@239 $generated@@237)))
 :pattern ( ($generated@@82 $generated@@83 $generated@@83 ($generated@@84 $generated@@236) $generated@@239))
 :pattern ( ($generated@@66 ($generated@@81 $generated@@236) $generated@@239))
)))
 :pattern ( ($generated@@30 $generated@@76 $generated@@236 ($generated@@78 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= ($generated@@80 $generated@@240 $generated@@241) (forall (($generated@@242 T@U) ) (! (= ($generated@@66 $generated@@240 $generated@@242) ($generated@@66 $generated@@241 $generated@@242))
 :pattern ( ($generated@@66 $generated@@240 $generated@@242))
 :pattern ( ($generated@@66 $generated@@241 $generated@@242))
)))
 :pattern ( ($generated@@80 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and ($generated@@48 $generated@@245) (and ($generated@@29 $generated@@243) (exists (($generated@@246 T@U) ) (! ($generated@@47 $generated@@31 $generated@@243 ($generated@@32 $generated@@244 $generated@@246) $generated@@245)
 :pattern ( ($generated@@47 $generated@@31 $generated@@243 ($generated@@32 $generated@@244 $generated@@246) $generated@@245))
)))) ($generated@@49 ($generated@@134 $generated@@243) $generated@@244 $generated@@245))
 :pattern ( ($generated@@49 ($generated@@134 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and ($generated@@48 $generated@@249) (and ($generated@@29 $generated@@247) (exists (($generated@@250 T@U) ) (! ($generated@@47 $generated@@31 $generated@@247 ($generated@@32 $generated@@250 $generated@@248) $generated@@249)
 :pattern ( ($generated@@47 $generated@@31 $generated@@247 ($generated@@32 $generated@@250 $generated@@248) $generated@@249))
)))) ($generated@@49 ($generated@@137 $generated@@247) $generated@@248 $generated@@249))
 :pattern ( ($generated@@49 ($generated@@137 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= ($generated@@38 ($generated@@44 $generated@@83 $generated@@251) ($generated@@44 $generated@@83 $generated@@252)) ($generated@@44 $generated@@31 ($generated@@38 $generated@@251 $generated@@252)))
 :pattern ( ($generated@@38 ($generated@@44 $generated@@83 $generated@@251) ($generated@@44 $generated@@83 $generated@@252)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@T) ) (! (= ($generated@@58 $generated@@254 ($generated@@44 $generated@@254 $generated@@253)) ($generated@@44 $generated@@83 ($generated@@58 $generated@@254 $generated@@253)))
 :pattern ( ($generated@@58 $generated@@254 ($generated@@44 $generated@@254 $generated@@253)))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= ($generated@@36 $generated@@255) 0) (= $generated@@255 $generated@@37))
 :pattern ( ($generated@@36 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! ($generated@@47 $generated@@14 $generated@@257 $generated@@1 $generated@@256)
 :pattern ( ($generated@@47 $generated@@14 $generated@@257 $generated@@1 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! ($generated@@47 $generated@@13 $generated@@259 $generated $generated@@258)
 :pattern ( ($generated@@47 $generated@@13 $generated@@259 $generated $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! ($generated@@47 $generated@@108 $generated@@261 $generated@@0 $generated@@260)
 :pattern ( ($generated@@47 $generated@@108 $generated@@261 $generated@@0 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= ($generated@@30 $generated@@85 $generated@@262 ($generated@@79 $generated@@263)) (forall (($generated@@264 Int) ) (!  (=> (and (<= 0 $generated@@264) (< $generated@@264 ($generated@@36 $generated@@262))) ($generated@@39 ($generated@@140 $generated@@262 $generated@@264) $generated@@263))
 :pattern ( ($generated@@140 $generated@@262 $generated@@264))
)))
 :pattern ( ($generated@@30 $generated@@85 $generated@@262 ($generated@@79 $generated@@263)))
)))
(assert (forall (($generated@@265 T@U) ) (!  (or (= $generated@@265 $generated@@164) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) ($generated@@66 ($generated@@225 $generated@@265) ($generated@@58 $generated@@31 ($generated@@38 $generated@@266 $generated@@267)))))
 :pattern ( ($generated@@225 $generated@@265))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 Int) ) (!  (=> (and (<= 0 $generated@@270) (< $generated@@270 ($generated@@36 $generated@@269))) (< ($generated@@159 ($generated@@57 $generated@@31 ($generated@@140 $generated@@269 $generated@@270))) ($generated@@268 $generated@@269)))
 :pattern ( ($generated@@159 ($generated@@57 $generated@@31 ($generated@@140 $generated@@269 $generated@@270))))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> ($generated@@30 $generated@@76 $generated@@271 ($generated@@78 $generated@@272 $generated@@273)) (and (and ($generated@@30 $generated@@64 ($generated@@81 $generated@@271) ($generated@@65 $generated@@272)) ($generated@@30 $generated@@64 ($generated@@222 $generated@@271) ($generated@@65 $generated@@273))) ($generated@@30 $generated@@64 ($generated@@225 $generated@@271) ($generated@@65 ($generated@@32 $generated@@272 $generated@@273)))))
 :pattern ( ($generated@@30 $generated@@76 $generated@@271 ($generated@@78 $generated@@272 $generated@@273)))
)))
(assert (forall (($generated@@274 T@U) ) (! ($generated@@30 $generated@@14 $generated@@274 $generated@@1)
 :pattern ( ($generated@@30 $generated@@14 $generated@@274 $generated@@1))
)))
(assert (forall (($generated@@275 T@U) ) (! ($generated@@30 $generated@@13 $generated@@275 $generated)
 :pattern ( ($generated@@30 $generated@@13 $generated@@275 $generated))
)))
(assert (forall (($generated@@276 T@U) ) (! ($generated@@30 $generated@@108 $generated@@276 $generated@@0)
 :pattern ( ($generated@@30 $generated@@108 $generated@@276 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@283 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@284 true))
(let (($generated@@285  (=> (and (not ($generated@@66 ($generated@@81 $generated@@277) ($generated@@58 $generated@@85 $generated@@278))) (= (ControlFlow 0 8) 2)) $generated@@284)))
(let (($generated@@286  (=> ($generated@@66 ($generated@@81 $generated@@277) ($generated@@58 $generated@@85 $generated@@278)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@66 ($generated@@81 $generated@@277) ($generated@@58 $generated@@85 $generated@@278))) (=> ($generated@@66 ($generated@@81 $generated@@277) ($generated@@58 $generated@@85 $generated@@278)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@66 ($generated@@81 $generated@@279) ($generated@@58 $generated@@85 $generated@@278))) (=> ($generated@@66 ($generated@@81 $generated@@279) ($generated@@58 $generated@@85 $generated@@278)) (=> (= (ControlFlow 0 5) 2) $generated@@284))))))))
(let (($generated@@287  (=> (and ($generated@@30 $generated@@85 $generated@@278 ($generated@@79 $generated@@0)) ($generated@@47 $generated@@85 $generated@@278 ($generated@@79 $generated@@0) $generated@@280)) (and (=> (= (ControlFlow 0 9) 5) $generated@@286) (=> (= (ControlFlow 0 9) 8) $generated@@285)))))
(let (($generated@@288  (=> (and (not (and ($generated@@30 $generated@@85 $generated@@278 ($generated@@79 $generated@@0)) ($generated@@47 $generated@@85 $generated@@278 ($generated@@79 $generated@@0) $generated@@280))) (= (ControlFlow 0 4) 2)) $generated@@284)))
(let (($generated@@289  (=> ($generated@@80 ($generated@@81 $generated@@277) ($generated@@81 $generated@@279)) (and (=> (= (ControlFlow 0 10) 9) $generated@@287) (=> (= (ControlFlow 0 10) 4) $generated@@288)))))
(let (($generated@@290  (=> (and (not ($generated@@80 ($generated@@81 $generated@@277) ($generated@@81 $generated@@279))) (= (ControlFlow 0 3) 2)) $generated@@284)))
(let (($generated@@291 true))
(let (($generated@@292  (=> (= $generated@@281 ($generated@@175 $generated@@282 $generated@@280 $generated@@8 false)) (and (and (=> (= (ControlFlow 0 11) 1) $generated@@291) (=> (= (ControlFlow 0 11) 10) $generated@@289)) (=> (= (ControlFlow 0 11) 3) $generated@@290)))))
(let (($generated@@293  (=> (and ($generated@@48 $generated@@280) ($generated@@283 $generated@@280)) (=> (and (and ($generated@@30 $generated@@76 $generated@@277 ($generated@@78 ($generated@@79 $generated@@0) $generated@@1)) ($generated@@30 $generated@@76 $generated@@279 ($generated@@78 ($generated@@79 $generated@@0) $generated@@1))) (and (= 0 $generated@@74) (= (ControlFlow 0 12) 11))) $generated@@292))))
$generated@@293)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
