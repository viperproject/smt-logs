(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 (T@U Int) T@U)
(declare-fun $generated@@33 (Int) Int)
(declare-fun $generated@@34 (Int Int) Bool)
(declare-fun $generated@@35 (Int Int) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@U T@U T@U) Bool)
(declare-fun $generated@@53 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@76 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@80 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@84 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@1))
(assert (= ($generated@@21 $generated@@0) $generated@@2))
(assert (= ($generated@@22 $generated@@23) 0))
(assert (= ($generated@@5 $generated@@27) 3))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (or ($generated@@28 ($generated@@26 $generated@@27 $generated@@36) ($generated@@26 $generated@@27 $generated@@37)) (and (< 1 $generated@@24) (and ($generated@@29 $generated@@27 $generated@@36 ($generated@@30 $generated@@0)) ($generated@@29 $generated@@27 $generated@@37 ($generated@@30 $generated@@0))))) (and (=> (= ($generated@@22 ($generated@@26 $generated@@27 $generated@@36)) ($generated@@22 ($generated@@26 $generated@@27 $generated@@37))) (forall (($generated@@38 Int) ) (!  (=> (and (<= ($generated@@33 0) $generated@@38) (< $generated@@38 ($generated@@22 ($generated@@26 $generated@@27 $generated@@36)))) ($generated@@34 ($generated@@12 ($generated@@31 $generated@@7 ($generated@@32 ($generated@@26 $generated@@27 $generated@@36) $generated@@38))) ($generated@@12 ($generated@@31 $generated@@7 ($generated@@32 ($generated@@26 $generated@@27 $generated@@37) $generated@@38)))))
 :pattern ( ($generated@@31 $generated@@7 ($generated@@32 $generated@@37 $generated@@38)))
 :pattern ( ($generated@@31 $generated@@7 ($generated@@32 $generated@@36 $generated@@38)))
))) (= ($generated@@25 ($generated@@26 $generated@@27 $generated@@36) ($generated@@26 $generated@@27 $generated@@37))  (and (= ($generated@@22 ($generated@@26 $generated@@27 $generated@@36)) ($generated@@22 ($generated@@26 $generated@@27 $generated@@37))) (forall (($generated@@39 Int) ) (!  (=> (and (<= ($generated@@33 0) $generated@@39) (< $generated@@39 ($generated@@22 ($generated@@26 $generated@@27 $generated@@36)))) ($generated@@35 ($generated@@12 ($generated@@31 $generated@@7 ($generated@@32 ($generated@@26 $generated@@27 $generated@@36) $generated@@39))) ($generated@@12 ($generated@@31 $generated@@7 ($generated@@32 ($generated@@26 $generated@@27 $generated@@37) $generated@@39)))))
 :pattern ( ($generated@@31 $generated@@7 ($generated@@32 $generated@@37 $generated@@39)))
 :pattern ( ($generated@@31 $generated@@7 ($generated@@32 $generated@@36 $generated@@39)))
))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@26 $generated@@27 $generated@@36) ($generated@@26 $generated@@27 $generated@@37)))
))))
(assert (forall (($generated@@40 Int) ) (! (= ($generated@@33 $generated@@40) $generated@@40)
 :pattern ( ($generated@@33 $generated@@40))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@26 $generated@@42 $generated@@41) $generated@@41)
 :pattern ( ($generated@@26 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 ($generated@@31 $generated@@45 $generated@@44)) $generated@@44)
 :pattern ( ($generated@@31 $generated@@45 $generated@@44))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (or ($generated@@28 $generated@@46 $generated@@47) (and (< 1 $generated@@24) (and ($generated@@29 $generated@@27 $generated@@46 ($generated@@30 $generated@@0)) ($generated@@29 $generated@@27 $generated@@47 ($generated@@30 $generated@@0))))) (and (=> (= ($generated@@22 $generated@@46) ($generated@@22 $generated@@47)) (forall (($generated@@48 Int) ) (!  (=> (and (<= ($generated@@33 0) $generated@@48) (< $generated@@48 ($generated@@22 $generated@@46))) ($generated@@34 ($generated@@12 ($generated@@31 $generated@@7 ($generated@@32 $generated@@46 $generated@@48))) ($generated@@12 ($generated@@31 $generated@@7 ($generated@@32 $generated@@47 $generated@@48)))))
 :pattern ( ($generated@@31 $generated@@7 ($generated@@32 $generated@@47 $generated@@48)))
 :pattern ( ($generated@@31 $generated@@7 ($generated@@32 $generated@@46 $generated@@48)))
))) (= ($generated@@25 $generated@@46 $generated@@47)  (and (= ($generated@@22 $generated@@46) ($generated@@22 $generated@@47)) (forall (($generated@@49 Int) ) (!  (=> (and (<= ($generated@@33 0) $generated@@49) (< $generated@@49 ($generated@@22 $generated@@46))) ($generated@@35 ($generated@@12 ($generated@@31 $generated@@7 ($generated@@32 $generated@@46 $generated@@49))) ($generated@@12 ($generated@@31 $generated@@7 ($generated@@32 $generated@@47 $generated@@49)))))
 :pattern ( ($generated@@31 $generated@@7 ($generated@@32 $generated@@47 $generated@@49)))
 :pattern ( ($generated@@31 $generated@@7 ($generated@@32 $generated@@46 $generated@@49)))
))))))
 :pattern ( ($generated@@25 $generated@@46 $generated@@47))
))))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@50 Int) ($generated@@51 Int) ) (!  (=> (or ($generated@@34 ($generated@@33 $generated@@50) ($generated@@33 $generated@@51)) (< 0 $generated@@24)) (= ($generated@@35 ($generated@@33 $generated@@50) ($generated@@33 $generated@@51)) (= ($generated@@33 $generated@@50) ($generated@@33 $generated@@51))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@33 $generated@@50) ($generated@@33 $generated@@51)))
))))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@52 ($generated@@43 $generated@@57 $generated@@54) $generated@@55 $generated@@56) ($generated@@53 $generated@@57 $generated@@54 $generated@@55 $generated@@56))
 :pattern ( ($generated@@52 ($generated@@43 $generated@@57 $generated@@54) $generated@@55 $generated@@56))
)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@58 Int) ($generated@@59 Int) ) (!  (=> (or ($generated@@34 $generated@@58 $generated@@59) (< 0 $generated@@24)) (= ($generated@@35 $generated@@58 $generated@@59) (= $generated@@58 $generated@@59)))
 :pattern ( ($generated@@35 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@60 $generated@@61 $generated@@0) (and (= ($generated@@43 $generated@@7 ($generated@@31 $generated@@7 $generated@@61)) $generated@@61) ($generated@@29 $generated@@7 ($generated@@31 $generated@@7 $generated@@61) $generated@@0)))
 :pattern ( ($generated@@60 $generated@@61 $generated@@0))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@60 $generated@@62 $generated) (and (= ($generated@@43 $generated@@6 ($generated@@31 $generated@@6 $generated@@62)) $generated@@62) ($generated@@29 $generated@@6 ($generated@@31 $generated@@6 $generated@@62) $generated)))
 :pattern ( ($generated@@60 $generated@@62 $generated))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@60 ($generated@@43 $generated@@65 $generated@@63) $generated@@64) ($generated@@29 $generated@@65 $generated@@63 $generated@@64))
 :pattern ( ($generated@@60 ($generated@@43 $generated@@65 $generated@@63) $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! (<= 0 ($generated@@22 $generated@@66))
 :pattern ( ($generated@@22 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@53 $generated@@27 $generated@@67 ($generated@@30 $generated@@68) $generated@@69) (forall (($generated@@70 Int) ) (!  (=> (and (<= 0 $generated@@70) (< $generated@@70 ($generated@@22 $generated@@67))) ($generated@@52 ($generated@@32 $generated@@67 $generated@@70) $generated@@68 $generated@@69))
 :pattern ( ($generated@@32 $generated@@67 $generated@@70))
)))
 :pattern ( ($generated@@53 $generated@@27 $generated@@67 ($generated@@30 $generated@@68) $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@71 ($generated@@30 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@30 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@21 ($generated@@30 $generated@@73)) $generated@@3)
 :pattern ( ($generated@@30 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@31 $generated@@75 ($generated@@43 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@43 $generated@@75 $generated@@74))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@76 $generated@@87 $generated@@88 $generated@@89 ($generated@@83 $generated@@87 $generated@@88 $generated@@89 $generated@@91 $generated@@92 $generated@@93 $generated@@90) $generated@@92 $generated@@93) $generated@@90)
 :weight 0
)) (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@99 $generated@@101) (= ($generated@@76 $generated@@94 $generated@@95 $generated@@96 ($generated@@83 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@99 $generated@@100 $generated@@97) $generated@@101 $generated@@102) ($generated@@76 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@101 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@76 $generated@@103 $generated@@104 $generated@@105 ($generated@@83 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@110 $generated@@111) ($generated@@76 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@110 $generated@@111)))
 :weight 0
)))) (= ($generated@@5 $generated@@77) 4)) (= ($generated@@5 $generated@@78) 5)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@80 $generated@@112 $generated@@113 ($generated@@84 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@114) $generated@@116) $generated@@114)
 :weight 0
))) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@121 $generated@@122) (= ($generated@@80 $generated@@117 $generated@@118 ($generated@@84 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@80 $generated@@117 $generated@@118 $generated@@120 $generated@@122)))
 :weight 0
))) (= ($generated@@5 $generated@@81) 6)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (= ($generated@@5 ($generated@@82 $generated@@123 $generated@@124)) 7))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@82 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@82 $generated@@127 $generated@@128))
))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 Bool) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@10 ($generated@@76 $generated@@77 $generated@@78 $generated@@6 ($generated@@79 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))  (=> (and (or (not (= $generated@@133 $generated@@129)) (not true)) ($generated@@10 ($generated@@31 $generated@@6 ($generated@@80 $generated@@78 $generated@@81 ($generated@@80 $generated@@77 ($generated@@82 $generated@@78 $generated@@81) $generated@@130 $generated@@133) $generated@@131)))) $generated@@132))
 :pattern ( ($generated@@76 $generated@@77 $generated@@78 $generated@@6 ($generated@@79 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> ($generated@@60 $generated@@135 ($generated@@30 $generated@@136)) (and (= ($generated@@43 $generated@@27 ($generated@@31 $generated@@27 $generated@@135)) $generated@@135) ($generated@@29 $generated@@27 ($generated@@31 $generated@@27 $generated@@135) ($generated@@30 $generated@@136))))
 :pattern ( ($generated@@60 $generated@@135 ($generated@@30 $generated@@136)))
)))
(assert (forall (($generated@@137 Int) ) (! (= ($generated@@43 $generated@@7 ($generated@@11 ($generated@@33 $generated@@137))) ($generated@@26 $generated@@81 ($generated@@43 $generated@@7 ($generated@@11 $generated@@137))))
 :pattern ( ($generated@@43 $generated@@7 ($generated@@11 ($generated@@33 $generated@@137))))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@43 $generated@@139 ($generated@@26 $generated@@139 $generated@@138)) ($generated@@26 $generated@@81 ($generated@@43 $generated@@139 $generated@@138)))
 :pattern ( ($generated@@43 $generated@@139 ($generated@@26 $generated@@139 $generated@@138)))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= ($generated@@22 $generated@@140) 0) (= $generated@@140 $generated@@23))
 :pattern ( ($generated@@22 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! ($generated@@53 $generated@@7 $generated@@142 $generated@@0 $generated@@141)
 :pattern ( ($generated@@53 $generated@@7 $generated@@142 $generated@@0 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! ($generated@@53 $generated@@6 $generated@@144 $generated $generated@@143)
 :pattern ( ($generated@@53 $generated@@6 $generated@@144 $generated $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@29 $generated@@27 $generated@@145 ($generated@@30 $generated@@146)) (forall (($generated@@147 Int) ) (!  (=> (and (<= 0 $generated@@147) (< $generated@@147 ($generated@@22 $generated@@145))) ($generated@@60 ($generated@@32 $generated@@145 $generated@@147) $generated@@146))
 :pattern ( ($generated@@32 $generated@@145 $generated@@147))
)))
 :pattern ( ($generated@@29 $generated@@27 $generated@@145 ($generated@@30 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ) (! ($generated@@29 $generated@@7 $generated@@148 $generated@@0)
 :pattern ( ($generated@@29 $generated@@7 $generated@@148 $generated@@0))
)))
(assert (forall (($generated@@149 T@U) ) (! ($generated@@29 $generated@@6 $generated@@149 $generated)
 :pattern ( ($generated@@29 $generated@@6 $generated@@149 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@160 true))
(let (($generated@@161 true))
(let (($generated@@162  (=> (and (not (and (<= ($generated@@33 0) $generated@@150) (< $generated@@150 ($generated@@22 $generated@@151)))) (= (ControlFlow 0 8) 2)) $generated@@161)))
(let (($generated@@163  (=> (and (<= ($generated@@33 0) $generated@@150) (< $generated@@150 ($generated@@22 $generated@@151))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 $generated@@150) (< $generated@@150 ($generated@@22 $generated@@151)))) (=> (and (<= 0 $generated@@150) (< $generated@@150 ($generated@@22 $generated@@151))) (=> (and (= $generated@@152 ($generated@@12 ($generated@@31 $generated@@7 ($generated@@32 $generated@@151 $generated@@150)))) ($generated@@53 $generated@@7 ($generated@@11 $generated@@152) $generated@@0 $generated@@153)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@150) (< $generated@@150 ($generated@@22 $generated@@154)))) (=> (and (<= 0 $generated@@150) (< $generated@@150 ($generated@@22 $generated@@154))) (=> (and (and (= $generated@@155 ($generated@@12 ($generated@@31 $generated@@7 ($generated@@32 $generated@@154 $generated@@150)))) ($generated@@53 $generated@@7 ($generated@@11 $generated@@155) $generated@@0 $generated@@153)) (and ($generated@@34 ($generated@@12 ($generated@@31 $generated@@7 ($generated@@32 $generated@@151 $generated@@150))) ($generated@@12 ($generated@@31 $generated@@7 ($generated@@32 $generated@@154 $generated@@150)))) (= (ControlFlow 0 5) 2))) $generated@@161)))))))))
(let (($generated@@164  (=> (< $generated@@150 ($generated@@33 0)) (and (=> (= (ControlFlow 0 10) 5) $generated@@163) (=> (= (ControlFlow 0 10) 8) $generated@@162)))))
(let (($generated@@165  (=> (<= ($generated@@33 0) $generated@@150) (and (=> (= (ControlFlow 0 9) 5) $generated@@163) (=> (= (ControlFlow 0 9) 8) $generated@@162)))))
(let (($generated@@166  (and (=> (= (ControlFlow 0 11) 9) $generated@@165) (=> (= (ControlFlow 0 11) 10) $generated@@164))))
(let (($generated@@167  (=> (= ($generated@@22 $generated@@151) ($generated@@22 $generated@@154)) (and (=> (= (ControlFlow 0 12) 11) $generated@@166) (=> (= (ControlFlow 0 12) 4) $generated@@160)))))
(let (($generated@@168  (=> (and (or (not (= ($generated@@22 $generated@@151) ($generated@@22 $generated@@154))) (not true)) (= (ControlFlow 0 3) 2)) $generated@@161)))
(let (($generated@@169 true))
(let (($generated@@170  (=> (= $generated@@156 ($generated@@79 $generated@@157 $generated@@153 $generated@@4 false)) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@169) (=> (= (ControlFlow 0 13) 12) $generated@@167)) (=> (= (ControlFlow 0 13) 3) $generated@@168)))))
(let (($generated@@171  (=> (and ($generated@@158 $generated@@153) ($generated@@159 $generated@@153)) (=> (and (and ($generated@@29 $generated@@27 $generated@@151 ($generated@@30 $generated@@0)) ($generated@@29 $generated@@27 $generated@@154 ($generated@@30 $generated@@0))) (and (= 1 $generated@@24) (= (ControlFlow 0 14) 13))) $generated@@170))))
$generated@@171)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
