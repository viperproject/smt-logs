(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@U T@U T@U) Bool)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@92 (T@U Int) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@103 (T@U) Int)
(declare-fun $generated@@104 (T@U) Int)
(declare-fun $generated@@112 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 () T@T)
(declare-fun $generated@@115 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@116 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 (T@T T@T) T@T)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@T) T@T)
(declare-fun $generated@@122 (T@T) T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@193 (T@U) Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 (T@U T@U) T@U)
(declare-fun $generated@@198 (T@U T@U) Bool)
(declare-fun $generated@@199 (T@U T@U) Bool)
(declare-fun $generated@@200 (T@U T@U) Bool)
(declare-fun $generated@@201 (T@U T@U T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert ($generated@@24 $generated@@25))
(assert ($generated@@24 $generated@@26))
(assert (= ($generated@@8 $generated@@29) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@33 ($generated@@30 $generated@@31 $generated@@32)) ($generated@@27 $generated@@33))
 :pattern ( ($generated@@27 $generated@@33) ($generated@@28 $generated@@29 $generated@@33 ($generated@@30 $generated@@31 $generated@@32)))
)))
(assert (= ($generated@@34 $generated@@35) 0))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@36 $generated@@29 $generated@@39 $generated@@37 $generated@@40) ($generated@@36 $generated@@29 $generated@@39 $generated@@38 $generated@@40))
 :pattern ( ($generated@@36 $generated@@29 $generated@@39 $generated@@37 $generated@@40))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@41 $generated@@45 $generated@@46) ($generated@@30 $generated@@43 $generated@@44))  (and ($generated@@42 $generated@@45 $generated@@43) ($generated@@42 $generated@@46 $generated@@44)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@41 $generated@@45 $generated@@46) ($generated@@30 $generated@@43 $generated@@44)))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> ($generated@@47 $generated@@53) (= ($generated@@36 $generated@@29 ($generated@@41 $generated@@51 $generated@@52) ($generated@@30 $generated@@49 $generated@@50) $generated@@53)  (and ($generated@@48 $generated@@51 $generated@@49 $generated@@53) ($generated@@48 $generated@@52 $generated@@50 $generated@@53))))
 :pattern ( ($generated@@36 $generated@@29 ($generated@@41 $generated@@51 $generated@@52) ($generated@@30 $generated@@49 $generated@@50) $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (! (= ($generated@@27 $generated@@55) (= ($generated@@54 $generated@@55) $generated@@1))
 :pattern ( ($generated@@27 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@57 $generated@@59 ($generated@@56 $generated@@59 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@56 $generated@@59 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ) (!  (=> ($generated@@27 $generated@@60) (exists (($generated@@61 T@U) ($generated@@62 T@U) ) (= $generated@@60 ($generated@@41 $generated@@61 $generated@@62))))
 :pattern ( ($generated@@27 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@48 ($generated@@57 $generated@@66 $generated@@63) $generated@@64 $generated@@65) ($generated@@36 $generated@@66 $generated@@63 $generated@@64 $generated@@65))
 :pattern ( ($generated@@48 ($generated@@57 $generated@@66 $generated@@63) $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@42 $generated@@67 $generated@@37) (and (= ($generated@@57 $generated@@29 ($generated@@56 $generated@@29 $generated@@67)) $generated@@67) ($generated@@28 $generated@@29 ($generated@@56 $generated@@29 $generated@@67) $generated@@37)))
 :pattern ( ($generated@@42 $generated@@67 $generated@@37))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@42 $generated@@68 $generated@@38) (and (= ($generated@@57 $generated@@29 ($generated@@56 $generated@@29 $generated@@68)) $generated@@68) ($generated@@28 $generated@@29 ($generated@@56 $generated@@29 $generated@@68) $generated@@38)))
 :pattern ( ($generated@@42 $generated@@68 $generated@@38))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@42 ($generated@@57 $generated@@71 $generated@@69) $generated@@70) ($generated@@28 $generated@@71 $generated@@69 $generated@@70))
 :pattern ( ($generated@@42 ($generated@@57 $generated@@71 $generated@@69) $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (! (<= 0 ($generated@@34 $generated@@72))
 :pattern ( ($generated@@34 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@24 $generated@@73) (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@42 $generated@@75 $generated@@73) ($generated@@48 $generated@@75 $generated@@73 $generated@@74))
 :pattern ( ($generated@@48 $generated@@75 $generated@@73 $generated@@74))
)))
 :pattern ( ($generated@@24 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@54 ($generated@@41 $generated@@76 $generated@@77)) $generated@@1)
 :pattern ( ($generated@@41 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@78 ($generated@@30 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@30 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@81 ($generated@@30 $generated@@82 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@30 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@84 ($generated@@41 $generated@@85 $generated@@86)) $generated@@85)
 :pattern ( ($generated@@41 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@87 ($generated@@41 $generated@@88 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@41 $generated@@88 $generated@@89))
)))
(assert (= ($generated@@8 $generated@@90) 4))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@36 $generated@@90 $generated@@93 ($generated@@91 $generated@@94) $generated@@95) (forall (($generated@@96 Int) ) (!  (=> (and (<= 0 $generated@@96) (< $generated@@96 ($generated@@34 $generated@@93))) ($generated@@48 ($generated@@92 $generated@@93 $generated@@96) $generated@@94 $generated@@95))
 :pattern ( ($generated@@92 $generated@@93 $generated@@96))
)))
 :pattern ( ($generated@@36 $generated@@90 $generated@@93 ($generated@@91 $generated@@94) $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@97 ($generated@@91 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@91 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@99 ($generated@@91 $generated@@100)) $generated)
 :pattern ( ($generated@@91 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@56 $generated@@102 ($generated@@57 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@57 $generated@@102 $generated@@101))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (< ($generated@@103 $generated@@105) ($generated@@104 ($generated@@41 $generated@@105 $generated@@106)))
 :pattern ( ($generated@@41 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (< ($generated@@103 $generated@@108) ($generated@@104 ($generated@@41 $generated@@107 $generated@@108)))
 :pattern ( ($generated@@41 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> ($generated@@42 $generated@@111 ($generated@@30 $generated@@109 $generated@@110)) (and (= ($generated@@57 $generated@@29 ($generated@@56 $generated@@29 $generated@@111)) $generated@@111) ($generated@@28 $generated@@29 ($generated@@56 $generated@@29 $generated@@111) ($generated@@30 $generated@@109 $generated@@110))))
 :pattern ( ($generated@@42 $generated@@111 ($generated@@30 $generated@@109 $generated@@110)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@112 $generated@@123 $generated@@124 $generated@@125 ($generated@@119 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@128 $generated@@129) $generated@@126)
 :weight 0
)) (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@112 $generated@@130 $generated@@131 $generated@@132 ($generated@@119 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@112 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@112 $generated@@139 $generated@@140 $generated@@141 ($generated@@119 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@112 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)))) (= ($generated@@8 $generated@@113) 5)) (= ($generated@@8 $generated@@114) 6)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@116 $generated@@148 $generated@@149 ($generated@@120 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@150) $generated@@152) $generated@@150)
 :weight 0
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@157 $generated@@158) (= ($generated@@116 $generated@@153 $generated@@154 ($generated@@120 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@155) $generated@@158) ($generated@@116 $generated@@153 $generated@@154 $generated@@156 $generated@@158)))
 :weight 0
))) (= ($generated@@8 $generated@@117) 7)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (= ($generated@@8 ($generated@@118 $generated@@159 $generated@@160)) 8))) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (! (= ($generated@@121 ($generated@@118 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@118 $generated@@161 $generated@@162))
))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@122 ($generated@@118 $generated@@163 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@118 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@13 ($generated@@112 $generated@@113 $generated@@114 $generated@@9 ($generated@@115 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))  (=> (and (or (not (= $generated@@169 $generated@@165)) (not true)) ($generated@@13 ($generated@@56 $generated@@9 ($generated@@116 $generated@@114 $generated@@117 ($generated@@116 $generated@@113 ($generated@@118 $generated@@114 $generated@@117) $generated@@166 $generated@@169) $generated@@167)))) $generated@@168))
 :pattern ( ($generated@@112 $generated@@113 $generated@@114 $generated@@9 ($generated@@115 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (and (= ($generated@@99 ($generated@@30 $generated@@172 $generated@@173)) $generated@@2) (= ($generated@@171 ($generated@@30 $generated@@172 $generated@@173)) $generated@@5))
 :pattern ( ($generated@@30 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@103 ($generated@@57 $generated@@29 $generated@@174)) ($generated@@104 $generated@@174))
 :pattern ( ($generated@@103 ($generated@@57 $generated@@29 $generated@@174)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@42 $generated@@175 ($generated@@91 $generated@@176)) (and (= ($generated@@57 $generated@@90 ($generated@@56 $generated@@90 $generated@@175)) $generated@@175) ($generated@@28 $generated@@90 ($generated@@56 $generated@@90 $generated@@175) ($generated@@91 $generated@@176))))
 :pattern ( ($generated@@42 $generated@@175 ($generated@@91 $generated@@176)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and ($generated@@47 $generated@@178) ($generated@@28 $generated@@29 $generated@@177 $generated@@38)) ($generated@@36 $generated@@29 $generated@@177 $generated@@38 $generated@@178))
 :pattern ( ($generated@@36 $generated@@29 $generated@@177 $generated@@38 $generated@@178))
)))
(assert (= ($generated@@99 $generated@@37) $generated@@3))
(assert (= ($generated@@171 $generated@@37) $generated@@6))
(assert (= ($generated@@99 $generated@@38) $generated@@4))
(assert (= ($generated@@171 $generated@@38) $generated@@7))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and ($generated@@47 $generated@@181) (and ($generated@@27 $generated@@179) (exists (($generated@@182 T@U) ) (! ($generated@@36 $generated@@29 $generated@@179 ($generated@@30 $generated@@180 $generated@@182) $generated@@181)
 :pattern ( ($generated@@36 $generated@@29 $generated@@179 ($generated@@30 $generated@@180 $generated@@182) $generated@@181))
)))) ($generated@@48 ($generated@@84 $generated@@179) $generated@@180 $generated@@181))
 :pattern ( ($generated@@48 ($generated@@84 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and ($generated@@47 $generated@@185) (and ($generated@@27 $generated@@183) (exists (($generated@@186 T@U) ) (! ($generated@@36 $generated@@29 $generated@@183 ($generated@@30 $generated@@186 $generated@@184) $generated@@185)
 :pattern ( ($generated@@36 $generated@@29 $generated@@183 ($generated@@30 $generated@@186 $generated@@184) $generated@@185))
)))) ($generated@@48 ($generated@@87 $generated@@183) $generated@@184 $generated@@185))
 :pattern ( ($generated@@48 ($generated@@87 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@188 $generated@@37)  (and ($generated@@28 $generated@@29 $generated@@188 $generated@@38) ($generated@@187 $generated@@188)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@188 $generated@@37))
)))
(assert (forall (($generated@@189 T@U) ) (!  (=> (= ($generated@@34 $generated@@189) 0) (= $generated@@189 $generated@@35))
 :pattern ( ($generated@@34 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@28 $generated@@90 $generated@@190 ($generated@@91 $generated@@191)) (forall (($generated@@192 Int) ) (!  (=> (and (<= 0 $generated@@192) (< $generated@@192 ($generated@@34 $generated@@190))) ($generated@@42 ($generated@@92 $generated@@190 $generated@@192) $generated@@191))
 :pattern ( ($generated@@92 $generated@@190 $generated@@192))
)))
 :pattern ( ($generated@@28 $generated@@90 $generated@@190 ($generated@@91 $generated@@191)))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 Int) ) (!  (=> (and (<= 0 $generated@@195) (< $generated@@195 ($generated@@34 $generated@@194))) (< ($generated@@104 ($generated@@56 $generated@@29 ($generated@@92 $generated@@194 $generated@@195))) ($generated@@193 $generated@@194)))
 :pattern ( ($generated@@104 ($generated@@56 $generated@@29 ($generated@@92 $generated@@194 $generated@@195))))
)))
(assert  (=> (<= 1 $generated@@196) (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (or ($generated@@198 $generated@@202 $generated@@203) (and (< 1 $generated@@196) (and (and ($generated@@42 $generated@@202 $generated@@25) ($generated@@28 $generated@@90 $generated@@203 ($generated@@91 $generated@@37))) (and ($generated@@199 $generated@@202 $generated@@203) (not ($generated@@200 $generated@@202 $generated@@203)))))) (and ($generated@@201 $generated@@202 $generated@@203 ($generated@@84 ($generated@@197 $generated@@202 $generated@@203)) ($generated@@87 ($generated@@197 $generated@@202 $generated@@203))) ($generated@@28 $generated@@29 ($generated@@197 $generated@@202 $generated@@203) ($generated@@30 $generated@@25 $generated@@26))))
 :pattern ( ($generated@@197 $generated@@202 $generated@@203))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) true)
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
