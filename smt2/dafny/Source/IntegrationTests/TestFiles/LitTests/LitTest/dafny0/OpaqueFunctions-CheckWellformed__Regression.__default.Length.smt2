(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@41 (Int) Int)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@U T@U) T@U)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@58 () Int)
(declare-fun $generated@@59 (T@U T@U Bool T@U) Int)
(declare-fun $generated@@60 (T@U T@U) Bool)
(declare-fun $generated@@61 () Bool)
(declare-fun $generated@@70 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@102 (T@U) Int)
(declare-fun $generated@@103 (T@U) Int)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@115 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@T T@T) T@T)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@T) T@T)
(declare-fun $generated@@121 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@23 $generated@@24) $generated@@3))
(assert (= ($generated@@6 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@30) ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
 :pattern ( ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ) (! ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32))
 :pattern ( ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32)))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@35) (= $generated@@34 $generated@@35))
 :pattern ( ($generated@@33 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> (and ($generated@@36 $generated@@39) ($generated@@36 $generated@@40)) (= ($generated@@33 $generated@@39 $generated@@40)  (and (= ($generated@@37 $generated@@39) ($generated@@37 $generated@@40)) ($generated@@33 ($generated@@38 $generated@@39) ($generated@@38 $generated@@40)))))
 :pattern ( ($generated@@33 $generated@@39 $generated@@40) ($generated@@36 $generated@@39))
 :pattern ( ($generated@@33 $generated@@39 $generated@@40) ($generated@@36 $generated@@40))
)))
(assert (forall (($generated@@42 Int) ) (! (= ($generated@@41 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 $generated@@44) $generated@@44)
 :pattern ( ($generated@@43 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@31 $generated@@26 ($generated@@46 $generated@@49 $generated@@50) ($generated@@27 $generated@@48))  (and ($generated@@47 $generated@@49 $generated@@48) ($generated@@31 $generated@@26 $generated@@50 ($generated@@27 $generated@@48))))
 :pattern ( ($generated@@31 $generated@@26 ($generated@@46 $generated@@49 $generated@@50) ($generated@@27 $generated@@48)))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 $generated@@52) (= ($generated@@23 $generated@@52) $generated@@3))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@36 $generated@@53) (= ($generated@@23 $generated@@53) $generated@@4))
 :pattern ( ($generated@@36 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@55 $generated@@57 ($generated@@54 $generated@@57 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@54 $generated@@57 $generated@@56))
)))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 Bool) ($generated@@65 T@U) ) (!  (=> (or ($generated@@60 $generated@@62 $generated@@65) (and (< 1 $generated@@58) ($generated@@31 $generated@@26 $generated@@65 ($generated@@27 $generated@@62)))) (<= ($generated@@41 0) ($generated@@59 $generated@@62 $generated@@63 $generated@@61 $generated@@65)))
 :pattern ( ($generated@@59 $generated@@62 $generated@@63 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@36 $generated@@66) (exists (($generated@@67 T@U) ($generated@@68 T@U) ) (= $generated@@66 ($generated@@46 $generated@@67 $generated@@68))))
 :pattern ( ($generated@@36 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@51 $generated@@69) (= $generated@@69 $generated@@24))
 :pattern ( ($generated@@51 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@55 $generated@@74 $generated@@71) $generated@@72 $generated@@73) ($generated@@25 $generated@@74 $generated@@71 $generated@@72 $generated@@73))
 :pattern ( ($generated@@70 ($generated@@55 $generated@@74 $generated@@71) $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ) (!  (and (= ($generated@@22 ($generated@@27 $generated@@76)) $generated@@2) (= ($generated@@75 ($generated@@27 $generated@@76)) $generated@@5))
 :pattern ( ($generated@@27 $generated@@76))
)))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (or ($generated@@60 $generated@@78 ($generated@@43 $generated@@26 $generated@@80)) (and (< 1 $generated@@58) ($generated@@31 $generated@@26 $generated@@80 ($generated@@27 $generated@@78)))) (and (=> ($generated@@11 ($generated@@43 $generated@@7 ($generated@@10 ($generated@@36 ($generated@@43 $generated@@26 $generated@@80))))) ($generated@@60 $generated@@78 ($generated@@43 $generated@@26 ($generated@@38 ($generated@@43 $generated@@26 $generated@@80))))) (= ($generated@@59 $generated@@78 ($generated@@77 $generated@@79) true ($generated@@43 $generated@@26 $generated@@80)) (ite ($generated@@36 ($generated@@43 $generated@@26 $generated@@80)) (+ 1 ($generated@@59 $generated@@78 ($generated@@77 $generated@@79) $generated@@61 ($generated@@43 $generated@@26 ($generated@@38 ($generated@@43 $generated@@26 $generated@@80))))) 0))))
 :weight 3
 :pattern ( ($generated@@59 $generated@@78 ($generated@@77 $generated@@79) true ($generated@@43 $generated@@26 $generated@@80)))
))))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@60 $generated@@81 $generated@@83) (and (< 1 $generated@@58) ($generated@@31 $generated@@26 $generated@@83 ($generated@@27 $generated@@81)))) (and (=> ($generated@@36 $generated@@83) ($generated@@60 $generated@@81 ($generated@@38 $generated@@83))) (= ($generated@@59 $generated@@81 ($generated@@77 $generated@@82) true $generated@@83) (ite ($generated@@36 $generated@@83) (+ 1 ($generated@@59 $generated@@81 $generated@@82 $generated@@61 ($generated@@38 $generated@@83))) 0))))
 :pattern ( ($generated@@59 $generated@@81 ($generated@@77 $generated@@82) true $generated@@83))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@31 $generated@@26 $generated@@85 ($generated@@27 $generated@@84)) (or ($generated@@51 $generated@@85) ($generated@@36 $generated@@85)))
 :pattern ( ($generated@@36 $generated@@85) ($generated@@31 $generated@@26 $generated@@85 ($generated@@27 $generated@@84)))
 :pattern ( ($generated@@51 $generated@@85) ($generated@@31 $generated@@26 $generated@@85 ($generated@@27 $generated@@84)))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@47 $generated@@86 $generated) (and (= ($generated@@55 $generated@@8 ($generated@@54 $generated@@8 $generated@@86)) $generated@@86) ($generated@@31 $generated@@8 ($generated@@54 $generated@@8 $generated@@86) $generated)))
 :pattern ( ($generated@@47 $generated@@86 $generated))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@47 ($generated@@55 $generated@@89 $generated@@87) $generated@@88) ($generated@@31 $generated@@89 $generated@@87 $generated@@88))
 :pattern ( ($generated@@47 ($generated@@55 $generated@@89 $generated@@87) $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and ($generated@@51 $generated@@90) ($generated@@51 $generated@@91)) ($generated@@33 $generated@@90 $generated@@91))
 :pattern ( ($generated@@33 $generated@@90 $generated@@91) ($generated@@51 $generated@@90))
 :pattern ( ($generated@@33 $generated@@90 $generated@@91) ($generated@@51 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@23 ($generated@@46 $generated@@92 $generated@@93)) $generated@@4)
 :pattern ( ($generated@@46 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@37 ($generated@@46 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@46 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@38 ($generated@@46 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@46 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@98 ($generated@@27 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@27 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@54 $generated@@101 ($generated@@55 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@55 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (< ($generated@@102 $generated@@104) ($generated@@103 ($generated@@46 $generated@@104 $generated@@105)))
 :pattern ( ($generated@@46 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (< ($generated@@103 $generated@@107) ($generated@@103 ($generated@@46 $generated@@106 $generated@@107)))
 :pattern ( ($generated@@46 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (and ($generated@@28 $generated@@110) (and ($generated@@36 $generated@@108) ($generated@@25 $generated@@26 $generated@@108 ($generated@@27 $generated@@109) $generated@@110))) ($generated@@70 ($generated@@37 $generated@@108) $generated@@109 $generated@@110))
 :pattern ( ($generated@@70 ($generated@@37 $generated@@108) $generated@@109 $generated@@110))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@111 $generated@@122 $generated@@123 $generated@@124 ($generated@@118 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@127 $generated@@128) $generated@@125)
 :weight 0
)) (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@111 $generated@@129 $generated@@130 $generated@@131 ($generated@@118 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@111 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@111 $generated@@138 $generated@@139 $generated@@140 ($generated@@118 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@111 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)))) (= ($generated@@6 $generated@@112) 4)) (= ($generated@@6 $generated@@113) 5)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@115 $generated@@147 $generated@@148 ($generated@@119 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@149) $generated@@151) $generated@@149)
 :weight 0
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@156 $generated@@157) (= ($generated@@115 $generated@@152 $generated@@153 ($generated@@119 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@115 $generated@@152 $generated@@153 $generated@@155 $generated@@157)))
 :weight 0
))) (= ($generated@@6 $generated@@116) 6)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (= ($generated@@6 ($generated@@117 $generated@@158 $generated@@159)) 7))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (! (= ($generated@@120 ($generated@@117 $generated@@160 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@117 $generated@@160 $generated@@161))
))) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (! (= ($generated@@121 ($generated@@117 $generated@@162 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@117 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@11 ($generated@@111 $generated@@112 $generated@@113 $generated@@7 ($generated@@114 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (or (not (= $generated@@168 $generated@@164)) (not true)) ($generated@@11 ($generated@@54 $generated@@7 ($generated@@115 $generated@@113 $generated@@116 ($generated@@115 $generated@@112 ($generated@@117 $generated@@113 $generated@@116) $generated@@165 $generated@@168) $generated@@166)))) $generated@@167))
 :pattern ( ($generated@@111 $generated@@112 $generated@@113 $generated@@7 ($generated@@114 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (! (= ($generated@@102 ($generated@@55 $generated@@26 $generated@@170)) ($generated@@103 $generated@@170))
 :pattern ( ($generated@@102 ($generated@@55 $generated@@26 $generated@@170)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 Bool) ($generated@@174 T@U) ) (! (= ($generated@@59 $generated@@171 ($generated@@77 $generated@@172) $generated@@173 $generated@@174) ($generated@@59 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
 :pattern ( ($generated@@59 $generated@@171 ($generated@@77 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@47 $generated@@176 ($generated@@27 $generated@@175)) (and (= ($generated@@55 $generated@@26 ($generated@@54 $generated@@26 $generated@@176)) $generated@@176) ($generated@@31 $generated@@26 ($generated@@54 $generated@@26 $generated@@176) ($generated@@27 $generated@@175))))
 :pattern ( ($generated@@47 $generated@@176 ($generated@@27 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and ($generated@@28 $generated@@179) (and ($generated@@36 $generated@@177) ($generated@@25 $generated@@26 $generated@@177 ($generated@@27 $generated@@178) $generated@@179))) ($generated@@25 $generated@@26 ($generated@@38 $generated@@177) ($generated@@27 $generated@@178) $generated@@179))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@38 $generated@@177) ($generated@@27 $generated@@178) $generated@@179))
)))
(assert (= $generated@@24 ($generated@@43 $generated@@26 $generated@@24)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@46 ($generated@@43 $generated@@116 $generated@@180) ($generated@@43 $generated@@26 $generated@@181)) ($generated@@43 $generated@@26 ($generated@@46 $generated@@180 $generated@@181)))
 :pattern ( ($generated@@46 ($generated@@43 $generated@@116 $generated@@180) ($generated@@43 $generated@@26 $generated@@181)))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@55 $generated@@8 ($generated@@12 ($generated@@41 $generated@@182))) ($generated@@43 $generated@@116 ($generated@@55 $generated@@8 ($generated@@12 $generated@@182))))
 :pattern ( ($generated@@55 $generated@@8 ($generated@@12 ($generated@@41 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@55 $generated@@184 ($generated@@43 $generated@@184 $generated@@183)) ($generated@@43 $generated@@116 ($generated@@55 $generated@@184 $generated@@183)))
 :pattern ( ($generated@@55 $generated@@184 ($generated@@43 $generated@@184 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! ($generated@@25 $generated@@8 $generated@@186 $generated $generated@@185)
 :pattern ( ($generated@@25 $generated@@8 $generated@@186 $generated $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@28 $generated@@190) (= ($generated@@25 $generated@@26 ($generated@@46 $generated@@188 $generated@@189) ($generated@@27 $generated@@187) $generated@@190)  (and ($generated@@70 $generated@@188 $generated@@187 $generated@@190) ($generated@@25 $generated@@26 $generated@@189 ($generated@@27 $generated@@187) $generated@@190))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@46 $generated@@188 $generated@@189) ($generated@@27 $generated@@187) $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (! ($generated@@31 $generated@@8 $generated@@191 $generated)
 :pattern ( ($generated@@31 $generated@@8 $generated@@191 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@200  (=> (= (ControlFlow 0 4) (- 0 3)) (<= ($generated@@41 0) ($generated@@59 $generated@@192 ($generated@@77 ($generated@@77 $generated@@193)) $generated@@61 $generated@@194)))))
(let (($generated@@201  (=> (and (and (not ($generated@@36 $generated@@194)) (= ($generated@@59 $generated@@192 ($generated@@77 $generated@@193) $generated@@61 $generated@@194) ($generated@@41 0))) (and ($generated@@31 $generated@@8 ($generated@@12 ($generated@@59 $generated@@192 ($generated@@77 $generated@@193) $generated@@61 $generated@@194)) $generated) (= (ControlFlow 0 8) 4))) $generated@@200)))
(let (($generated@@202  (=> ($generated@@36 $generated@@194) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@36 $generated@@194)) (=> ($generated@@36 $generated@@194) (=> (and (= $generated@@195 ($generated@@38 $generated@@194)) ($generated@@25 $generated@@26 $generated@@195 ($generated@@27 $generated@@192) $generated@@196)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@103 $generated@@195) ($generated@@103 $generated@@194))) (=> (< ($generated@@103 $generated@@195) ($generated@@103 $generated@@194)) (=> ($generated@@60 $generated@@192 ($generated@@38 $generated@@194)) (=> (and (and (= ($generated@@59 $generated@@192 ($generated@@77 $generated@@193) $generated@@61 $generated@@194) (+ 1 ($generated@@59 $generated@@192 ($generated@@77 $generated@@193) $generated@@61 ($generated@@38 $generated@@194)))) ($generated@@60 $generated@@192 ($generated@@38 $generated@@194))) (and ($generated@@31 $generated@@8 ($generated@@12 ($generated@@59 $generated@@192 ($generated@@77 $generated@@193) $generated@@61 $generated@@194)) $generated) (= (ControlFlow 0 5) 4))) $generated@@200))))))))))
(let (($generated@@203  (=> (and ($generated@@25 $generated@@26 $generated@@194 ($generated@@27 $generated@@192) $generated@@196) (= (ControlFlow 0 2) (- 0 1))) (or ($generated@@33 $generated@@194 $generated@@194) (< ($generated@@103 $generated@@194) ($generated@@103 $generated@@194))))))
(let (($generated@@204  (=> (= $generated@@197 ($generated@@114 $generated@@198 $generated@@196 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 9) 2) $generated@@203) (=> (= (ControlFlow 0 9) 5) $generated@@202)) (=> (= (ControlFlow 0 9) 8) $generated@@201)))))
(let (($generated@@205  (=> (and (and (and ($generated@@28 $generated@@196) ($generated@@199 $generated@@196)) ($generated@@31 $generated@@26 $generated@@194 ($generated@@27 $generated@@192))) (and (= 1 $generated@@58) (= (ControlFlow 0 10) 9))) $generated@@204)))
$generated@@205)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
