(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@119 (T@U) Int)
(declare-fun $generated@@120 (T@U) Int)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@130 () T@T)
(declare-fun $generated@@131 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@132 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@133 (T@T T@T) T@T)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@137 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert  (and (and (= ($generated@@7 $generated@@28) 3) (= ($generated@@7 $generated@@29) 4)) (= ($generated@@7 $generated@@36) 5)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (or ($generated@@30 $generated@@39 ($generated@@27 $generated@@28 $generated@@41) ($generated@@27 $generated@@29 $generated@@42)) (and (< 1 $generated@@24) (and ($generated@@31 $generated@@28 $generated@@41 ($generated@@32 $generated@@39)) ($generated@@31 $generated@@29 $generated@@42 ($generated@@33 $generated@@39))))) (and (=> (not ($generated@@12 ($generated@@27 $generated@@8 ($generated@@11 ($generated@@34 ($generated@@27 $generated@@28 $generated@@41)))))) (let (($generated@@43 ($generated@@27 $generated@@28 ($generated@@35 ($generated@@27 $generated@@28 $generated@@41)))))
(let (($generated@@44 ($generated@@27 $generated@@36 ($generated@@37 ($generated@@27 $generated@@28 $generated@@41)))))
 (=> ($generated@@38 ($generated@@27 $generated@@29 $generated@@42) $generated@@44) ($generated@@30 $generated@@39 $generated@@43 ($generated@@27 $generated@@29 $generated@@42)))))) (= ($generated@@25 $generated@@39 ($generated@@26 $generated@@40) ($generated@@27 $generated@@28 $generated@@41) ($generated@@27 $generated@@29 $generated@@42)) (ite ($generated@@34 ($generated@@27 $generated@@28 $generated@@41)) true (let (($generated@@45 ($generated@@27 $generated@@28 ($generated@@35 ($generated@@27 $generated@@28 $generated@@41)))))
(let (($generated@@46 ($generated@@27 $generated@@36 ($generated@@37 ($generated@@27 $generated@@28 $generated@@41)))))
 (and ($generated@@38 ($generated@@27 $generated@@29 $generated@@42) $generated@@46) ($generated@@25 $generated@@39 ($generated@@26 $generated@@40) $generated@@45 ($generated@@27 $generated@@29 $generated@@42)))))))))
 :weight 3
 :pattern ( ($generated@@25 $generated@@39 ($generated@@26 $generated@@40) ($generated@@27 $generated@@28 $generated@@41) ($generated@@27 $generated@@29 $generated@@42)))
))))
(assert (= ($generated@@47 $generated@@48) $generated@@4))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> ($generated@@50 $generated@@52) ($generated@@49 $generated@@28 $generated@@48 ($generated@@32 $generated@@51) $generated@@52))
 :pattern ( ($generated@@49 $generated@@28 $generated@@48 ($generated@@32 $generated@@51) $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ) (! ($generated@@31 $generated@@28 $generated@@48 ($generated@@32 $generated@@53))
 :pattern ( ($generated@@31 $generated@@28 $generated@@48 ($generated@@32 $generated@@53)))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@27 $generated@@55 $generated@@54) $generated@@54)
 :pattern ( ($generated@@27 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@31 $generated@@28 ($generated@@56 $generated@@59 $generated@@60) ($generated@@32 $generated@@58))  (and ($generated@@57 $generated@@59 $generated@@58) ($generated@@31 $generated@@28 $generated@@60 ($generated@@32 $generated@@58))))
 :pattern ( ($generated@@31 $generated@@28 ($generated@@56 $generated@@59 $generated@@60) ($generated@@32 $generated@@58)))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@61 $generated@@62 $generated@@63) (forall (($generated@@64 T@U) ) (!  (=> ($generated@@38 $generated@@62 $generated@@64) ($generated@@38 $generated@@63 $generated@@64))
 :pattern ( ($generated@@38 $generated@@62 $generated@@64))
 :pattern ( ($generated@@38 $generated@@63 $generated@@64))
)))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@34 $generated@@65) (= ($generated@@47 $generated@@65) $generated@@4))
 :pattern ( ($generated@@34 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@66 $generated@@67) (= ($generated@@47 $generated@@67) $generated@@5))
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 ($generated@@68 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@68 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@66 $generated@@72) (exists (($generated@@73 T@U) ($generated@@74 T@U) ) (= $generated@@72 ($generated@@56 $generated@@73 $generated@@74))))
 :pattern ( ($generated@@66 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@34 $generated@@75) (= $generated@@75 $generated@@48))
 :pattern ( ($generated@@34 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@31 $generated@@29 $generated@@76 ($generated@@33 $generated@@77)) (forall (($generated@@78 T@U) ) (!  (=> ($generated@@38 $generated@@76 $generated@@78) ($generated@@57 $generated@@78 $generated@@77))
 :pattern ( ($generated@@38 $generated@@76 $generated@@78))
)))
 :pattern ( ($generated@@31 $generated@@29 $generated@@76 ($generated@@33 $generated@@77)))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@30 $generated@@80 $generated@@82 $generated@@83) (and (< 1 $generated@@24) (and ($generated@@31 $generated@@28 $generated@@82 ($generated@@32 $generated@@80)) ($generated@@31 $generated@@29 $generated@@83 ($generated@@33 $generated@@80))))) (forall (($generated@@84 T@U) ) (!  (=> (and (and ($generated@@50 $generated@@84) ($generated@@79 $generated@@84)) (and ($generated@@25 $generated@@80 $generated@@81 $generated@@82 $generated@@83) ($generated@@49 $generated@@29 $generated@@83 ($generated@@33 $generated@@80) $generated@@84))) ($generated@@49 $generated@@28 $generated@@82 ($generated@@32 $generated@@80) $generated@@84))
 :pattern ( ($generated@@79 $generated@@84))
)))
 :pattern ( ($generated@@25 $generated@@80 $generated@@81 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@85 ($generated@@69 $generated@@89 $generated@@86) $generated@@87 $generated@@88) ($generated@@49 $generated@@89 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@85 ($generated@@69 $generated@@89 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ) (!  (and (= ($generated@@23 ($generated@@32 $generated@@91)) $generated@@3) (= ($generated@@90 ($generated@@32 $generated@@91)) $generated@@6))
 :pattern ( ($generated@@32 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@31 $generated@@28 $generated@@93 ($generated@@32 $generated@@92)) (or ($generated@@34 $generated@@93) ($generated@@66 $generated@@93)))
 :pattern ( ($generated@@66 $generated@@93) ($generated@@31 $generated@@28 $generated@@93 ($generated@@32 $generated@@92)))
 :pattern ( ($generated@@34 $generated@@93) ($generated@@31 $generated@@28 $generated@@93 ($generated@@32 $generated@@92)))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@57 $generated@@94 $generated) (and (= ($generated@@69 $generated@@8 ($generated@@68 $generated@@8 $generated@@94)) $generated@@94) ($generated@@31 $generated@@8 ($generated@@68 $generated@@8 $generated@@94) $generated)))
 :pattern ( ($generated@@57 $generated@@94 $generated))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@57 ($generated@@69 $generated@@97 $generated@@95) $generated@@96) ($generated@@31 $generated@@97 $generated@@95 $generated@@96))
 :pattern ( ($generated@@57 ($generated@@69 $generated@@97 $generated@@95) $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@49 $generated@@29 $generated@@98 ($generated@@33 $generated@@99) $generated@@100) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@38 $generated@@98 $generated@@101) ($generated@@85 $generated@@101 $generated@@99 $generated@@100))
 :pattern ( ($generated@@38 $generated@@98 $generated@@101))
)))
 :pattern ( ($generated@@49 $generated@@29 $generated@@98 ($generated@@33 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@47 ($generated@@56 $generated@@102 $generated@@103)) $generated@@5)
 :pattern ( ($generated@@56 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@37 ($generated@@56 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@56 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@35 ($generated@@56 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@56 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 ($generated@@33 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@33 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@23 ($generated@@33 $generated@@110)) $generated@@1)
 :pattern ( ($generated@@33 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@32 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@32 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@68 $generated@@114 ($generated@@69 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@69 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@25 $generated@@115 ($generated@@26 $generated@@116) $generated@@117 $generated@@118) ($generated@@25 $generated@@115 $generated@@116 $generated@@117 $generated@@118))
 :pattern ( ($generated@@25 $generated@@115 ($generated@@26 $generated@@116) $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (< ($generated@@119 $generated@@121) ($generated@@120 ($generated@@56 $generated@@121 $generated@@122)))
 :pattern ( ($generated@@56 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (< ($generated@@120 $generated@@124) ($generated@@120 ($generated@@56 $generated@@123 $generated@@124)))
 :pattern ( ($generated@@56 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and ($generated@@50 $generated@@127) (and ($generated@@66 $generated@@125) ($generated@@49 $generated@@28 $generated@@125 ($generated@@32 $generated@@126) $generated@@127))) ($generated@@85 ($generated@@37 $generated@@125) $generated@@126 $generated@@127))
 :pattern ( ($generated@@85 ($generated@@37 $generated@@125) $generated@@126 $generated@@127))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@128 $generated@@138 $generated@@139 $generated@@140 ($generated@@134 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@143 $generated@@144) $generated@@141)
 :weight 0
)) (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@128 $generated@@145 $generated@@146 $generated@@147 ($generated@@134 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@128 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@128 $generated@@154 $generated@@155 $generated@@156 ($generated@@134 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@128 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)))) (= ($generated@@7 $generated@@129) 6)) (= ($generated@@7 $generated@@130) 7)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@132 $generated@@163 $generated@@164 ($generated@@135 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@165) $generated@@167) $generated@@165)
 :weight 0
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@172 $generated@@173) (= ($generated@@132 $generated@@168 $generated@@169 ($generated@@135 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@170) $generated@@173) ($generated@@132 $generated@@168 $generated@@169 $generated@@171 $generated@@173)))
 :weight 0
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@7 ($generated@@133 $generated@@174 $generated@@175)) 8))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@136 ($generated@@133 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@133 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@137 ($generated@@133 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@133 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@12 ($generated@@128 $generated@@129 $generated@@130 $generated@@8 ($generated@@131 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (or (not (= $generated@@184 $generated@@180)) (not true)) ($generated@@12 ($generated@@68 $generated@@8 ($generated@@132 $generated@@130 $generated@@36 ($generated@@132 $generated@@129 ($generated@@133 $generated@@130 $generated@@36) $generated@@181 $generated@@184) $generated@@182)))) $generated@@183))
 :pattern ( ($generated@@128 $generated@@129 $generated@@130 $generated@@8 ($generated@@131 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@119 ($generated@@69 $generated@@28 $generated@@186)) ($generated@@120 $generated@@186))
 :pattern ( ($generated@@119 ($generated@@69 $generated@@28 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@57 $generated@@187 ($generated@@33 $generated@@188)) (and (= ($generated@@69 $generated@@29 ($generated@@68 $generated@@29 $generated@@187)) $generated@@187) ($generated@@31 $generated@@29 ($generated@@68 $generated@@29 $generated@@187) ($generated@@33 $generated@@188))))
 :pattern ( ($generated@@57 $generated@@187 ($generated@@33 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@57 $generated@@190 ($generated@@32 $generated@@189)) (and (= ($generated@@69 $generated@@28 ($generated@@68 $generated@@28 $generated@@190)) $generated@@190) ($generated@@31 $generated@@28 ($generated@@68 $generated@@28 $generated@@190) ($generated@@32 $generated@@189))))
 :pattern ( ($generated@@57 $generated@@190 ($generated@@32 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and ($generated@@50 $generated@@193) (and ($generated@@66 $generated@@191) ($generated@@49 $generated@@28 $generated@@191 ($generated@@32 $generated@@192) $generated@@193))) ($generated@@49 $generated@@28 ($generated@@35 $generated@@191) ($generated@@32 $generated@@192) $generated@@193))
 :pattern ( ($generated@@49 $generated@@28 ($generated@@35 $generated@@191) ($generated@@32 $generated@@192) $generated@@193))
)))
(assert (= $generated@@48 ($generated@@27 $generated@@28 $generated@@48)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@56 ($generated@@27 $generated@@36 $generated@@194) ($generated@@27 $generated@@28 $generated@@195)) ($generated@@27 $generated@@28 ($generated@@56 $generated@@194 $generated@@195)))
 :pattern ( ($generated@@56 ($generated@@27 $generated@@36 $generated@@194) ($generated@@27 $generated@@28 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@T) ) (! (= ($generated@@69 $generated@@197 ($generated@@27 $generated@@197 $generated@@196)) ($generated@@27 $generated@@36 ($generated@@69 $generated@@197 $generated@@196)))
 :pattern ( ($generated@@69 $generated@@197 ($generated@@27 $generated@@197 $generated@@196)))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (or ($generated@@30 $generated@@198 $generated@@200 $generated@@201) (and (< 1 $generated@@24) (and ($generated@@31 $generated@@28 $generated@@200 ($generated@@32 $generated@@198)) ($generated@@31 $generated@@29 $generated@@201 ($generated@@33 $generated@@198))))) (and (=> (not ($generated@@34 $generated@@200)) (let (($generated@@202 ($generated@@35 $generated@@200)))
(let (($generated@@203 ($generated@@37 $generated@@200)))
 (=> ($generated@@38 $generated@@201 $generated@@203) ($generated@@30 $generated@@198 $generated@@202 $generated@@201))))) (= ($generated@@25 $generated@@198 ($generated@@26 $generated@@199) $generated@@200 $generated@@201) (ite ($generated@@34 $generated@@200) true (let (($generated@@204 ($generated@@35 $generated@@200)))
(let (($generated@@205 ($generated@@37 $generated@@200)))
 (and ($generated@@38 $generated@@201 $generated@@205) ($generated@@25 $generated@@198 $generated@@199 $generated@@204 $generated@@201))))))))
 :pattern ( ($generated@@25 $generated@@198 ($generated@@26 $generated@@199) $generated@@200 $generated@@201))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! ($generated@@49 $generated@@8 $generated@@207 $generated $generated@@206)
 :pattern ( ($generated@@49 $generated@@8 $generated@@207 $generated $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@50 $generated@@211) (= ($generated@@49 $generated@@28 ($generated@@56 $generated@@209 $generated@@210) ($generated@@32 $generated@@208) $generated@@211)  (and ($generated@@85 $generated@@209 $generated@@208 $generated@@211) ($generated@@49 $generated@@28 $generated@@210 ($generated@@32 $generated@@208) $generated@@211))))
 :pattern ( ($generated@@49 $generated@@28 ($generated@@56 $generated@@209 $generated@@210) ($generated@@32 $generated@@208) $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ) (! ($generated@@31 $generated@@8 $generated@@212 $generated)
 :pattern ( ($generated@@31 $generated@@8 $generated@@212 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@227  (=> (= (ControlFlow 0 4) (- 0 3)) (forall (($generated@@228 T@U) ) (!  (=> (and (and ($generated@@50 $generated@@228) ($generated@@79 $generated@@228)) (and ($generated@@25 $generated@@213 ($generated@@26 $generated@@214) $generated@@215 $generated@@216) ($generated@@49 $generated@@29 $generated@@216 ($generated@@33 $generated@@213) $generated@@228))) ($generated@@49 $generated@@28 $generated@@215 ($generated@@32 $generated@@213) $generated@@228))
 :pattern ( ($generated@@79 $generated@@228))
)))))
(let (($generated@@229  (=> (and (and (= ($generated@@25 $generated@@213 ($generated@@26 $generated@@214) $generated@@215 $generated@@216)  (and ($generated@@38 $generated@@216 $generated@@217) ($generated@@25 $generated@@213 ($generated@@26 $generated@@214) $generated@@218 $generated@@216))) (=> ($generated@@38 $generated@@216 $generated@@217) ($generated@@30 $generated@@213 $generated@@218 $generated@@216))) (and ($generated@@31 $generated@@8 ($generated@@11 ($generated@@25 $generated@@213 ($generated@@26 $generated@@214) $generated@@215 $generated@@216)) $generated) (= (ControlFlow 0 6) 4))) $generated@@227)))
(let (($generated@@230  (=> (and (not ($generated@@38 $generated@@216 $generated@@217)) (= (ControlFlow 0 9) 6)) $generated@@229)))
(let (($generated@@231  (=> ($generated@@38 $generated@@216 $generated@@217) (=> (and ($generated@@49 $generated@@28 $generated@@218 ($generated@@32 $generated@@213) $generated@@219) ($generated@@49 $generated@@29 $generated@@216 ($generated@@33 $generated@@213) $generated@@219)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (< ($generated@@120 $generated@@218) ($generated@@120 $generated@@215)) (and (= ($generated@@120 $generated@@218) ($generated@@120 $generated@@215)) (and ($generated@@61 $generated@@216 $generated@@216) (not ($generated@@61 $generated@@216 $generated@@216)))))) (=> (or (< ($generated@@120 $generated@@218) ($generated@@120 $generated@@215)) (and (= ($generated@@120 $generated@@218) ($generated@@120 $generated@@215)) (and ($generated@@61 $generated@@216 $generated@@216) (not ($generated@@61 $generated@@216 $generated@@216))))) (=> (and ($generated@@30 $generated@@213 $generated@@218 $generated@@216) (= (ControlFlow 0 7) 6)) $generated@@229)))))))
(let (($generated@@232  (=> (= $generated@@215 ($generated@@56 $generated@@220 $generated@@221)) (=> (and (and (and ($generated@@57 $generated@@220 $generated@@213) ($generated@@31 $generated@@28 $generated@@221 ($generated@@32 $generated@@213))) (and (= $generated@@222 $generated@@221) ($generated@@31 $generated@@28 $generated@@222 ($generated@@32 $generated@@213)))) (and (and (= $generated@@218 $generated@@222) (= $generated@@223 $generated@@220)) (and ($generated@@57 $generated@@223 $generated@@213) (= $generated@@217 $generated@@223)))) (and (=> (= (ControlFlow 0 10) 7) $generated@@231) (=> (= (ControlFlow 0 10) 9) $generated@@230))))))
(let (($generated@@233  (=> (and (and (= $generated@@215 $generated@@48) (= ($generated@@25 $generated@@213 ($generated@@26 $generated@@214) $generated@@215 $generated@@216) ($generated@@12 ($generated@@27 $generated@@8 ($generated@@11 true))))) (and ($generated@@31 $generated@@8 ($generated@@11 ($generated@@25 $generated@@213 ($generated@@26 $generated@@214) $generated@@215 $generated@@216)) $generated) (= (ControlFlow 0 5) 4))) $generated@@227)))
(let (($generated@@234 true))
(let (($generated@@235  (=> (or (not (= $generated@@215 $generated@@48)) (not true)) (and (=> (= (ControlFlow 0 11) 10) $generated@@232) (=> (= (ControlFlow 0 11) 2) $generated@@234)))))
(let (($generated@@236 true))
(let (($generated@@237  (=> (= $generated@@224 ($generated@@131 $generated@@225 $generated@@219 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 12) 1) $generated@@236) (=> (= (ControlFlow 0 12) 5) $generated@@233)) (=> (= (ControlFlow 0 12) 11) $generated@@235)))))
(let (($generated@@238  (=> (and ($generated@@50 $generated@@219) ($generated@@226 $generated@@219)) (=> (and (and ($generated@@31 $generated@@28 $generated@@215 ($generated@@32 $generated@@213)) ($generated@@31 $generated@@29 $generated@@216 ($generated@@33 $generated@@213))) (and (= 1 $generated@@24) (= (ControlFlow 0 13) 12))) $generated@@237))))
$generated@@238))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
