(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@70 (T@U Int) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 () Int)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@T T@U T@U) Bool)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated@@2) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@27 $generated@@2) $generated@@3))
(assert (= ($generated@@9 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@33 ($generated@@30 $generated@@32) $generated@@34) ($generated@@28 $generated@@29 $generated@@33 ($generated@@31 $generated@@32) $generated@@34))
 :pattern ( ($generated@@28 $generated@@29 $generated@@33 ($generated@@30 $generated@@32) $generated@@34))
 :pattern ( ($generated@@28 $generated@@29 $generated@@33 ($generated@@31 $generated@@32) $generated@@34))
)))
(assert (= ($generated@@35 $generated@@36) 0))
(assert (= ($generated@@25 $generated@@37) 0))
(assert (= ($generated@@38 $generated@@4 $generated@@8) $generated@@37))
(assert ($generated@@39 $generated@@37))
(assert  (and (and (and (and (and (and (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@42 $generated@@49 $generated@@50 ($generated@@46 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@53) $generated@@51)
 :weight 0
)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@58 $generated@@59) (= ($generated@@42 $generated@@54 $generated@@55 ($generated@@46 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@59) ($generated@@42 $generated@@54 $generated@@55 $generated@@57 $generated@@59)))
 :weight 0
))) (= ($generated@@9 $generated@@43) 4)) (= ($generated@@9 $generated@@44) 5)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (= ($generated@@9 ($generated@@45 $generated@@60 $generated@@61)) 6))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@47 ($generated@@45 $generated@@62 $generated@@63)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@62 $generated@@63))
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@48 ($generated@@45 $generated@@64 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@45 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@67 ($generated@@31 $generated@@66) $generated@@68)  (or (= $generated@@67 $generated@@40) ($generated@@14 ($generated@@41 $generated@@10 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@68 $generated@@67) $generated@@2)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@67 ($generated@@31 $generated@@66) $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@69 $generated@@71 $generated@@72)  (and (= ($generated@@35 $generated@@71) ($generated@@35 $generated@@72)) (forall (($generated@@73 Int) ) (!  (=> (and (<= 0 $generated@@73) (< $generated@@73 ($generated@@35 $generated@@71))) (= ($generated@@70 $generated@@71 $generated@@73) ($generated@@70 $generated@@72 $generated@@73)))
 :pattern ( ($generated@@70 $generated@@71 $generated@@73))
 :pattern ( ($generated@@70 $generated@@72 $generated@@73))
))))
 :pattern ( ($generated@@69 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@41 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@41 $generated@@76 $generated@@75))
)))
(assert (= ($generated@@9 $generated@@82) 7))
(assert  (=> (<= 0 $generated@@77) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (or ($generated@@80 $generated@@83 $generated@@84 $generated@@85) (and (< 0 $generated@@77) (and ($generated@@79 $generated@@84) (and (or (not (= $generated@@85 $generated@@40)) (not true)) (and ($generated@@81 $generated@@29 $generated@@85 ($generated@@30 $generated@@83)) ($generated@@28 $generated@@29 $generated@@85 ($generated@@30 $generated@@83) $generated@@84)))))) (= ($generated@@78 $generated@@83 $generated@@84 $generated@@85) ($generated@@69 ($generated@@41 $generated@@82 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@84 $generated@@85) $generated@@37)) $generated@@36)))
 :pattern ( ($generated@@78 $generated@@83 $generated@@84 $generated@@85) ($generated@@79 $generated@@84))
))))
(assert ($generated@@39 $generated@@2))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@81 $generated@@29 $generated@@87 ($generated@@30 $generated@@86))  (and ($generated@@81 $generated@@29 $generated@@87 ($generated@@31 $generated@@86)) (or (not (= $generated@@87 $generated@@40)) (not true))))
 :pattern ( ($generated@@81 $generated@@29 $generated@@87 ($generated@@30 $generated@@86)))
 :pattern ( ($generated@@81 $generated@@29 $generated@@87 ($generated@@31 $generated@@86)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@88 ($generated@@74 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@28 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@88 ($generated@@74 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ) (!  (and (= ($generated@@26 ($generated@@31 $generated@@94)) $generated@@5) (= ($generated@@93 ($generated@@31 $generated@@94)) $generated@@7))
 :pattern ( ($generated@@31 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (!  (and (= ($generated@@26 ($generated@@30 $generated@@95)) $generated@@6) (= ($generated@@93 ($generated@@30 $generated@@95)) $generated@@7))
 :pattern ( ($generated@@30 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (and (and ($generated@@79 $generated@@99) (and (or (not (= $generated@@100 $generated@@40)) (not true)) (= ($generated@@96 $generated@@100) ($generated@@31 $generated@@98)))) ($generated@@14 ($generated@@41 $generated@@10 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@99 $generated@@100) $generated@@2)))) ($generated@@28 $generated@@82 ($generated@@41 $generated@@82 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@99 $generated@@100) $generated@@37)) ($generated@@97 $generated@@98) $generated@@99))
 :pattern ( ($generated@@41 $generated@@82 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@99 $generated@@100) $generated@@37)) ($generated@@31 $generated@@98))
)))
(assert  (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@101 $generated@@104 $generated@@105 $generated@@106 ($generated@@103 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@109 $generated@@110) $generated@@107)
 :weight 0
)) (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@116 $generated@@118) (= ($generated@@101 $generated@@111 $generated@@112 $generated@@113 ($generated@@103 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@101 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@101 $generated@@120 $generated@@121 $generated@@122 ($generated@@103 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@101 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@14 ($generated@@101 $generated@@29 $generated@@43 $generated@@10 ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))  (=> (and (or (not (= $generated@@133 $generated@@129)) (not true)) ($generated@@14 ($generated@@41 $generated@@10 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@130 $generated@@133) $generated@@131)))) (= $generated@@133 $generated@@132)))
 :pattern ( ($generated@@101 $generated@@29 $generated@@43 $generated@@10 ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@81 $generated@@29 $generated@@136 ($generated@@31 $generated@@135))  (or (= $generated@@136 $generated@@40) (= ($generated@@96 $generated@@136) ($generated@@31 $generated@@135))))
 :pattern ( ($generated@@81 $generated@@29 $generated@@136 ($generated@@31 $generated@@135)))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> ($generated@@69 $generated@@137 $generated@@138) (= $generated@@137 $generated@@138))
 :pattern ( ($generated@@69 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (and (= ($generated@@139 ($generated@@38 $generated@@140 $generated@@141)) $generated@@140) (= ($generated@@27 ($generated@@38 $generated@@140 $generated@@141)) $generated@@141))
 :pattern ( ($generated@@38 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@142 $generated@@143 $generated) (and (= ($generated@@74 $generated@@10 ($generated@@41 $generated@@10 $generated@@143)) $generated@@143) ($generated@@81 $generated@@10 ($generated@@41 $generated@@10 $generated@@143) $generated)))
 :pattern ( ($generated@@142 $generated@@143 $generated))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@142 ($generated@@74 $generated@@146 $generated@@144) $generated@@145) ($generated@@81 $generated@@146 $generated@@144 $generated@@145))
 :pattern ( ($generated@@142 ($generated@@74 $generated@@146 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (<= 0 ($generated@@35 $generated@@147))
 :pattern ( ($generated@@35 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@28 $generated@@82 $generated@@148 ($generated@@97 $generated@@149) $generated@@150) (forall (($generated@@151 Int) ) (!  (=> (and (<= 0 $generated@@151) (< $generated@@151 ($generated@@35 $generated@@148))) ($generated@@88 ($generated@@70 $generated@@148 $generated@@151) $generated@@149 $generated@@150))
 :pattern ( ($generated@@70 $generated@@148 $generated@@151))
)))
 :pattern ( ($generated@@28 $generated@@82 $generated@@148 ($generated@@97 $generated@@149) $generated@@150))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@152 ($generated@@97 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@97 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@26 ($generated@@97 $generated@@154)) $generated@@1)
 :pattern ( ($generated@@97 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@155 ($generated@@31 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@31 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@30 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@30 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@41 $generated@@160 ($generated@@74 $generated@@160 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@74 $generated@@160 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@79 $generated@@162) (and (or (not (= $generated@@163 $generated@@40)) (not true)) (= ($generated@@96 $generated@@163) ($generated@@31 $generated@@161)))) ($generated@@81 $generated@@82 ($generated@@41 $generated@@82 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@162 $generated@@163) $generated@@37)) ($generated@@97 $generated@@161)))
 :pattern ( ($generated@@41 $generated@@82 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@162 $generated@@163) $generated@@37)) ($generated@@31 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> ($generated@@142 $generated@@164 ($generated@@97 $generated@@165)) (and (= ($generated@@74 $generated@@82 ($generated@@41 $generated@@82 $generated@@164)) $generated@@164) ($generated@@81 $generated@@82 ($generated@@41 $generated@@82 $generated@@164) ($generated@@97 $generated@@165))))
 :pattern ( ($generated@@142 $generated@@164 ($generated@@97 $generated@@165)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> ($generated@@142 $generated@@167 ($generated@@31 $generated@@166)) (and (= ($generated@@74 $generated@@29 ($generated@@41 $generated@@29 $generated@@167)) $generated@@167) ($generated@@81 $generated@@29 ($generated@@41 $generated@@29 $generated@@167) ($generated@@31 $generated@@166))))
 :pattern ( ($generated@@142 $generated@@167 ($generated@@31 $generated@@166)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@142 $generated@@169 ($generated@@30 $generated@@168)) (and (= ($generated@@74 $generated@@29 ($generated@@41 $generated@@29 $generated@@169)) $generated@@169) ($generated@@81 $generated@@29 ($generated@@41 $generated@@29 $generated@@169) ($generated@@30 $generated@@168))))
 :pattern ( ($generated@@142 $generated@@169 ($generated@@30 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= ($generated@@35 $generated@@170) 0) (= $generated@@170 $generated@@36))
 :pattern ( ($generated@@35 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! ($generated@@28 $generated@@10 $generated@@172 $generated $generated@@171)
 :pattern ( ($generated@@28 $generated@@10 $generated@@172 $generated $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@81 $generated@@82 $generated@@173 ($generated@@97 $generated@@174)) (forall (($generated@@175 Int) ) (!  (=> (and (<= 0 $generated@@175) (< $generated@@175 ($generated@@35 $generated@@173))) ($generated@@142 ($generated@@70 $generated@@173 $generated@@175) $generated@@174))
 :pattern ( ($generated@@70 $generated@@173 $generated@@175))
)))
 :pattern ( ($generated@@81 $generated@@82 $generated@@173 ($generated@@97 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! ($generated@@81 $generated@@10 $generated@@176 $generated)
 :pattern ( ($generated@@81 $generated@@10 $generated@@176 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@177 () Bool)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@183  (=> (and (and (= $generated@@177 ($generated@@14 ($generated@@101 $generated@@29 $generated@@43 $generated@@10 $generated@@178 $generated@@179 $generated@@37))) (= ($generated@@78 $generated@@180 $generated@@181 $generated@@179) ($generated@@69 ($generated@@41 $generated@@82 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@29 ($generated@@45 $generated@@43 $generated@@44) $generated@@181 $generated@@179) $generated@@37)) $generated@@36))) (and ($generated@@81 $generated@@10 ($generated@@13 ($generated@@78 $generated@@180 $generated@@181 $generated@@179)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@177)))
(let (($generated@@184 true))
(let (($generated@@185  (=> (= $generated@@178 ($generated@@102 $generated@@40 $generated@@181 $generated@@2 $generated@@179)) (and (=> (= (ControlFlow 0 4) 1) $generated@@184) (=> (= (ControlFlow 0 4) 3) $generated@@183)))))
(let (($generated@@186  (=> (and ($generated@@79 $generated@@181) ($generated@@182 $generated@@181)) (=> (and (and (or (not (= $generated@@179 $generated@@40)) (not true)) (and ($generated@@81 $generated@@29 $generated@@179 ($generated@@30 $generated@@180)) ($generated@@28 $generated@@29 $generated@@179 ($generated@@30 $generated@@180) $generated@@181))) (and (= 0 $generated@@77) (= (ControlFlow 0 5) 4))) $generated@@185))))
$generated@@186)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
