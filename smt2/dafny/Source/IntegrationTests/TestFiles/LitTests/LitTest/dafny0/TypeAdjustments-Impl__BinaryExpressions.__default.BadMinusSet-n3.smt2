(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@39 (Int Int) Int)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@48 (T@U T@U) Int)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@92 (Int) Int)
(declare-fun $generated@@94 (Int) Int)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@102 (T@T T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) Bool)
(declare-fun $generated@@128 (T@U T@U) T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@176 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (and (= (+ (+ ($generated@@24 ($generated@@25 $generated@@28 $generated@@29)) ($generated@@24 ($generated@@25 $generated@@29 $generated@@28))) (* 2 ($generated@@24 ($generated@@26 $generated@@28 $generated@@29)))) ($generated@@24 ($generated@@27 $generated@@28 $generated@@29))) (= ($generated@@24 ($generated@@25 $generated@@28 $generated@@29)) (- ($generated@@24 $generated@@28) ($generated@@24 ($generated@@26 $generated@@28 $generated@@29)))))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@28 $generated@@29)))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! ($generated@@30 $generated@@9 $generated@@32 $generated@@31 $generated@@33)
 :pattern ( ($generated@@30 $generated@@9 $generated@@32 $generated@@31 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@35 $generated@@37 $generated@@38) (not ($generated@@35 ($generated@@34 $generated@@36 $generated@@37) $generated@@38)))
 :pattern ( ($generated@@34 $generated@@36 $generated@@37) ($generated@@35 $generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 Int) ($generated@@41 Int) ) (!  (or (= ($generated@@39 $generated@@40 $generated@@41) $generated@@40) (= ($generated@@39 $generated@@40 $generated@@41) $generated@@41))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41))
)))
(assert (= ($generated@@7 $generated@@43) 3))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> ($generated@@42 $generated@@43 $generated@@46 ($generated@@44 $generated@@47)) ($generated@@45 $generated@@46))
 :pattern ( ($generated@@42 $generated@@43 $generated@@46 ($generated@@44 $generated@@47)))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (<= ($generated@@48 $generated@@49 $generated@@51) ($generated@@48 $generated@@50 $generated@@51)) (= ($generated@@48 ($generated@@25 $generated@@49 $generated@@50) $generated@@51) 0))
 :pattern ( ($generated@@25 $generated@@49 $generated@@50) ($generated@@48 $generated@@50 $generated@@51) ($generated@@48 $generated@@49 $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@26 ($generated@@26 $generated@@52 $generated@@53) $generated@@53) ($generated@@26 $generated@@52 $generated@@53))
 :pattern ( ($generated@@26 ($generated@@26 $generated@@52 $generated@@53) $generated@@53))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@35 ($generated@@34 $generated@@54 $generated@@55) $generated@@56)  (and ($generated@@35 $generated@@54 $generated@@56) (not ($generated@@35 $generated@@55 $generated@@56))))
 :pattern ( ($generated@@35 ($generated@@34 $generated@@54 $generated@@55) $generated@@56))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@58 $generated@@67 $generated@@68 ($generated@@64 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@71) $generated@@69)
 :weight 0
)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@76 $generated@@77) (= ($generated@@58 $generated@@72 $generated@@73 ($generated@@64 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@77) ($generated@@58 $generated@@72 $generated@@73 $generated@@75 $generated@@77)))
 :weight 0
))) (= ($generated@@7 $generated@@59) 4)) (= ($generated@@7 $generated@@60) 5)) (= ($generated@@7 $generated@@61) 6)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (= ($generated@@7 ($generated@@62 $generated@@78 $generated@@79)) 7))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@65 ($generated@@62 $generated@@80 $generated@@81)) $generated@@80)
 :pattern ( ($generated@@62 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@66 ($generated@@62 $generated@@82 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@62 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@57 $generated@@84 $generated@@85) (forall (($generated@@86 T@U) ) (!  (=> ($generated@@12 ($generated@@63 $generated@@8 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@61 ($generated@@62 $generated@@59 $generated@@60) $generated@@84 $generated@@86) $generated@@4))) ($generated@@12 ($generated@@63 $generated@@8 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@61 ($generated@@62 $generated@@59 $generated@@60) $generated@@85 $generated@@86) $generated@@4))))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@61 ($generated@@62 $generated@@59 $generated@@60) $generated@@85 $generated@@86) $generated@@4))
)))
 :pattern ( ($generated@@57 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@42 ($generated@@62 $generated@@60 $generated@@8) $generated@@89 ($generated@@87 $generated@@90)) (forall (($generated@@91 T@U) ) (!  (=> ($generated@@12 ($generated@@58 $generated@@60 $generated@@8 $generated@@89 $generated@@91)) ($generated@@88 $generated@@91 $generated@@90))
 :pattern ( ($generated@@58 $generated@@60 $generated@@8 $generated@@89 $generated@@91))
)))
 :pattern ( ($generated@@42 ($generated@@62 $generated@@60 $generated@@8) $generated@@89 ($generated@@87 $generated@@90)))
)))
(assert (forall (($generated@@93 Int) ) (!  (=> (<= 0 $generated@@93) (= ($generated@@92 $generated@@93) $generated@@93))
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 Int) ) (! (= ($generated@@94 $generated@@95) $generated@@95)
 :pattern ( ($generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@96 $generated@@98 $generated@@97) $generated@@97)
 :pattern ( ($generated@@96 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@48 ($generated@@26 $generated@@99 $generated@@100) $generated@@101) ($generated@@39 ($generated@@48 $generated@@99 $generated@@101) ($generated@@48 $generated@@100 $generated@@101)))
 :pattern ( ($generated@@48 ($generated@@26 $generated@@99 $generated@@100) $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@102 $generated@@104 ($generated@@63 $generated@@104 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@63 $generated@@104 $generated@@103))
)))
(assert (= ($generated@@7 $generated@@105) 8))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@42 $generated@@105 $generated@@107 ($generated@@106 $generated@@108)) (forall (($generated@@109 T@U) ) (!  (=> ($generated@@35 $generated@@107 $generated@@109) ($generated@@88 $generated@@109 $generated@@108))
 :pattern ( ($generated@@35 $generated@@107 $generated@@109))
)))
 :pattern ( ($generated@@42 $generated@@105 $generated@@107 ($generated@@106 $generated@@108)))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@42 $generated@@9 $generated@@110 $generated@@31) (<= ($generated@@94 0) ($generated@@14 $generated@@110)))
 :pattern ( ($generated@@42 $generated@@9 $generated@@110 $generated@@31))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@111 ($generated@@102 $generated@@115 $generated@@112) $generated@@113 $generated@@114) ($generated@@30 $generated@@115 $generated@@112 $generated@@113 $generated@@114))
 :pattern ( ($generated@@111 ($generated@@102 $generated@@115 $generated@@112) $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> ($generated@@57 $generated@@116 $generated@@117) (=> ($generated@@111 $generated@@118 $generated@@119 $generated@@116) ($generated@@111 $generated@@118 $generated@@119 $generated@@117)))
 :pattern ( ($generated@@57 $generated@@116 $generated@@117) ($generated@@111 $generated@@118 $generated@@119 $generated@@116))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@T) ) (!  (=> ($generated@@57 $generated@@120 $generated@@121) (=> ($generated@@30 $generated@@124 $generated@@122 $generated@@123 $generated@@120) ($generated@@30 $generated@@124 $generated@@122 $generated@@123 $generated@@121)))
 :pattern ( ($generated@@57 $generated@@120 $generated@@121) ($generated@@30 $generated@@124 $generated@@122 $generated@@123 $generated@@120))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@24 ($generated@@27 $generated@@125 $generated@@126)) (+ ($generated@@24 $generated@@125) ($generated@@24 $generated@@126)))
 :pattern ( ($generated@@24 ($generated@@27 $generated@@125 $generated@@126)))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@88 $generated@@127 $generated@@31) (and (= ($generated@@102 $generated@@9 ($generated@@63 $generated@@9 $generated@@127)) $generated@@127) ($generated@@42 $generated@@9 ($generated@@63 $generated@@9 $generated@@127) $generated@@31)))
 :pattern ( ($generated@@88 $generated@@127 $generated@@31))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@12 ($generated@@58 $generated@@60 $generated@@8 ($generated@@128 $generated@@129 $generated@@130) $generated@@131))  (and ($generated@@12 ($generated@@58 $generated@@60 $generated@@8 $generated@@129 $generated@@131)) (not ($generated@@12 ($generated@@58 $generated@@60 $generated@@8 $generated@@130 $generated@@131)))))
 :pattern ( ($generated@@58 $generated@@60 $generated@@8 ($generated@@128 $generated@@129 $generated@@130) $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@30 ($generated@@62 $generated@@60 $generated@@8) $generated@@132 ($generated@@87 $generated@@133) $generated@@134) (forall (($generated@@135 T@U) ) (!  (=> ($generated@@12 ($generated@@58 $generated@@60 $generated@@8 $generated@@132 $generated@@135)) ($generated@@111 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@58 $generated@@60 $generated@@8 $generated@@132 $generated@@135))
)))
 :pattern ( ($generated@@30 ($generated@@62 $generated@@60 $generated@@8) $generated@@132 ($generated@@87 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@136 ($generated@@44 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (< 0 ($generated@@48 $generated@@136 $generated@@138)) ($generated@@88 $generated@@138 $generated@@137))
 :pattern ( ($generated@@48 $generated@@136 $generated@@138))
)))
 :pattern ( ($generated@@42 $generated@@43 $generated@@136 ($generated@@44 $generated@@137)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (or (not (= $generated@@139 $generated@@141)) (not true)) (=> (and ($generated@@57 $generated@@139 $generated@@140) ($generated@@57 $generated@@140 $generated@@141)) ($generated@@57 $generated@@139 $generated@@141)))
 :pattern ( ($generated@@57 $generated@@139 $generated@@140) ($generated@@57 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@12 ($generated@@58 $generated@@60 $generated@@8 $generated@@143 $generated@@144)) (not ($generated@@12 ($generated@@58 $generated@@60 $generated@@8 ($generated@@128 $generated@@142 $generated@@143) $generated@@144))))
 :pattern ( ($generated@@128 $generated@@142 $generated@@143) ($generated@@58 $generated@@60 $generated@@8 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@88 $generated@@145 $generated) (and (= ($generated@@102 $generated@@9 ($generated@@63 $generated@@9 $generated@@145)) $generated@@145) ($generated@@42 $generated@@9 ($generated@@63 $generated@@9 $generated@@145) $generated)))
 :pattern ( ($generated@@88 $generated@@145 $generated))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@88 ($generated@@102 $generated@@148 $generated@@146) $generated@@147) ($generated@@42 $generated@@148 $generated@@146 $generated@@147))
 :pattern ( ($generated@@88 ($generated@@102 $generated@@148 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@45 $generated@@149) (forall (($generated@@150 T@U) ) (!  (and (<= 0 ($generated@@48 $generated@@149 $generated@@150)) (<= ($generated@@48 $generated@@149 $generated@@150) ($generated@@24 $generated@@149)))
 :pattern ( ($generated@@48 $generated@@149 $generated@@150))
)))
 :pattern ( ($generated@@45 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! (<= 0 ($generated@@24 $generated@@151))
 :pattern ( ($generated@@24 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@30 $generated@@105 $generated@@152 ($generated@@106 $generated@@153) $generated@@154) (forall (($generated@@155 T@U) ) (!  (=> ($generated@@35 $generated@@152 $generated@@155) ($generated@@111 $generated@@155 $generated@@153 $generated@@154))
 :pattern ( ($generated@@35 $generated@@152 $generated@@155))
)))
 :pattern ( ($generated@@30 $generated@@105 $generated@@152 ($generated@@106 $generated@@153) $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@48 $generated@@156 $generated@@157) 0)
 :pattern ( ($generated@@48 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@106 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@106 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@23 ($generated@@106 $generated@@160)) $generated@@1)
 :pattern ( ($generated@@106 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@161 ($generated@@87 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@87 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@23 ($generated@@87 $generated@@163)) $generated@@2)
 :pattern ( ($generated@@87 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@164 ($generated@@44 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@44 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ) (! (= ($generated@@23 ($generated@@44 $generated@@166)) $generated@@3)
 :pattern ( ($generated@@44 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@T) ) (! (= ($generated@@63 $generated@@168 ($generated@@102 $generated@@168 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@102 $generated@@168 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@26 $generated@@169 ($generated@@26 $generated@@169 $generated@@170)) ($generated@@26 $generated@@169 $generated@@170))
 :pattern ( ($generated@@26 $generated@@169 ($generated@@26 $generated@@169 $generated@@170)))
)))
(assert (forall (($generated@@171 T@U) ) (!  (and (= (= ($generated@@24 $generated@@171) 0) (= $generated@@171 $generated@@156)) (=> (or (not (= ($generated@@24 $generated@@171) 0)) (not true)) (exists (($generated@@172 T@U) ) (! (< 0 ($generated@@48 $generated@@171 $generated@@172))
 :pattern ( ($generated@@48 $generated@@171 $generated@@172))
))))
 :pattern ( ($generated@@24 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@48 ($generated@@27 $generated@@173 $generated@@174) $generated@@175) (+ ($generated@@48 $generated@@173 $generated@@175) ($generated@@48 $generated@@174 $generated@@175)))
 :pattern ( ($generated@@48 ($generated@@27 $generated@@173 $generated@@174) $generated@@175))
)))
(assert  (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@176 $generated@@179 $generated@@180 $generated@@181 ($generated@@178 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@184 $generated@@185) $generated@@182)
 :weight 0
)) (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@176 $generated@@186 $generated@@187 $generated@@188 ($generated@@178 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@176 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@176 $generated@@195 $generated@@196 $generated@@197 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@176 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@12 ($generated@@176 $generated@@61 $generated@@59 $generated@@8 ($generated@@177 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (or (not (= $generated@@208 $generated@@204)) (not true)) ($generated@@12 ($generated@@63 $generated@@8 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@61 ($generated@@62 $generated@@59 $generated@@60) $generated@@205 $generated@@208) $generated@@206)))) $generated@@207))
 :pattern ( ($generated@@176 $generated@@61 $generated@@59 $generated@@8 ($generated@@177 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@210 Int) ($generated@@211 Int) ) (! (= (<= $generated@@210 $generated@@211) (= ($generated@@39 $generated@@210 $generated@@211) $generated@@210))
 :pattern ( ($generated@@39 $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 Int) ($generated@@213 Int) ) (! (= (<= $generated@@213 $generated@@212) (= ($generated@@39 $generated@@212 $generated@@213) $generated@@213))
 :pattern ( ($generated@@39 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> ($generated@@88 $generated@@214 ($generated@@106 $generated@@215)) (and (= ($generated@@102 $generated@@105 ($generated@@63 $generated@@105 $generated@@214)) $generated@@214) ($generated@@42 $generated@@105 ($generated@@63 $generated@@105 $generated@@214) ($generated@@106 $generated@@215))))
 :pattern ( ($generated@@88 $generated@@214 ($generated@@106 $generated@@215)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> ($generated@@88 $generated@@216 ($generated@@87 $generated@@217)) (and (= ($generated@@102 ($generated@@62 $generated@@60 $generated@@8) ($generated@@63 ($generated@@62 $generated@@60 $generated@@8) $generated@@216)) $generated@@216) ($generated@@42 ($generated@@62 $generated@@60 $generated@@8) ($generated@@63 ($generated@@62 $generated@@60 $generated@@8) $generated@@216) ($generated@@87 $generated@@217))))
 :pattern ( ($generated@@88 $generated@@216 ($generated@@87 $generated@@217)))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> ($generated@@88 $generated@@218 ($generated@@44 $generated@@219)) (and (= ($generated@@102 $generated@@43 ($generated@@63 $generated@@43 $generated@@218)) $generated@@218) ($generated@@42 $generated@@43 ($generated@@63 $generated@@43 $generated@@218) ($generated@@44 $generated@@219))))
 :pattern ( ($generated@@88 $generated@@218 ($generated@@44 $generated@@219)))
)))
(assert (= ($generated@@23 $generated@@31) $generated@@5))
(assert (= ($generated@@220 $generated@@31) $generated@@6))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (= ($generated@@48 ($generated@@25 $generated@@221 $generated@@222) $generated@@223) ($generated@@92 (- ($generated@@48 $generated@@221 $generated@@223) ($generated@@48 $generated@@222 $generated@@223))))
 :pattern ( ($generated@@48 ($generated@@25 $generated@@221 $generated@@222) $generated@@223))
)))
(assert (forall (($generated@@224 Int) ) (!  (=> (< $generated@@224 0) (= ($generated@@92 $generated@@224) 0))
 :pattern ( ($generated@@92 $generated@@224))
)))
(assert (forall (($generated@@225 Int) ) (! (= ($generated@@102 $generated@@9 ($generated@@13 ($generated@@94 $generated@@225))) ($generated@@96 $generated@@60 ($generated@@102 $generated@@9 ($generated@@13 $generated@@225))))
 :pattern ( ($generated@@102 $generated@@9 ($generated@@13 ($generated@@94 $generated@@225))))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@T) ) (! (= ($generated@@102 $generated@@227 ($generated@@96 $generated@@227 $generated@@226)) ($generated@@96 $generated@@60 ($generated@@102 $generated@@227 $generated@@226)))
 :pattern ( ($generated@@102 $generated@@227 ($generated@@96 $generated@@227 $generated@@226)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (= ($generated@@30 $generated@@43 $generated@@228 ($generated@@44 $generated@@229) $generated@@230) (forall (($generated@@231 T@U) ) (!  (=> (< 0 ($generated@@48 $generated@@228 $generated@@231)) ($generated@@111 $generated@@231 $generated@@229 $generated@@230))
 :pattern ( ($generated@@48 $generated@@228 $generated@@231))
)))
 :pattern ( ($generated@@30 $generated@@43 $generated@@228 ($generated@@44 $generated@@229) $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! ($generated@@30 $generated@@9 $generated@@233 $generated $generated@@232)
 :pattern ( ($generated@@30 $generated@@9 $generated@@233 $generated $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! ($generated@@42 $generated@@9 $generated@@234 $generated)
 :pattern ( ($generated@@42 $generated@@9 $generated@@234 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@259  (=> (= $generated@@235 ($generated@@177 $generated@@236 $generated@@237 $generated@@4 false)) (=> (and (= $generated@@238 ($generated@@34 $generated@@239 $generated@@240)) (= $generated@@241 ($generated@@128 $generated@@242 $generated@@243))) (=> (and (and (= $generated@@244 ($generated@@25 $generated@@245 $generated@@246)) ($generated@@42 $generated@@105 $generated@@247 ($generated@@106 $generated))) (and ($generated@@42 ($generated@@62 $generated@@60 $generated@@8) $generated@@248 ($generated@@87 $generated)) ($generated@@42 $generated@@43 $generated@@249 ($generated@@44 $generated)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@42 $generated@@105 $generated@@247 ($generated@@106 $generated@@31))) (=> ($generated@@42 $generated@@105 $generated@@247 ($generated@@106 $generated@@31)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@42 ($generated@@62 $generated@@60 $generated@@8) $generated@@248 ($generated@@87 $generated@@31))) (=> ($generated@@42 ($generated@@62 $generated@@60 $generated@@8) $generated@@248 ($generated@@87 $generated@@31)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@42 $generated@@43 $generated@@249 ($generated@@44 $generated@@31))))))))))))
(let (($generated@@260  (=> (and ($generated@@250 $generated@@237) ($generated@@251 $generated@@237)) (=> (and (and (and (and (and ($generated@@42 $generated@@105 $generated@@239 ($generated@@106 $generated@@31)) ($generated@@30 $generated@@105 $generated@@239 ($generated@@106 $generated@@31) $generated@@237)) (and ($generated@@42 ($generated@@62 $generated@@60 $generated@@8) $generated@@242 ($generated@@87 $generated@@31)) ($generated@@30 ($generated@@62 $generated@@60 $generated@@8) $generated@@242 ($generated@@87 $generated@@31) $generated@@237))) (and (and ($generated@@42 $generated@@43 $generated@@245 ($generated@@44 $generated@@31)) ($generated@@30 $generated@@43 $generated@@245 ($generated@@44 $generated@@31) $generated@@237)) (and ($generated@@42 $generated@@105 $generated@@240 ($generated@@106 $generated)) ($generated@@30 $generated@@105 $generated@@240 ($generated@@106 $generated) $generated@@237)))) (and (and (and ($generated@@42 ($generated@@62 $generated@@60 $generated@@8) $generated@@243 ($generated@@87 $generated)) ($generated@@30 ($generated@@62 $generated@@60 $generated@@8) $generated@@243 ($generated@@87 $generated) $generated@@237)) (and ($generated@@42 $generated@@43 $generated@@246 ($generated@@44 $generated)) ($generated@@30 $generated@@43 $generated@@246 ($generated@@44 $generated) $generated@@237))) (and (and ($generated@@42 $generated@@105 $generated@@252 ($generated@@106 $generated)) ($generated@@30 $generated@@105 $generated@@252 ($generated@@106 $generated) $generated@@237)) true))) (and (and (and (and ($generated@@42 ($generated@@62 $generated@@60 $generated@@8) $generated@@253 ($generated@@87 $generated)) ($generated@@30 ($generated@@62 $generated@@60 $generated@@8) $generated@@253 ($generated@@87 $generated) $generated@@237)) true) (and (and ($generated@@42 $generated@@43 $generated@@254 ($generated@@44 $generated)) ($generated@@30 $generated@@43 $generated@@254 ($generated@@44 $generated) $generated@@237)) true)) (and (and (and ($generated@@42 $generated@@105 $generated@@255 ($generated@@106 $generated)) true) (and ($generated@@42 ($generated@@62 $generated@@60 $generated@@8) $generated@@256 ($generated@@87 $generated)) true)) (and (and ($generated@@42 $generated@@43 $generated@@257 ($generated@@44 $generated)) true) (and (= 1 $generated@@258) (= (ControlFlow 0 5) 2)))))) $generated@@259))))
$generated@@260)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
