(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@69 () Int)
(declare-fun $generated@@70 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@72 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@73 (T@U T@U) Bool)
(declare-fun $generated@@74 (Int) Int)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@3) 0))
(assert (= ($generated@@27 $generated) $generated@@1))
(assert (= ($generated@@27 $generated@@0) $generated@@2))
(assert (= ($generated@@28 $generated@@3) $generated@@4))
(assert (= ($generated@@10 $generated@@30) 3))
(assert (forall (($generated@@34 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@34 $generated@@31)  (or (= $generated@@34 $generated@@32) (= ($generated@@33 $generated@@34) $generated@@31)))
 :pattern ( ($generated@@29 $generated@@30 $generated@@34 $generated@@31))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@35 $generated@@30 $generated@@37 $generated@@36 $generated@@38) ($generated@@35 $generated@@30 $generated@@37 $generated@@31 $generated@@38))
 :pattern ( ($generated@@35 $generated@@30 $generated@@37 $generated@@36 $generated@@38))
 :pattern ( ($generated@@35 $generated@@30 $generated@@37 $generated@@31 $generated@@38))
)))
(assert (= ($generated@@26 $generated@@39) 0))
(assert (= ($generated@@40 $generated@@7 $generated@@9) $generated@@39))
(assert  (not ($generated@@41 $generated@@39)))
(assert  (and (and (and (and (and (and (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@43 $generated@@50 $generated@@51 ($generated@@47 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@43 $generated@@55 $generated@@56 ($generated@@47 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@43 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@10 $generated@@44) 4)) (= ($generated@@10 $generated@@45) 5)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@10 ($generated@@46 $generated@@61 $generated@@62)) 6))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@46 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@46 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@49 ($generated@@46 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@46 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@35 $generated@@30 $generated@@67 $generated@@31 $generated@@68)  (or (= $generated@@67 $generated@@32) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@68 $generated@@67) $generated@@3)))))
 :pattern ( ($generated@@35 $generated@@30 $generated@@67 $generated@@31 $generated@@68))
)))
(assert  (=> (<= 1 $generated@@69) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@72 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79) (and (< 1 $generated@@69) (and (and (and (and (and ($generated@@71 $generated@@75) ($generated@@71 $generated@@76)) ($generated@@73 $generated@@75 $generated@@76)) (and (or (not (= $generated@@77 $generated@@32)) (not true)) (and ($generated@@29 $generated@@30 $generated@@77 $generated@@36) ($generated@@35 $generated@@30 $generated@@77 $generated@@36 $generated@@75)))) ($generated@@29 $generated@@30 $generated@@78 $generated@@36)) ($generated@@29 $generated@@30 $generated@@79 $generated@@36)))) (= ($generated@@70 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79)  (and (and (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@75 $generated@@77) $generated@@39))) ($generated@@74 3)) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@75 $generated@@78) $generated@@39))) ($generated@@74 3))) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@75 $generated@@79) $generated@@39))) ($generated@@74 3)))))
 :pattern ( ($generated@@70 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79) ($generated@@71 $generated@@76))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> ($generated@@73 $generated@@80 $generated@@81) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@80 $generated@@82) $generated@@3))) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@81 $generated@@82) $generated@@3))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@81 $generated@@82) $generated@@3))
)))
 :pattern ( ($generated@@73 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 Int) ) (! (= ($generated@@74 $generated@@83) $generated@@83)
 :pattern ( ($generated@@74 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@84 $generated@@86 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@86 $generated@@85))
)))
(assert  (=> (<= 1 $generated@@69) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or ($generated@@72 $generated@@87 $generated@@88 $generated@@89 ($generated@@84 $generated@@30 $generated@@90) ($generated@@84 $generated@@30 $generated@@91)) (and (< 1 $generated@@69) (and (and (and (and (and ($generated@@71 $generated@@87) ($generated@@71 $generated@@88)) ($generated@@73 $generated@@87 $generated@@88)) (and (or (not (= $generated@@89 $generated@@32)) (not true)) (and ($generated@@29 $generated@@30 $generated@@89 $generated@@36) ($generated@@35 $generated@@30 $generated@@89 $generated@@36 $generated@@87)))) ($generated@@29 $generated@@30 $generated@@90 $generated@@36)) ($generated@@29 $generated@@30 $generated@@91 $generated@@36)))) (= ($generated@@70 $generated@@87 $generated@@88 $generated@@89 ($generated@@84 $generated@@30 $generated@@90) ($generated@@84 $generated@@30 $generated@@91))  (and (and (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@87 $generated@@89) $generated@@39))) ($generated@@74 3)) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@87 ($generated@@84 $generated@@30 $generated@@90)) $generated@@39))) ($generated@@74 3))) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@87 ($generated@@84 $generated@@30 $generated@@91)) $generated@@39))) ($generated@@74 3)))))
 :weight 3
 :pattern ( ($generated@@70 $generated@@87 $generated@@88 $generated@@89 ($generated@@84 $generated@@30 $generated@@90) ($generated@@84 $generated@@30 $generated@@91)) ($generated@@71 $generated@@88))
))))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@42 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@42 $generated@@94 $generated@@93))
)))
(assert ($generated@@41 $generated@@3))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (and (and ($generated@@71 $generated@@95) (and (or (not (= $generated@@96 $generated@@32)) (not true)) (= ($generated@@33 $generated@@96) $generated@@31))) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@95 $generated@@96) $generated@@3)))) ($generated@@35 $generated@@12 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@95 $generated@@96) $generated@@39)) $generated@@0 $generated@@95))
 :pattern ( ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@95 $generated@@96) $generated@@39)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (!  (=> ($generated@@73 $generated@@97 $generated@@98) (=> ($generated@@35 $generated@@101 $generated@@99 $generated@@100 $generated@@97) ($generated@@35 $generated@@101 $generated@@99 $generated@@100 $generated@@98)))
 :pattern ( ($generated@@73 $generated@@97 $generated@@98) ($generated@@35 $generated@@101 $generated@@99 $generated@@100 $generated@@97))
)))
(assert  (=> (<= 1 $generated@@69) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or ($generated@@72 $generated@@102 $generated@@103 ($generated@@84 $generated@@30 $generated@@104) ($generated@@84 $generated@@30 $generated@@105) ($generated@@84 $generated@@30 $generated@@106)) (and (< 1 $generated@@69) (and (and (and (and (and ($generated@@71 $generated@@102) ($generated@@71 $generated@@103)) ($generated@@73 $generated@@102 $generated@@103)) (and (or (not (= $generated@@104 $generated@@32)) (not true)) (and ($generated@@29 $generated@@30 $generated@@104 $generated@@36) ($generated@@35 $generated@@30 $generated@@104 $generated@@36 $generated@@102)))) ($generated@@29 $generated@@30 $generated@@105 $generated@@36)) ($generated@@29 $generated@@30 $generated@@106 $generated@@36)))) (= ($generated@@70 $generated@@102 $generated@@103 ($generated@@84 $generated@@30 $generated@@104) ($generated@@84 $generated@@30 $generated@@105) ($generated@@84 $generated@@30 $generated@@106))  (and (and (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@102 ($generated@@84 $generated@@30 $generated@@104)) $generated@@39))) ($generated@@74 3)) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@102 ($generated@@84 $generated@@30 $generated@@105)) $generated@@39))) ($generated@@74 3))) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@102 ($generated@@84 $generated@@30 $generated@@106)) $generated@@39))) ($generated@@74 3)))))
 :weight 3
 :pattern ( ($generated@@70 $generated@@102 $generated@@103 ($generated@@84 $generated@@30 $generated@@104) ($generated@@84 $generated@@30 $generated@@105) ($generated@@84 $generated@@30 $generated@@106)) ($generated@@71 $generated@@103))
))))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@107 $generated@@36)  (and ($generated@@29 $generated@@30 $generated@@107 $generated@@31) (or (not (= $generated@@107 $generated@@32)) (not true))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@107 $generated@@36))
 :pattern ( ($generated@@29 $generated@@30 $generated@@107 $generated@@31))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or (not (= $generated@@108 $generated@@110)) (not true)) (=> (and ($generated@@73 $generated@@108 $generated@@109) ($generated@@73 $generated@@109 $generated@@110)) ($generated@@73 $generated@@108 $generated@@110)))
 :pattern ( ($generated@@73 $generated@@108 $generated@@109) ($generated@@73 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (and (= ($generated@@111 ($generated@@40 $generated@@112 $generated@@113)) $generated@@112) (= ($generated@@28 ($generated@@40 $generated@@112 $generated@@113)) $generated@@113))
 :pattern ( ($generated@@40 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@42 $generated@@115 ($generated@@92 $generated@@115 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@92 $generated@@115 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (and ($generated@@71 $generated@@116) (and (or (not (= $generated@@117 $generated@@32)) (not true)) (= ($generated@@33 $generated@@117) $generated@@31))) ($generated@@29 $generated@@12 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@116 $generated@@117) $generated@@39)) $generated@@0))
 :pattern ( ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@116 $generated@@117) $generated@@39)))
)))
(assert  (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@118 $generated@@121 $generated@@122 $generated@@123 ($generated@@120 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@126 $generated@@127) $generated@@124)
 :weight 0
)) (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@118 $generated@@128 $generated@@129 $generated@@130 ($generated@@120 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@118 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@118 $generated@@137 $generated@@138 $generated@@139 ($generated@@120 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@118 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@15 ($generated@@118 $generated@@30 $generated@@44 $generated@@11 ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))  (=> (and (or (not (= $generated@@150 $generated@@146)) (not true)) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@147 $generated@@150) $generated@@148)))) $generated@@149))
 :pattern ( ($generated@@118 $generated@@30 $generated@@44 $generated@@11 ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (and ($generated@@71 $generated@@154) ($generated@@71 $generated@@155)) (and (or (not (= $generated@@156 $generated@@32)) (not true)) ($generated@@29 $generated@@30 $generated@@156 $generated@@36))) (or ($generated@@72 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158) (and ($generated@@29 $generated@@30 $generated@@157 $generated@@36) ($generated@@29 $generated@@30 $generated@@158 $generated@@36)))) (and ($generated@@152 $generated@@154) ($generated@@73 $generated@@154 $generated@@155))) (=> (forall (($generated@@159 T@U) ($generated@@160 T@U) ) true) (= ($generated@@70 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158) ($generated@@70 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@158))))
 :pattern ( ($generated@@152 $generated@@154) ($generated@@73 $generated@@154 $generated@@155) ($generated@@70 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@158))
)))
(assert (= ($generated@@27 $generated@@36) $generated@@5))
(assert (= ($generated@@161 $generated@@36) $generated@@8))
(assert (= ($generated@@27 $generated@@31) $generated@@6))
(assert (= ($generated@@161 $generated@@31) $generated@@8))
(assert (forall (($generated@@162 Int) ) (! (= ($generated@@92 $generated@@12 ($generated@@16 ($generated@@74 $generated@@162))) ($generated@@84 $generated@@45 ($generated@@92 $generated@@12 ($generated@@16 $generated@@162))))
 :pattern ( ($generated@@92 $generated@@12 ($generated@@16 ($generated@@74 $generated@@162))))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@92 $generated@@164 ($generated@@84 $generated@@164 $generated@@163)) ($generated@@84 $generated@@45 ($generated@@92 $generated@@164 $generated@@163)))
 :pattern ( ($generated@@92 $generated@@164 ($generated@@84 $generated@@164 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! ($generated@@35 $generated@@12 $generated@@166 $generated@@0 $generated@@165)
 :pattern ( ($generated@@35 $generated@@12 $generated@@166 $generated@@0 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! ($generated@@35 $generated@@11 $generated@@168 $generated $generated@@167)
 :pattern ( ($generated@@35 $generated@@11 $generated@@168 $generated $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! ($generated@@29 $generated@@12 $generated@@169 $generated@@0)
 :pattern ( ($generated@@29 $generated@@12 $generated@@169 $generated@@0))
)))
(assert (forall (($generated@@170 T@U) ) (! ($generated@@29 $generated@@11 $generated@@170 $generated)
 :pattern ( ($generated@@29 $generated@@11 $generated@@170 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@178 true))
(let (($generated@@179  (=> (and (not (and (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@171 $generated@@172) $generated@@39))) ($generated@@74 3)) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@171 $generated@@173) $generated@@39))) ($generated@@74 3)))) (= (ControlFlow 0 6) 2)) $generated@@178)))
(let (($generated@@180  (=> (and (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@171 $generated@@172) $generated@@39))) ($generated@@74 3)) (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@171 $generated@@173) $generated@@39))) ($generated@@74 3))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (not (= $generated@@174 $generated@@32)) (not true))) (=> (or (not (= $generated@@174 $generated@@32)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@35 $generated@@30 $generated@@174 $generated@@36 $generated@@171)) (=> ($generated@@35 $generated@@30 $generated@@174 $generated@@36 $generated@@171) (=> (= (ControlFlow 0 3) 2) $generated@@178))))))))
(let (($generated@@181  (=> (or (not (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@171 $generated@@172) $generated@@39))) ($generated@@74 3))) (not true)) (and (=> (= (ControlFlow 0 10) 3) $generated@@180) (=> (= (ControlFlow 0 10) 6) $generated@@179)))))
(let (($generated@@182  (=> (= ($generated@@17 ($generated@@42 $generated@@12 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@30 ($generated@@46 $generated@@44 $generated@@45) $generated@@171 $generated@@172) $generated@@39))) ($generated@@74 3)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (or (not (= $generated@@173 $generated@@32)) (not true))) (=> (or (not (= $generated@@173 $generated@@32)) (not true)) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@35 $generated@@30 $generated@@173 $generated@@36 $generated@@171)) (=> ($generated@@35 $generated@@30 $generated@@173 $generated@@36 $generated@@171) (and (=> (= (ControlFlow 0 7) 3) $generated@@180) (=> (= (ControlFlow 0 7) 6) $generated@@179)))))))))
(let (($generated@@183  (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@35 $generated@@30 $generated@@172 $generated@@36 $generated@@171)) (=> ($generated@@35 $generated@@30 $generated@@172 $generated@@36 $generated@@171) (and (=> (= (ControlFlow 0 11) 7) $generated@@182) (=> (= (ControlFlow 0 11) 10) $generated@@181))))))
(let (($generated@@184 true))
(let (($generated@@185  (=> (= $generated@@175 ($generated@@119 $generated@@32 $generated@@176 $generated@@3 false)) (and (=> (= (ControlFlow 0 13) 1) $generated@@184) (=> (= (ControlFlow 0 13) 11) $generated@@183)))))
(let (($generated@@186  (=> (and ($generated@@71 $generated@@171) ($generated@@152 $generated@@171)) (=> (and (and (or (not (= $generated@@172 $generated@@32)) (not true)) (and ($generated@@29 $generated@@30 $generated@@172 $generated@@36) ($generated@@35 $generated@@30 $generated@@172 $generated@@36 $generated@@177))) (and ($generated@@29 $generated@@30 $generated@@173 $generated@@36) ($generated@@35 $generated@@30 $generated@@173 $generated@@36 $generated@@177))) (=> (and (and (and ($generated@@29 $generated@@30 $generated@@174 $generated@@36) ($generated@@35 $generated@@30 $generated@@174 $generated@@36 $generated@@176)) (= 1 $generated@@69)) (and (and (= $generated@@177 $generated@@171) (and ($generated@@73 $generated@@177 $generated@@176) ($generated@@71 $generated@@176))) (= (ControlFlow 0 14) 13))) $generated@@185)))))
$generated@@186))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 4))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
