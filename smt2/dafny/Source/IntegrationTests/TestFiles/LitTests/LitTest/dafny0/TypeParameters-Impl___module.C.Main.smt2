(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@31 () Int)
(declare-fun $generated@@32 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@75 (Int) Int)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@1))
(assert (= ($generated@@23 $generated@@0) $generated@@2))
(assert (= ($generated@@7 $generated@@25) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@29 ($generated@@26 $generated@@28) $generated@@30) ($generated@@24 $generated@@25 $generated@@29 ($generated@@27 $generated@@28) $generated@@30))
 :pattern ( ($generated@@24 $generated@@25 $generated@@29 ($generated@@26 $generated@@28) $generated@@30))
 :pattern ( ($generated@@24 $generated@@25 $generated@@29 ($generated@@27 $generated@@28) $generated@@30))
)))
(assert (= ($generated@@7 $generated@@34) 4))
(assert  (=> (<= 0 $generated@@31) (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@35 $generated@@39 $generated@@40 ($generated@@33 $generated@@25 $generated@@41) ($generated@@33 $generated@@34 $generated@@42) ($generated@@33 $generated@@34 $generated@@43)) (and (< 0 $generated@@31) (and (and (and (or (not (= $generated@@41 $generated@@36)) (not true)) ($generated@@37 $generated@@25 $generated@@41 ($generated@@26 $generated@@39))) ($generated@@38 $generated@@42 $generated@@40)) ($generated@@38 $generated@@43 $generated@@39)))) (= ($generated@@32 $generated@@39 $generated@@40 ($generated@@33 $generated@@25 $generated@@41) ($generated@@33 $generated@@34 $generated@@42) ($generated@@33 $generated@@34 $generated@@43))  (and (= ($generated@@33 $generated@@34 $generated@@42) ($generated@@33 $generated@@34 $generated@@42)) (= ($generated@@33 $generated@@34 $generated@@43) ($generated@@33 $generated@@34 $generated@@43)))))
 :weight 3
 :pattern ( ($generated@@32 $generated@@39 $generated@@40 ($generated@@33 $generated@@25 $generated@@41) ($generated@@33 $generated@@34 $generated@@42) ($generated@@33 $generated@@34 $generated@@43)))
))))
(assert  (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@45 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@45 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@45 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@7 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@7 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@69 ($generated@@27 $generated@@68) $generated@@70)  (or (= $generated@@69 $generated@@36) ($generated@@12 ($generated@@44 $generated@@8 ($generated@@45 $generated@@46 $generated@@34 ($generated@@45 $generated@@25 ($generated@@47 $generated@@46 $generated@@34) $generated@@70 $generated@@69) $generated@@3)))))
 :pattern ( ($generated@@24 $generated@@25 $generated@@69 ($generated@@27 $generated@@68) $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@71 $generated@@72 $generated@@73) (forall (($generated@@74 T@U) ) (!  (=> ($generated@@12 ($generated@@44 $generated@@8 ($generated@@45 $generated@@46 $generated@@34 ($generated@@45 $generated@@25 ($generated@@47 $generated@@46 $generated@@34) $generated@@72 $generated@@74) $generated@@3))) ($generated@@12 ($generated@@44 $generated@@8 ($generated@@45 $generated@@46 $generated@@34 ($generated@@45 $generated@@25 ($generated@@47 $generated@@46 $generated@@34) $generated@@73 $generated@@74) $generated@@3))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@34 ($generated@@45 $generated@@25 ($generated@@47 $generated@@46 $generated@@34) $generated@@73 $generated@@74) $generated@@3))
)))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@75 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@33 $generated@@78 $generated@@77) $generated@@77)
 :pattern ( ($generated@@33 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 ($generated@@44 $generated@@81 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@44 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@37 $generated@@25 $generated@@83 ($generated@@26 $generated@@82))  (and ($generated@@37 $generated@@25 $generated@@83 ($generated@@27 $generated@@82)) (or (not (= $generated@@83 $generated@@36)) (not true))))
 :pattern ( ($generated@@37 $generated@@25 $generated@@83 ($generated@@26 $generated@@82)))
 :pattern ( ($generated@@37 $generated@@25 $generated@@83 ($generated@@27 $generated@@82)))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@84 ($generated@@79 $generated@@88 $generated@@85) $generated@@86 $generated@@87) ($generated@@24 $generated@@88 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@84 ($generated@@79 $generated@@88 $generated@@85) $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> ($generated@@71 $generated@@89 $generated@@90) (=> ($generated@@84 $generated@@91 $generated@@92 $generated@@89) ($generated@@84 $generated@@91 $generated@@92 $generated@@90)))
 :pattern ( ($generated@@71 $generated@@89 $generated@@90) ($generated@@84 $generated@@91 $generated@@92 $generated@@89))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (!  (=> ($generated@@71 $generated@@93 $generated@@94) (=> ($generated@@24 $generated@@97 $generated@@95 $generated@@96 $generated@@93) ($generated@@24 $generated@@97 $generated@@95 $generated@@96 $generated@@94)))
 :pattern ( ($generated@@71 $generated@@93 $generated@@94) ($generated@@24 $generated@@97 $generated@@95 $generated@@96 $generated@@93))
)))
(assert (forall (($generated@@99 T@U) ) (!  (and (= ($generated@@23 ($generated@@27 $generated@@99)) $generated@@4) (= ($generated@@98 ($generated@@27 $generated@@99)) $generated@@6))
 :pattern ( ($generated@@27 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (!  (and (= ($generated@@23 ($generated@@26 $generated@@100)) $generated@@5) (= ($generated@@98 ($generated@@26 $generated@@100)) $generated@@6))
 :pattern ( ($generated@@26 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@37 $generated@@25 $generated@@103 ($generated@@27 $generated@@102))  (or (= $generated@@103 $generated@@36) (= ($generated@@101 $generated@@103) ($generated@@27 $generated@@102))))
 :pattern ( ($generated@@37 $generated@@25 $generated@@103 ($generated@@27 $generated@@102)))
)))
(assert  (=> (<= 0 $generated@@31) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (or ($generated@@35 $generated@@104 $generated@@105 $generated@@106 $generated@@107 $generated@@108) (and (< 0 $generated@@31) (and (and (and (or (not (= $generated@@106 $generated@@36)) (not true)) ($generated@@37 $generated@@25 $generated@@106 ($generated@@26 $generated@@104))) ($generated@@38 $generated@@107 $generated@@105)) ($generated@@38 $generated@@108 $generated@@104)))) (= ($generated@@32 $generated@@104 $generated@@105 $generated@@106 $generated@@107 $generated@@108)  (and (= $generated@@107 $generated@@107) (= $generated@@108 $generated@@108))))
 :pattern ( ($generated@@32 $generated@@104 $generated@@105 $generated@@106 $generated@@107 $generated@@108))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or (not (= $generated@@109 $generated@@111)) (not true)) (=> (and ($generated@@71 $generated@@109 $generated@@110) ($generated@@71 $generated@@110 $generated@@111)) ($generated@@71 $generated@@109 $generated@@111)))
 :pattern ( ($generated@@71 $generated@@109 $generated@@110) ($generated@@71 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@38 $generated@@112 $generated@@0) (and (= ($generated@@79 $generated@@9 ($generated@@44 $generated@@9 $generated@@112)) $generated@@112) ($generated@@37 $generated@@9 ($generated@@44 $generated@@9 $generated@@112) $generated@@0)))
 :pattern ( ($generated@@38 $generated@@112 $generated@@0))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@38 $generated@@113 $generated) (and (= ($generated@@79 $generated@@8 ($generated@@44 $generated@@8 $generated@@113)) $generated@@113) ($generated@@37 $generated@@8 ($generated@@44 $generated@@8 $generated@@113) $generated)))
 :pattern ( ($generated@@38 $generated@@113 $generated))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@38 ($generated@@79 $generated@@116 $generated@@114) $generated@@115) ($generated@@37 $generated@@116 $generated@@114 $generated@@115))
 :pattern ( ($generated@@38 ($generated@@79 $generated@@116 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 ($generated@@27 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@27 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@119 ($generated@@26 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@26 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@44 $generated@@122 ($generated@@79 $generated@@122 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@79 $generated@@122 $generated@@121))
)))
(assert  (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@123 $generated@@126 $generated@@127 $generated@@128 ($generated@@125 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@131 $generated@@132) $generated@@129)
 :weight 0
)) (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@123 $generated@@133 $generated@@134 $generated@@135 ($generated@@125 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@123 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@123 $generated@@142 $generated@@143 $generated@@144 ($generated@@125 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@123 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@12 ($generated@@123 $generated@@25 $generated@@46 $generated@@8 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))  (=> (and (or (not (= $generated@@155 $generated@@151)) (not true)) ($generated@@12 ($generated@@44 $generated@@8 ($generated@@45 $generated@@46 $generated@@34 ($generated@@45 $generated@@25 ($generated@@47 $generated@@46 $generated@@34) $generated@@152 $generated@@155) $generated@@153)))) $generated@@154))
 :pattern ( ($generated@@123 $generated@@25 $generated@@46 $generated@@8 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@38 $generated@@158 ($generated@@27 $generated@@157)) (and (= ($generated@@79 $generated@@25 ($generated@@44 $generated@@25 $generated@@158)) $generated@@158) ($generated@@37 $generated@@25 ($generated@@44 $generated@@25 $generated@@158) ($generated@@27 $generated@@157))))
 :pattern ( ($generated@@38 $generated@@158 ($generated@@27 $generated@@157)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@38 $generated@@160 ($generated@@26 $generated@@159)) (and (= ($generated@@79 $generated@@25 ($generated@@44 $generated@@25 $generated@@160)) $generated@@160) ($generated@@37 $generated@@25 ($generated@@44 $generated@@25 $generated@@160) ($generated@@26 $generated@@159))))
 :pattern ( ($generated@@38 $generated@@160 ($generated@@26 $generated@@159)))
)))
(assert (forall (($generated@@161 Int) ) (! (= ($generated@@79 $generated@@9 ($generated@@13 ($generated@@75 $generated@@161))) ($generated@@33 $generated@@34 ($generated@@79 $generated@@9 ($generated@@13 $generated@@161))))
 :pattern ( ($generated@@79 $generated@@9 ($generated@@13 ($generated@@75 $generated@@161))))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@79 $generated@@163 ($generated@@33 $generated@@163 $generated@@162)) ($generated@@33 $generated@@34 ($generated@@79 $generated@@163 $generated@@162)))
 :pattern ( ($generated@@79 $generated@@163 ($generated@@33 $generated@@163 $generated@@162)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! ($generated@@24 $generated@@9 $generated@@165 $generated@@0 $generated@@164)
 :pattern ( ($generated@@24 $generated@@9 $generated@@165 $generated@@0 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! ($generated@@24 $generated@@8 $generated@@167 $generated $generated@@166)
 :pattern ( ($generated@@24 $generated@@8 $generated@@167 $generated $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (! ($generated@@37 $generated@@9 $generated@@168 $generated@@0)
 :pattern ( ($generated@@37 $generated@@9 $generated@@168 $generated@@0))
)))
(assert (forall (($generated@@169 T@U) ) (! ($generated@@37 $generated@@8 $generated@@169 $generated)
 :pattern ( ($generated@@37 $generated@@8 $generated@@169 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () Bool)
(declare-fun $generated@@171 () Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () Bool)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@195  (and (=> (= (ControlFlow 0 2) (- 0 3)) $generated@@170) (=> (= (ControlFlow 0 2) (- 0 1)) (or $generated@@171 (not $generated@@171))))))
(let (($generated@@196  (=> (and $generated@@171 (= (ControlFlow 0 6) 2)) $generated@@195)))
(let (($generated@@197  (=> (and (not $generated@@171) (= (ControlFlow 0 5) 2)) $generated@@195)))
(let (($generated@@198  (=> $generated@@170 (and (=> (= (ControlFlow 0 7) 5) $generated@@197) (=> (= (ControlFlow 0 7) 6) $generated@@196)))))
(let (($generated@@199  (=> (and (not $generated@@170) (= (ControlFlow 0 4) 2)) $generated@@195)))
(let (($generated@@200  (=> (and (and ($generated@@35 $generated@@172 $generated@@0 $generated@@173 ($generated@@79 $generated@@9 ($generated@@13 ($generated@@75 3))) $generated@@174) (=> ($generated@@32 $generated@@172 $generated@@0 $generated@@173 ($generated@@79 $generated@@9 ($generated@@13 ($generated@@75 3))) $generated@@174) ($generated@@35 $generated@@172 ($generated@@26 $generated@@172) $generated@@173 ($generated@@79 $generated@@25 $generated@@173) $generated@@174))) (= $generated@@175  (and ($generated@@32 $generated@@172 $generated@@0 $generated@@173 ($generated@@79 $generated@@9 ($generated@@13 ($generated@@75 3))) $generated@@174) ($generated@@32 $generated@@172 ($generated@@26 $generated@@172) $generated@@173 ($generated@@79 $generated@@25 $generated@@173) $generated@@174)))) (=> (and (and (and (and (and ($generated@@38 $generated@@176 $generated@@177) ($generated@@84 $generated@@176 $generated@@177 $generated@@178)) (= $generated@@179 ($generated@@79 $generated@@8 ($generated@@11 $generated@@175)))) (and ($generated@@180 $generated@@181) ($generated@@182 $generated@@181))) (and (and ($generated@@38 $generated@@183 $generated) ($generated@@84 $generated@@183 $generated $generated@@181)) (= $generated@@179 $generated@@183))) (and (and (and (and (= $generated@@174 $generated@@174) (forall (($generated@@201 T@U) ) (!  (=> (and (or (not (= $generated@@201 $generated@@36)) (not true)) ($generated@@12 ($generated@@44 $generated@@8 ($generated@@45 $generated@@46 $generated@@34 ($generated@@45 $generated@@25 ($generated@@47 $generated@@46 $generated@@34) $generated@@178 $generated@@201) $generated@@3)))) (= ($generated@@45 $generated@@25 ($generated@@47 $generated@@46 $generated@@34) $generated@@181 $generated@@201) ($generated@@45 $generated@@25 ($generated@@47 $generated@@46 $generated@@34) $generated@@178 $generated@@201)))
 :pattern ( ($generated@@45 $generated@@25 ($generated@@47 $generated@@46 $generated@@34) $generated@@181 $generated@@201))
))) (and ($generated@@71 $generated@@178 $generated@@181) (= $generated@@170 ($generated@@12 ($generated@@44 $generated@@8 $generated@@183))))) (and (and ($generated@@38 $generated@@184 $generated@@185) ($generated@@84 $generated@@184 $generated@@185 $generated@@178)) (and ($generated@@180 $generated@@186) ($generated@@182 $generated@@186)))) (and (and (and ($generated@@38 $generated@@187 $generated) ($generated@@84 $generated@@187 $generated $generated@@186)) (forall (($generated@@202 T@U) ) (!  (=> (and (or (not (= $generated@@202 $generated@@36)) (not true)) ($generated@@12 ($generated@@44 $generated@@8 ($generated@@45 $generated@@46 $generated@@34 ($generated@@45 $generated@@25 ($generated@@47 $generated@@46 $generated@@34) $generated@@181 $generated@@202) $generated@@3)))) (= ($generated@@45 $generated@@25 ($generated@@47 $generated@@46 $generated@@34) $generated@@186 $generated@@202) ($generated@@45 $generated@@25 ($generated@@47 $generated@@46 $generated@@34) $generated@@181 $generated@@202)))
 :pattern ( ($generated@@45 $generated@@25 ($generated@@47 $generated@@46 $generated@@34) $generated@@186 $generated@@202))
))) (and ($generated@@71 $generated@@181 $generated@@186) (= $generated@@171 ($generated@@12 ($generated@@44 $generated@@8 $generated@@187))))))) (and (=> (= (ControlFlow 0 8) 7) $generated@@198) (=> (= (ControlFlow 0 8) 4) $generated@@199))))))
(let (($generated@@203  (=> (and (not ($generated@@32 $generated@@172 $generated@@0 $generated@@173 ($generated@@79 $generated@@9 ($generated@@13 ($generated@@75 3))) $generated@@174)) (= (ControlFlow 0 10) 8)) $generated@@200)))
(let (($generated@@204  (=> (and ($generated@@32 $generated@@172 $generated@@0 $generated@@173 ($generated@@79 $generated@@9 ($generated@@13 ($generated@@75 3))) $generated@@174) ($generated@@84 ($generated@@79 $generated@@25 $generated@@173) ($generated@@27 $generated@@172) $generated@@178)) (=> (and (and ($generated@@24 $generated@@25 $generated@@173 ($generated@@26 $generated@@172) $generated@@178) ($generated@@84 $generated@@174 $generated@@172 $generated@@178)) (and ($generated@@35 $generated@@172 ($generated@@26 $generated@@172) $generated@@173 ($generated@@79 $generated@@25 $generated@@173) $generated@@174) (= (ControlFlow 0 9) 8))) $generated@@200))))
(let (($generated@@205  (=> (= $generated@@188 ($generated@@189 $generated@@190)) (=> (and (and (and (= $generated@@191 ($generated@@189 ($generated@@189 $generated@@190))) (= ($generated@@192 $generated@@190) $generated@@190)) (and (= $generated@@193 ($generated@@124 $generated@@36 $generated@@178 $generated@@3 false)) ($generated@@84 ($generated@@79 $generated@@25 $generated@@173) ($generated@@27 $generated@@172) $generated@@178))) (and (and (= $generated@@194 ($generated@@75 3)) ($generated@@24 $generated@@9 ($generated@@13 $generated@@194) $generated@@0 $generated@@178)) (and ($generated@@84 $generated@@174 $generated@@172 $generated@@178) ($generated@@35 $generated@@172 $generated@@0 $generated@@173 ($generated@@79 $generated@@9 ($generated@@13 ($generated@@75 3))) $generated@@174)))) (and (=> (= (ControlFlow 0 11) 9) $generated@@204) (=> (= (ControlFlow 0 11) 10) $generated@@203))))))
(let (($generated@@206  (=> (and (and (and ($generated@@180 $generated@@178) ($generated@@182 $generated@@178)) (and (or (not (= $generated@@173 $generated@@36)) (not true)) (and ($generated@@37 $generated@@25 $generated@@173 ($generated@@26 $generated@@172)) ($generated@@24 $generated@@25 $generated@@173 ($generated@@26 $generated@@172) $generated@@178)))) (and (and ($generated@@38 $generated@@174 $generated@@172) ($generated@@84 $generated@@174 $generated@@172 $generated@@178)) (and (= 1 $generated@@31) (= (ControlFlow 0 12) 11)))) $generated@@205)))
$generated@@206)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
