(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U Int) T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@72 (T@U Int) T@U)
(declare-fun $generated@@73 (T@U T@U) T@U)
(declare-fun $generated@@74 (Int) T@U)
(declare-fun $generated@@81 (Int) Int)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@92 (T@U Int) T@U)
(declare-fun $generated@@98 (T@U) Bool)
(declare-fun $generated@@99 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@T T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Int)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated@@2) 0))
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and (or (not (= $generated@@30 $generated@@26)) (not true)) (= ($generated@@27 $generated@@30) ($generated@@25 $generated@@29))) ($generated@@28 $generated@@8 ($generated@@12 ($generated@@24 $generated@@30)) $generated))
 :pattern ( ($generated@@24 $generated@@30) ($generated@@25 $generated@@29))
)))
(assert (= ($generated@@6 $generated@@32) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@35 ($generated@@33 $generated@@34) $generated@@36) ($generated@@31 $generated@@32 $generated@@35 ($generated@@25 $generated@@34) $generated@@36))
 :pattern ( ($generated@@31 $generated@@32 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
 :pattern ( ($generated@@31 $generated@@32 $generated@@35 ($generated@@25 $generated@@34) $generated@@36))
)))
(assert (= ($generated@@37 $generated@@38) 0))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 Int) ) (!  (=> (and (<= 0 $generated@@43) (<= $generated@@43 ($generated@@37 $generated@@41))) (= ($generated@@39 ($generated@@40 $generated@@41 $generated@@42) $generated@@43) ($generated@@40 ($generated@@39 $generated@@41 $generated@@43) $generated@@42)))
 :pattern ( ($generated@@39 ($generated@@40 $generated@@41 $generated@@42) $generated@@43))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@45 $generated@@52 $generated@@53 ($generated@@49 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@56) $generated@@54)
 :weight 0
)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (or (= $generated@@61 $generated@@62) (= ($generated@@45 $generated@@57 $generated@@58 ($generated@@49 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@62) ($generated@@45 $generated@@57 $generated@@58 $generated@@60 $generated@@62)))
 :weight 0
))) (= ($generated@@6 $generated@@46) 4)) (= ($generated@@6 $generated@@47) 5)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (= ($generated@@6 ($generated@@48 $generated@@63 $generated@@64)) 6))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@50 ($generated@@48 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@51 ($generated@@48 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@48 $generated@@67 $generated@@68))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@70 ($generated@@25 $generated@@69) $generated@@71)  (or (= $generated@@70 $generated@@26) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@71 $generated@@70) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@70 ($generated@@25 $generated@@69) $generated@@71))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 Int) ($generated@@78 Int) ) (!  (=> (and (and (= (+ $generated@@77 1) $generated@@78) (<= 0 $generated@@77)) (<= $generated@@78 ($generated@@24 $generated@@76))) (= ($generated@@72 ($generated@@73 $generated@@75 $generated@@76) $generated@@78) ($generated@@40 ($generated@@72 ($generated@@73 $generated@@75 $generated@@76) $generated@@77) ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@75 $generated@@76) ($generated@@74 $generated@@77)))))
 :pattern ( ($generated@@72 ($generated@@73 $generated@@75 $generated@@76) $generated@@77) ($generated@@72 ($generated@@73 $generated@@75 $generated@@76) $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 Int) ) (!  (=> (= $generated@@80 0) (= ($generated@@39 $generated@@79 $generated@@80) $generated@@79))
 :pattern ( ($generated@@39 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 Int) ) (! (= ($generated@@81 $generated@@82) $generated@@82)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@85 $generated@@84))
)))
(assert (= ($generated@@6 $generated@@86) 7))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and ($generated@@28 $generated@@86 $generated@@89 ($generated@@87 $generated@@91)) ($generated@@88 $generated@@90 $generated@@91)) ($generated@@28 $generated@@86 ($generated@@40 $generated@@89 $generated@@90) ($generated@@87 $generated@@91)))
 :pattern ( ($generated@@28 $generated@@86 ($generated@@40 $generated@@89 $generated@@90) ($generated@@87 $generated@@91)))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 Int) ($generated@@95 Int) ) (!  (=> (and (and (<= 0 $generated@@95) (< $generated@@95 $generated@@94)) (< $generated@@95 ($generated@@37 $generated@@93))) (= ($generated@@92 ($generated@@72 $generated@@93 $generated@@94) $generated@@95) ($generated@@92 $generated@@93 $generated@@95)))
 :weight 25
 :pattern ( ($generated@@92 ($generated@@72 $generated@@93 $generated@@94) $generated@@95))
 :pattern ( ($generated@@92 $generated@@93 $generated@@95) ($generated@@72 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 Int) ) (!  (=> (and (<= 0 $generated@@97) (<= $generated@@97 ($generated@@37 $generated@@96))) (= ($generated@@37 ($generated@@39 $generated@@96 $generated@@97)) (- ($generated@@37 $generated@@96) $generated@@97)))
 :pattern ( ($generated@@37 ($generated@@39 $generated@@96 $generated@@97)))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 Int) ) (!  (=> (and (and (and ($generated@@98 $generated@@101) (and (or (not (= $generated@@102 $generated@@26)) (not true)) (= ($generated@@27 $generated@@102) ($generated@@25 $generated@@100)))) (and (<= 0 $generated@@103) (< $generated@@103 ($generated@@24 $generated@@102)))) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@101 $generated@@102) $generated@@2)))) ($generated@@99 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@101 $generated@@102) ($generated@@74 $generated@@103)) $generated@@100 $generated@@101))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@101 $generated@@102) ($generated@@74 $generated@@103)) ($generated@@25 $generated@@100))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@104 $generated@@105 $generated@@106)  (and (= ($generated@@37 $generated@@105) ($generated@@37 $generated@@106)) (forall (($generated@@107 Int) ) (!  (=> (and (<= 0 $generated@@107) (< $generated@@107 ($generated@@37 $generated@@105))) (= ($generated@@92 $generated@@105 $generated@@107) ($generated@@92 $generated@@106 $generated@@107)))
 :pattern ( ($generated@@92 $generated@@105 $generated@@107))
 :pattern ( ($generated@@92 $generated@@106 $generated@@107))
))))
 :pattern ( ($generated@@104 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@108 $generated@@110 ($generated@@44 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@44 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@37 ($generated@@40 $generated@@111 $generated@@112)) (+ 1 ($generated@@37 $generated@@111)))
 :pattern ( ($generated@@40 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@28 $generated@@32 $generated@@114 ($generated@@33 $generated@@113))  (and ($generated@@28 $generated@@32 $generated@@114 ($generated@@25 $generated@@113)) (or (not (= $generated@@114 $generated@@26)) (not true))))
 :pattern ( ($generated@@28 $generated@@32 $generated@@114 ($generated@@33 $generated@@113)))
 :pattern ( ($generated@@28 $generated@@32 $generated@@114 ($generated@@25 $generated@@113)))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@99 ($generated@@108 $generated@@118 $generated@@115) $generated@@116 $generated@@117) ($generated@@31 $generated@@118 $generated@@115 $generated@@116 $generated@@117))
 :pattern ( ($generated@@99 ($generated@@108 $generated@@118 $generated@@115) $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 Int) ($generated@@121 Int) ) (!  (=> (and (and (<= 0 $generated@@120) (<= 0 $generated@@121)) (< $generated@@121 (- ($generated@@37 $generated@@119) $generated@@120))) (= ($generated@@92 ($generated@@39 $generated@@119 $generated@@120) $generated@@121) ($generated@@92 $generated@@119 (+ $generated@@121 $generated@@120))))
 :weight 25
 :pattern ( ($generated@@92 ($generated@@39 $generated@@119 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (!  (and (= ($generated@@23 ($generated@@25 $generated@@123)) $generated@@3) (= ($generated@@122 ($generated@@25 $generated@@123)) $generated@@5))
 :pattern ( ($generated@@25 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (!  (and (= ($generated@@23 ($generated@@33 $generated@@124)) $generated@@4) (= ($generated@@122 ($generated@@33 $generated@@124)) $generated@@5))
 :pattern ( ($generated@@33 $generated@@124))
)))
(assert  (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@125 $generated@@128 $generated@@129 $generated@@130 ($generated@@127 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@133 $generated@@134) $generated@@131)
 :weight 0
)) (and (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@125 $generated@@135 $generated@@136 $generated@@137 ($generated@@127 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@125 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@125 $generated@@144 $generated@@145 $generated@@146 ($generated@@127 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@125 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@11 ($generated@@125 $generated@@32 $generated@@46 $generated@@7 ($generated@@126 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))  (=> (and (or (not (= $generated@@157 $generated@@153)) (not true)) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@154 $generated@@157) $generated@@155)))) (= $generated@@157 $generated@@156)))
 :pattern ( ($generated@@125 $generated@@32 $generated@@46 $generated@@7 ($generated@@126 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@28 $generated@@32 $generated@@160 ($generated@@25 $generated@@159))  (or (= $generated@@160 $generated@@26) (= ($generated@@27 $generated@@160) ($generated@@25 $generated@@159))))
 :pattern ( ($generated@@28 $generated@@32 $generated@@160 ($generated@@25 $generated@@159)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 Int) ($generated@@163 T@U) ) (!  (and (=> (= $generated@@162 ($generated@@37 $generated@@161)) (= ($generated@@92 ($generated@@40 $generated@@161 $generated@@163) $generated@@162) $generated@@163)) (=> (or (not (= $generated@@162 ($generated@@37 $generated@@161))) (not true)) (= ($generated@@92 ($generated@@40 $generated@@161 $generated@@163) $generated@@162) ($generated@@92 $generated@@161 $generated@@162))))
 :pattern ( ($generated@@92 ($generated@@40 $generated@@161 $generated@@163) $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (forall (($generated@@166 Int) ) (!  (=> (and (<= 0 $generated@@166) (< $generated@@166 ($generated@@37 ($generated@@73 $generated@@164 $generated@@165)))) (= ($generated@@92 ($generated@@73 $generated@@164 $generated@@165) $generated@@166) ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@164 $generated@@165) ($generated@@74 $generated@@166))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@164 $generated@@165) ($generated@@74 $generated@@166)))
 :pattern ( ($generated@@92 ($generated@@73 $generated@@164 $generated@@165) $generated@@166))
))
 :pattern ( ($generated@@73 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> ($generated@@104 $generated@@167 $generated@@168) (= $generated@@167 $generated@@168))
 :pattern ( ($generated@@104 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 Int) ) (!  (=> (and (<= 0 $generated@@170) (<= $generated@@170 ($generated@@37 $generated@@169))) (= ($generated@@37 ($generated@@72 $generated@@169 $generated@@170)) $generated@@170))
 :pattern ( ($generated@@37 ($generated@@72 $generated@@169 $generated@@170)))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> ($generated@@88 $generated@@171 $generated) (and (= ($generated@@108 $generated@@8 ($generated@@44 $generated@@8 $generated@@171)) $generated@@171) ($generated@@28 $generated@@8 ($generated@@44 $generated@@8 $generated@@171) $generated)))
 :pattern ( ($generated@@88 $generated@@171 $generated))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@88 ($generated@@108 $generated@@174 $generated@@172) $generated@@173) ($generated@@28 $generated@@174 $generated@@172 $generated@@173))
 :pattern ( ($generated@@88 ($generated@@108 $generated@@174 $generated@@172) $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (<= 0 ($generated@@24 $generated@@175))
 :pattern ( ($generated@@24 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (! (<= 0 ($generated@@37 $generated@@176))
 :pattern ( ($generated@@37 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@31 $generated@@86 $generated@@177 ($generated@@87 $generated@@178) $generated@@179) (forall (($generated@@180 Int) ) (!  (=> (and (<= 0 $generated@@180) (< $generated@@180 ($generated@@37 $generated@@177))) ($generated@@99 ($generated@@92 $generated@@177 $generated@@180) $generated@@178 $generated@@179))
 :pattern ( ($generated@@92 $generated@@177 $generated@@180))
)))
 :pattern ( ($generated@@31 $generated@@86 $generated@@177 ($generated@@87 $generated@@178) $generated@@179))
)))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@181 ($generated@@87 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@87 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@23 ($generated@@87 $generated@@183)) $generated@@1)
 :pattern ( ($generated@@87 $generated@@183))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@22 ($generated@@74 $generated@@184)) 1)
 :pattern ( ($generated@@74 $generated@@184))
)))
(assert (forall (($generated@@186 Int) ) (! (= ($generated@@185 ($generated@@74 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@74 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@187 ($generated@@25 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@25 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@189 ($generated@@33 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@33 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@T) ) (! (= ($generated@@44 $generated@@192 ($generated@@108 $generated@@192 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@108 $generated@@192 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and ($generated@@98 $generated@@194) (and (or (not (= $generated@@195 $generated@@26)) (not true)) (= ($generated@@27 $generated@@195) ($generated@@25 $generated@@193)))) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@194 $generated@@195) $generated@@2)))) ($generated@@31 $generated@@8 ($generated@@12 ($generated@@24 $generated@@195)) $generated $generated@@194))
 :pattern ( ($generated@@24 $generated@@195) ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@194 $generated@@195) $generated@@2)) ($generated@@25 $generated@@193))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 Int) ) (!  (=> (and (and ($generated@@98 $generated@@197) (and (or (not (= $generated@@198 $generated@@26)) (not true)) (= ($generated@@27 $generated@@198) ($generated@@25 $generated@@196)))) (and (<= 0 $generated@@199) (< $generated@@199 ($generated@@24 $generated@@198)))) ($generated@@88 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@197 $generated@@198) ($generated@@74 $generated@@199)) $generated@@196))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@197 $generated@@198) ($generated@@74 $generated@@199)) ($generated@@25 $generated@@196))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@37 ($generated@@73 $generated@@200 $generated@@201)) ($generated@@24 $generated@@201))
 :pattern ( ($generated@@37 ($generated@@73 $generated@@200 $generated@@201)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (and (= ($generated@@202 ($generated@@40 $generated@@204 $generated@@205)) $generated@@204) (= ($generated@@203 ($generated@@40 $generated@@204 $generated@@205)) $generated@@205))
 :pattern ( ($generated@@40 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> ($generated@@88 $generated@@206 ($generated@@87 $generated@@207)) (and (= ($generated@@108 $generated@@86 ($generated@@44 $generated@@86 $generated@@206)) $generated@@206) ($generated@@28 $generated@@86 ($generated@@44 $generated@@86 $generated@@206) ($generated@@87 $generated@@207))))
 :pattern ( ($generated@@88 $generated@@206 ($generated@@87 $generated@@207)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> ($generated@@88 $generated@@209 ($generated@@25 $generated@@208)) (and (= ($generated@@108 $generated@@32 ($generated@@44 $generated@@32 $generated@@209)) $generated@@209) ($generated@@28 $generated@@32 ($generated@@44 $generated@@32 $generated@@209) ($generated@@25 $generated@@208))))
 :pattern ( ($generated@@88 $generated@@209 ($generated@@25 $generated@@208)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@88 $generated@@211 ($generated@@33 $generated@@210)) (and (= ($generated@@108 $generated@@32 ($generated@@44 $generated@@32 $generated@@211)) $generated@@211) ($generated@@28 $generated@@32 ($generated@@44 $generated@@32 $generated@@211) ($generated@@33 $generated@@210))))
 :pattern ( ($generated@@88 $generated@@211 ($generated@@33 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 Int) ($generated@@214 Int) ) (!  (=> (and (and (<= 0 $generated@@213) (<= $generated@@213 $generated@@214)) (< $generated@@214 ($generated@@37 $generated@@212))) (= ($generated@@92 ($generated@@39 $generated@@212 $generated@@213) (- $generated@@214 $generated@@213)) ($generated@@92 $generated@@212 $generated@@214)))
 :weight 25
 :pattern ( ($generated@@92 $generated@@212 $generated@@214) ($generated@@39 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 Int) ($generated@@217 Int) ) (!  (=> (and (and (<= 0 $generated@@216) (<= 0 $generated@@217)) (<= (+ $generated@@216 $generated@@217) ($generated@@37 $generated@@215))) (= ($generated@@39 ($generated@@39 $generated@@215 $generated@@216) $generated@@217) ($generated@@39 $generated@@215 (+ $generated@@216 $generated@@217))))
 :pattern ( ($generated@@39 ($generated@@39 $generated@@215 $generated@@216) $generated@@217))
)))
(assert (forall (($generated@@218 Int) ) (! (= ($generated@@108 $generated@@8 ($generated@@12 ($generated@@81 $generated@@218))) ($generated@@83 $generated@@47 ($generated@@108 $generated@@8 ($generated@@12 $generated@@218))))
 :pattern ( ($generated@@108 $generated@@8 ($generated@@12 ($generated@@81 $generated@@218))))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@T) ) (! (= ($generated@@108 $generated@@220 ($generated@@83 $generated@@220 $generated@@219)) ($generated@@83 $generated@@47 ($generated@@108 $generated@@220 $generated@@219)))
 :pattern ( ($generated@@108 $generated@@220 ($generated@@83 $generated@@220 $generated@@219)))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= ($generated@@37 $generated@@221) 0) (= $generated@@221 $generated@@38))
 :pattern ( ($generated@@37 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 Int) ) (!  (=> (= $generated@@223 0) (= ($generated@@72 $generated@@222 $generated@@223) $generated@@38))
 :pattern ( ($generated@@72 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! ($generated@@31 $generated@@8 $generated@@225 $generated $generated@@224)
 :pattern ( ($generated@@31 $generated@@8 $generated@@225 $generated $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= ($generated@@28 $generated@@86 $generated@@226 ($generated@@87 $generated@@227)) (forall (($generated@@228 Int) ) (!  (=> (and (<= 0 $generated@@228) (< $generated@@228 ($generated@@37 $generated@@226))) ($generated@@88 ($generated@@92 $generated@@226 $generated@@228) $generated@@227))
 :pattern ( ($generated@@92 $generated@@226 $generated@@228))
)))
 :pattern ( ($generated@@28 $generated@@86 $generated@@226 ($generated@@87 $generated@@227)))
)))
(assert (forall (($generated@@229 T@U) ) (! ($generated@@28 $generated@@8 $generated@@229 $generated)
 :pattern ( ($generated@@28 $generated@@8 $generated@@229 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@237  (=> (= $generated@@230 ($generated@@126 $generated@@26 $generated@@231 $generated@@2 $generated@@232)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (and (<= 0 ($generated@@37 $generated@@233)) (<= ($generated@@37 $generated@@233) ($generated@@37 $generated@@233)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@104 $generated@@233 ($generated@@72 $generated@@233 ($generated@@37 $generated@@233)))) (=> ($generated@@104 $generated@@233 ($generated@@72 $generated@@233 ($generated@@37 $generated@@233))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= 0 ($generated@@81 0)) (<= ($generated@@81 0) ($generated@@37 $generated@@233)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@104 $generated@@233 ($generated@@39 $generated@@233 ($generated@@81 0)))) (=> ($generated@@104 $generated@@233 ($generated@@39 $generated@@233 ($generated@@81 0))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@104 $generated@@233 $generated@@233)) (=> ($generated@@104 $generated@@233 $generated@@233) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@232 $generated@@26)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (>= ($generated@@24 $generated@@232) ($generated@@81 0))) (=> (>= ($generated@@24 $generated@@232) ($generated@@81 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (not (= $generated@@232 $generated@@26)) (not true)))))))))))))))))
(let (($generated@@238  (=> (and ($generated@@98 $generated@@231) ($generated@@234 $generated@@231)) (=> (and (and ($generated@@28 $generated@@86 $generated@@233 ($generated@@87 $generated)) ($generated@@31 $generated@@86 $generated@@233 ($generated@@87 $generated) $generated@@231)) (and ($generated@@28 $generated@@32 $generated@@232 ($generated@@33 $generated)) ($generated@@31 $generated@@32 $generated@@232 ($generated@@33 $generated) $generated@@231))) (=> (and (and (and ($generated@@28 $generated@@86 $generated@@235 ($generated@@87 $generated)) ($generated@@31 $generated@@86 $generated@@235 ($generated@@87 $generated) $generated@@231)) true) (and (= 0 $generated@@236) (= (ControlFlow 0 10) 2))) $generated@@237)))))
$generated@@238)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
