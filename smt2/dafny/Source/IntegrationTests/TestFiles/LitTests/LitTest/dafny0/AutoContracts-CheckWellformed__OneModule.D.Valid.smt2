(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@48 () Int)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 (T@T T@U T@U) Bool)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@93 () T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@101 () T@U)
(declare-fun $generated@@102 () T@U)
(declare-fun $generated@@107 (T@U T@U) T@U)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@113 (T@U T@U) Bool)
(declare-fun $generated@@119 (T@U T@U) Bool)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@124 (T@U T@U) Bool)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@206 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@2) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@30 $generated@@2) $generated@@3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! ($generated@@32 ($generated@@31 $generated@@33 $generated@@34) $generated@@34)
 :pattern ( ($generated@@31 $generated@@33 $generated@@34))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@32 $generated@@35 $generated@@37) ($generated@@32 ($generated@@31 $generated@@35 $generated@@36) $generated@@37))
 :pattern ( ($generated@@31 $generated@@35 $generated@@36) ($generated@@32 $generated@@35 $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@32 $generated@@39 $generated@@41) ($generated@@32 ($generated@@38 $generated@@39 $generated@@40) $generated@@41))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40) ($generated@@32 $generated@@39 $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated@@32 $generated@@43 $generated@@44) ($generated@@32 ($generated@@38 $generated@@42 $generated@@43) $generated@@44))
 :pattern ( ($generated@@38 $generated@@42 $generated@@43) ($generated@@32 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@32 ($generated@@31 $generated@@45 $generated@@46) $generated@@47)  (or (= $generated@@47 $generated@@46) ($generated@@32 $generated@@45 $generated@@47)))
 :pattern ( ($generated@@32 ($generated@@31 $generated@@45 $generated@@46) $generated@@47))
)))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@54) 3) (= ($generated@@12 $generated@@58) 4)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@59 $generated@@68 $generated@@69 ($generated@@65 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@72) $generated@@70)
 :weight 0
))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@59 $generated@@73 $generated@@74 ($generated@@65 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@59 $generated@@73 $generated@@74 $generated@@76 $generated@@78)))
 :weight 0
))) (= ($generated@@12 $generated@@60) 5)) (= ($generated@@12 $generated@@61) 6)) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (= ($generated@@12 ($generated@@62 $generated@@79 $generated@@80)) 7))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@66 ($generated@@62 $generated@@81 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@62 $generated@@81 $generated@@82))
))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@67 ($generated@@62 $generated@@83 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@62 $generated@@83 $generated@@84))
))))
(assert  (=> (<= 0 $generated@@48) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (or ($generated@@51 $generated@@85 $generated@@86) (and (< 0 $generated@@48) (and ($generated@@50 $generated@@85) (and (or (not (= $generated@@86 $generated@@52)) (not true)) (and ($generated@@53 $generated@@54 $generated@@86 $generated@@55) ($generated@@56 $generated@@54 $generated@@86 $generated@@55 $generated@@85)))))) (= ($generated@@49 $generated@@85 $generated@@86)  (and (and ($generated@@32 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@85 $generated@@86) $generated@@63)) ($generated@@64 $generated@@54 $generated@@86)) (not ($generated@@32 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@85 $generated@@86) $generated@@63)) ($generated@@64 $generated@@54 $generated@@52)))) true)))
 :pattern ( ($generated@@49 $generated@@85 $generated@@86) ($generated@@50 $generated@@85))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@32 $generated@@89 $generated@@90) (not ($generated@@32 ($generated@@87 $generated@@88 $generated@@89) $generated@@90)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89) ($generated@@32 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (!  (not ($generated@@32 $generated@@91 $generated@@92))
 :pattern ( ($generated@@32 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@53 $generated@@54 $generated@@95 $generated@@93)  (or (= $generated@@95 $generated@@52) (= ($generated@@94 $generated@@95) $generated@@93)))
 :pattern ( ($generated@@53 $generated@@54 $generated@@95 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@38 ($generated@@38 $generated@@96 $generated@@97) $generated@@97) ($generated@@38 $generated@@96 $generated@@97))
 :pattern ( ($generated@@38 ($generated@@38 $generated@@96 $generated@@97) $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@32 ($generated@@87 $generated@@98 $generated@@99) $generated@@100)  (and ($generated@@32 $generated@@98 $generated@@100) (not ($generated@@32 $generated@@99 $generated@@100))))
 :pattern ( ($generated@@32 ($generated@@87 $generated@@98 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@56 $generated@@54 $generated@@103 $generated@@101 $generated@@104) ($generated@@56 $generated@@54 $generated@@103 $generated@@102 $generated@@104))
 :pattern ( ($generated@@56 $generated@@54 $generated@@103 $generated@@101 $generated@@104))
 :pattern ( ($generated@@56 $generated@@54 $generated@@103 $generated@@102 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@56 $generated@@54 $generated@@105 $generated@@55 $generated@@106) ($generated@@56 $generated@@54 $generated@@105 $generated@@93 $generated@@106))
 :pattern ( ($generated@@56 $generated@@54 $generated@@105 $generated@@55 $generated@@106))
 :pattern ( ($generated@@56 $generated@@54 $generated@@105 $generated@@93 $generated@@106))
)))
(assert (= ($generated@@28 $generated@@63) 0))
(assert (= ($generated@@107 $generated@@6 $generated@@11) $generated@@63))
(assert ($generated@@108 $generated@@63))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@56 $generated@@54 $generated@@109 $generated@@102 $generated@@110)  (or (= $generated@@109 $generated@@52) ($generated@@17 ($generated@@57 $generated@@13 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@110 $generated@@109) $generated@@2)))))
 :pattern ( ($generated@@56 $generated@@54 $generated@@109 $generated@@102 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@56 $generated@@54 $generated@@111 $generated@@93 $generated@@112)  (or (= $generated@@111 $generated@@52) ($generated@@17 ($generated@@57 $generated@@13 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@112 $generated@@111) $generated@@2)))))
 :pattern ( ($generated@@56 $generated@@54 $generated@@111 $generated@@93 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@113 $generated@@114 $generated@@115) (forall (($generated@@116 T@U) ) (!  (=> ($generated@@32 $generated@@114 $generated@@116) ($generated@@32 $generated@@115 $generated@@116))
 :pattern ( ($generated@@32 $generated@@114 $generated@@116))
 :pattern ( ($generated@@32 $generated@@115 $generated@@116))
)))
 :pattern ( ($generated@@113 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@64 $generated@@118 ($generated@@57 $generated@@118 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@57 $generated@@118 $generated@@117))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@119 $generated@@120 $generated@@121) (forall (($generated@@122 T@U) ) (!  (or (not ($generated@@32 $generated@@120 $generated@@122)) (not ($generated@@32 $generated@@121 $generated@@122)))
 :pattern ( ($generated@@32 $generated@@120 $generated@@122))
 :pattern ( ($generated@@32 $generated@@121 $generated@@122))
)))
 :pattern ( ($generated@@119 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@53 $generated@@58 $generated@@125 ($generated@@123 $generated@@126)) (forall (($generated@@127 T@U) ) (!  (=> ($generated@@32 $generated@@125 $generated@@127) ($generated@@124 $generated@@127 $generated@@126))
 :pattern ( ($generated@@32 $generated@@125 $generated@@127))
)))
 :pattern ( ($generated@@53 $generated@@58 $generated@@125 ($generated@@123 $generated@@126)))
)))
(assert  (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@128 $generated@@131 $generated@@132 $generated@@133 ($generated@@130 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@136 $generated@@137) $generated@@134)
 :weight 0
)) (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@128 $generated@@138 $generated@@139 $generated@@140 ($generated@@130 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@128 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@128 $generated@@147 $generated@@148 $generated@@149 ($generated@@130 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@128 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@17 ($generated@@128 $generated@@54 $generated@@60 $generated@@13 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@156)) (not true)) ($generated@@17 ($generated@@57 $generated@@13 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@157 $generated@@161) $generated@@158)))) (or (= $generated@@161 $generated@@159) ($generated@@32 $generated@@160 ($generated@@64 $generated@@54 $generated@@161)))))
 :pattern ( ($generated@@128 $generated@@54 $generated@@60 $generated@@13 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert ($generated@@108 $generated@@2))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@163 ($generated@@64 $generated@@167 $generated@@164) $generated@@165 $generated@@166) ($generated@@56 $generated@@167 $generated@@164 $generated@@165 $generated@@166))
 :pattern ( ($generated@@163 ($generated@@64 $generated@@167 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> ($generated@@124 $generated@@168 $generated@@102) (and (= ($generated@@64 $generated@@54 ($generated@@57 $generated@@54 $generated@@168)) $generated@@168) ($generated@@53 $generated@@54 ($generated@@57 $generated@@54 $generated@@168) $generated@@102)))
 :pattern ( ($generated@@124 $generated@@168 $generated@@102))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> ($generated@@124 $generated@@169 $generated@@101) (and (= ($generated@@64 $generated@@54 ($generated@@57 $generated@@54 $generated@@169)) $generated@@169) ($generated@@53 $generated@@54 ($generated@@57 $generated@@54 $generated@@169) $generated@@101)))
 :pattern ( ($generated@@124 $generated@@169 $generated@@101))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> ($generated@@124 $generated@@170 $generated@@93) (and (= ($generated@@64 $generated@@54 ($generated@@57 $generated@@54 $generated@@170)) $generated@@170) ($generated@@53 $generated@@54 ($generated@@57 $generated@@54 $generated@@170) $generated@@93)))
 :pattern ( ($generated@@124 $generated@@170 $generated@@93))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> ($generated@@124 $generated@@171 $generated@@55) (and (= ($generated@@64 $generated@@54 ($generated@@57 $generated@@54 $generated@@171)) $generated@@171) ($generated@@53 $generated@@54 ($generated@@57 $generated@@54 $generated@@171) $generated@@55)))
 :pattern ( ($generated@@124 $generated@@171 $generated@@55))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@53 $generated@@54 $generated@@172 $generated@@101)  (and ($generated@@53 $generated@@54 $generated@@172 $generated@@102) (or (not (= $generated@@172 $generated@@52)) (not true))))
 :pattern ( ($generated@@53 $generated@@54 $generated@@172 $generated@@101))
 :pattern ( ($generated@@53 $generated@@54 $generated@@172 $generated@@102))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@53 $generated@@54 $generated@@173 $generated@@55)  (and ($generated@@53 $generated@@54 $generated@@173 $generated@@93) (or (not (= $generated@@173 $generated@@52)) (not true))))
 :pattern ( ($generated@@53 $generated@@54 $generated@@173 $generated@@55))
 :pattern ( ($generated@@53 $generated@@54 $generated@@173 $generated@@93))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@32 ($generated@@38 $generated@@174 $generated@@175) $generated@@176)  (or ($generated@@32 $generated@@174 $generated@@176) ($generated@@32 $generated@@175 $generated@@176)))
 :pattern ( ($generated@@32 ($generated@@38 $generated@@174 $generated@@175) $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@119 $generated@@177 $generated@@178) (and (= ($generated@@87 ($generated@@38 $generated@@177 $generated@@178) $generated@@177) $generated@@178) (= ($generated@@87 ($generated@@38 $generated@@177 $generated@@178) $generated@@178) $generated@@177)))
 :pattern ( ($generated@@38 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and ($generated@@50 $generated@@179) (and (or (not (= $generated@@180 $generated@@52)) (not true)) (= ($generated@@94 $generated@@180) $generated@@93))) ($generated@@53 $generated@@58 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@179 $generated@@180) $generated@@63)) ($generated@@123 $generated@@102)))
 :pattern ( ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@179 $generated@@180) $generated@@63)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and ($generated@@50 $generated@@181) (and (or (not (= $generated@@182 $generated@@52)) (not true)) (= ($generated@@94 $generated@@182) $generated@@93))) ($generated@@17 ($generated@@57 $generated@@13 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@181 $generated@@182) $generated@@2)))) ($generated@@56 $generated@@58 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@181 $generated@@182) $generated@@63)) ($generated@@123 $generated@@102) $generated@@181))
 :pattern ( ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@181 $generated@@182) $generated@@63)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (and (= ($generated@@183 ($generated@@107 $generated@@184 $generated@@185)) $generated@@184) (= ($generated@@30 ($generated@@107 $generated@@184 $generated@@185)) $generated@@185))
 :pattern ( ($generated@@107 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ) (!  (=> ($generated@@124 $generated@@186 $generated) (and (= ($generated@@64 $generated@@13 ($generated@@57 $generated@@13 $generated@@186)) $generated@@186) ($generated@@53 $generated@@13 ($generated@@57 $generated@@13 $generated@@186) $generated)))
 :pattern ( ($generated@@124 $generated@@186 $generated))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@T) ) (! (= ($generated@@124 ($generated@@64 $generated@@189 $generated@@187) $generated@@188) ($generated@@53 $generated@@189 $generated@@187 $generated@@188))
 :pattern ( ($generated@@124 ($generated@@64 $generated@@189 $generated@@187) $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@56 $generated@@58 $generated@@190 ($generated@@123 $generated@@191) $generated@@192) (forall (($generated@@193 T@U) ) (!  (=> ($generated@@32 $generated@@190 $generated@@193) ($generated@@163 $generated@@193 $generated@@191 $generated@@192))
 :pattern ( ($generated@@32 $generated@@190 $generated@@193))
)))
 :pattern ( ($generated@@56 $generated@@58 $generated@@190 ($generated@@123 $generated@@191) $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! ($generated@@53 $generated@@54 $generated@@194 $generated@@102)
 :pattern ( ($generated@@53 $generated@@54 $generated@@194 $generated@@102))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@195 ($generated@@123 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@123 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@29 ($generated@@123 $generated@@197)) $generated@@1)
 :pattern ( ($generated@@123 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@T) ) (! (= ($generated@@57 $generated@@199 ($generated@@64 $generated@@199 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@64 $generated@@199 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@38 $generated@@200 ($generated@@38 $generated@@200 $generated@@201)) ($generated@@38 $generated@@200 $generated@@201))
 :pattern ( ($generated@@38 $generated@@200 ($generated@@38 $generated@@200 $generated@@201)))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> ($generated@@124 $generated@@202 ($generated@@123 $generated@@203)) (and (= ($generated@@64 $generated@@58 ($generated@@57 $generated@@58 $generated@@202)) $generated@@202) ($generated@@53 $generated@@58 ($generated@@57 $generated@@58 $generated@@202) ($generated@@123 $generated@@203))))
 :pattern ( ($generated@@124 $generated@@202 ($generated@@123 $generated@@203)))
)))
(assert  (=> (<= 0 $generated@@48) (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (or ($generated@@51 $generated@@204 $generated@@205) (and (< 0 $generated@@48) (and ($generated@@50 $generated@@204) (and (or (not (= $generated@@205 $generated@@52)) (not true)) (and ($generated@@53 $generated@@54 $generated@@205 $generated@@55) ($generated@@56 $generated@@54 $generated@@205 $generated@@55 $generated@@204)))))) (=> ($generated@@49 $generated@@204 $generated@@205) ($generated@@32 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@204 $generated@@205) $generated@@63)) ($generated@@64 $generated@@54 $generated@@205))))
 :pattern ( ($generated@@49 $generated@@204 $generated@@205))
))))
(assert (= ($generated@@29 $generated@@102) $generated@@4))
(assert (= ($generated@@206 $generated@@102) $generated@@9))
(assert (= ($generated@@29 $generated@@101) $generated@@5))
(assert (= ($generated@@206 $generated@@101) $generated@@9))
(assert (= ($generated@@29 $generated@@93) $generated@@7))
(assert (= ($generated@@206 $generated@@93) $generated@@10))
(assert (= ($generated@@29 $generated@@55) $generated@@8))
(assert (= ($generated@@206 $generated@@55) $generated@@10))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! ($generated@@56 $generated@@13 $generated@@208 $generated $generated@@207)
 :pattern ( ($generated@@56 $generated@@13 $generated@@208 $generated $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ) (! ($generated@@53 $generated@@13 $generated@@209 $generated)
 :pattern ( ($generated@@53 $generated@@13 $generated@@209 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () Bool)
(declare-fun $generated@@213 () Bool)
(declare-fun $generated@@214 () Bool)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Bool)
(declare-fun $generated@@217 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@218  (=> (= (ControlFlow 0 6) (- 0 5)) (=> ($generated@@49 $generated@@210 $generated@@211) ($generated@@32 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@64 $generated@@54 $generated@@211))))))
(let (($generated@@219  (=> (and (= ($generated@@49 $generated@@210 $generated@@211)  (and (and ($generated@@32 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@64 $generated@@54 $generated@@211)) (not ($generated@@32 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@64 $generated@@54 $generated@@52)))) true)) ($generated@@53 $generated@@13 ($generated@@16 ($generated@@49 $generated@@210 $generated@@211)) $generated)) (and (=> (= (ControlFlow 0 7) (- 0 9)) $generated@@212) (=> $generated@@212 (and (=> (= (ControlFlow 0 7) (- 0 8)) $generated@@213) (=> $generated@@213 (=> (= (ControlFlow 0 7) 6) $generated@@218))))))))
(let (($generated@@220  (=> (and (not (and ($generated@@32 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@64 $generated@@54 $generated@@211)) (not ($generated@@32 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@64 $generated@@54 $generated@@52))))) (= (ControlFlow 0 11) 7)) $generated@@219)))
(let (($generated@@221  (=> (and (and ($generated@@32 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@64 $generated@@54 $generated@@211)) (not ($generated@@32 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@64 $generated@@54 $generated@@52)))) (= (ControlFlow 0 10) 7)) $generated@@219)))
(let (($generated@@222  (=> (and (not ($generated@@32 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@64 $generated@@54 $generated@@211))) (= $generated@@213 true)) (and (=> (= (ControlFlow 0 13) 10) $generated@@221) (=> (= (ControlFlow 0 13) 11) $generated@@220)))))
(let (($generated@@223  (=> ($generated@@32 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@64 $generated@@54 $generated@@211)) (=> (and (= $generated@@214 ($generated@@17 ($generated@@128 $generated@@54 $generated@@60 $generated@@13 $generated@@215 $generated@@211 $generated@@63))) (= $generated@@213 $generated@@214)) (and (=> (= (ControlFlow 0 12) 10) $generated@@221) (=> (= (ControlFlow 0 12) 11) $generated@@220))))))
(let (($generated@@224  (=> (= $generated@@212 ($generated@@17 ($generated@@128 $generated@@54 $generated@@60 $generated@@13 $generated@@215 $generated@@211 $generated@@63))) (and (=> (= (ControlFlow 0 14) 12) $generated@@223) (=> (= (ControlFlow 0 14) 13) $generated@@222)))))
(let (($generated@@225 true))
(let (($generated@@226  (=> (and (=> ($generated@@49 $generated@@210 $generated@@211) ($generated@@32 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@64 $generated@@54 $generated@@211))) (= (ControlFlow 0 4) 1)) $generated@@225)))
(let (($generated@@227  (=> ($generated@@163 ($generated@@64 $generated@@54 $generated@@211) $generated@@93 $generated@@210) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (= $generated@@211 $generated@@211) (and ($generated@@113 ($generated@@38 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@31 $generated@@91 ($generated@@64 $generated@@54 $generated@@211))) ($generated@@38 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@31 $generated@@91 ($generated@@64 $generated@@54 $generated@@211)))) (not ($generated@@113 ($generated@@38 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@31 $generated@@91 ($generated@@64 $generated@@54 $generated@@211))) ($generated@@38 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@31 $generated@@91 ($generated@@64 $generated@@54 $generated@@211)))))))) (=> (or (= $generated@@211 $generated@@211) (and ($generated@@113 ($generated@@38 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@31 $generated@@91 ($generated@@64 $generated@@54 $generated@@211))) ($generated@@38 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@31 $generated@@91 ($generated@@64 $generated@@54 $generated@@211)))) (not ($generated@@113 ($generated@@38 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@31 $generated@@91 ($generated@@64 $generated@@54 $generated@@211))) ($generated@@38 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@31 $generated@@91 ($generated@@64 $generated@@54 $generated@@211))))))) (=> (and (and (or (= $generated@@211 $generated@@211) ($generated@@51 $generated@@210 $generated@@211)) ($generated@@49 $generated@@210 $generated@@211)) (and ($generated@@32 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)) ($generated@@64 $generated@@54 $generated@@211)) (= (ControlFlow 0 2) 1))) $generated@@225))))))
(let (($generated@@228  (=> (and (= $generated@@215 ($generated@@129 $generated@@52 $generated@@210 $generated@@2 $generated@@211 ($generated@@57 $generated@@58 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@54 ($generated@@62 $generated@@60 $generated@@61) $generated@@210 $generated@@211) $generated@@63)))) (= $generated@@216 ($generated@@17 ($generated@@128 $generated@@54 $generated@@60 $generated@@13 $generated@@215 $generated@@211 $generated@@63)))) (and (=> (= (ControlFlow 0 15) (- 0 16)) $generated@@216) (=> $generated@@216 (and (and (=> (= (ControlFlow 0 15) 14) $generated@@224) (=> (= (ControlFlow 0 15) 2) $generated@@227)) (=> (= (ControlFlow 0 15) 4) $generated@@226)))))))
(let (($generated@@229  (=> (and ($generated@@50 $generated@@210) ($generated@@217 $generated@@210)) (=> (and (and (or (not (= $generated@@211 $generated@@52)) (not true)) (and ($generated@@53 $generated@@54 $generated@@211 $generated@@55) ($generated@@56 $generated@@54 $generated@@211 $generated@@55 $generated@@210))) (and (= 0 $generated@@48) (= (ControlFlow 0 17) 15))) $generated@@228))))
$generated@@229)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
