(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (Bool Real T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Real)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@48 (T@T T@U T@U) Bool)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@55 (Real Bool) T@U)
(declare-fun $generated@@58 (Int) Int)
(declare-fun $generated@@60 (Real) Real)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@87 (Bool) T@U)
(declare-fun $generated@@101 (T@U) Int)
(declare-fun $generated@@108 (Int) T@U)
(declare-fun $generated@@109 (T@U) Int)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@115 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@T T@T) T@T)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@T) T@T)
(declare-fun $generated@@121 (T@T) T@T)
(declare-fun $generated@@170 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (forall (($generated@@32 Bool) ($generated@@33 Real) ($generated@@34 T@U) ) (! (= ($generated@@31 ($generated@@30 $generated@@32 $generated@@33 $generated@@34)) $generated@@32)
 :pattern ( ($generated@@30 $generated@@32 $generated@@33 $generated@@34))
)))
(assert (= ($generated@@35 $generated) $generated@@3))
(assert (= ($generated@@35 $generated@@0) $generated@@4))
(assert (= ($generated@@35 $generated@@1) $generated@@5))
(assert (= ($generated@@35 $generated@@2) $generated@@6))
(assert (forall (($generated@@37 Bool) ($generated@@38 Real) ($generated@@39 T@U) ) (! (= ($generated@@36 ($generated@@30 $generated@@37 $generated@@38 $generated@@39)) $generated@@11)
 :pattern ( ($generated@@30 $generated@@37 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 Bool) ($generated@@42 Real) ($generated@@43 T@U) ) (! (= ($generated@@40 ($generated@@30 $generated@@41 $generated@@42 $generated@@43)) $generated@@42)
 :pattern ( ($generated@@30 $generated@@41 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 Bool) ($generated@@46 Real) ($generated@@47 T@U) ) (! (= ($generated@@44 ($generated@@30 $generated@@45 $generated@@46 $generated@@47)) $generated@@47)
 :pattern ( ($generated@@30 $generated@@45 $generated@@46 $generated@@47))
)))
(assert  (and (= ($generated@@14 $generated@@49) 3) (= ($generated@@14 $generated@@51) 4)))
(assert (forall (($generated@@52 Bool) ($generated@@53 Real) ($generated@@54 T@U) ) (! (= ($generated@@48 $generated@@49 ($generated@@30 $generated@@52 $generated@@53 $generated@@54) $generated@@50)  (and (and ($generated@@48 $generated@@15 ($generated@@18 $generated@@52) $generated) ($generated@@48 $generated@@17 ($generated@@22 $generated@@53) $generated@@2)) ($generated@@48 $generated@@51 $generated@@54 $generated@@0)))
 :pattern ( ($generated@@48 $generated@@49 ($generated@@30 $generated@@52 $generated@@53 $generated@@54) $generated@@50))
)))
(assert (forall (($generated@@56 Real) ($generated@@57 Bool) ) (! (= ($generated@@48 $generated@@49 ($generated@@55 $generated@@56 $generated@@57) $generated@@50)  (and ($generated@@48 $generated@@17 ($generated@@22 $generated@@56) $generated@@2) ($generated@@48 $generated@@15 ($generated@@18 $generated@@57) $generated)))
 :pattern ( ($generated@@48 $generated@@49 ($generated@@55 $generated@@56 $generated@@57) $generated@@50))
)))
(assert (forall (($generated@@59 Int) ) (! (= ($generated@@58 $generated@@59) $generated@@59)
 :pattern ( ($generated@@58 $generated@@59))
)))
(assert (forall (($generated@@61 Real) ) (! (= ($generated@@60 $generated@@61) $generated@@61)
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@65 $generated@@66) (= ($generated@@36 $generated@@66) $generated@@9))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 $generated@@68) (= ($generated@@36 $generated@@68) $generated@@10))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 $generated@@70) (= ($generated@@36 $generated@@70) $generated@@11))
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@71 $generated@@72) (= ($generated@@36 $generated@@72) $generated@@12))
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@73 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@73 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@69 $generated@@77) (exists (($generated@@78 Bool) ($generated@@79 Real) ($generated@@80 T@U) ) (= $generated@@77 ($generated@@30 $generated@@78 $generated@@79 $generated@@80))))
 :pattern ( ($generated@@69 $generated@@77))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@71 $generated@@81) (exists (($generated@@82 Real) ($generated@@83 Bool) ) (= $generated@@81 ($generated@@55 $generated@@82 $generated@@83))))
 :pattern ( ($generated@@71 $generated@@81))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@65 $generated@@85) (exists (($generated@@86 Int) ) (= $generated@@85 ($generated@@84 $generated@@86))))
 :pattern ( ($generated@@65 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@67 $generated@@88) (exists (($generated@@89 Bool) ) (= $generated@@88 ($generated@@87 $generated@@89))))
 :pattern ( ($generated@@67 $generated@@88))
)))
(assert (forall (($generated@@90 Real) ($generated@@91 Bool) ) (! (= ($generated@@31 ($generated@@55 $generated@@90 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@55 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@92 Bool) ) (! (= ($generated@@31 ($generated@@87 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@87 $generated@@92))
)))
(assert (forall (($generated@@93 Real) ($generated@@94 Bool) ) (! (= ($generated@@36 ($generated@@55 $generated@@93 $generated@@94)) $generated@@12)
 :pattern ( ($generated@@55 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 Real) ($generated@@96 Bool) ) (! (= ($generated@@40 ($generated@@55 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@55 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 Real) ($generated@@99 T@U) ) (! (= ($generated@@30 ($generated@@19 ($generated@@62 $generated@@15 $generated@@97)) ($generated@@60 $generated@@98) ($generated@@62 $generated@@51 $generated@@99)) ($generated@@62 $generated@@49 ($generated@@30 ($generated@@19 $generated@@97) $generated@@98 $generated@@99)))
 :pattern ( ($generated@@30 ($generated@@19 ($generated@@62 $generated@@15 $generated@@97)) ($generated@@60 $generated@@98) ($generated@@62 $generated@@51 $generated@@99)))
)))
(assert (forall (($generated@@100 Int) ) (! (= ($generated@@36 ($generated@@84 $generated@@100)) $generated@@9)
 :pattern ( ($generated@@84 $generated@@100))
)))
(assert (forall (($generated@@102 Int) ) (! (= ($generated@@101 ($generated@@84 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@84 $generated@@102))
)))
(assert (forall (($generated@@103 Bool) ) (! (= ($generated@@36 ($generated@@87 $generated@@103)) $generated@@10)
 :pattern ( ($generated@@87 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@73 $generated@@105 ($generated@@74 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@74 $generated@@105 $generated@@104))
)))
(assert (forall (($generated@@106 Int) ) (! (= ($generated@@48 $generated@@49 ($generated@@84 $generated@@106) $generated@@50) ($generated@@48 $generated@@16 ($generated@@20 $generated@@106) $generated@@1))
 :pattern ( ($generated@@48 $generated@@49 ($generated@@84 $generated@@106) $generated@@50))
)))
(assert (forall (($generated@@107 Bool) ) (! (= ($generated@@48 $generated@@49 ($generated@@87 $generated@@107) $generated@@50) ($generated@@48 $generated@@15 ($generated@@18 $generated@@107) $generated))
 :pattern ( ($generated@@48 $generated@@49 ($generated@@87 $generated@@107) $generated@@50))
)))
(assert (forall (($generated@@110 Int) ) (!  (=> (or (and (<= 0 $generated@@110) (< $generated@@110 55296)) (and (<= 57344 $generated@@110) (< $generated@@110 1114112))) (= ($generated@@109 ($generated@@108 $generated@@110)) $generated@@110))
 :pattern ( ($generated@@108 $generated@@110))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@111 $generated@@122 $generated@@123 $generated@@124 ($generated@@118 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@127 $generated@@128) $generated@@125)
 :weight 0
)) (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@111 $generated@@129 $generated@@130 $generated@@131 ($generated@@118 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@111 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@111 $generated@@138 $generated@@139 $generated@@140 ($generated@@118 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@111 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)))) (= ($generated@@14 $generated@@112) 5)) (= ($generated@@14 $generated@@113) 6)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@115 $generated@@147 $generated@@148 ($generated@@119 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@149) $generated@@151) $generated@@149)
 :weight 0
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@156 $generated@@157) (= ($generated@@115 $generated@@152 $generated@@153 ($generated@@119 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@115 $generated@@152 $generated@@153 $generated@@155 $generated@@157)))
 :weight 0
))) (= ($generated@@14 $generated@@116) 7)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (= ($generated@@14 ($generated@@117 $generated@@158 $generated@@159)) 8))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (! (= ($generated@@120 ($generated@@117 $generated@@160 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@117 $generated@@160 $generated@@161))
))) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (! (= ($generated@@121 ($generated@@117 $generated@@162 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@117 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@19 ($generated@@111 $generated@@112 $generated@@113 $generated@@15 ($generated@@114 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (or (not (= $generated@@168 $generated@@164)) (not true)) ($generated@@19 ($generated@@73 $generated@@15 ($generated@@115 $generated@@113 $generated@@116 ($generated@@115 $generated@@112 ($generated@@117 $generated@@113 $generated@@116) $generated@@165 $generated@@168) $generated@@166)))) $generated@@167))
 :pattern ( ($generated@@111 $generated@@112 $generated@@113 $generated@@15 ($generated@@114 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@171 $generated@@173) (and ($generated@@65 $generated@@172) ($generated@@170 $generated@@49 $generated@@172 $generated@@50 $generated@@173))) ($generated@@170 $generated@@16 ($generated@@20 ($generated@@101 $generated@@172)) $generated@@1 $generated@@173))
 :pattern ( ($generated@@170 $generated@@16 ($generated@@20 ($generated@@101 $generated@@172)) $generated@@1 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and ($generated@@171 $generated@@175) (and ($generated@@67 $generated@@174) ($generated@@170 $generated@@49 $generated@@174 $generated@@50 $generated@@175))) ($generated@@170 $generated@@15 ($generated@@18 ($generated@@31 $generated@@174)) $generated $generated@@175))
 :pattern ( ($generated@@170 $generated@@15 ($generated@@18 ($generated@@31 $generated@@174)) $generated $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and ($generated@@171 $generated@@177) (and ($generated@@69 $generated@@176) ($generated@@170 $generated@@49 $generated@@176 $generated@@50 $generated@@177))) ($generated@@170 $generated@@15 ($generated@@18 ($generated@@31 $generated@@176)) $generated $generated@@177))
 :pattern ( ($generated@@170 $generated@@15 ($generated@@18 ($generated@@31 $generated@@176)) $generated $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and ($generated@@171 $generated@@179) (and ($generated@@69 $generated@@178) ($generated@@170 $generated@@49 $generated@@178 $generated@@50 $generated@@179))) ($generated@@170 $generated@@17 ($generated@@22 ($generated@@40 $generated@@178)) $generated@@2 $generated@@179))
 :pattern ( ($generated@@170 $generated@@17 ($generated@@22 ($generated@@40 $generated@@178)) $generated@@2 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and ($generated@@171 $generated@@181) (and ($generated@@69 $generated@@180) ($generated@@170 $generated@@49 $generated@@180 $generated@@50 $generated@@181))) ($generated@@170 $generated@@51 ($generated@@44 $generated@@180) $generated@@0 $generated@@181))
 :pattern ( ($generated@@170 $generated@@51 ($generated@@44 $generated@@180) $generated@@0 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and ($generated@@171 $generated@@183) (and ($generated@@71 $generated@@182) ($generated@@170 $generated@@49 $generated@@182 $generated@@50 $generated@@183))) ($generated@@170 $generated@@17 ($generated@@22 ($generated@@40 $generated@@182)) $generated@@2 $generated@@183))
 :pattern ( ($generated@@170 $generated@@17 ($generated@@22 ($generated@@40 $generated@@182)) $generated@@2 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and ($generated@@171 $generated@@185) (and ($generated@@71 $generated@@184) ($generated@@170 $generated@@49 $generated@@184 $generated@@50 $generated@@185))) ($generated@@170 $generated@@15 ($generated@@18 ($generated@@31 $generated@@184)) $generated $generated@@185))
 :pattern ( ($generated@@170 $generated@@15 ($generated@@18 ($generated@@31 $generated@@184)) $generated $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ) (!  (and (= ($generated@@108 ($generated@@109 $generated@@186)) $generated@@186) (or (and (<= 0 ($generated@@109 $generated@@186)) (< ($generated@@109 $generated@@186) 55296)) (and (<= 57344 ($generated@@109 $generated@@186)) (< ($generated@@109 $generated@@186) 1114112))))
 :pattern ( ($generated@@109 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@171 $generated@@188) ($generated@@48 $generated@@49 $generated@@187 $generated@@50)) ($generated@@170 $generated@@49 $generated@@187 $generated@@50 $generated@@188))
 :pattern ( ($generated@@170 $generated@@49 $generated@@187 $generated@@50 $generated@@188))
)))
(assert (= ($generated@@35 $generated@@50) $generated@@8))
(assert (= ($generated@@189 $generated@@50) $generated@@13))
(assert (forall (($generated@@191 T@U) ) (!  (=> ($generated@@190 $generated@@191) (or (or (or ($generated@@65 $generated@@191) ($generated@@67 $generated@@191)) ($generated@@69 $generated@@191)) ($generated@@71 $generated@@191)))
 :pattern ( ($generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 Real) ($generated@@193 T@U) ) (! (= ($generated@@55 ($generated@@60 $generated@@192) ($generated@@19 ($generated@@62 $generated@@15 $generated@@193))) ($generated@@62 $generated@@49 ($generated@@55 $generated@@192 ($generated@@19 $generated@@193))))
 :pattern ( ($generated@@55 ($generated@@60 $generated@@192) ($generated@@19 ($generated@@62 $generated@@15 $generated@@193))))
)))
(assert (forall (($generated@@194 Int) ) (! (= ($generated@@74 $generated@@16 ($generated@@20 ($generated@@58 $generated@@194))) ($generated@@62 $generated@@116 ($generated@@74 $generated@@16 ($generated@@20 $generated@@194))))
 :pattern ( ($generated@@74 $generated@@16 ($generated@@20 ($generated@@58 $generated@@194))))
)))
(assert (forall (($generated@@195 Real) ) (! (= ($generated@@74 $generated@@17 ($generated@@22 ($generated@@60 $generated@@195))) ($generated@@62 $generated@@116 ($generated@@74 $generated@@17 ($generated@@22 $generated@@195))))
 :pattern ( ($generated@@74 $generated@@17 ($generated@@22 ($generated@@60 $generated@@195))))
)))
(assert (forall (($generated@@196 Int) ) (! (= ($generated@@84 ($generated@@58 $generated@@196)) ($generated@@62 $generated@@49 ($generated@@84 $generated@@196)))
 :pattern ( ($generated@@84 ($generated@@58 $generated@@196)))
)))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@87 ($generated@@19 ($generated@@62 $generated@@15 $generated@@197))) ($generated@@62 $generated@@49 ($generated@@87 ($generated@@19 $generated@@197))))
 :pattern ( ($generated@@87 ($generated@@19 ($generated@@62 $generated@@15 $generated@@197))))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@T) ) (! (= ($generated@@74 $generated@@199 ($generated@@62 $generated@@199 $generated@@198)) ($generated@@62 $generated@@116 ($generated@@74 $generated@@199 $generated@@198)))
 :pattern ( ($generated@@74 $generated@@199 ($generated@@62 $generated@@199 $generated@@198)))
)))
(assert (forall (($generated@@200 T@U) ) (!  (=> ($generated@@48 $generated@@49 $generated@@200 $generated@@50) (or (or (or ($generated@@65 $generated@@200) ($generated@@67 $generated@@200)) ($generated@@69 $generated@@200)) ($generated@@71 $generated@@200)))
 :pattern ( ($generated@@71 $generated@@200) ($generated@@48 $generated@@49 $generated@@200 $generated@@50))
 :pattern ( ($generated@@69 $generated@@200) ($generated@@48 $generated@@49 $generated@@200 $generated@@50))
 :pattern ( ($generated@@67 $generated@@200) ($generated@@48 $generated@@49 $generated@@200 $generated@@50))
 :pattern ( ($generated@@65 $generated@@200) ($generated@@48 $generated@@49 $generated@@200 $generated@@50))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! ($generated@@170 $generated@@16 $generated@@202 $generated@@1 $generated@@201)
 :pattern ( ($generated@@170 $generated@@16 $generated@@202 $generated@@1 $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! ($generated@@170 $generated@@17 $generated@@204 $generated@@2 $generated@@203)
 :pattern ( ($generated@@170 $generated@@17 $generated@@204 $generated@@2 $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (! ($generated@@170 $generated@@15 $generated@@206 $generated $generated@@205)
 :pattern ( ($generated@@170 $generated@@15 $generated@@206 $generated $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! ($generated@@170 $generated@@51 $generated@@208 $generated@@0 $generated@@207)
 :pattern ( ($generated@@170 $generated@@51 $generated@@208 $generated@@0 $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ) (! ($generated@@48 $generated@@16 $generated@@209 $generated@@1)
 :pattern ( ($generated@@48 $generated@@16 $generated@@209 $generated@@1))
)))
(assert (forall (($generated@@210 T@U) ) (! ($generated@@48 $generated@@17 $generated@@210 $generated@@2)
 :pattern ( ($generated@@48 $generated@@17 $generated@@210 $generated@@2))
)))
(assert (forall (($generated@@211 T@U) ) (! ($generated@@48 $generated@@15 $generated@@211 $generated)
 :pattern ( ($generated@@48 $generated@@15 $generated@@211 $generated))
)))
(assert (forall (($generated@@212 T@U) ) (! ($generated@@48 $generated@@51 $generated@@212 $generated@@0)
 :pattern ( ($generated@@48 $generated@@51 $generated@@212 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Bool)
(declare-fun $generated@@217 () Bool)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () Real)
(declare-fun $generated@@221 () Real)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () Bool)
(declare-fun $generated@@225 () Bool)
(declare-fun $generated@@226 () Real)
(declare-fun $generated@@227 () Real)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 36) (let (($generated@@238 true))
(let (($generated@@239  (=> (not ($generated@@69 $generated@@213)) (and (=> (= (ControlFlow 0 30) (- 0 31)) (or ($generated@@69 $generated@@213) ($generated@@71 $generated@@213))) (=> (or ($generated@@69 $generated@@213) ($generated@@71 $generated@@213)) (=> (= (ControlFlow 0 30) 25) $generated@@238))))))
(let (($generated@@240  (=> ($generated@@69 $generated@@213) (and (=> (= (ControlFlow 0 27) (- 0 29)) (or ($generated@@69 $generated@@213) ($generated@@71 $generated@@213))) (=> (or ($generated@@69 $generated@@213) ($generated@@71 $generated@@213)) (and (=> (= (ControlFlow 0 27) (- 0 28)) ($generated@@69 $generated@@213)) (=> ($generated@@69 $generated@@213) (=> (= (ControlFlow 0 27) 25) $generated@@238))))))))
(let (($generated@@241  (=> (not ($generated@@67 $generated@@213)) (and (=> (= (ControlFlow 0 32) 27) $generated@@240) (=> (= (ControlFlow 0 32) 30) $generated@@239)))))
(let (($generated@@242  (=> (and ($generated@@67 $generated@@213) (= (ControlFlow 0 26) 25)) $generated@@238)))
(let (($generated@@243  (and (=> (= (ControlFlow 0 33) (- 0 34)) (or (or ($generated@@71 $generated@@214) ($generated@@69 $generated@@214)) ($generated@@67 $generated@@214))) (=> (or (or ($generated@@71 $generated@@214) ($generated@@69 $generated@@214)) ($generated@@67 $generated@@214)) (=> (and (= $generated@@215 $generated@@214) ($generated@@48 $generated@@49 $generated@@215 $generated@@50)) (=> (and (and (= $generated@@213 $generated@@215) (= $generated@@216 ($generated@@19 ($generated@@62 $generated@@15 ($generated@@18 true))))) (and ($generated@@48 $generated@@15 ($generated@@18 $generated@@216) $generated) (= $generated@@217 $generated@@216))) (and (=> (= (ControlFlow 0 33) 26) $generated@@242) (=> (= (ControlFlow 0 33) 32) $generated@@241))))))))
(let (($generated@@244 true))
(let (($generated@@245  (=> (not ($generated@@69 $generated@@218)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (or (or ($generated@@67 $generated@@218) ($generated@@69 $generated@@218)) ($generated@@71 $generated@@218))) (=> (or (or ($generated@@67 $generated@@218) ($generated@@69 $generated@@218)) ($generated@@71 $generated@@218)) (=> (= (ControlFlow 0 21) 17) $generated@@244))))))
(let (($generated@@246  (=> ($generated@@69 $generated@@218) (and (=> (= (ControlFlow 0 18) (- 0 20)) (or (or ($generated@@67 $generated@@218) ($generated@@69 $generated@@218)) ($generated@@71 $generated@@218))) (=> (or (or ($generated@@67 $generated@@218) ($generated@@69 $generated@@218)) ($generated@@71 $generated@@218)) (and (=> (= (ControlFlow 0 18) (- 0 19)) ($generated@@69 $generated@@218)) (=> ($generated@@69 $generated@@218) (=> (= (ControlFlow 0 18) 17) $generated@@244))))))))
(let (($generated@@247  (and (=> (= (ControlFlow 0 23) (- 0 24)) (or ($generated@@71 $generated@@214) ($generated@@69 $generated@@214))) (=> (or ($generated@@71 $generated@@214) ($generated@@69 $generated@@214)) (=> (and (= $generated@@219 $generated@@214) ($generated@@48 $generated@@49 $generated@@219 $generated@@50)) (=> (and (and (= $generated@@218 $generated@@219) (= $generated@@220 ($generated@@60 2.2))) (and ($generated@@48 $generated@@17 ($generated@@22 $generated@@220) $generated@@2) (= $generated@@221 $generated@@220))) (and (=> (= (ControlFlow 0 23) 18) $generated@@246) (=> (= (ControlFlow 0 23) 21) $generated@@245))))))))
(let (($generated@@248 true))
(let (($generated@@249  (=> (and (not ($generated@@69 $generated@@222)) (= (ControlFlow 0 14) 11)) $generated@@248)))
(let (($generated@@250  (=> ($generated@@69 $generated@@222) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@69 $generated@@222)) (=> ($generated@@69 $generated@@222) (=> (= (ControlFlow 0 12) 11) $generated@@248))))))
(let (($generated@@251  (and (=> (= (ControlFlow 0 15) (- 0 16)) (or ($generated@@71 $generated@@214) ($generated@@69 $generated@@214))) (=> (or ($generated@@71 $generated@@214) ($generated@@69 $generated@@214)) (=> (= $generated@@223 $generated@@214) (=> (and (and (and ($generated@@48 $generated@@49 $generated@@223 $generated@@50) (= $generated@@222 $generated@@223)) (and (= $generated@@224 ($generated@@19 ($generated@@62 $generated@@15 ($generated@@18 true)))) ($generated@@48 $generated@@15 ($generated@@18 $generated@@224) $generated))) (and (and (= $generated@@225 $generated@@224) (= $generated@@226 ($generated@@60 2.2))) (and ($generated@@48 $generated@@17 ($generated@@22 $generated@@226) $generated@@2) (= $generated@@227 $generated@@226)))) (and (=> (= (ControlFlow 0 15) 12) $generated@@250) (=> (= (ControlFlow 0 15) 14) $generated@@249))))))))
(let (($generated@@252  (=> (and (and (and (and (and (and (not ($generated@@19 ($generated@@62 $generated@@15 ($generated@@18 true)))) (not ($generated@@19 ($generated@@62 $generated@@15 ($generated@@18 true))))) (not ($generated@@19 ($generated@@62 $generated@@15 ($generated@@18 true))))) (not ($generated@@19 ($generated@@62 $generated@@15 ($generated@@18 true))))) (not ($generated@@19 ($generated@@62 $generated@@15 ($generated@@18 true))))) (not ($generated@@19 ($generated@@62 $generated@@15 ($generated@@18 true))))) (= (ControlFlow 0 10) (- 0 9))) false)))
(let (($generated@@253  (=> (= (ControlFlow 0 8) (- 0 7)) ($generated@@69 $generated@@214))))
(let (($generated@@254  (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@69 $generated@@214)) (=> ($generated@@69 $generated@@214) (=> (and (= $generated@@228 $generated@@214) ($generated@@48 $generated@@49 $generated@@228 $generated@@50)) (=> (and (and (= $generated@@229 $generated@@228) (= $generated@@230 ($generated@@62 $generated@@51 ($generated@@108 119)))) (and ($generated@@48 $generated@@51 $generated@@230 $generated@@0) (= $generated@@231 $generated@@230))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (or ($generated@@67 $generated@@229) ($generated@@69 $generated@@229)) ($generated@@71 $generated@@229))) (=> (or (or ($generated@@67 $generated@@229) ($generated@@69 $generated@@229)) ($generated@@71 $generated@@229)) (=> (= (ControlFlow 0 4) (- 0 3)) (or ($generated@@69 $generated@@229) ($generated@@71 $generated@@229)))))))))))
(let (($generated@@255  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@65 $generated@@214))))
(let (($generated@@256  (=> (= $generated@@232 ($generated@@114 $generated@@233 $generated@@234 $generated@@7 false)) (and (and (and (and (and (and (=> (= (ControlFlow 0 35) 2) $generated@@255) (=> (= (ControlFlow 0 35) 33) $generated@@243)) (=> (= (ControlFlow 0 35) 4) $generated@@254)) (=> (= (ControlFlow 0 35) 23) $generated@@247)) (=> (= (ControlFlow 0 35) 15) $generated@@251)) (=> (= (ControlFlow 0 35) 8) $generated@@253)) (=> (= (ControlFlow 0 35) 10) $generated@@252)))))
(let (($generated@@257  (=> (and ($generated@@171 $generated@@234) ($generated@@235 $generated@@234)) (=> (and (and ($generated@@48 $generated@@49 $generated@@214 $generated@@50) ($generated@@170 $generated@@49 $generated@@214 $generated@@50 $generated@@234)) ($generated@@190 $generated@@214)) (=> (and (and (and ($generated@@48 $generated@@49 $generated@@236 $generated@@50) ($generated@@170 $generated@@49 $generated@@236 $generated@@50 $generated@@234)) (= 0 $generated@@237)) (and ($generated@@69 $generated@@214) (= (ControlFlow 0 36) 35))) $generated@@256)))))
$generated@@257)))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
