(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 (T@U) Int)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U Int) T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@83 (T@U Int) T@U)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (Int) T@U)
(declare-fun $generated@@92 () Int)
(declare-fun $generated@@93 (T@U T@U Int) Bool)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@95 (T@U T@U Int) Bool)
(declare-fun $generated@@96 (Int) Int)
(declare-fun $generated@@97 (T@U T@U) Bool)
(declare-fun $generated@@103 (T@T T@U) T@U)
(declare-fun $generated@@106 (T@U Int) T@U)
(declare-fun $generated@@112 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (T@T T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) Int)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@184 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@186 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@221 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@3) 0))
(assert (= ($generated@@27 $generated) $generated@@1))
(assert (= ($generated@@27 $generated@@0) $generated@@2))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and (or (not (= $generated@@34 $generated@@30)) (not true)) (= ($generated@@31 $generated@@34) ($generated@@29 $generated@@33))) ($generated@@32 $generated@@12 ($generated@@16 ($generated@@28 $generated@@34)) $generated@@0))
 :pattern ( ($generated@@28 $generated@@34) ($generated@@29 $generated@@33))
)))
(assert (= ($generated@@10 $generated@@36) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40) ($generated@@35 $generated@@36 $generated@@39 ($generated@@29 $generated@@38) $generated@@40))
 :pattern ( ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40))
 :pattern ( ($generated@@35 $generated@@36 $generated@@39 ($generated@@29 $generated@@38) $generated@@40))
)))
(assert (= ($generated@@41 $generated@@42) 0))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 Int) ) (!  (=> (and (<= 0 $generated@@47) (<= $generated@@47 ($generated@@41 $generated@@45))) (= ($generated@@43 ($generated@@44 $generated@@45 $generated@@46) $generated@@47) ($generated@@44 ($generated@@43 $generated@@45 $generated@@47) $generated@@46)))
 :pattern ( ($generated@@43 ($generated@@44 $generated@@45 $generated@@46) $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@49 $generated@@48)  (or (= $generated@@49 $generated@@30) (= ($generated@@31 $generated@@49) $generated@@48)))
 :pattern ( ($generated@@32 $generated@@36 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@51 $generated@@50 $generated@@52) ($generated@@35 $generated@@36 $generated@@51 $generated@@48 $generated@@52))
 :pattern ( ($generated@@35 $generated@@36 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@35 $generated@@36 $generated@@51 $generated@@48 $generated@@52))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@54 $generated@@61 $generated@@62 ($generated@@58 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@65) $generated@@63)
 :weight 0
)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (or (= $generated@@70 $generated@@71) (= ($generated@@54 $generated@@66 $generated@@67 ($generated@@58 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@71) ($generated@@54 $generated@@66 $generated@@67 $generated@@69 $generated@@71)))
 :weight 0
))) (= ($generated@@10 $generated@@55) 4)) (= ($generated@@10 $generated@@56) 5)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (= ($generated@@10 ($generated@@57 $generated@@72 $generated@@73)) 6))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@74 $generated@@75)) $generated@@74)
 :pattern ( ($generated@@57 $generated@@74 $generated@@75))
))) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (! (= ($generated@@60 ($generated@@57 $generated@@76 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@57 $generated@@76 $generated@@77))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@79 ($generated@@29 $generated@@78) $generated@@80)  (or (= $generated@@79 $generated@@30) ($generated@@15 ($generated@@53 $generated@@11 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@36 ($generated@@57 $generated@@55 $generated@@56) $generated@@80 $generated@@79) $generated@@3)))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@79 ($generated@@29 $generated@@78) $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@81 $generated@@48 $generated@@82)  (or (= $generated@@81 $generated@@30) ($generated@@15 ($generated@@53 $generated@@11 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@36 ($generated@@57 $generated@@55 $generated@@56) $generated@@82 $generated@@81) $generated@@3)))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@81 $generated@@48 $generated@@82))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 Int) ($generated@@89 Int) ) (!  (=> (and (and (= (+ $generated@@88 1) $generated@@89) (<= 0 $generated@@88)) (<= $generated@@89 ($generated@@28 $generated@@87))) (= ($generated@@83 ($generated@@84 $generated@@86 $generated@@87) $generated@@89) ($generated@@44 ($generated@@83 ($generated@@84 $generated@@86 $generated@@87) $generated@@88) ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@36 ($generated@@57 $generated@@55 $generated@@56) $generated@@86 $generated@@87) ($generated@@85 $generated@@88)))))
 :pattern ( ($generated@@83 ($generated@@84 $generated@@86 $generated@@87) $generated@@88) ($generated@@83 ($generated@@84 $generated@@86 $generated@@87) $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 Int) ) (!  (=> (= $generated@@91 0) (= ($generated@@43 $generated@@90 $generated@@91) $generated@@90))
 :pattern ( ($generated@@43 $generated@@90 $generated@@91))
)))
(assert  (=> (<= 0 $generated@@92) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 Int) ) (!  (=> (or ($generated@@95 $generated@@99 $generated@@100 $generated@@101) (and (< 0 $generated@@92) (and (and ($generated@@94 $generated@@98) (and (or (not (= $generated@@99 $generated@@30)) (not true)) (and ($generated@@32 $generated@@36 $generated@@99 $generated@@50) ($generated@@35 $generated@@36 $generated@@99 $generated@@50 $generated@@98)))) ($generated@@32 $generated@@36 $generated@@100 ($generated@@37 $generated@@0))))) (= ($generated@@93 $generated@@99 $generated@@100 $generated@@101)  (and (and (<= ($generated@@96 0) $generated@@101) (<= $generated@@101 ($generated@@28 $generated@@100))) ($generated@@97 ($generated@@43 ($generated@@83 ($generated@@84 $generated@@98 $generated@@100) $generated@@101) $generated@@101) $generated@@42))))
 :pattern ( ($generated@@93 $generated@@99 $generated@@100 $generated@@101) ($generated@@94 $generated@@98))
))))
(assert (forall (($generated@@102 Int) ) (! (= ($generated@@96 $generated@@102) $generated@@102)
 :pattern ( ($generated@@96 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@103 $generated@@105 $generated@@104) $generated@@104)
 :pattern ( ($generated@@103 $generated@@105 $generated@@104))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 Int) ($generated@@109 Int) ) (!  (=> (and (and (<= 0 $generated@@109) (< $generated@@109 $generated@@108)) (< $generated@@109 ($generated@@41 $generated@@107))) (= ($generated@@106 ($generated@@83 $generated@@107 $generated@@108) $generated@@109) ($generated@@106 $generated@@107 $generated@@109)))
 :weight 25
 :pattern ( ($generated@@106 ($generated@@83 $generated@@107 $generated@@108) $generated@@109))
 :pattern ( ($generated@@106 $generated@@107 $generated@@109) ($generated@@83 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 Int) ) (!  (=> (and (<= 0 $generated@@111) (<= $generated@@111 ($generated@@41 $generated@@110))) (= ($generated@@41 ($generated@@43 $generated@@110 $generated@@111)) (- ($generated@@41 $generated@@110) $generated@@111)))
 :pattern ( ($generated@@41 ($generated@@43 $generated@@110 $generated@@111)))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 Int) ) (!  (=> (and (and (and ($generated@@94 $generated@@114) (and (or (not (= $generated@@115 $generated@@30)) (not true)) (= ($generated@@31 $generated@@115) ($generated@@29 $generated@@113)))) (and (<= 0 $generated@@116) (< $generated@@116 ($generated@@28 $generated@@115)))) ($generated@@15 ($generated@@53 $generated@@11 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@36 ($generated@@57 $generated@@55 $generated@@56) $generated@@114 $generated@@115) $generated@@3)))) ($generated@@112 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@36 ($generated@@57 $generated@@55 $generated@@56) $generated@@114 $generated@@115) ($generated@@85 $generated@@116)) $generated@@113 $generated@@114))
 :pattern ( ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@36 ($generated@@57 $generated@@55 $generated@@56) $generated@@114 $generated@@115) ($generated@@85 $generated@@116)) ($generated@@29 $generated@@113))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@97 $generated@@117 $generated@@118)  (and (= ($generated@@41 $generated@@117) ($generated@@41 $generated@@118)) (forall (($generated@@119 Int) ) (!  (=> (and (<= 0 $generated@@119) (< $generated@@119 ($generated@@41 $generated@@117))) (= ($generated@@106 $generated@@117 $generated@@119) ($generated@@106 $generated@@118 $generated@@119)))
 :pattern ( ($generated@@106 $generated@@117 $generated@@119))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119))
))))
 :pattern ( ($generated@@97 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@120 $generated@@122 ($generated@@53 $generated@@122 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@53 $generated@@122 $generated@@121))
)))
(assert  (=> (<= 0 $generated@@92) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 Int) ) (!  (=> (or ($generated@@95 ($generated@@103 $generated@@36 $generated@@124) ($generated@@103 $generated@@36 $generated@@125) ($generated@@96 $generated@@126)) (and (< 0 $generated@@92) (and (and ($generated@@94 $generated@@123) (and (or (not (= $generated@@124 $generated@@30)) (not true)) (and ($generated@@32 $generated@@36 $generated@@124 $generated@@50) ($generated@@35 $generated@@36 $generated@@124 $generated@@50 $generated@@123)))) ($generated@@32 $generated@@36 $generated@@125 ($generated@@37 $generated@@0))))) (= ($generated@@93 ($generated@@103 $generated@@36 $generated@@124) ($generated@@103 $generated@@36 $generated@@125) ($generated@@96 $generated@@126))  (and (and (<= ($generated@@96 0) ($generated@@96 $generated@@126)) (<= ($generated@@96 $generated@@126) ($generated@@96 ($generated@@28 ($generated@@103 $generated@@36 $generated@@125))))) ($generated@@97 ($generated@@43 ($generated@@83 ($generated@@84 $generated@@123 ($generated@@103 $generated@@36 $generated@@125)) ($generated@@96 $generated@@126)) ($generated@@96 $generated@@126)) $generated@@42))))
 :weight 3
 :pattern ( ($generated@@93 ($generated@@103 $generated@@36 $generated@@124) ($generated@@103 $generated@@36 $generated@@125) ($generated@@96 $generated@@126)) ($generated@@94 $generated@@123))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@41 ($generated@@44 $generated@@127 $generated@@128)) (+ 1 ($generated@@41 $generated@@127)))
 :pattern ( ($generated@@44 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@130 ($generated@@37 $generated@@129))  (and ($generated@@32 $generated@@36 $generated@@130 ($generated@@29 $generated@@129)) (or (not (= $generated@@130 $generated@@30)) (not true))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@130 ($generated@@37 $generated@@129)))
 :pattern ( ($generated@@32 $generated@@36 $generated@@130 ($generated@@29 $generated@@129)))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@112 ($generated@@120 $generated@@134 $generated@@131) $generated@@132 $generated@@133) ($generated@@35 $generated@@134 $generated@@131 $generated@@132 $generated@@133))
 :pattern ( ($generated@@112 ($generated@@120 $generated@@134 $generated@@131) $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 Int) ($generated@@137 Int) ) (!  (=> (and (and (<= 0 $generated@@136) (<= 0 $generated@@137)) (< $generated@@137 (- ($generated@@41 $generated@@135) $generated@@136))) (= ($generated@@106 ($generated@@43 $generated@@135 $generated@@136) $generated@@137) ($generated@@106 $generated@@135 (+ $generated@@137 $generated@@136))))
 :weight 25
 :pattern ( ($generated@@106 ($generated@@43 $generated@@135 $generated@@136) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (!  (and (= ($generated@@27 ($generated@@29 $generated@@139)) $generated@@4) (= ($generated@@138 ($generated@@29 $generated@@139)) $generated@@8))
 :pattern ( ($generated@@29 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (!  (and (= ($generated@@27 ($generated@@37 $generated@@140)) $generated@@5) (= ($generated@@138 ($generated@@37 $generated@@140)) $generated@@8))
 :pattern ( ($generated@@37 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> ($generated@@141 $generated@@142 $generated@@48) (and (= ($generated@@120 $generated@@36 ($generated@@53 $generated@@36 $generated@@142)) $generated@@142) ($generated@@32 $generated@@36 ($generated@@53 $generated@@36 $generated@@142) $generated@@48)))
 :pattern ( ($generated@@141 $generated@@142 $generated@@48))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@141 $generated@@143 $generated@@50) (and (= ($generated@@120 $generated@@36 ($generated@@53 $generated@@36 $generated@@143)) $generated@@143) ($generated@@32 $generated@@36 ($generated@@53 $generated@@36 $generated@@143) $generated@@50)))
 :pattern ( ($generated@@141 $generated@@143 $generated@@50))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@145 ($generated@@29 $generated@@144))  (or (= $generated@@145 $generated@@30) (= ($generated@@31 $generated@@145) ($generated@@29 $generated@@144))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@145 ($generated@@29 $generated@@144)))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@146 $generated@@50)  (and ($generated@@32 $generated@@36 $generated@@146 $generated@@48) (or (not (= $generated@@146 $generated@@30)) (not true))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@146 $generated@@50))
 :pattern ( ($generated@@32 $generated@@36 $generated@@146 $generated@@48))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 Int) ($generated@@149 T@U) ) (!  (and (=> (= $generated@@148 ($generated@@41 $generated@@147)) (= ($generated@@106 ($generated@@44 $generated@@147 $generated@@149) $generated@@148) $generated@@149)) (=> (or (not (= $generated@@148 ($generated@@41 $generated@@147))) (not true)) (= ($generated@@106 ($generated@@44 $generated@@147 $generated@@149) $generated@@148) ($generated@@106 $generated@@147 $generated@@148))))
 :pattern ( ($generated@@106 ($generated@@44 $generated@@147 $generated@@149) $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (forall (($generated@@152 Int) ) (!  (=> (and (<= 0 $generated@@152) (< $generated@@152 ($generated@@41 ($generated@@84 $generated@@150 $generated@@151)))) (= ($generated@@106 ($generated@@84 $generated@@150 $generated@@151) $generated@@152) ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@36 ($generated@@57 $generated@@55 $generated@@56) $generated@@150 $generated@@151) ($generated@@85 $generated@@152))))
 :pattern ( ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@36 ($generated@@57 $generated@@55 $generated@@56) $generated@@150 $generated@@151) ($generated@@85 $generated@@152)))
 :pattern ( ($generated@@106 ($generated@@84 $generated@@150 $generated@@151) $generated@@152))
))
 :pattern ( ($generated@@84 $generated@@150 $generated@@151))
)))
(assert  (=> (<= 0 $generated@@92) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 Int) ) (!  (=> (or ($generated@@95 $generated@@154 ($generated@@103 $generated@@36 $generated@@155) ($generated@@96 $generated@@156)) (and (< 0 $generated@@92) (and (and ($generated@@94 $generated@@153) (and (or (not (= $generated@@154 $generated@@30)) (not true)) (and ($generated@@32 $generated@@36 $generated@@154 $generated@@50) ($generated@@35 $generated@@36 $generated@@154 $generated@@50 $generated@@153)))) ($generated@@32 $generated@@36 $generated@@155 ($generated@@37 $generated@@0))))) (= ($generated@@93 $generated@@154 ($generated@@103 $generated@@36 $generated@@155) ($generated@@96 $generated@@156))  (and (and (<= ($generated@@96 0) ($generated@@96 $generated@@156)) (<= ($generated@@96 $generated@@156) ($generated@@96 ($generated@@28 ($generated@@103 $generated@@36 $generated@@155))))) ($generated@@97 ($generated@@43 ($generated@@83 ($generated@@84 $generated@@153 ($generated@@103 $generated@@36 $generated@@155)) ($generated@@96 $generated@@156)) ($generated@@96 $generated@@156)) $generated@@42))))
 :weight 3
 :pattern ( ($generated@@93 $generated@@154 ($generated@@103 $generated@@36 $generated@@155) ($generated@@96 $generated@@156)) ($generated@@94 $generated@@153))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@97 $generated@@157 $generated@@158) (= $generated@@157 $generated@@158))
 :pattern ( ($generated@@97 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 Int) ) (!  (=> (and (<= 0 $generated@@160) (<= $generated@@160 ($generated@@41 $generated@@159))) (= ($generated@@41 ($generated@@83 $generated@@159 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@41 ($generated@@83 $generated@@159 $generated@@160)))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> ($generated@@141 $generated@@161 $generated@@0) (and (= ($generated@@120 $generated@@12 ($generated@@53 $generated@@12 $generated@@161)) $generated@@161) ($generated@@32 $generated@@12 ($generated@@53 $generated@@12 $generated@@161) $generated@@0)))
 :pattern ( ($generated@@141 $generated@@161 $generated@@0))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> ($generated@@141 $generated@@162 $generated) (and (= ($generated@@120 $generated@@11 ($generated@@53 $generated@@11 $generated@@162)) $generated@@162) ($generated@@32 $generated@@11 ($generated@@53 $generated@@11 $generated@@162) $generated)))
 :pattern ( ($generated@@141 $generated@@162 $generated))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@T) ) (! (= ($generated@@141 ($generated@@120 $generated@@165 $generated@@163) $generated@@164) ($generated@@32 $generated@@165 $generated@@163 $generated@@164))
 :pattern ( ($generated@@141 ($generated@@120 $generated@@165 $generated@@163) $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ) (! (<= 0 ($generated@@28 $generated@@166))
 :pattern ( ($generated@@28 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (! (<= 0 ($generated@@41 $generated@@167))
 :pattern ( ($generated@@41 $generated@@167))
)))
(assert (forall (($generated@@168 Int) ) (! (= ($generated@@26 ($generated@@85 $generated@@168)) 1)
 :pattern ( ($generated@@85 $generated@@168))
)))
(assert (forall (($generated@@170 Int) ) (! (= ($generated@@169 ($generated@@85 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@85 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@171 ($generated@@29 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@29 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@173 ($generated@@37 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@37 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@T) ) (! (= ($generated@@53 $generated@@176 ($generated@@120 $generated@@176 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@120 $generated@@176 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and ($generated@@94 $generated@@178) (and (or (not (= $generated@@179 $generated@@30)) (not true)) (= ($generated@@31 $generated@@179) ($generated@@29 $generated@@177)))) ($generated@@15 ($generated@@53 $generated@@11 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@36 ($generated@@57 $generated@@55 $generated@@56) $generated@@178 $generated@@179) $generated@@3)))) ($generated@@35 $generated@@12 ($generated@@16 ($generated@@28 $generated@@179)) $generated@@0 $generated@@178))
 :pattern ( ($generated@@28 $generated@@179) ($generated@@53 $generated@@11 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@36 ($generated@@57 $generated@@55 $generated@@56) $generated@@178 $generated@@179) $generated@@3)) ($generated@@29 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Int) ) (!  (=> (and (and ($generated@@94 $generated@@181) (and (or (not (= $generated@@182 $generated@@30)) (not true)) (= ($generated@@31 $generated@@182) ($generated@@29 $generated@@180)))) (and (<= 0 $generated@@183) (< $generated@@183 ($generated@@28 $generated@@182)))) ($generated@@141 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@36 ($generated@@57 $generated@@55 $generated@@56) $generated@@181 $generated@@182) ($generated@@85 $generated@@183)) $generated@@180))
 :pattern ( ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@36 ($generated@@57 $generated@@55 $generated@@56) $generated@@181 $generated@@182) ($generated@@85 $generated@@183)) ($generated@@29 $generated@@180))
)))
(assert  (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@184 $generated@@187 $generated@@188 $generated@@189 ($generated@@186 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@192 $generated@@193) $generated@@190)
 :weight 0
)) (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@184 $generated@@194 $generated@@195 $generated@@196 ($generated@@186 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@184 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@184 $generated@@203 $generated@@204 $generated@@205 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@184 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@15 ($generated@@184 $generated@@36 $generated@@55 $generated@@11 ($generated@@185 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (or (not (= $generated@@216 $generated@@212)) (not true)) ($generated@@15 ($generated@@53 $generated@@11 ($generated@@54 $generated@@55 $generated@@56 ($generated@@54 $generated@@36 ($generated@@57 $generated@@55 $generated@@56) $generated@@213 $generated@@216) $generated@@214)))) $generated@@215))
 :pattern ( ($generated@@184 $generated@@36 $generated@@55 $generated@@11 ($generated@@185 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= ($generated@@41 ($generated@@84 $generated@@218 $generated@@219)) ($generated@@28 $generated@@219))
 :pattern ( ($generated@@41 ($generated@@84 $generated@@218 $generated@@219)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (and (= ($generated@@220 ($generated@@44 $generated@@222 $generated@@223)) $generated@@222) (= ($generated@@221 ($generated@@44 $generated@@222 $generated@@223)) $generated@@223))
 :pattern ( ($generated@@44 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> ($generated@@141 $generated@@225 ($generated@@29 $generated@@224)) (and (= ($generated@@120 $generated@@36 ($generated@@53 $generated@@36 $generated@@225)) $generated@@225) ($generated@@32 $generated@@36 ($generated@@53 $generated@@36 $generated@@225) ($generated@@29 $generated@@224))))
 :pattern ( ($generated@@141 $generated@@225 ($generated@@29 $generated@@224)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> ($generated@@141 $generated@@227 ($generated@@37 $generated@@226)) (and (= ($generated@@120 $generated@@36 ($generated@@53 $generated@@36 $generated@@227)) $generated@@227) ($generated@@32 $generated@@36 ($generated@@53 $generated@@36 $generated@@227) ($generated@@37 $generated@@226))))
 :pattern ( ($generated@@141 $generated@@227 ($generated@@37 $generated@@226)))
)))
(assert (= ($generated@@27 $generated@@48) $generated@@6))
(assert (= ($generated@@138 $generated@@48) $generated@@9))
(assert (= ($generated@@27 $generated@@50) $generated@@7))
(assert (= ($generated@@138 $generated@@50) $generated@@9))
(assert (forall (($generated@@228 T@U) ($generated@@229 Int) ($generated@@230 Int) ) (!  (=> (and (and (<= 0 $generated@@229) (<= $generated@@229 $generated@@230)) (< $generated@@230 ($generated@@41 $generated@@228))) (= ($generated@@106 ($generated@@43 $generated@@228 $generated@@229) (- $generated@@230 $generated@@229)) ($generated@@106 $generated@@228 $generated@@230)))
 :weight 25
 :pattern ( ($generated@@106 $generated@@228 $generated@@230) ($generated@@43 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 Int) ($generated@@233 Int) ) (!  (=> (and (and (<= 0 $generated@@232) (<= 0 $generated@@233)) (<= (+ $generated@@232 $generated@@233) ($generated@@41 $generated@@231))) (= ($generated@@43 ($generated@@43 $generated@@231 $generated@@232) $generated@@233) ($generated@@43 $generated@@231 (+ $generated@@232 $generated@@233))))
 :pattern ( ($generated@@43 ($generated@@43 $generated@@231 $generated@@232) $generated@@233))
)))
(assert (forall (($generated@@234 Int) ) (! (= ($generated@@120 $generated@@12 ($generated@@16 ($generated@@96 $generated@@234))) ($generated@@103 $generated@@56 ($generated@@120 $generated@@12 ($generated@@16 $generated@@234))))
 :pattern ( ($generated@@120 $generated@@12 ($generated@@16 ($generated@@96 $generated@@234))))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@T) ) (! (= ($generated@@120 $generated@@236 ($generated@@103 $generated@@236 $generated@@235)) ($generated@@103 $generated@@56 ($generated@@120 $generated@@236 $generated@@235)))
 :pattern ( ($generated@@120 $generated@@236 ($generated@@103 $generated@@236 $generated@@235)))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (= ($generated@@41 $generated@@237) 0) (= $generated@@237 $generated@@42))
 :pattern ( ($generated@@41 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 Int) ) (!  (=> (= $generated@@239 0) (= ($generated@@83 $generated@@238 $generated@@239) $generated@@42))
 :pattern ( ($generated@@83 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! ($generated@@35 $generated@@12 $generated@@241 $generated@@0 $generated@@240)
 :pattern ( ($generated@@35 $generated@@12 $generated@@241 $generated@@0 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! ($generated@@35 $generated@@11 $generated@@243 $generated $generated@@242)
 :pattern ( ($generated@@35 $generated@@11 $generated@@243 $generated $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! ($generated@@32 $generated@@12 $generated@@244 $generated@@0)
 :pattern ( ($generated@@32 $generated@@12 $generated@@244 $generated@@0))
)))
(assert (forall (($generated@@245 T@U) ) (! ($generated@@32 $generated@@11 $generated@@245 $generated)
 :pattern ( ($generated@@32 $generated@@11 $generated@@245 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () Int)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () Bool)
(declare-fun $generated@@251 () Bool)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@254  (=> (= ($generated@@93 $generated@@246 $generated@@247 $generated@@248)  (and (and (<= ($generated@@96 0) $generated@@248) (<= $generated@@248 ($generated@@28 $generated@@247))) ($generated@@97 ($generated@@43 ($generated@@83 ($generated@@84 $generated@@249 $generated@@247) $generated@@248) $generated@@248) $generated@@42))) (=> (and ($generated@@32 $generated@@11 ($generated@@14 ($generated@@93 $generated@@246 $generated@@247 $generated@@248)) $generated) (= (ControlFlow 0 3) (- 0 2))) $generated@@250))))
(let (($generated@@255  (=> (not (and (<= ($generated@@96 0) $generated@@248) (<= $generated@@248 ($generated@@28 $generated@@247)))) (=> (and (= $generated@@250 true) (= (ControlFlow 0 8) 3)) $generated@@254))))
(let (($generated@@256  (=> (and (<= ($generated@@96 0) $generated@@248) (<= $generated@@248 ($generated@@28 $generated@@247))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (not (= $generated@@247 $generated@@30)) (not true))) (=> (or (not (= $generated@@247 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and (<= 0 $generated@@248) (<= $generated@@248 ($generated@@28 $generated@@247)))) (=> (and (<= 0 $generated@@248) (<= $generated@@248 ($generated@@28 $generated@@247))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= $generated@@248 $generated@@248) (<= $generated@@248 ($generated@@28 $generated@@247)))) (=> (and (<= $generated@@248 $generated@@248) (<= $generated@@248 ($generated@@28 $generated@@247))) (=> (= $generated@@251 (forall (($generated@@257 Int) ) (!  (=> (and (<= $generated@@248 $generated@@257) (< $generated@@257 $generated@@248)) ($generated@@15 ($generated@@184 $generated@@36 $generated@@55 $generated@@11 $generated@@252 $generated@@247 ($generated@@85 $generated@@257))))
 :pattern ( ($generated@@184 $generated@@36 $generated@@55 $generated@@11 $generated@@252 $generated@@247 ($generated@@85 $generated@@257)))
))) (=> (and (= $generated@@250 $generated@@251) (= (ControlFlow 0 4) 3)) $generated@@254)))))))))))
(let (($generated@@258  (=> (< $generated@@248 ($generated@@96 0)) (and (=> (= (ControlFlow 0 11) 4) $generated@@256) (=> (= (ControlFlow 0 11) 8) $generated@@255)))))
(let (($generated@@259  (=> (<= ($generated@@96 0) $generated@@248) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (not (= $generated@@247 $generated@@30)) (not true))) (=> (or (not (= $generated@@247 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 9) 4) $generated@@256) (=> (= (ControlFlow 0 9) 8) $generated@@255)))))))
(let (($generated@@260 true))
(let (($generated@@261  (=> (= $generated@@252 ($generated@@185 $generated@@30 $generated@@249 $generated@@3 false)) (and (and (=> (= (ControlFlow 0 12) 1) $generated@@260) (=> (= (ControlFlow 0 12) 9) $generated@@259)) (=> (= (ControlFlow 0 12) 11) $generated@@258)))))
(let (($generated@@262  (=> (and ($generated@@94 $generated@@249) ($generated@@253 $generated@@249)) (=> (and (and (and (or (not (= $generated@@246 $generated@@30)) (not true)) (and ($generated@@32 $generated@@36 $generated@@246 $generated@@50) ($generated@@35 $generated@@36 $generated@@246 $generated@@50 $generated@@249))) ($generated@@32 $generated@@36 $generated@@247 ($generated@@37 $generated@@0))) (and (= 0 $generated@@92) (= (ControlFlow 0 13) 12))) $generated@@261))))
$generated@@262)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
