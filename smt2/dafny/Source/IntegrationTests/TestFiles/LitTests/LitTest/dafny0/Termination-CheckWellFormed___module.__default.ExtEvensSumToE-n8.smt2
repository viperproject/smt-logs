(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (Int T@U T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U T@U) T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@59 (T@U) Int)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@89 () T@U)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@108 (T@T T@U) T@U)
(declare-fun $generated@@115 (T@U T@U) Bool)
(declare-fun $generated@@120 (T@U T@U) Bool)
(declare-fun $generated@@124 (T@U T@U) Int)
(declare-fun $generated@@125 (T@U) Bool)
(declare-fun $generated@@133 (T@U T@U T@U) Bool)
(declare-fun $generated@@134 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@184 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@189 () T@T)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@243 (Int Int) Int)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@24) 3))
(assert (forall (($generated@@27 Int) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26)  (and (and ($generated@@23 $generated@@9 ($generated@@13 $generated@@27) $generated) ($generated@@23 $generated@@24 $generated@@28 $generated@@26)) ($generated@@23 $generated@@24 $generated@@29 $generated@@26)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26))
)))
(assert (= ($generated@@7 $generated@@33) 4))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@32 $generated@@36) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@36 $generated@@26))) ($generated@@23 $generated@@33 ($generated@@31 $generated@@35 $generated@@36) ($generated@@34 $generated)))
 :pattern ( ($generated@@31 $generated@@35 $generated@@36))
))))
(assert (= ($generated@@37 $generated) $generated@@0))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! ($generated@@39 ($generated@@38 $generated@@40 $generated@@41) $generated@@41)
 :pattern ( ($generated@@38 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated@@39 $generated@@42 $generated@@44) ($generated@@39 ($generated@@38 $generated@@42 $generated@@43) $generated@@44))
 :pattern ( ($generated@@38 $generated@@42 $generated@@43) ($generated@@39 $generated@@42 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> ($generated@@39 $generated@@46 $generated@@48) ($generated@@39 ($generated@@45 $generated@@46 $generated@@47) $generated@@48))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47) ($generated@@39 $generated@@46 $generated@@48))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> ($generated@@39 $generated@@50 $generated@@51) ($generated@@39 ($generated@@45 $generated@@49 $generated@@50) $generated@@51))
 :pattern ( ($generated@@45 $generated@@49 $generated@@50) ($generated@@39 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@39 ($generated@@38 $generated@@52 $generated@@53) $generated@@54)  (or (= $generated@@54 $generated@@53) ($generated@@39 $generated@@52 $generated@@54)))
 :pattern ( ($generated@@39 ($generated@@38 $generated@@52 $generated@@53) $generated@@54))
)))
(assert (forall (($generated@@56 Int) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@55 ($generated@@25 $generated@@56 $generated@@57 $generated@@58)) $generated@@5)
 :pattern ( ($generated@@25 $generated@@56 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 Int) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@59 ($generated@@25 $generated@@60 $generated@@61 $generated@@62)) $generated@@60)
 :pattern ( ($generated@@25 $generated@@60 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 Int) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@63 ($generated@@25 $generated@@64 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@25 $generated@@64 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 Int) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@67 ($generated@@25 $generated@@68 $generated@@69 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@25 $generated@@68 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> ($generated@@39 $generated@@73 $generated@@74) (not ($generated@@39 ($generated@@71 $generated@@72 $generated@@73) $generated@@74)))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73) ($generated@@39 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (not ($generated@@39 $generated@@75 $generated@@76))
 :pattern ( ($generated@@39 $generated@@75 $generated@@76))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@32 ($generated@@78 $generated@@24 $generated@@83)) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@83 $generated@@26))) (and (=> (not ($generated@@12 ($generated@@78 $generated@@8 ($generated@@11 ($generated@@79 ($generated@@78 $generated@@24 $generated@@83)))))) (let (($generated@@84 ($generated@@78 $generated@@24 ($generated@@67 ($generated@@78 $generated@@24 $generated@@83)))))
(let (($generated@@85 ($generated@@78 $generated@@24 ($generated@@63 ($generated@@78 $generated@@24 $generated@@83)))))
 (and ($generated@@32 $generated@@85) ($generated@@32 $generated@@84))))) (= ($generated@@31 ($generated@@77 $generated@@82) ($generated@@78 $generated@@24 $generated@@83)) (ite ($generated@@79 ($generated@@78 $generated@@24 $generated@@83)) $generated@@75 (let (($generated@@86 ($generated@@78 $generated@@24 ($generated@@67 ($generated@@78 $generated@@24 $generated@@83)))))
(let (($generated@@87 ($generated@@78 $generated@@24 ($generated@@63 ($generated@@78 $generated@@24 $generated@@83)))))
(let (($generated@@88 ($generated@@80 ($generated@@59 ($generated@@78 $generated@@24 $generated@@83)))))
($generated@@45 ($generated@@45 ($generated@@38 $generated@@75 ($generated@@81 $generated@@9 ($generated@@13 $generated@@88))) ($generated@@31 ($generated@@77 $generated@@82) $generated@@87)) ($generated@@31 ($generated@@77 $generated@@82) $generated@@86)))))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@77 $generated@@82) ($generated@@78 $generated@@24 $generated@@83)))
))))
(assert (= ($generated@@55 $generated@@89) $generated@@4))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@45 ($generated@@45 $generated@@90 $generated@@91) $generated@@91) ($generated@@45 $generated@@90 $generated@@91))
 :pattern ( ($generated@@45 ($generated@@45 $generated@@90 $generated@@91) $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@39 ($generated@@71 $generated@@92 $generated@@93) $generated@@94)  (and ($generated@@39 $generated@@92 $generated@@94) (not ($generated@@39 $generated@@93 $generated@@94))))
 :pattern ( ($generated@@39 ($generated@@71 $generated@@92 $generated@@93) $generated@@94))
)))
(assert ($generated@@23 $generated@@24 $generated@@89 $generated@@26))
(assert (forall (($generated@@95 Int) ) (! (= ($generated@@80 $generated@@95) $generated@@95)
 :pattern ( ($generated@@80 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@78 $generated@@97 $generated@@96) $generated@@96)
 :pattern ( ($generated@@78 $generated@@97 $generated@@96))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (or ($generated@@32 $generated@@99) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@99 $generated@@26))) (and (=> (not ($generated@@79 $generated@@99)) (let (($generated@@100 ($generated@@67 $generated@@99)))
(let (($generated@@101 ($generated@@63 $generated@@99)))
 (and ($generated@@32 $generated@@101) ($generated@@32 $generated@@100))))) (= ($generated@@31 ($generated@@77 $generated@@98) $generated@@99) (ite ($generated@@79 $generated@@99) $generated@@75 (let (($generated@@102 ($generated@@67 $generated@@99)))
(let (($generated@@103 ($generated@@63 $generated@@99)))
(let (($generated@@104 ($generated@@59 $generated@@99)))
($generated@@45 ($generated@@45 ($generated@@38 $generated@@75 ($generated@@81 $generated@@9 ($generated@@13 $generated@@104))) ($generated@@31 $generated@@98 $generated@@103)) ($generated@@31 $generated@@98 $generated@@102)))))))))
 :pattern ( ($generated@@31 ($generated@@77 $generated@@98) $generated@@99))
))))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@79 $generated@@105) (= ($generated@@55 $generated@@105) $generated@@4))
 :pattern ( ($generated@@79 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@106 $generated@@107) (= ($generated@@55 $generated@@107) $generated@@5))
 :pattern ( ($generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@81 $generated@@110 ($generated@@108 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@108 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@106 $generated@@111) (exists (($generated@@112 Int) ($generated@@113 T@U) ($generated@@114 T@U) ) (= $generated@@111 ($generated@@25 $generated@@112 $generated@@113 $generated@@114))))
 :pattern ( ($generated@@106 $generated@@111))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@115 $generated@@116 $generated@@117) (forall (($generated@@118 T@U) ) (!  (or (not ($generated@@39 $generated@@116 $generated@@118)) (not ($generated@@39 $generated@@117 $generated@@118)))
 :pattern ( ($generated@@39 $generated@@116 $generated@@118))
 :pattern ( ($generated@@39 $generated@@117 $generated@@118))
)))
 :pattern ( ($generated@@115 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@79 $generated@@119) (= $generated@@119 $generated@@89))
 :pattern ( ($generated@@79 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@23 $generated@@33 $generated@@121 ($generated@@34 $generated@@122)) (forall (($generated@@123 T@U) ) (!  (=> ($generated@@39 $generated@@121 $generated@@123) ($generated@@120 $generated@@123 $generated@@122))
 :pattern ( ($generated@@39 $generated@@121 $generated@@123))
)))
 :pattern ( ($generated@@23 $generated@@33 $generated@@121 ($generated@@34 $generated@@122)))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (or ($generated@@125 $generated@@127) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@127 $generated@@26))) (and (=> (not ($generated@@79 $generated@@127)) (let (($generated@@128 ($generated@@67 $generated@@127)))
(let (($generated@@129 ($generated@@63 $generated@@127)))
 (and ($generated@@125 $generated@@129) ($generated@@125 $generated@@128))))) (= ($generated@@124 ($generated@@77 $generated@@126) $generated@@127) (ite ($generated@@79 $generated@@127) 0 (let (($generated@@130 ($generated@@67 $generated@@127)))
(let (($generated@@131 ($generated@@63 $generated@@127)))
(let (($generated@@132 ($generated@@59 $generated@@127)))
(+ (+ $generated@@132 ($generated@@124 $generated@@126 $generated@@131)) ($generated@@124 $generated@@126 $generated@@130)))))))))
 :pattern ( ($generated@@124 ($generated@@77 $generated@@126) $generated@@127))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@133 ($generated@@81 $generated@@138 $generated@@135) $generated@@136 $generated@@137) ($generated@@134 $generated@@138 $generated@@135 $generated@@136 $generated@@137))
 :pattern ( ($generated@@133 ($generated@@81 $generated@@138 $generated@@135) $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@120 $generated@@139 $generated@@26) (and (= ($generated@@81 $generated@@24 ($generated@@108 $generated@@24 $generated@@139)) $generated@@139) ($generated@@23 $generated@@24 ($generated@@108 $generated@@24 $generated@@139) $generated@@26)))
 :pattern ( ($generated@@120 $generated@@139 $generated@@26))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@39 ($generated@@45 $generated@@140 $generated@@141) $generated@@142)  (or ($generated@@39 $generated@@140 $generated@@142) ($generated@@39 $generated@@141 $generated@@142)))
 :pattern ( ($generated@@39 ($generated@@45 $generated@@140 $generated@@141) $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@115 $generated@@143 $generated@@144) (and (= ($generated@@71 ($generated@@45 $generated@@143 $generated@@144) $generated@@143) $generated@@144) (= ($generated@@71 ($generated@@45 $generated@@143 $generated@@144) $generated@@144) $generated@@143)))
 :pattern ( ($generated@@45 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> ($generated@@145 $generated@@146) (or ($generated@@79 $generated@@146) ($generated@@106 $generated@@146)))
 :pattern ( ($generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@147 $generated@@26) (or ($generated@@79 $generated@@147) ($generated@@106 $generated@@147)))
 :pattern ( ($generated@@106 $generated@@147) ($generated@@23 $generated@@24 $generated@@147 $generated@@26))
 :pattern ( ($generated@@79 $generated@@147) ($generated@@23 $generated@@24 $generated@@147 $generated@@26))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (or ($generated@@125 ($generated@@78 $generated@@24 $generated@@149)) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@149 $generated@@26))) (and (=> (not ($generated@@12 ($generated@@78 $generated@@8 ($generated@@11 ($generated@@79 ($generated@@78 $generated@@24 $generated@@149)))))) (let (($generated@@150 ($generated@@78 $generated@@24 ($generated@@67 ($generated@@78 $generated@@24 $generated@@149)))))
(let (($generated@@151 ($generated@@78 $generated@@24 ($generated@@63 ($generated@@78 $generated@@24 $generated@@149)))))
 (and ($generated@@125 $generated@@151) ($generated@@125 $generated@@150))))) (= ($generated@@124 ($generated@@77 $generated@@148) ($generated@@78 $generated@@24 $generated@@149)) (ite ($generated@@79 ($generated@@78 $generated@@24 $generated@@149)) 0 (let (($generated@@152 ($generated@@78 $generated@@24 ($generated@@67 ($generated@@78 $generated@@24 $generated@@149)))))
(let (($generated@@153 ($generated@@78 $generated@@24 ($generated@@63 ($generated@@78 $generated@@24 $generated@@149)))))
(let (($generated@@154 ($generated@@80 ($generated@@59 ($generated@@78 $generated@@24 $generated@@149)))))
($generated@@80 (+ (+ $generated@@154 ($generated@@124 ($generated@@77 $generated@@148) $generated@@153)) ($generated@@124 ($generated@@77 $generated@@148) $generated@@152))))))))))
 :weight 3
 :pattern ( ($generated@@124 ($generated@@77 $generated@@148) ($generated@@78 $generated@@24 $generated@@149)))
))))
(assert (forall (($generated@@155 T@U) ) (!  (=> ($generated@@120 $generated@@155 $generated) (and (= ($generated@@81 $generated@@9 ($generated@@108 $generated@@9 $generated@@155)) $generated@@155) ($generated@@23 $generated@@9 ($generated@@108 $generated@@9 $generated@@155) $generated)))
 :pattern ( ($generated@@120 $generated@@155 $generated))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@T) ) (! (= ($generated@@120 ($generated@@81 $generated@@158 $generated@@156) $generated@@157) ($generated@@23 $generated@@158 $generated@@156 $generated@@157))
 :pattern ( ($generated@@120 ($generated@@81 $generated@@158 $generated@@156) $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@134 $generated@@33 $generated@@159 ($generated@@34 $generated@@160) $generated@@161) (forall (($generated@@162 T@U) ) (!  (=> ($generated@@39 $generated@@159 $generated@@162) ($generated@@133 $generated@@162 $generated@@160 $generated@@161))
 :pattern ( ($generated@@39 $generated@@159 $generated@@162))
)))
 :pattern ( ($generated@@134 $generated@@33 $generated@@159 ($generated@@34 $generated@@160) $generated@@161))
)))
(assert (forall (($generated@@163 Int) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@25 ($generated@@80 $generated@@163) ($generated@@78 $generated@@24 $generated@@164) ($generated@@78 $generated@@24 $generated@@165)) ($generated@@78 $generated@@24 ($generated@@25 $generated@@163 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@25 ($generated@@80 $generated@@163) ($generated@@78 $generated@@24 $generated@@164) ($generated@@78 $generated@@24 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@166 ($generated@@34 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@34 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@37 ($generated@@34 $generated@@168)) $generated@@1)
 :pattern ( ($generated@@34 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@T) ) (! (= ($generated@@108 $generated@@170 ($generated@@81 $generated@@170 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@81 $generated@@170 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (< ($generated@@171 $generated@@173) ($generated@@171 ($generated@@25 $generated@@172 $generated@@173 $generated@@174)))
 :pattern ( ($generated@@25 $generated@@172 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 Int) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (< ($generated@@171 $generated@@177) ($generated@@171 ($generated@@25 $generated@@175 $generated@@176 $generated@@177)))
 :pattern ( ($generated@@25 $generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@31 ($generated@@77 $generated@@178) $generated@@179) ($generated@@31 $generated@@178 $generated@@179))
 :pattern ( ($generated@@31 ($generated@@77 $generated@@178) $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@124 ($generated@@77 $generated@@180) $generated@@181) ($generated@@124 $generated@@180 $generated@@181))
 :pattern ( ($generated@@124 ($generated@@77 $generated@@180) $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@45 $generated@@182 ($generated@@45 $generated@@182 $generated@@183)) ($generated@@45 $generated@@182 $generated@@183))
 :pattern ( ($generated@@45 $generated@@182 ($generated@@45 $generated@@182 $generated@@183)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@184 $generated@@195 $generated@@196 $generated@@197 ($generated@@191 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@200 $generated@@201) $generated@@198)
 :weight 0
)) (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@184 $generated@@202 $generated@@203 $generated@@204 ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@184 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@T) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@184 $generated@@211 $generated@@212 $generated@@213 ($generated@@191 $generated@@211 $generated@@212 $generated@@213 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@184 $generated@@211 $generated@@212 $generated@@213 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (= ($generated@@7 $generated@@185) 5)) (= ($generated@@7 $generated@@186) 6)) (forall (($generated@@220 T@T) ($generated@@221 T@T) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (= ($generated@@188 $generated@@220 $generated@@221 ($generated@@192 $generated@@220 $generated@@221 $generated@@223 $generated@@224 $generated@@222) $generated@@224) $generated@@222)
 :weight 0
))) (forall (($generated@@225 T@T) ($generated@@226 T@T) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@229 $generated@@230) (= ($generated@@188 $generated@@225 $generated@@226 ($generated@@192 $generated@@225 $generated@@226 $generated@@228 $generated@@229 $generated@@227) $generated@@230) ($generated@@188 $generated@@225 $generated@@226 $generated@@228 $generated@@230)))
 :weight 0
))) (= ($generated@@7 $generated@@189) 7)) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (= ($generated@@7 ($generated@@190 $generated@@231 $generated@@232)) 8))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@193 ($generated@@190 $generated@@233 $generated@@234)) $generated@@233)
 :pattern ( ($generated@@190 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@194 ($generated@@190 $generated@@235 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@190 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (= ($generated@@12 ($generated@@184 $generated@@185 $generated@@186 $generated@@8 ($generated@@187 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (or (not (= $generated@@241 $generated@@237)) (not true)) ($generated@@12 ($generated@@108 $generated@@8 ($generated@@188 $generated@@186 $generated@@189 ($generated@@188 $generated@@185 ($generated@@190 $generated@@186 $generated@@189) $generated@@238 $generated@@241) $generated@@239)))) $generated@@240))
 :pattern ( ($generated@@184 $generated@@185 $generated@@186 $generated@@8 ($generated@@187 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 Int) ($generated@@245 Int) ) (! (= ($generated@@243 $generated@@244 $generated@@245) (mod $generated@@244 $generated@@245))
 :pattern ( ($generated@@243 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and ($generated@@246 $generated@@248) (and ($generated@@106 $generated@@247) ($generated@@134 $generated@@24 $generated@@247 $generated@@26 $generated@@248))) ($generated@@134 $generated@@9 ($generated@@13 ($generated@@59 $generated@@247)) $generated $generated@@248))
 :pattern ( ($generated@@134 $generated@@9 ($generated@@13 ($generated@@59 $generated@@247)) $generated $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> ($generated@@120 $generated@@249 ($generated@@34 $generated@@250)) (and (= ($generated@@81 $generated@@33 ($generated@@108 $generated@@33 $generated@@249)) $generated@@249) ($generated@@23 $generated@@33 ($generated@@108 $generated@@33 $generated@@249) ($generated@@34 $generated@@250))))
 :pattern ( ($generated@@120 $generated@@249 ($generated@@34 $generated@@250)))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and ($generated@@246 $generated@@252) ($generated@@23 $generated@@24 $generated@@251 $generated@@26)) ($generated@@134 $generated@@24 $generated@@251 $generated@@26 $generated@@252))
 :pattern ( ($generated@@134 $generated@@24 $generated@@251 $generated@@26 $generated@@252))
)))
(assert (= ($generated@@37 $generated@@26) $generated@@3))
(assert (= ($generated@@253 $generated@@26) $generated@@6))
(assert (= $generated@@89 ($generated@@78 $generated@@24 $generated@@89)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and ($generated@@246 $generated@@255) (and ($generated@@106 $generated@@254) ($generated@@134 $generated@@24 $generated@@254 $generated@@26 $generated@@255))) ($generated@@134 $generated@@24 ($generated@@63 $generated@@254) $generated@@26 $generated@@255))
 :pattern ( ($generated@@134 $generated@@24 ($generated@@63 $generated@@254) $generated@@26 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and ($generated@@246 $generated@@257) (and ($generated@@106 $generated@@256) ($generated@@134 $generated@@24 $generated@@256 $generated@@26 $generated@@257))) ($generated@@134 $generated@@24 ($generated@@67 $generated@@256) $generated@@26 $generated@@257))
 :pattern ( ($generated@@134 $generated@@24 ($generated@@67 $generated@@256) $generated@@26 $generated@@257))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@81 $generated@@9 ($generated@@13 ($generated@@80 $generated@@258))) ($generated@@78 $generated@@189 ($generated@@81 $generated@@9 ($generated@@13 $generated@@258))))
 :pattern ( ($generated@@81 $generated@@9 ($generated@@13 ($generated@@80 $generated@@258))))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@T) ) (! (= ($generated@@81 $generated@@260 ($generated@@78 $generated@@260 $generated@@259)) ($generated@@78 $generated@@189 ($generated@@81 $generated@@260 $generated@@259)))
 :pattern ( ($generated@@81 $generated@@260 ($generated@@78 $generated@@260 $generated@@259)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! ($generated@@134 $generated@@9 $generated@@262 $generated $generated@@261)
 :pattern ( ($generated@@134 $generated@@9 $generated@@262 $generated $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! ($generated@@23 $generated@@9 $generated@@263 $generated)
 :pattern ( ($generated@@23 $generated@@9 $generated@@263 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () Int)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@272  (=> (forall (($generated@@273 T@U) ) (!  (=> ($generated@@39 ($generated@@31 ($generated@@77 $generated@@264) $generated@@265) ($generated@@81 $generated@@9 $generated@@273)) (= ($generated@@243 ($generated@@14 $generated@@273) ($generated@@80 2)) ($generated@@80 0)))
 :pattern ( ($generated@@39 ($generated@@31 ($generated@@77 $generated@@264) $generated@@265) ($generated@@81 $generated@@9 $generated@@273)))
)) (=> (and ($generated@@246 $generated@@266) ($generated@@267 $generated@@266)) (=> (and (and (= $generated@@268 $generated@@266) ($generated@@133 ($generated@@81 $generated@@24 $generated@@265) $generated@@26 $generated@@266)) (and ($generated@@125 $generated@@265) (= (ControlFlow 0 2) (- 0 1)))) (or (not (= ($generated@@80 2) 0)) (not true)))))))
(let (($generated@@274  (=> (and (=> ($generated@@39 ($generated@@31 ($generated@@77 $generated@@264) $generated@@265) ($generated@@81 $generated@@9 ($generated@@13 $generated@@269))) (= ($generated@@243 $generated@@269 ($generated@@80 2)) ($generated@@80 0))) (= (ControlFlow 0 5) 2)) $generated@@272)))
(let (($generated@@275  (=> ($generated@@133 ($generated@@81 $generated@@24 $generated@@265) $generated@@26 $generated@@268) (=> (and ($generated@@32 $generated@@265) ($generated@@39 ($generated@@31 ($generated@@77 $generated@@264) $generated@@265) ($generated@@81 $generated@@9 ($generated@@13 $generated@@269)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (not (= ($generated@@80 2) 0)) (not true))) (=> (or (not (= ($generated@@80 2) 0)) (not true)) (=> (and (= ($generated@@243 $generated@@269 ($generated@@80 2)) ($generated@@80 0)) (= (ControlFlow 0 3) 2)) $generated@@272)))))))
(let (($generated@@276  (=> (= $generated@@270 ($generated@@187 $generated@@271 $generated@@268 $generated@@2 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@275) (=> (= (ControlFlow 0 6) 5) $generated@@274)))))
(let (($generated@@277  (=> (and ($generated@@246 $generated@@268) ($generated@@267 $generated@@268)) (=> (and (and (and ($generated@@23 $generated@@24 $generated@@265 $generated@@26) ($generated@@134 $generated@@24 $generated@@265 $generated@@26 $generated@@268)) ($generated@@145 $generated@@265)) (and (= 2 $generated@@30) (= (ControlFlow 0 7) 6))) $generated@@276))))
$generated@@277))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
