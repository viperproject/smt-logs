(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U T@U T@U) Bool)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@72 (Int) T@U)
(declare-fun $generated@@73 (T@U) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@86 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@87 () T@U)
(declare-fun $generated@@90 () T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@93 (T@T T@U) T@U)
(declare-fun $generated@@99 (Int) Int)
(declare-fun $generated@@101 (T@T T@U) T@U)
(declare-fun $generated@@104 (T@T T@U) T@U)
(declare-fun $generated@@111 (T@U T@U) Bool)
(declare-fun $generated@@125 (T@U) Bool)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@200 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert  (and (and (and (and (and (and (and (= ($generated@@8 $generated@@33) 3) (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@36 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
))) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@36 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@36 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@8 $generated@@37) 4)) (= ($generated@@8 $generated@@38) 5)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@8 ($generated@@39 $generated@@54 $generated@@55)) 6))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@39 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@39 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@39 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and (and (and ($generated@@30 $generated@@61) ($generated@@30 $generated@@62)) (or ($generated@@31 $generated@@61 $generated@@63 $generated@@64) ($generated@@32 $generated@@33 $generated@@64 $generated@@34))) (and ($generated@@27 $generated@@61) ($generated@@28 $generated@@61 $generated@@62))) (=> (forall (($generated@@65 T@U) ($generated@@66 T@U) )  (=> (and (or (not (= $generated@@65 $generated@@35)) (not true)) (= $generated@@65 $generated@@64)) (= ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@61 $generated@@65) $generated@@66) ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@62 $generated@@65) $generated@@66)))) (= ($generated@@29 $generated@@60 $generated@@61 $generated@@63 $generated@@64) ($generated@@29 $generated@@60 $generated@@62 $generated@@63 $generated@@64))))
 :pattern ( ($generated@@27 $generated@@61) ($generated@@28 $generated@@61 $generated@@62) ($generated@@29 $generated@@60 $generated@@62 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and ($generated@@67 $generated@@68 $generated@@69) ($generated@@67 $generated@@69 $generated@@70)) ($generated@@67 $generated@@68 $generated@@70))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69) ($generated@@67 $generated@@69 $generated@@70))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69) ($generated@@67 $generated@@68 $generated@@70))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 Int) ($generated@@76 Int) ) (!  (=> (and (and (<= 0 $generated@@75) (<= 0 $generated@@76)) (<= (+ $generated@@75 $generated@@76) ($generated@@73 $generated@@74))) (= ($generated@@71 ($generated@@71 $generated@@74 ($generated@@72 $generated@@75)) ($generated@@72 $generated@@76)) ($generated@@71 $generated@@74 ($generated@@72 (+ $generated@@75 $generated@@76)))))
 :pattern ( ($generated@@71 ($generated@@71 $generated@@74 ($generated@@72 $generated@@75)) ($generated@@72 $generated@@76)))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@78 $generated@@34)  (or (= $generated@@78 $generated@@35) (= ($generated@@77 $generated@@78) $generated@@34)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@78 $generated@@34))
)))
(assert  (=> (<= 1 $generated@@79) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@83) ($generated@@32 $generated@@33 $generated@@84 $generated@@34)) ($generated@@80 ($generated@@81 $generated@@82) $generated@@83 $generated@@84)) (forall (($generated@@85 T@U) ) (! ($generated@@29 ($generated@@81 $generated@@82) $generated@@83 $generated@@85 $generated@@84)
 :pattern ( ($generated@@29 ($generated@@81 $generated@@82) $generated@@83 $generated@@85 $generated@@84))
)))
 :pattern ( ($generated@@80 ($generated@@81 $generated@@82) $generated@@83 $generated@@84))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@86 $generated@@33 $generated@@88 $generated@@87 $generated@@89) ($generated@@86 $generated@@33 $generated@@88 $generated@@34 $generated@@89))
 :pattern ( ($generated@@86 $generated@@33 $generated@@88 $generated@@87 $generated@@89))
 :pattern ( ($generated@@86 $generated@@33 $generated@@88 $generated@@34 $generated@@89))
)))
(assert (= ($generated@@24 $generated@@90) 0))
(assert (= ($generated@@91 $generated@@5 $generated@@7) $generated@@90))
(assert  (not ($generated@@92 $generated@@90)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@86 $generated@@33 $generated@@94 $generated@@34 $generated@@95)  (or (= $generated@@94 $generated@@35) ($generated@@13 ($generated@@93 $generated@@9 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@95 $generated@@94) $generated@@1)))))
 :pattern ( ($generated@@86 $generated@@33 $generated@@94 $generated@@34 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@28 $generated@@96 $generated@@97) (forall (($generated@@98 T@U) ) (!  (=> ($generated@@13 ($generated@@93 $generated@@9 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@96 $generated@@98) $generated@@1))) ($generated@@13 ($generated@@93 $generated@@9 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@97 $generated@@98) $generated@@1))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@97 $generated@@98) $generated@@1))
)))
 :pattern ( ($generated@@28 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@100 Int) ) (! (= ($generated@@99 $generated@@100) $generated@@100)
 :pattern ( ($generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@101 $generated@@103 $generated@@102) $generated@@102)
 :pattern ( ($generated@@101 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@104 $generated@@106 ($generated@@93 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@93 $generated@@106 $generated@@105))
)))
(assert  (=> (<= 1 $generated@@79) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@108) ($generated@@32 $generated@@33 $generated@@109 $generated@@34)) (forall (($generated@@110 T@U) ) (! ($generated@@29 ($generated@@81 $generated@@107) $generated@@108 $generated@@110 $generated@@109)
 :pattern ( ($generated@@29 ($generated@@81 $generated@@107) $generated@@108 $generated@@110 $generated@@109))
))) ($generated@@80 ($generated@@81 $generated@@107) $generated@@108 $generated@@109))
 :pattern ( ($generated@@80 ($generated@@81 $generated@@107) $generated@@108 $generated@@109))
))))
(assert ($generated@@92 $generated@@1))
(assert  (=> (<= 0 $generated@@79) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (or ($generated@@111 $generated@@113 $generated@@114) (and (< 0 $generated@@79) (and ($generated@@30 $generated@@113) ($generated@@32 $generated@@33 $generated@@114 $generated@@34)))) (and ($generated@@111 $generated@@113 $generated@@114) (= ($generated@@80 ($generated@@81 $generated@@112) $generated@@113 $generated@@114) ($generated@@80 $generated@@112 $generated@@113 $generated@@114))))
 :pattern ( ($generated@@80 ($generated@@81 $generated@@112) $generated@@113 $generated@@114) ($generated@@30 $generated@@113))
))))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@115) (and (or (not (= $generated@@116 $generated@@35)) (not true)) (= ($generated@@77 $generated@@116) $generated@@34))) ($generated@@13 ($generated@@93 $generated@@9 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@115 $generated@@116) $generated@@1)))) ($generated@@86 $generated@@10 ($generated@@93 $generated@@10 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@115 $generated@@116) $generated@@90)) $generated $generated@@115))
 :pattern ( ($generated@@93 $generated@@10 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@115 $generated@@116) $generated@@90)))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@80 ($generated@@81 $generated@@117) $generated@@118 $generated@@119) ($generated@@80 $generated@@117 $generated@@118 $generated@@119))
 :pattern ( ($generated@@80 ($generated@@81 $generated@@117) $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@T) ) (!  (=> ($generated@@28 $generated@@120 $generated@@121) (=> ($generated@@86 $generated@@124 $generated@@122 $generated@@123 $generated@@120) ($generated@@86 $generated@@124 $generated@@122 $generated@@123 $generated@@121)))
 :pattern ( ($generated@@28 $generated@@120 $generated@@121) ($generated@@86 $generated@@124 $generated@@122 $generated@@123 $generated@@120))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and ($generated@@125 $generated@@127) (<= ($generated@@73 $generated@@127) ($generated@@73 $generated@@126))) (and (= ($generated@@125 ($generated@@71 $generated@@126 $generated@@127)) ($generated@@125 $generated@@126)) (= ($generated@@73 ($generated@@71 $generated@@126 $generated@@127)) (- ($generated@@73 $generated@@126) ($generated@@73 $generated@@127)))))
 :pattern ( ($generated@@71 $generated@@126 $generated@@127))
)))
(assert  (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@128 $generated@@131 $generated@@132 $generated@@133 ($generated@@130 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@136 $generated@@137) $generated@@134)
 :weight 0
)) (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@128 $generated@@138 $generated@@139 $generated@@140 ($generated@@130 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@128 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@128 $generated@@147 $generated@@148 $generated@@149 ($generated@@130 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@128 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@13 ($generated@@128 $generated@@33 $generated@@37 $generated@@9 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))  (=> (and (or (not (= $generated@@160 $generated@@156)) (not true)) ($generated@@13 ($generated@@93 $generated@@9 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@157 $generated@@160) $generated@@158)))) (= $generated@@160 $generated@@159)))
 :pattern ( ($generated@@128 $generated@@33 $generated@@37 $generated@@9 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 Int) ) (!  (=> (<= 0 $generated@@162) (and ($generated@@125 ($generated@@72 $generated@@162)) (= ($generated@@73 ($generated@@72 $generated@@162)) $generated@@162)))
 :pattern ( ($generated@@72 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@163 $generated@@87)  (and ($generated@@32 $generated@@33 $generated@@163 $generated@@34) (or (not (= $generated@@163 $generated@@35)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@163 $generated@@87))
 :pattern ( ($generated@@32 $generated@@33 $generated@@163 $generated@@34))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and ($generated@@30 $generated@@165) ($generated@@30 $generated@@166)) (or ($generated@@111 $generated@@165 $generated@@167) ($generated@@32 $generated@@33 $generated@@167 $generated@@34))) (and ($generated@@27 $generated@@165) ($generated@@28 $generated@@165 $generated@@166))) (=> (forall (($generated@@168 T@U) ($generated@@169 T@U) )  (=> (and (or (not (= $generated@@168 $generated@@35)) (not true)) (= $generated@@168 $generated@@167)) (= ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@165 $generated@@168) $generated@@169) ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@166 $generated@@168) $generated@@169)))) (= ($generated@@80 $generated@@164 $generated@@165 $generated@@167) ($generated@@80 $generated@@164 $generated@@166 $generated@@167))))
 :pattern ( ($generated@@27 $generated@@165) ($generated@@28 $generated@@165 $generated@@166) ($generated@@80 $generated@@164 $generated@@166 $generated@@167))
)))
(assert  (=> (<= 1 $generated@@79) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (or ($generated@@31 $generated@@171 $generated@@172 $generated@@173) (and (< 1 $generated@@79) (and ($generated@@30 $generated@@171) ($generated@@32 $generated@@33 $generated@@173 $generated@@34)))) (and (and (=> (< 0 ($generated@@73 $generated@@172)) ($generated@@31 $generated@@171 ($generated@@71 $generated@@172 ($generated@@72 1)) $generated@@173)) (=> (=> (< 0 ($generated@@73 $generated@@172)) ($generated@@29 $generated@@170 $generated@@171 ($generated@@71 $generated@@172 ($generated@@72 1)) $generated@@173)) (=> (= ($generated@@99 0) ($generated@@73 $generated@@172)) (forall (($generated@@174 T@U) ) (!  (=> ($generated@@67 $generated@@174 $generated@@172) ($generated@@31 $generated@@171 $generated@@174 $generated@@173))
 :pattern ( ($generated@@29 $generated@@170 $generated@@171 $generated@@174 $generated@@173))
))))) (= ($generated@@29 ($generated@@81 $generated@@170) $generated@@171 $generated@@172 $generated@@173)  (and (=> (< 0 ($generated@@73 $generated@@172)) ($generated@@29 $generated@@170 $generated@@171 ($generated@@71 $generated@@172 ($generated@@72 1)) $generated@@173)) (=> (= ($generated@@99 0) ($generated@@73 $generated@@172)) (forall (($generated@@175 T@U) ) (!  (=> ($generated@@67 $generated@@175 $generated@@172) ($generated@@29 $generated@@170 $generated@@171 $generated@@175 $generated@@173))
 :pattern ( ($generated@@29 $generated@@170 $generated@@171 $generated@@175 $generated@@173))
)))))))
 :pattern ( ($generated@@29 ($generated@@81 $generated@@170) $generated@@171 $generated@@172 $generated@@173) ($generated@@30 $generated@@171))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (or ($generated@@67 $generated@@176 $generated@@177) (= $generated@@176 $generated@@177)) ($generated@@67 $generated@@177 $generated@@176))
 :pattern ( ($generated@@67 $generated@@176 $generated@@177) ($generated@@67 $generated@@177 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (or (not (= $generated@@178 $generated@@180)) (not true)) (=> (and ($generated@@28 $generated@@178 $generated@@179) ($generated@@28 $generated@@179 $generated@@180)) ($generated@@28 $generated@@178 $generated@@180)))
 :pattern ( ($generated@@28 $generated@@178 $generated@@179) ($generated@@28 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (and (= ($generated@@181 ($generated@@91 $generated@@182 $generated@@183)) $generated@@182) (= ($generated@@26 ($generated@@91 $generated@@182 $generated@@183)) $generated@@183))
 :pattern ( ($generated@@91 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@29 ($generated@@81 $generated@@184) $generated@@185 $generated@@186 $generated@@187) ($generated@@29 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
 :pattern ( ($generated@@29 ($generated@@81 $generated@@184) $generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ) (! (<= 0 ($generated@@73 $generated@@188))
 :pattern ( ($generated@@73 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@T) ) (! (= ($generated@@93 $generated@@190 ($generated@@104 $generated@@190 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@104 $generated@@190 $generated@@189))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (and (and (and (=> ($generated@@67 $generated@@191 $generated@@192) (or (not (= $generated@@191 $generated@@192)) (not true))) (=> (and ($generated@@125 $generated@@191) (not ($generated@@125 $generated@@192))) ($generated@@67 $generated@@191 $generated@@192))) (=> (and ($generated@@125 $generated@@191) ($generated@@125 $generated@@192)) (= ($generated@@67 $generated@@191 $generated@@192) (< ($generated@@73 $generated@@191) ($generated@@73 $generated@@192))))) (=> (and ($generated@@67 $generated@@191 $generated@@192) ($generated@@125 $generated@@192)) ($generated@@125 $generated@@191)))
 :pattern ( ($generated@@67 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and ($generated@@30 $generated@@193) (and (or (not (= $generated@@194 $generated@@35)) (not true)) (= ($generated@@77 $generated@@194) $generated@@34))) ($generated@@32 $generated@@10 ($generated@@93 $generated@@10 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@193 $generated@@194) $generated@@90)) $generated))
 :pattern ( ($generated@@93 $generated@@10 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@193 $generated@@194) $generated@@90)))
)))
(assert (forall (($generated@@195 T@U) ) (!  (=> ($generated@@125 $generated@@195) (= $generated@@195 ($generated@@72 ($generated@@73 $generated@@195))))
 :pattern ( ($generated@@73 $generated@@195))
 :pattern ( ($generated@@125 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> ($generated@@30 ($generated@@40 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@196 $generated@@197 ($generated@@40 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@196 $generated@@197) $generated@@198 $generated@@199))) ($generated@@28 $generated@@196 ($generated@@40 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@196 $generated@@197 ($generated@@40 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@196 $generated@@197) $generated@@198 $generated@@199))))
 :pattern ( ($generated@@40 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@196 $generated@@197 ($generated@@40 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@196 $generated@@197) $generated@@198 $generated@@199)))
)))
(assert (= ($generated@@25 $generated@@34) $generated@@3))
(assert (= ($generated@@200 $generated@@34) $generated@@6))
(assert (= ($generated@@25 $generated@@87) $generated@@4))
(assert (= ($generated@@200 $generated@@87) $generated@@6))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and ($generated@@125 $generated@@202) (<= ($generated@@73 $generated@@202) ($generated@@73 $generated@@201))) (or (and (= $generated@@202 ($generated@@72 0)) (= ($generated@@71 $generated@@201 $generated@@202) $generated@@201)) (and (or (not (= $generated@@202 ($generated@@72 0))) (not true)) ($generated@@67 ($generated@@71 $generated@@201 $generated@@202) $generated@@201))))
 :pattern ( ($generated@@71 $generated@@201 $generated@@202))
)))
(assert  (=> (<= 1 $generated@@79) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@204) ($generated@@32 $generated@@33 $generated@@205 $generated@@34)) (= $generated@@206 ($generated@@72 0))) ($generated@@29 $generated@@203 $generated@@204 $generated@@206 $generated@@205))
 :pattern ( ($generated@@29 $generated@@203 $generated@@204 $generated@@206 $generated@@205))
))))
(assert (forall (($generated@@207 Int) ) (! (= ($generated@@104 $generated@@10 ($generated@@14 ($generated@@99 $generated@@207))) ($generated@@101 $generated@@38 ($generated@@104 $generated@@10 ($generated@@14 $generated@@207))))
 :pattern ( ($generated@@104 $generated@@10 ($generated@@14 ($generated@@99 $generated@@207))))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@T) ) (! (= ($generated@@104 $generated@@209 ($generated@@101 $generated@@209 $generated@@208)) ($generated@@101 $generated@@38 ($generated@@104 $generated@@209 $generated@@208)))
 :pattern ( ($generated@@104 $generated@@209 ($generated@@101 $generated@@209 $generated@@208)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! ($generated@@86 $generated@@10 $generated@@211 $generated $generated@@210)
 :pattern ( ($generated@@86 $generated@@10 $generated@@211 $generated $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! ($generated@@32 $generated@@10 $generated@@212 $generated)
 :pattern ( ($generated@@32 $generated@@10 $generated@@212 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () Int)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@222  (=> (and (and (not ($generated@@13 ($generated@@101 $generated@@9 ($generated@@12 true)))) (not ($generated@@13 ($generated@@101 $generated@@9 ($generated@@12 true))))) (= (ControlFlow 0 12) (- 0 11))) false)))
(let (($generated@@223  (and (=> (= (ControlFlow 0 7) (- 0 10)) (or (not (= $generated@@213 $generated@@35)) (not true))) (=> (or (not (= $generated@@213 $generated@@35)) (not true)) (and (=> (= (ControlFlow 0 7) (- 0 9)) ($generated@@13 ($generated@@128 $generated@@33 $generated@@37 $generated@@9 $generated@@214 $generated@@213 $generated@@90))) (=> ($generated@@13 ($generated@@128 $generated@@33 $generated@@37 $generated@@9 $generated@@214 $generated@@213 $generated@@90)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (not (= $generated@@213 $generated@@35)) (not true))) (=> (or (not (= $generated@@213 $generated@@35)) (not true)) (=> (= $generated@@215 (+ ($generated@@15 ($generated@@93 $generated@@10 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@216 $generated@@213) $generated@@90))) 1)) (=> (and (and (and (= $generated@@217 ($generated@@40 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@216 $generated@@213 ($generated@@40 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@216 $generated@@213) $generated@@90 ($generated@@104 $generated@@10 ($generated@@14 $generated@@215))))) ($generated@@30 $generated@@217)) (and ($generated@@86 $generated@@33 $generated@@213 $generated@@34 $generated@@217) ($generated@@111 $generated@@217 $generated@@213))) (and (and ($generated@@111 $generated@@217 $generated@@213) (= (ControlFlow 0 7) (- 0 6))) ($generated@@111 $generated@@217 $generated@@213))) (or ($generated@@80 ($generated@@81 $generated@@218) $generated@@217 $generated@@213) ($generated@@80 ($generated@@81 ($generated@@81 $generated@@218)) $generated@@217 $generated@@213))))))))))))
(let (($generated@@224  (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@213 $generated@@35)) (not true))) (=> (or (not (= $generated@@213 $generated@@35)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@13 ($generated@@128 $generated@@33 $generated@@37 $generated@@9 $generated@@214 $generated@@213 $generated@@90))) (=> ($generated@@13 ($generated@@128 $generated@@33 $generated@@37 $generated@@9 $generated@@214 $generated@@213 $generated@@90)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@213 $generated@@35)) (not true))) (=> (or (not (= $generated@@213 $generated@@35)) (not true)) (=> (= $generated@@219 (+ ($generated@@15 ($generated@@93 $generated@@10 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@216 $generated@@213) $generated@@90))) 1)) (=> (and (= $generated@@220 ($generated@@40 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@216 $generated@@213 ($generated@@40 $generated@@37 $generated@@38 ($generated@@36 $generated@@33 ($generated@@39 $generated@@37 $generated@@38) $generated@@216 $generated@@213) $generated@@90 ($generated@@104 $generated@@10 ($generated@@14 $generated@@219))))) ($generated@@30 $generated@@220)) (=> (and (and ($generated@@30 $generated@@221) ($generated@@27 $generated@@221)) ($generated@@111 $generated@@221 $generated@@213)) (=> (and (and (and (and ($generated@@111 $generated@@221 $generated@@213) (and ($generated@@80 ($generated@@81 $generated@@218) $generated@@221 $generated@@213) ($generated@@80 ($generated@@81 $generated@@218) $generated@@221 $generated@@213))) (= $generated@@220 $generated@@221)) (and ($generated@@86 $generated@@33 $generated@@213 $generated@@34 $generated@@221) ($generated@@111 $generated@@221 $generated@@213))) (and (and ($generated@@111 $generated@@221 $generated@@213) (= (ControlFlow 0 2) (- 0 1))) ($generated@@111 $generated@@221 $generated@@213))) (or ($generated@@80 ($generated@@81 $generated@@218) $generated@@221 $generated@@213) ($generated@@80 ($generated@@81 ($generated@@81 $generated@@218)) $generated@@221 $generated@@213))))))))))))))
(let (($generated@@225  (=> (= $generated@@214 ($generated@@129 $generated@@35 $generated@@216 $generated@@1 $generated@@213)) (and (and (=> (= (ControlFlow 0 13) 2) $generated@@224) (=> (= (ControlFlow 0 13) 7) $generated@@223)) (=> (= (ControlFlow 0 13) 12) $generated@@222)))))
(let (($generated@@226  (=> (and ($generated@@30 $generated@@216) ($generated@@27 $generated@@216)) (=> (and (and (and ($generated@@32 $generated@@33 $generated@@213 $generated@@34) ($generated@@86 $generated@@33 $generated@@213 $generated@@34 $generated@@216)) (and (= 2 $generated@@79) (or (not (= $generated@@213 $generated@@35)) (not true)))) (and (and ($generated@@111 $generated@@216 $generated@@213) (and ($generated@@80 ($generated@@81 $generated@@218) $generated@@216 $generated@@213) ($generated@@80 ($generated@@81 $generated@@218) $generated@@216 $generated@@213))) (= (ControlFlow 0 14) 13))) $generated@@225))))
$generated@@226))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 7) (- 6))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
