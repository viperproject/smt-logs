(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@24 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@T T@T) T@T)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@35 (T@T) T@T)
(declare-fun $generated@@36 (T@T) T@T)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@57 (T@T T@U T@U) Bool)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@68 (Int) Int)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert  (and (and (and (and (and (and (and (forall (($generated@@37 T@T) ($generated@@38 T@T) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@24 $generated@@37 $generated@@38 ($generated@@34 $generated@@37 $generated@@38 $generated@@40 $generated@@41 $generated@@39) $generated@@41) $generated@@39)
 :weight 0
)) (forall (($generated@@42 T@T) ($generated@@43 T@T) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (or (= $generated@@46 $generated@@47) (= ($generated@@24 $generated@@42 $generated@@43 ($generated@@34 $generated@@42 $generated@@43 $generated@@45 $generated@@46 $generated@@44) $generated@@47) ($generated@@24 $generated@@42 $generated@@43 $generated@@45 $generated@@47)))
 :weight 0
))) (= ($generated@@5 $generated@@25) 3)) (= ($generated@@5 $generated@@26) 4)) (= ($generated@@5 $generated@@27) 5)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ) (= ($generated@@5 ($generated@@28 $generated@@48 $generated@@49)) 6))) (forall (($generated@@50 T@T) ($generated@@51 T@T) ) (! (= ($generated@@35 ($generated@@28 $generated@@50 $generated@@51)) $generated@@50)
 :pattern ( ($generated@@28 $generated@@50 $generated@@51))
))) (forall (($generated@@52 T@T) ($generated@@53 T@T) ) (! (= ($generated@@36 ($generated@@28 $generated@@52 $generated@@53)) $generated@@53)
 :pattern ( ($generated@@28 $generated@@52 $generated@@53))
))))
(assert  (=> (< 0 $generated@@21) (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (and (and ($generated@@29 $generated@@54) (and (or (not (= $generated@@55 $generated@@30)) (not true)) (= ($generated@@31 $generated@@55) $generated@@32))) ($generated@@10 ($generated@@23 $generated@@6 ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@54 $generated@@55) $generated@@1)))) ($generated@@33 $generated@@7 ($generated@@11 ($generated@@22 $generated@@55)) $generated $generated@@54))
 :pattern ( ($generated@@22 $generated@@55) ($generated@@23 $generated@@6 ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@54 $generated@@55) $generated@@1)))
))))
(assert (= ($generated@@56 $generated) $generated@@0))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@57 $generated@@27 $generated@@58 $generated@@32)  (or (= $generated@@58 $generated@@30) (= ($generated@@31 $generated@@58) $generated@@32)))
 :pattern ( ($generated@@57 $generated@@27 $generated@@58 $generated@@32))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@33 $generated@@27 $generated@@60 $generated@@59 $generated@@61) ($generated@@33 $generated@@27 $generated@@60 $generated@@32 $generated@@61))
 :pattern ( ($generated@@33 $generated@@27 $generated@@60 $generated@@59 $generated@@61))
 :pattern ( ($generated@@33 $generated@@27 $generated@@60 $generated@@32 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@33 $generated@@27 $generated@@62 $generated@@32 $generated@@63)  (or (= $generated@@62 $generated@@30) ($generated@@10 ($generated@@23 $generated@@6 ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@63 $generated@@62) $generated@@1)))))
 :pattern ( ($generated@@33 $generated@@27 $generated@@62 $generated@@32 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> ($generated@@64 $generated@@65 $generated@@66) (forall (($generated@@67 T@U) ) (!  (=> ($generated@@10 ($generated@@23 $generated@@6 ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@65 $generated@@67) $generated@@1))) ($generated@@10 ($generated@@23 $generated@@6 ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@66 $generated@@67) $generated@@1))))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@66 $generated@@67) $generated@@1))
)))
 :pattern ( ($generated@@64 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@69 Int) ) (! (= ($generated@@68 $generated@@69) $generated@@69)
 :pattern ( ($generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 $generated@@71) $generated@@71)
 :pattern ( ($generated@@70 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@23 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@23 $generated@@75 $generated@@74))
)))
(assert  (=> (< 0 $generated@@21) (forall (($generated@@76 T@U) ) (!  (=> (and (or (not (= $generated@@76 $generated@@30)) (not true)) (= ($generated@@31 $generated@@76) $generated@@32)) ($generated@@57 $generated@@7 ($generated@@11 ($generated@@22 $generated@@76)) $generated))
 :pattern ( ($generated@@22 $generated@@76))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@73 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@33 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@77 ($generated@@73 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@64 $generated@@82 $generated@@83) (=> ($generated@@77 $generated@@84 $generated@@85 $generated@@82) ($generated@@77 $generated@@84 $generated@@85 $generated@@83)))
 :pattern ( ($generated@@64 $generated@@82 $generated@@83) ($generated@@77 $generated@@84 $generated@@85 $generated@@82))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (!  (=> ($generated@@64 $generated@@86 $generated@@87) (=> ($generated@@33 $generated@@90 $generated@@88 $generated@@89 $generated@@86) ($generated@@33 $generated@@90 $generated@@88 $generated@@89 $generated@@87)))
 :pattern ( ($generated@@64 $generated@@86 $generated@@87) ($generated@@33 $generated@@90 $generated@@88 $generated@@89 $generated@@86))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@57 $generated@@27 $generated@@91 $generated@@59)  (and ($generated@@57 $generated@@27 $generated@@91 $generated@@32) (or (not (= $generated@@91 $generated@@30)) (not true))))
 :pattern ( ($generated@@57 $generated@@27 $generated@@91 $generated@@59))
 :pattern ( ($generated@@57 $generated@@27 $generated@@91 $generated@@32))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (or (not (= $generated@@92 $generated@@94)) (not true)) (=> (and ($generated@@64 $generated@@92 $generated@@93) ($generated@@64 $generated@@93 $generated@@94)) ($generated@@64 $generated@@92 $generated@@94)))
 :pattern ( ($generated@@64 $generated@@92 $generated@@93) ($generated@@64 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@23 $generated@@96 ($generated@@73 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@73 $generated@@96 $generated@@95))
)))
(assert  (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@97 $generated@@100 $generated@@101 $generated@@102 ($generated@@99 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@105 $generated@@106) $generated@@103)
 :weight 0
)) (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@112 $generated@@114) (= ($generated@@97 $generated@@107 $generated@@108 $generated@@109 ($generated@@99 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@114 $generated@@115) ($generated@@97 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@114 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@97 $generated@@116 $generated@@117 $generated@@118 ($generated@@99 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@97 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 Bool) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@10 ($generated@@97 $generated@@27 $generated@@25 $generated@@6 ($generated@@98 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))  (=> (and (or (not (= $generated@@129 $generated@@125)) (not true)) ($generated@@10 ($generated@@23 $generated@@6 ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@126 $generated@@129) $generated@@127)))) $generated@@128))
 :pattern ( ($generated@@97 $generated@@27 $generated@@25 $generated@@6 ($generated@@98 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))
)))
(assert (= ($generated@@56 $generated@@59) $generated@@2))
(assert (= ($generated@@131 $generated@@59) $generated@@4))
(assert (= ($generated@@56 $generated@@32) $generated@@3))
(assert (= ($generated@@131 $generated@@32) $generated@@4))
(assert (forall (($generated@@132 Int) ) (! (= ($generated@@73 $generated@@7 ($generated@@11 ($generated@@68 $generated@@132))) ($generated@@70 $generated@@26 ($generated@@73 $generated@@7 ($generated@@11 $generated@@132))))
 :pattern ( ($generated@@73 $generated@@7 ($generated@@11 ($generated@@68 $generated@@132))))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@73 $generated@@134 ($generated@@70 $generated@@134 $generated@@133)) ($generated@@70 $generated@@26 ($generated@@73 $generated@@134 $generated@@133)))
 :pattern ( ($generated@@73 $generated@@134 ($generated@@70 $generated@@134 $generated@@133)))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! ($generated@@33 $generated@@7 $generated@@136 $generated $generated@@135)
 :pattern ( ($generated@@33 $generated@@7 $generated@@136 $generated $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (! ($generated@@57 $generated@@7 $generated@@137 $generated)
 :pattern ( ($generated@@57 $generated@@7 $generated@@137 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@138 () Int)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () Bool)
(declare-fun $generated@@143 () Int)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 () Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 () Bool)
(declare-fun $generated@@150 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@151  (=> (<= 7 $generated@@138) (and (=> (= (ControlFlow 0 8) (- 0 10)) true) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@77 ($generated@@73 $generated@@27 $generated@@139) $generated@@59 $generated@@140)) (=> ($generated@@77 ($generated@@73 $generated@@27 $generated@@139) $generated@@59 $generated@@140) (=> (= (ControlFlow 0 8) (- 0 7)) true)))))))
(let (($generated@@152  (=> (and (and (=> true (and ($generated@@57 $generated@@27 $generated@@141 $generated@@59) ($generated@@33 $generated@@27 $generated@@141 $generated@@59 $generated@@140))) (= (ControlFlow 0 6) (- 0 5))) false) (= ($generated@@22 $generated@@141) ($generated@@68 3)))))
(let (($generated@@153  (=> (and (< $generated@@138 7) (= (ControlFlow 0 11) 6)) $generated@@152)))
(let (($generated@@154  (and (=> (= (ControlFlow 0 12) 8) $generated@@151) (=> (= (ControlFlow 0 12) 11) $generated@@153))))
(let (($generated@@155  (=> $generated@@142 (and (=> (= (ControlFlow 0 13) 12) $generated@@154) (=> (= (ControlFlow 0 13) 6) $generated@@152)))))
(let (($generated@@156  (=> (not $generated@@142) (and (=> (= (ControlFlow 0 3) (- 0 4)) true) (=> (= (ControlFlow 0 3) (- 0 2)) (or (not (= $generated@@139 $generated@@30)) (not true)))))))
(let (($generated@@157  (and (=> (= (ControlFlow 0 14) 3) $generated@@156) (=> (= (ControlFlow 0 14) 13) $generated@@155))))
(let (($generated@@158 true))
(let (($generated@@159  (=> (=> true (and ($generated@@57 $generated@@27 $generated@@139 $generated@@59) ($generated@@33 $generated@@27 $generated@@139 $generated@@59 $generated@@140))) (=> (and (and (and (and true (not false)) (= $generated@@143 7)) (=> $generated@@142 (= ($generated@@22 $generated@@139) ($generated@@68 3)))) (and (and (forall (($generated@@160 T@U) ) (!  (=> (and (or (not (= $generated@@160 $generated@@30)) (not true)) ($generated@@10 ($generated@@23 $generated@@6 ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@140 $generated@@160) $generated@@1)))) (= ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@140 $generated@@160) ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@140 $generated@@160)))
 :pattern ( ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@140 $generated@@160))
)) ($generated@@64 $generated@@140 $generated@@140)) (and (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (or (not (= $generated@@161 $generated@@30)) (not true)) ($generated@@10 ($generated@@23 $generated@@6 ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@140 $generated@@161) $generated@@1)))) (or (= ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@140 $generated@@161) $generated@@162) ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@140 $generated@@161) $generated@@162)) ($generated@@10 ($generated@@97 $generated@@27 $generated@@25 $generated@@6 $generated@@144 $generated@@161 $generated@@162))))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26 ($generated@@24 $generated@@27 ($generated@@28 $generated@@25 $generated@@26) $generated@@140 $generated@@161) $generated@@162))
)) (<= (- 7 $generated@@138) $generated@@143)))) (and (=> (= (ControlFlow 0 15) 1) $generated@@158) (=> (= (ControlFlow 0 15) 14) $generated@@157))))))
(let (($generated@@163  (=> (= $generated@@144 ($generated@@98 $generated@@30 $generated@@140 $generated@@1 false)) (=> (and (= $generated@@145 ($generated@@68 0)) (= $generated@@143 (- 7 $generated@@145))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (=> $generated@@146 (= ($generated@@22 $generated@@147) ($generated@@68 3)))) (=> (=> $generated@@146 (= ($generated@@22 $generated@@147) ($generated@@68 3))) (=> (= (ControlFlow 0 16) 15) $generated@@159)))))))
(let (($generated@@164  (=> (and (and (and ($generated@@29 $generated@@140) ($generated@@148 $generated@@140)) (and ($generated@@57 $generated@@27 $generated@@147 $generated@@59) ($generated@@33 $generated@@27 $generated@@147 $generated@@59 $generated@@140))) (and (and (=> $generated@@149 (and ($generated@@57 $generated@@27 $generated@@150 $generated@@59) ($generated@@33 $generated@@27 $generated@@150 $generated@@59 $generated@@140))) (= 1 $generated@@21)) (and (= ($generated@@22 $generated@@147) ($generated@@68 3)) (= (ControlFlow 0 18) 16)))) $generated@@163)))
$generated@@164))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
